<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BQJQPukusQAAAABJRU5ErkJggg==
</value>
  </data>
</root>