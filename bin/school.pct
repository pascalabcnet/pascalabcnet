[Новая программа/Основное/Шаблон новой программы]
begin
  |
end.

[var •: тип/Основное/Описание переменной с типом]
var |: тип;

[var • := значение/Основное/Описание переменной с присваиванием значения]
var | := •;

[var (•,•) := (зн1,зн2)/Основное/Описание двух переменных с присваиванием значений]
var (|,•) := (•,•);

[Print/Ввод-вывод/Оператор вывода]
Print(|);

[Println/Ввод-вывод/Оператор вывода с переходом на новую строку]
Println(|);

[ReadInteger/Ввод-вывод/Описание целой переменной со вводом]
var | := ReadInteger;

[ReadReal/Ввод-вывод/Описание вещественной переменной со вводом]
var | := ReadReal;

[begin … end/Операторы/Составной оператор. Используется для превращения группы операторов в один. begin и end называют операторными скобками]
begin
  |
end;

[loop • do …/Операторы/Оператор цикла с известным числом повторений]
loop 10 do
  |

[loop • do b … e/Операторы/Оператор цикла с известным числом повторений и с телом в виде составного оператора]
loop 10 do
begin
  |
end;

[for var i:=• to • do …/Операторы/Оператор цикла со счётчиком]
for var i:=1 to 10 do
  |

[for var i:=• to • do b … e/Операторы/Оператор цикла со счётчиком и с телом в виде составного оператора]
for var i:=1 to 10 do
begin
  |
end;

[foreach var x in • do …/Операторы/Оператор цикла foreach]
foreach var x in • do
  |

[foreach var x in • do b … e/Операторы/Оператор цикла foreach с телом в виде составного оператора]
foreach var x in • do
begin
  |
end;

[if • then …/Операторы/Условный оператор - неполная форма]
if условие then
  |

[if • then b … e/Операторы/Условный оператор - неполная форма - с составным оператором по ветви then]
if условие then
begin
  |
end;

[if • then … else …/Операторы/Условный оператор - полная форма]
if условие then
  |
else
  
[if • then b … e else b … e/Операторы/Условный оператор - полная форма - с составным оператором по ветвям then и else]
if условие then
begin
  |
end
else
begin
  
end;

[while • do …/Операторы/Оператор цикла с предварительным условием]
while условие do
  |

[while • do b … e/Операторы/Оператор цикла с предварительным условием]
while условие do
begin
  |
end;

[repeat … until •/Операторы/Оператор цикла с последующим условием]
repeat
  |
until условие;

[case • of … end/Операторы/Оператор выбора варианта]
case | of
  • : …;
end;

