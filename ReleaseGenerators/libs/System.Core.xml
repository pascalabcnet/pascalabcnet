<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle">
      <summary>Предоставляет безопасный дескриптор, который может быть использован объектами криптографии следующего поколения (Cryptography Next Generation, CNG).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle">
      <summary>Освобождает дескриптор, используемый объектом криптографии следующего поколения (Cryptography Next Generation, CNG).</summary>
      <returns>
            Значение true, если дескриптор успешно освобожден; в противном случае — false.</returns>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle">
      <summary>Освобождает собственный дескриптор, используемый объектом криптографии следующего поколения (Cryptography Next Generation, CNG).</summary>
      <returns>
            Значение true, если дескриптор успешно освобожден; в противном случае — false.</returns>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle">
      <summary>Предоставляет безопасный дескриптор, представляющий ключ (NCRYPT_KEY_HANDLE).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />.</summary>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle">
      <summary>Предоставляет безопасный дескриптор, представляющий поставщика хранилища ключей (NCRYPT_PROV_HANDLE).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle" />.</summary>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle">
      <summary>Предоставляет безопасный дескриптор, представляющий секретное значение согласования (NCRYPT_SECRET_HANDLE).</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" />.</summary>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <summary>Представляет класс-оболочку для дескриптора файла. </summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />.</summary>
      <param name="preexistingHandle">Объект <see cref="T:System.IntPtr" />, представляющий ранее существующий дескриптор для использования.</param>
      <param name="ownsHandle">
                Значение true, чтобы наверняка освободить дескриптор на стадии завершения; в противном случае — значение false (не рекомендуется).</param>
    </member>
    <member name="T:System.Action">
      <summary>Инкапсулирует метод, который не принимает параметров и не возвращает значение.</summary>
    </member>
    <member name="T:System.Action`2">
      <summary>Инкапсулирует метод, который принимает два параметра и не возвращает значение.</summary>
      <param name="arg1">Первый параметр метода, инкапсулируемого данным делегатом.</param>
      <param name="arg2">Второй параметр метода, инкапсулируемого данным делегатом.</param>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
    </member>
    <member name="T:System.Action`3">
      <summary>Инкапсулирует метод, который принимает три параметра и не возвращает значение.</summary>
      <param name="arg1">Первый параметр метода, инкапсулируемого данным делегатом.</param>
      <param name="arg2">Второй параметр метода, инкапсулируемого данным делегатом.</param>
      <param name="arg3">Третий параметр метода, инкапсулируемого данным делегатом.</param>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
    </member>
    <member name="T:System.Action`4">
      <summary>Инкапсулирует метод, который принимает четыре параметра и не возвращает значение.</summary>
      <param name="arg1">Первый параметр метода, инкапсулируемого данным делегатом.</param>
      <param name="arg2">Второй параметр метода, инкапсулируемого данным делегатом.</param>
      <param name="arg3">Третий параметр метода, инкапсулируемого данным делегатом.</param>
      <param name="arg4">Четвертый параметр метода, инкапсулируемого данным делегатом.</param>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
    </member>
    <member name="T:System.Func`1">
      <summary>
                    Инкапсулирует метод без параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.
                </summary>
      <returns>
                    Возвращаемое значение метода, инкапсулируемого данным делегатом.
                </returns>
      <typeparam name="TResult">
                    Тип возвращаемого значения метода, инкапсулируемого данным делегатом.
                </typeparam>
    </member>
    <member name="T:System.Func`2">
      <summary>
                    Инкапсулирует метод с одним параметром и возвращает значение типа, указанного в параметре <paramref name="TResult" />.
                </summary>
      <returns>
                    Возвращаемое значение метода, инкапсулируемого данным делегатом.
                </returns>
      <param name="arg">
                    Параметр метода, инкапсулируемого данным делегатом.
                </param>
      <typeparam name="T">
                    Тип параметра метода, инкапсулируемого данным делегатом.
                </typeparam>
      <typeparam name="TResult">
                    Тип возвращаемого значения метода, инкапсулируемого данным делегатом.
                </typeparam>
    </member>
    <member name="T:System.Func`3">
      <summary>
                    Инкапсулирует метод с двумя параметрами и возвращает значение типа, указанного в параметре <paramref name="TResult" />.
                </summary>
      <returns>
                    Возвращаемое значение метода, инкапсулируемого данным делегатом.
                </returns>
      <param name="arg1">
                    Первый параметр метода, инкапсулируемого данным делегатом.
                </param>
      <param name="arg2">
                    Второй параметр метода, инкапсулируемого данным делегатом.
                </param>
      <typeparam name="T1">
                    Тип первого параметра метода, инкапсулируемого данным делегатом.
                </typeparam>
      <typeparam name="T2">
                    Тип второго параметра метода, инкапсулируемого данным делегатом.
                </typeparam>
      <typeparam name="TResult">
                    Тип возвращаемого значения метода, инкапсулируемого данным делегатом.
                </typeparam>
    </member>
    <member name="T:System.Func`4">
      <summary>
                    Инкапсулирует метод с тремя параметрами и возвращает значение типа, указанного в параметре <paramref name="TResult" />.
                </summary>
      <returns>
                    Возвращаемое значение метода, инкапсулируемого данным делегатом.
                </returns>
      <param name="arg1">
                    Первый параметр метода, инкапсулируемого данным делегатом.
                </param>
      <param name="arg2">
                    Второй параметр метода, инкапсулируемого данным делегатом.
                </param>
      <param name="arg3">
                    Третий параметр метода, инкапсулируемого данным делегатом.
                </param>
      <typeparam name="T1">
                    Тип первого параметра метода, инкапсулируемого данным делегатом.
                </typeparam>
      <typeparam name="T2">
                    Тип второго параметра метода, инкапсулируемого данным делегатом.
                </typeparam>
      <typeparam name="T3">
                    Тип третьего параметра метода, инкапсулируемого данным делегатом.
                </typeparam>
      <typeparam name="TResult">
                    Тип возвращаемого значения метода, инкапсулируемого данным делегатом.
                </typeparam>
    </member>
    <member name="T:System.Func`5">
      <summary>
                    Инкапсулирует метод с четырьмя параметрами и возвращает значение типа, указанного в параметре <paramref name="TResult" />.
                </summary>
      <returns>
                    Возвращаемое значение метода, инкапсулируемого данным делегатом.
                </returns>
      <param name="arg1">
                    Первый параметр метода, инкапсулируемого данным делегатом.
                </param>
      <param name="arg2">
                    Второй параметр метода, инкапсулируемого данным делегатом.
                </param>
      <param name="arg3">
                    Третий параметр метода, инкапсулируемого данным делегатом.
                </param>
      <param name="arg4">
                    Четвертый параметр метода, инкапсулируемого данным делегатом.
                </param>
      <typeparam name="T1">
                    Тип первого параметра метода, инкапсулируемого данным делегатом.
                </typeparam>
      <typeparam name="T2">
                    Тип второго параметра метода, инкапсулируемого данным делегатом.
                </typeparam>
      <typeparam name="T3">
                    Тип третьего параметра метода, инкапсулируемого данным делегатом.
                </typeparam>
      <typeparam name="T4">
                    Тип четвертого параметра метода, инкапсулируемого данным делегатом.
                </typeparam>
      <typeparam name="TResult">
                    Тип возвращаемого значения метода, инкапсулируемого данным делегатом.
                </typeparam>
    </member>
    <member name="T:System.InvalidTimeZoneException">
      <summary>Исключение возникает при недопустимости сведений о часовом поясе.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidTimeZoneException" />, используя системное сообщение.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidTimeZoneException" /> из сериализованных данных.</summary>
      <param name="info">Объект, содержащий сериализованные данные. </param>
      <param name="context">Поток, содержащий сериализованные данные.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="info" /> имеет значение null.— или —Параметр <paramref name="context" /> имеет значение null.</exception>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidTimeZoneException" /> указанной строкой сообщения.</summary>
      <param name="message">Строка, описывающая исключение.</param>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidTimeZoneException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Строка, описывающая исключение.    </param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.  </param>
    </member>
    <member name="T:System.TimeZoneInfo">
      <summary>
                    Представляет любой часовой пояс в мире.
                </summary>
    </member>
    <member name="P:System.TimeZoneInfo.BaseUtcOffset">
      <summary>
                    Возвращает разницу между зимним временем в текущем часовом поясе и временем в формате UTC.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeSpan" />, указывающий разницу между зимним временем в текущем часовом поясе и временем в формате UTC.
                </returns>
    </member>
    <member name="M:System.TimeZoneInfo.ClearCachedData">
      <summary>
                    Удаляет кэшированные данные о часовом поясе.
                </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)">
      <summary>
                    Преобразует время во время в заданном часовом поясе.
                </summary>
      <returns>
                    Значение <see cref="T:System.DateTime" />, представляющее дату и время в часовом поясе назначения.
                </returns>
      <param name="dateTime">
                    Преобразовываемые дата и время.   
                </param>
      <param name="destinationTimeZone">
                    Часовой пояс, в который требуется преобразовать <paramref name="dateTime" />.
                </param>
      <exception cref="T:System.ArgumentException">
                    Значение параметра <paramref name="dateTime" /> представляет недопустимое время.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="destinationTimeZone" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)">
      <summary>
                    Преобразует время в одном часовом поясе во время в другом.
                </summary>
      <returns>
                    Значение <see cref="T:System.DateTime" />, представляющее дату и время в часовом поясе назначения, которые соответствуют значению параметра <paramref name="dateTime" /> в исходном часовом поясе.
                </returns>
      <param name="dateTime">
                    Преобразовываемые дата и время.
                </param>
      <param name="sourceTimeZone">
                    Часовой пояс, соответствующий значению <paramref name="dateTime" />.
                </param>
      <param name="destinationTimeZone">
                    Часовой пояс, в который требуется преобразовать <paramref name="dateTime" />.
                </param>
      <exception cref="T:System.ArgumentException">
                    Значение свойства <see cref="P:System.DateTime.Kind" /> параметра <paramref name="dateTime" /> равно <see cref="F:System.DateTimeKind.Local" />, однако значение параметра <paramref name="sourceTimeZone" /> не равно <see cref="F:System.DateTimeKind.Local" />.
                
                    -или-
                
                    Значение свойства <see cref="P:System.DateTime.Kind" /> параметра <paramref name="dateTime" /> равно <see cref="F:System.DateTimeKind.Utc" />, однако значение параметра <paramref name="sourceTimeZone" /> не равно <see cref="P:System.TimeZoneInfo.Utc" />.
                
                    -или-
                
                    Значение параметра <paramref name="dateTime" /> является недопустимым временем (иными словами, представляет время, которое оказалось несуществующим вследствие применения правил коррекции).
                </exception>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="sourceTimeZone" /> равно null.
                
                    -или-
                
                    Значение параметра <paramref name="destinationTimeZone" /> равно null.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)">
      <summary>
                    Преобразует время во время в заданном часовом поясе.
                </summary>
      <returns>
                    Значение <see cref="T:System.DateTimeOffset" />, представляющее дату и время в часовом поясе назначения.
                </returns>
      <param name="dateTimeOffset">
                    Преобразовываемые дата и время.   
                </param>
      <param name="destinationTimeZone">
                    Часовой пояс, в который требуется преобразовать <paramref name="dateTime" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="destinationTimeZone" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)">
      <summary>
                    Преобразует время во время в другом часовом поясе, исходя из идентификатора этого пояса.
                </summary>
      <returns>
                    Значение <see cref="T:System.DateTime" />, представляющее дату и время в часовом поясе назначения.
                </returns>
      <param name="dateTime">
                    Преобразовываемые дата и время.
                </param>
      <param name="destinationTimeZoneId">
                    Идентификатор часового пояса назначения.
                </param>
      <exception cref="T:System.InvalidTimeZoneException">
                    Идентификатор часового пояса найден, однако данные реестра повреждены.
                </exception>
      <exception cref="T:System.Security.SecurityException">
                    У процесса отсутствуют разрешения, необходимые для чтения из раздела реестра, содержащего сведения о часовом поясе.
                </exception>
      <exception cref="T:System.TimeZoneNotFoundException">
                    В локальной системе не найден идентификатор <paramref name="destinationTimeZoneId" />.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)">
      <summary>
                    Преобразует время в одном часовом поясе во время в другом, исходя из идентификаторов этих поясов.
                </summary>
      <returns>
                    Значение <see cref="T:System.DateTime" />, представляющее дату и время в часовом поясе назначения, которые соответствуют значению параметра <paramref name="dateTime" /> в исходном часовом поясе.
                </returns>
      <param name="dateTime">
                    Преобразовываемые дата и время.
                </param>
      <param name="sourceTimeZoneId">
                    Идентификатор исходного часового пояса. 
                </param>
      <param name="destinationTimeZoneId">
                    Идентификатор часового пояса назначения.
                </param>
      <exception cref="T:System.ArgumentException">
                    Значение свойства <see cref="P:System.DateTime.Kind" /> параметра <paramref name="dateTime" /> не соответствует исходному часовому поясу.
                
                    -или-
                
                    Значение <paramref name="dateTime" /> является недопустимым временем в исходном часовом поясе.
                </exception>
      <exception cref="T:System.TimeZoneNotFoundException">
                    В локальной системе не найден идентификатор <paramref name="sourceTimeZoneId" />.
                
                    -или-
                
                    В локальной системе не найден идентификатор <paramref name="destinationTimeZoneId" />.
                </exception>
      <exception cref="T:System.Security.SecurityException">
                    У пользователя отсутствуют разрешения, необходимые для чтения из разделов реестра, в которых содержатся сведения о часовом поясе.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)">
      <summary>
                    Преобразует время во время в другом часовом поясе, исходя из идентификатора этого пояса.
                </summary>
      <returns>
                    Значение <see cref="T:System.DateTimeOffset" />, представляющее дату и время в часовом поясе назначения.
                </returns>
      <param name="dateTimeOffset">
                    Преобразовываемые дата и время.
                </param>
      <param name="destinationTimeZoneId">
                    Идентификатор часового пояса назначения.
                </param>
      <exception cref="T:System.InvalidTimeZoneException">
                    Идентификатор часового пояса найден, однако данные реестра повреждены.
                </exception>
      <exception cref="T:System.Security.SecurityException">
                    У процесса отсутствуют разрешения, необходимые для чтения из раздела реестра, содержащего сведения о часовом поясе.
                </exception>
      <exception cref="T:System.TimeZoneNotFoundException">
                    В локальной системе не найден идентификатор <paramref name="destinationTimeZoneId" />.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)">
      <summary>
                    Преобразует время в формате UTC во время в указанном часовом поясе.
                </summary>
      <returns>
                    Значение <see cref="T:System.DateTime" />, представляющее дату и время в часовом поясе назначения. Его свойство <see cref="P:System.DateTime.Kind" /> равно <see cref="F:System.DateTimeKind.Utc" />, если значение <paramref name="destinationTimeZone" /> равно <see cref="P:System.TimeZoneInfo.Utc" />; в противном случае — значение свойства <see cref="P:System.DateTime.Kind" /> равно <see cref="F:System.DateTimeKind.Unspecified" />.
                </returns>
      <param name="dateTime">
                    Время в формате UTC.
                </param>
      <param name="destinationTimeZone">
                    Часовой пояс, в который требуется преобразовать <paramref name="dateTime" />.
                </param>
      <exception cref="T:System.ArgumentException">
                    Свойству <see cref="P:System.DateTime.Kind" /> объекта <paramref name="dateTime" /> присвоено значение <see cref="F:System.DateTimeKind.Local" />.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)">
      <summary>
                    Преобразует текущую дату и время в формат UTC.
                </summary>
      <returns>
                    Значение <see cref="T:System.DateTime" />, представляющее время в формате UTC, соответствующее значению параметра <paramref name="dateTime" />. Свойству <see cref="P:System.DateTime.Kind" /> значения <see cref="T:System.DateTime" /> всегда присваивается значение <see cref="F:System.DateTimeKind.Utc" />.
                </returns>
      <param name="dateTime">
                    Преобразовываемые дата и время.
                </param>
      <exception cref="T:System.ArgumentException">TimeZoneInfo.Local.IsInvalidDateTime(<paramref name="dateTime" />) возвращает true.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)">
      <summary>
                    Преобразует время в указанном часовом поясе в формат UTC.
                </summary>
      <returns>
                    Объект <see cref="T:System.DateTime" />, представляющее время в формате UTC, соответствующее значению параметра <paramref name="dateTime" />. Свойству <see cref="P:System.DateTime.Kind" /> объекта <see cref="T:System.DateTime" /> всегда присваивается значение <see cref="F:System.DateTimeKind.Utc" />.
                </returns>
      <param name="dateTime">
                    Преобразовываемые дата и время.
                </param>
      <param name="sourceTimeZone">
                    Часовой пояс, соответствующий значению <paramref name="dateTime" />.
                </param>
      <exception cref="T:System.ArgumentException">
                    Параметр <paramref name="dateTime" />.Kind имеет значение <see cref="F:System.DateTimeKind.Utc" />, а параметр <paramref name="sourceTimeZone" /> не равен <see cref="P:System.TimeZoneInfo.Utc" />.
                
                    -или-
                
                    Параметр <paramref name="dateTime" />.Kind имеет значение <see cref="F:System.DateTimeKind.Local" />, а параметр <paramref name="sourceTimeZone" /> не равен <see cref="P:System.TimeZoneInfo.Local" />.
                
                    -или-
                <paramref name="sourceTimeZone" />.IsInvalidDateTime(<paramref name="dateTime" />) возвращает true.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)">
      <summary>
                    Создает пользовательский часовой пояс с указанным идентификатором, смещением от времени в формате UTC, отображаемым именем, а также отображаемым именем зимнего времени.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeZoneInfo" />, представляющий новый часовой пояс.
                </returns>
      <param name="id">
                    Идентификатор часового пояса.
                </param>
      <param name="baseUtcOffset">
                    Объект <see cref="T:System.TimeSpan" />, представляющий разность между значением времени в данном часовом поясе и временем в формате UTC.
                </param>
      <param name="displayName">
                    Отображаемое имя нового часового пояса.   
                </param>
      <param name="standardDisplayName">
                    Имя зимнего времени нового часового пояса.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="id" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Значением параметра <paramref name="id" /> является пустая строка ("").
                
                    -или-
                
                    Параметр <paramref name="baseUtcOffset" /> не представляет целое число минут.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="baseUtcOffset" /> больше 14 часов или меньше -14 часов.
                </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])">
      <summary>
                    Создает пользовательский часовой пояс с указанным идентификатором, смещением от времени в формате UTC, отображаемым именем, отображаемым именем зимнего времени, отображаемым именем летнего времени и правилами коррекции для летнего времени.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeZoneInfo" />, представляющий новый часовой пояс.
                </returns>
      <param name="id">
                    Идентификатор часового пояса.
                </param>
      <param name="baseUtcOffset">
                    Объект <see cref="T:System.TimeSpan" />, представляющий разность между значением времени в данном часовом поясе и временем в формате UTC.
                </param>
      <param name="displayName">
                    Отображаемое имя нового часового пояса.   
                </param>
      <param name="standardDisplayName">
                    Имя зимнего времени нового часового пояса.
                </param>
      <param name="daylightDisplayName">
                    Имя летнего времени нового часового пояса.   
                </param>
      <param name="adjustmentRules">
                    Массив объектов <see cref="T:System.TimeZoneInfo.AdjustmentRule" />, которые прибавляют базовое смещение относительно UTC для определенного периода. 
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="id" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Значением параметра <paramref name="id" /> является пустая строка ("").
                
                    -или-
                
                    Параметр <paramref name="baseUtcOffset" /> не представляет целое число минут.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="baseUtcOffset" /> больше 14 часов или меньше -14 часов.
                </exception>
      <exception cref="T:System.InvalidTimeZoneException">
                    Правила коррекции, заданные в параметре <paramref name="adjustmentRules" />, перекрываются.
                
                    -или-
                
                    Последовательность правил коррекции, заданных в параметре <paramref name="adjustmentRules" />, не является хронологической.
                
                    -или-
                
                    Один или несколько элементов в <paramref name="adjustmentRules" /> являются null.
                
                    -или-
                
                    К одной дате можно применить несколько правил коррекции.
                
                    -или-
                
                    Сумма параметра <paramref name="baseUtcOffset" /> и значения свойства <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> одного или нескольких объектов <paramref name="adjustmentRules" /> больше 14 часов или меньше -14 часов.
                </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)">
      <summary>
                    Создает пользовательский часовой пояс с указанным идентификатором, смещением от времени в формате UTC, отображаемым именем, отображаемым именем зимнего времени, отображаемым именем летнего времени, правилами коррекции для летнего времени и значением, позволяющим определить, отражает ли возвращаемый объект сведения о летнем времени.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeZoneInfo" />, представляющий новый часовой пояс. Если значение параметра <paramref name="disableDaylightSavingTime" /> равно true, в возвращаемом объекте отсутствуют данные о летнем времени.
                </returns>
      <param name="id">
                    Идентификатор часового пояса.
                </param>
      <param name="baseUtcOffset">
                    Объект <see cref="T:System.TimeSpan" />, представляющий разность между значением времени в данном часовом поясе и временем в формате UTC.
                </param>
      <param name="displayName">
                    Отображаемое имя нового часового пояса.   
                </param>
      <param name="standardDisplayName">
                    Имя зимнего времени нового часового пояса.
                </param>
      <param name="daylightDisplayName">
                    Имя летнего времени нового часового пояса.   
                </param>
      <param name="adjustmentRules">
                    Массив объектов <see cref="T:System.TimeZoneInfo.AdjustmentRule" />, которые прибавляют базовое смещение относительно UTC для определенного периода.
                </param>
      <param name="disableDaylightSavingTime">
                    Значение true для сброса в новом объекте всех связанных с летним временем сведений, представленных в параметре <paramref name="adjustmentRules" />; в противном случае — false.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="id" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Значением параметра <paramref name="id" /> является пустая строка ("").
                
                    -или-
                
                    Параметр <paramref name="baseUtcOffset" /> не представляет целое число минут.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="baseUtcOffset" /> больше 14 часов или меньше -14 часов.
                </exception>
      <exception cref="T:System.InvalidTimeZoneException">
                    Правила коррекции, заданные в параметре <paramref name="adjustmentRules" />, перекрываются.
                
                    -или-
                
                    Последовательность правил коррекции, заданных в параметре <paramref name="adjustmentRules" />, не является хронологической.
                
                    -или-
                
                    Один или несколько элементов в <paramref name="adjustmentRules" /> являются null.
                
                    -или-
                
                    К одной дате можно применить несколько правил коррекции.
                
                    -или-
                
                    Сумма параметра <paramref name="baseUtcOffset" /> и значения свойства <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> одного или нескольких объектов <paramref name="adjustmentRules" /> больше 14 часов или меньше -14 часов.
                </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeZoneInfo.DaylightName">
      <summary>
                    Возвращает локализованное отображаемое имя для летнего времени текущего часового пояса.
                </summary>
      <returns>
                    Отображаемое имя для локализованного летнего времени текущего часового пояса.
                </returns>
    </member>
    <member name="P:System.TimeZoneInfo.DisplayName">
      <summary>
                    Возвращает локализованное универсальное отображаемое имя, представляющее часовой пояс.
                </summary>
      <returns>
                    Локализованное универсальное отображаемое имя часового пояса.
                </returns>
    </member>
    <member name="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)">
      <summary>
                    Определяет, равен ли текущий объект <see cref="T:System.TimeZoneInfo" /> другому объекту <see cref="T:System.TimeZoneInfo" />.
                </summary>
      <returns>
                    Значение true, если два объекта <see cref="T:System.TimeZoneInfo" /> равны; в противном случае — значение false.
                </returns>
      <param name="other">
                    Второй объект <see cref="T:System.TimeZoneInfo" />, сравниваемый с текущим объектом <see cref="T:System.TimeZoneInfo" />.  
                </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)">
      <summary>
                    Извлекает объект <see cref="T:System.TimeZoneInfo" /> из реестра по его идентификатору.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeZoneInfo" />, идентификатор которого равен значению параметра <paramref name="id" />.
                </returns>
      <param name="id">
                    Идентификатор часового пояса, соответствующий свойству <see cref="P:System.TimeZoneInfo.Id" />.      
                </param>
      <exception cref="T:System.OutOfMemoryException">
                    В системе недостаточно памяти для хранения сведений о часовом поясе.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="id" /> имеет значение null.
                </exception>
      <exception cref="T:System.TimeZoneNotFoundException">
                    Не найден идентификатор часового пояса, заданный параметром <paramref name="id" />. Это означает, что раздел реестра, имя которого совпадает со значением <paramref name="id" />, не существует или существует, но не содержит никаких данных о часовом поясе.
                </exception>
      <exception cref="T:System.Security.SecurityException">
                    У процесса отсутствуют разрешения, необходимые для чтения из раздела реестра, содержащего сведения о часовом поясе.
                </exception>
      <exception cref="T:System.InvalidTimeZoneException">
                    Идентификатор часового пояса найден, однако данные реестра повреждены.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.FromSerializedString(System.String)">
      <summary>
                    Десериализует строку для повторного создания исходного сериализованного объекта <see cref="T:System.TimeZoneInfo" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeZoneInfo" />.
                </returns>
      <param name="source">
                    Строковое представление сериализованного объекта <see cref="T:System.TimeZoneInfo" />.   
                </param>
      <exception cref="T:System.ArgumentException">
                    Значение параметра <paramref name="source" /> равно <see cref="F:System.String.Empty" />.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                    Значением параметра <paramref name="source" /> является строка NULL.
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                    Исходный параметр нельзя десериализовать обратно в объект <see cref="T:System.TimeZoneInfo" />.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.GetAdjustmentRules">
      <summary>
                    Извлекает массив объектов <see cref="T:System.TimeZoneInfo.AdjustmentRule" />, который применятся к текущему объекту <see cref="T:System.TimeZoneInfo" />.
                </summary>
      <returns>
                    Массив объектов <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> для данного часового пояса.
                </returns>
      <exception cref="T:System.OutOfMemoryException">
                    В системе недостаточно памяти для создания внутренней копии правил коррекции.
                </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)">
      <summary>
                    Возвращает сведения о возможных датах и времени, которым можно сопоставить неоднозначные значения этих величин.
                </summary>
      <returns>
                    Массив объектов <see cref="T:System.TimeSpan" />, представляющий возможные смещения относительно UTC, которым может соответствовать определенная дата и время.
                </returns>
      <param name="dateTime">
                    Дата и время.
                </param>
      <exception cref="T:System.ArgumentException">
                    Параметр <paramref name="dateTime" /> не является неоднозначным временем.
                </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)">
      <summary>
                    Возвращает сведения о возможных датах и времени, которым можно сопоставить неоднозначные значения этих величин.
                </summary>
      <returns>
                    Массив объектов <see cref="T:System.TimeSpan" />, представляющий возможные смещения относительно UTC, которым может соответствовать определенная дата и время.
                </returns>
      <param name="dateTimeOffset">
                    Дата и время.
                </param>
      <exception cref="T:System.ArgumentException">
                    Параметр <paramref name="dateTime" /> не является неоднозначным временем.
                </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetHashCode">
      <summary>
                    Служит хэш-функцией для алгоритмов хэширования и таких структур данных, как хэш-таблицы.
                </summary>
      <returns>
                    32-битовое целое число со знаком, выступающее в роли хэш-кода данного объекта <see cref="T:System.TimeZoneInfo" />.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetSystemTimeZones">
      <summary>
                    Возвращает сохраненную коллекцию всех часовых поясов, сведения о которых доступны в локальной системе.
                </summary>
      <returns>
                    Доступная только для чтения коллекция объектов <see cref="T:System.TimeZoneInfo" />.
                </returns>
      <exception cref="T:System.OutOfMemoryException">
                    Недостаточно памяти для хранения сведений обо всех часовых поясах.
                </exception>
      <exception cref="T:System.Security.SecurityException">
                    У пользователя отсутствует разрешение для чтения из разделов реестра, в которых содержатся сведения о часовых поясах.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)">
      <summary>
                    Вычисляет для определенной даты и времени смещение или разность между временем в данном часовом поясе и временем в формате UTC.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeSpan" />, в котором указывается разность во времени между двумя часовыми поясами.
                </returns>
      <param name="dateTime">
                    Дата и время, для которых необходимо определить смещение.   
                </param>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)">
      <summary>
                    Вычисляет для определенной даты и времени смещение или разность между временем в данном часовом поясе и временем в формате UTC.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeSpan" />, в котором указывается разность между временем в формате UTC и временем в текущем часовом поясе.
                </returns>
      <param name="dateTimeOffset">
                    Дата и время, для которых необходимо определить смещение.
                </param>
    </member>
    <member name="M:System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)">
      <summary>
                    Указывает, совпадают ли правила коррекции текущего объекта и другого объекта <see cref="T:System.TimeZoneInfo" />.
                </summary>
      <returns>
                    Значение true, если правила коррекции и базовые смещения двух часовых поясов совпадают; в противном случае — значение false.
                </returns>
      <param name="other">
                    Второй объект <see cref="T:System.TimeZoneInfo" />, сравниваемый с текущим объектом <see cref="T:System.TimeZoneInfo" />.   
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="other" /> равно null.
                </exception>
    </member>
    <member name="P:System.TimeZoneInfo.Id">
      <summary>
                    Возвращает идентификатор часового пояса.
                </summary>
      <returns>
                    Идентификатор часового пояса.
                </returns>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)">
      <summary>
                    Определяет, являются ли заданная дата и время в заданном часовом поясе неоднозначными и можно ли им сопоставить два и более момента времени в формате UTC.
                </summary>
      <returns>
                    Значение true, если параметр <paramref name="dateTime" /> неоднозначен; в противном случае — значение false.
                </returns>
      <param name="dateTime">
                    Значение даты и времени.   
                </param>
      <exception cref="T:System.ArgumentException">
                    Свойство <see cref="P:System.DateTime.Kind" /> значения <paramref name="dateTime" /> равно <see cref="F:System.DateTimeKind.Local" />, а само значение <paramref name="dateTime" /> является недопустимым временем.
                </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)">
      <summary>
                    Определяет, являются ли заданная дата и время в заданном часовом поясе неоднозначными и можно ли им сопоставить два и более момента времени в формате UTC.
                </summary>
      <returns>
                    Значение true, если значение параметра <paramref name="dateTimeOffset" /> в текущем часовом поясе является неоднозначным; в противном случае — значение false.
                </returns>
      <param name="dateTimeOffset">
                    Дата и время.
                </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)">
      <summary>
                    Указывает, попадают ли заданные дата и время в диапазон летнего времени для часового пояса текущего объекта <see cref="T:System.TimeZoneInfo" />.
                </summary>
      <returns>
                    Значение true, если параметр <paramref name="dateTime" /> относится к летнему времени; в противном случае — значение false.
                </returns>
      <param name="dateTime">
                    Значение даты и времени.   
                </param>
      <exception cref="T:System.ArgumentException">
                    Свойство <see cref="P:System.DateTime.Kind" /> значения <paramref name="dateTime" /> равно <see cref="F:System.DateTimeKind.Local" />, а само значение <paramref name="dateTime" /> является недопустимым временем.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)">
      <summary>
                    Указывает, попадают ли заданные дата и время в диапазон летнего времени для часового пояса текущего объекта <see cref="T:System.TimeZoneInfo" />.
                </summary>
      <returns>
                    Значение true, если параметр <paramref name="dateTimeOffset" /> относится к летнему времени; в противном случае — значение false.
                </returns>
      <param name="dateTimeOffset">
                    Значение даты и времени.
                </param>
    </member>
    <member name="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)">
      <summary>
                    Указывает, являются ли определенная дата и время допустимыми.
                </summary>
      <returns>
                    Значение true, если значение <paramref name="dateTime" /> недопустимо; в противном случае — значение false.
                </returns>
      <param name="dateTime">
                    Значение даты и времени.   
                </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeZoneInfo.Local">
      <summary>
                    Возвращает объект <see cref="T:System.TimeZoneInfo" />, представляющий местный часовой пояс.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeZoneInfo" />, представляющий местный часовой пояс.
                </returns>
    </member>
    <member name="P:System.TimeZoneInfo.StandardName">
      <summary>
                    Возвращает локализованное отображаемое имя для зимнего времени часового пояса.
                </summary>
      <returns>
                    Локализованное отображаемое имя для зимнего времени часового пояса.
                </returns>
    </member>
    <member name="P:System.TimeZoneInfo.SupportsDaylightSavingTime">
      <summary>
                    Возвращает значение, позволяющее определить, заданы ли для часового пояса какие-либо правила перехода на летнее время.
                </summary>
      <returns>
                    Значение true, если часовой пояс поддерживает летнее время; в противном случае — false.
                </returns>
    </member>
    <member name="M:System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>
                    Выполняется после завершения десериализации объекта.
                </summary>
      <param name="sender">
                    Объект, который инициировал обратный вызов. Данная функциональная возможность для этого параметра в настоящее время не реализована.
                </param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                    Объект <see cref="T:System.TimeZoneInfo" /> содержит недопустимые или поврежденные данные.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
                    Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации текущего объекта <see cref="T:System.TimeZoneInfo" />.
                </summary>
      <param name="info">
                    Объект SerializationInfo, который необходимо заполнить данными.
                </param>
      <param name="context">
                    Целевой объект сериализации (см. раздел, посвященный структуре <see cref="T:System.Runtime.Serialization.StreamingContext" />).
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="info" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.TimeZoneInfo.ToSerializedString">
      <summary>
                    Преобразует текущий объект <see cref="T:System.TimeZoneInfo" /> в сериализованную строку.
                </summary>
      <returns>
                    Строка, представляющая текущий объект <see cref="T:System.TimeZoneInfo" />.
                </returns>
    </member>
    <member name="M:System.TimeZoneInfo.ToString">
      <summary>
                    Возвращает отображаемое имя текущего объекта <see cref="T:System.TimeZoneInfo" />.
                </summary>
      <returns>
                    Значение свойства <see cref="P:System.TimeZoneInfo.DisplayName" /> текущего объекта <see cref="T:System.TimeZoneInfo" />.
                </returns>
    </member>
    <member name="P:System.TimeZoneInfo.Utc">
      <summary>
                    Возвращает объект <see cref="T:System.TimeZoneInfo" />, представляющий часовой пояс UTC.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeZoneInfo" />, представляющий часовой пояс UTC.
                </returns>
    </member>
    <member name="T:System.TimeZoneInfo.AdjustmentRule">
      <summary>
                    Предоставляет сведения о такой связанной с часовым поясом коррекции, как переход на летнее и зимнее время.
                </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)">
      <summary>
                    Создает новое правило коррекции для определенного часового пояса.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeZoneInfo.AdjustmentRule" />, представляющий новое правило коррекции.
                </returns>
      <param name="dateStart">
                    Дата начала периода действия правила коррекции. Если значение параметра <paramref name="dateStart" /> равно DateTime.MinValue.Date, это первое правило коррекции, действующее для часового пояса.   
                </param>
      <param name="dateEnd">
                    Последняя дата периода действия правила коррекции. Если значение параметра <paramref name="dateEnd" /> равно DateTime.MaxValue.Date, срок действия правила коррекции неограничен.
                </param>
      <param name="daylightDelta">
                    Изменение времени в результате коррекции. Это значение добавляется к значению свойства <see cref="P:System.TimeZoneInfo.BaseUtcOffset" /> определенного часового пояса для получения правильного смещения летнего времени от времени в формате UTC. Это значение может меняться в диапазоне от -14 до 14. 
                </param>
      <param name="daylightTransitionStart">
                    Объект <see cref="T:System.TimeZoneInfo.TransitionTime" />, задающий момент начала летнего времени.
                </param>
      <param name="daylightTransitionEnd">
                    Объект <see cref="T:System.TimeZoneInfo.TransitionTime" />, задающий момент окончания летнего времени.   
                </param>
      <exception cref="T:System.ArgumentException">
                    Свойство <see cref="P:System.DateTime.Kind" /> параметра <paramref name="dateStart" /> или параметр <paramref name="dateEnd" /> не равны значению <see cref="F:System.DateTimeKind.Unspecified" />.
                
                    — или —
                
                    Параметр <paramref name="daylightTransitionStart" /> равен параметру <paramref name="daylightTransitionEnd" />.
                
                    — или —
                
                    В значении параметра <paramref name="dateStart" /> или <paramref name="dateEnd" /> указано время суток.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    День, указанный в параметре <paramref name="dateEnd" /> наступает раньше, чем день, указанный в параметре <paramref name="dateStart" />.
                
                    — или —
                
                    Параметр <paramref name="daylightDelta" /> меньше -14 или больше 14.
                
                    — или —
                
                    Значение свойства <see cref="P:System.TimeSpan.Milliseconds" /> параметра <paramref name="daylightDelta" /> не равно 0.
                
                    — или —
                
                    Значение свойства <see cref="P:System.TimeSpan.Ticks" /> параметра <paramref name="daylightDelta" /> не равно общему количеству секунд.
                </exception>
    </member>
    <member name="P:System.TimeZoneInfo.AdjustmentRule.DateEnd">
      <summary>
                    Возвращает дату завершения периода действия правила коррекции.
                </summary>
      <returns>
                    Значение типа <see cref="T:System.DateTime" />, соответствующее дате окончания действия правила коррекции.
                </returns>
    </member>
    <member name="P:System.TimeZoneInfo.AdjustmentRule.DateStart">
      <summary>
                    Возвращает дату начала периода действия правила коррекции.
                </summary>
      <returns>
                    Значение типа <see cref="T:System.DateTime" />, соответствующее дате вступления в силу правила коррекции.
                </returns>
    </member>
    <member name="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta">
      <summary>
                    Возвращает количество времени, которое необходимо для перехода на летнее время в данном часовом поясе. Это время добавляется к смещению времени часового пояса от времени в формате UTC.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeSpan" />, в котором указывается количество времени, добавляемого к стандартному изменению времени в результате применения правила коррекции.
                </returns>
    </member>
    <member name="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd">
      <summary>
                    Возвращает сведения о ежегодном переходе с летнего времени на стандартное зимнее.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeZoneInfo.TransitionTime" />, определяющий момент ежегодно возврата с летнего время на стандартное зимнее для определенного часового пояса.
                </returns>
    </member>
    <member name="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart">
      <summary>
                    Возвращает сведения о ежегодном переходе со стандартного зимнего времени на летнее.
                </summary>
      <returns>
                    Объект <see cref="T:System.TimeZoneInfo.TransitionTime" />, определяющий момент ежегодно перехода со стандартного зимнего времени на летнее для определенного часового пояса.
                </returns>
    </member>
    <member name="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)">
      <summary>
                    Определяет, равен ли текущий объект <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> второму объекту <see cref="T:System.TimeZoneInfo.AdjustmentRule" />.
                </summary>
      <returns>true, если значения объектов <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> совпадают; в противном случае — false.
                </returns>
      <param name="other">
                    Второй объект <see cref="T:System.TimeZoneInfo.AdjustmentRule" />.
                </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.AdjustmentRule.GetHashCode">
      <summary>
                    Служит хэш-функцией для алгоритмов хэширования и таких структур данных, как хэш-таблицы.
                </summary>
      <returns>
                    32-битовое целое число со знаком, выступающее в роли хэш-кода для текущего объекта <see cref="T:System.TimeZoneInfo.AdjustmentRule" />.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>
                    Выполняется после завершения десериализации объекта <see cref="T:System.TimeZoneInfo.AdjustmentRule" />.
                </summary>
      <param name="sender">
                    Объект, который инициировал обратный вызов. Данная функциональная возможность для этого параметра в настоящее время не реализована.   
                </param>
    </member>
    <member name="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
                    Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации этого объекта.
                </summary>
      <param name="info">
                    Объект SerializationInfo, который необходимо заполнить данными.
                </param>
      <param name="context">
                    Целевой объект сериализации (см. раздел, посвященный структуре <see cref="T:System.Runtime.Serialization.StreamingContext" />).
                </param>
    </member>
    <member name="T:System.TimeZoneInfo.TransitionTime">
      <summary>Предоставляет сведения о конкретном изменении времени определенного часового пояса, такие как переход с летнего времени на зимнее или наоборот.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule(System.DateTime,System.Int32,System.Int32)">
      <summary>Определяет изменение времени, производимое по правилу с фиксированной датой.</summary>
      <returns>Объект <see cref="T:System.TimeZoneInfo.TransitionTime" />, содержащий данные об изменении времени.</returns>
      <param name="timeOfDay">Время, когда происходит изменение времени.</param>
      <param name="month">Месяц, когда происходит изменение времени.</param>
      <param name="day">День месяца, когда происходит изменение времени.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="timeOfDay" /> имеет не являющийся используемым по умолчанию компонент даты.-или-Параметр <paramref name="timeOfDay" /> имеет свойство <see cref="P:System.DateTime.Kind" />, не равное <see cref="F:System.DateTimeKind.Unspecified" />.-или-Параметр <paramref name="timeOfDay" /> не представляет целое число миллисекунд.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month" /> меньше 1 или больше 12.-или-Параметр <paramref name="day" /> меньше 1 или больше 31.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule(System.DateTime,System.Int32,System.Int32,System.DayOfWeek)">
      <summary>Определяет изменение времени, производимое по правилу с плавающей датой.</summary>
      <returns>Объект <see cref="T:System.TimeZoneInfo.TransitionTime" />, содержащий данные об изменении времени.</returns>
      <param name="timeOfDay">Время, когда происходит изменение времени.</param>
      <param name="month">Месяц, когда происходит изменение времени.</param>
      <param name="week">Неделя месяца, когда происходит изменение времени.</param>
      <param name="dayOfWeek">День недели, в который происходит изменение времени.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="timeOfDay" /> имеет не являющийся используемым по умолчанию компонент даты.-или-Параметр <paramref name="timeOfDay" /> не представляет целое число миллисекунд.-или-Параметр <paramref name="timeOfDay" /> имеет свойство <see cref="P:System.DateTime.Kind" />, не равное <see cref="F:System.DateTimeKind.Unspecified" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month" /> меньше 1 или больше 12.-или-
                Параметр <paramref name="week" /> меньше 1 или больше 5.-или-Параметр <paramref name="dayOfWeek" /> не является членом перечисления <see cref="T:System.DayOfWeek" />.</exception>
    </member>
    <member name="P:System.TimeZoneInfo.TransitionTime.Day">
      <summary>Возвращает день, в который происходит изменение времени.</summary>
      <returns>День, в который происходит изменение времени.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.TransitionTime.DayOfWeek">
      <summary>Возвращает день недели, в который происходит изменение времени.</summary>
      <returns>День недели, в который происходит изменение времени.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.TransitionTime.Equals(System.Object)">
      <summary>Определяет, идентичны ли значения объекта и текущего объекта <see cref="T:System.TimeZoneInfo.TransitionTime" />.</summary>
      <returns>true, если два объекта равны; в противном случае false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.TimeZoneInfo.TransitionTime" />.   </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.TransitionTime.Equals(System.TimeZoneInfo.TransitionTime)">
      <summary>Определяет, идентичны ли значения текущего объекта <see cref="T:System.TimeZoneInfo.TransitionTime" /> значениям второго объекта <see cref="T:System.TimeZoneInfo.TransitionTime" />.</summary>
      <returns>true, если два объекта имеют идентичные значения свойств; в противном случае — false.</returns>
      <param name="other">Второй объект <see cref="T:System.TimeZoneInfo.TransitionTime" />.   </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.TransitionTime.GetHashCode">
      <summary>Служит хэш-функцией для алгоритмов хэширования и таких структур данных, как хэш-таблицы.</summary>
      <returns>32-битовое целое число со знаком, выступающее в роли хэш-кода данного объекта <see cref="T:System.TimeZoneInfo.TransitionTime" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeZoneInfo.TransitionTime.IsFixedDateRule">
      <summary>Возвращает значение, указывающее, как происходит изменение: с фиксированной датой и временем (например, 1 ноября) или с плавающей датой и временем (например, в первое воскресенье октября).</summary>
      <returns>true, если применяется правило изменения времени с фиксированной датой; false, если применяется правило изменения времени с плавающей датой.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.TransitionTime.Month">
      <summary>Возвращает месяц, в который происходит изменение времени.</summary>
      <returns>Месяц, когда происходит изменение времени.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.TransitionTime.op_Equality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)">
      <summary>Определяет, равны ли между собой два указанных объекта <see cref="T:System.TimeZoneInfo.TransitionTime" />.</summary>
      <returns>true, если <paramref name="left" /> и <paramref name="right" /> имеют идентичные значения; в противном случае — false.</returns>
      <param name="left">Первый объект <see cref="T:System.TimeZoneInfo.TransitionTime" />.</param>
      <param name="right">Второй объект <see cref="T:System.TimeZoneInfo.TransitionTime" />.</param>
    </member>
    <member name="M:System.TimeZoneInfo.TransitionTime.op_Inequality(System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)">
      <summary>Определяет, являются ли два заданных объекта <see cref="T:System.TimeZoneInfo.TransitionTime" /> не равными.</summary>
      <returns>true, если <paramref name="left" /> и <paramref name="right" /> имеют различные значения членов; в противном случае — false.</returns>
      <param name="left">Первый объект <see cref="T:System.TimeZoneInfo.TransitionTime" />.</param>
      <param name="right">Второй объект <see cref="T:System.TimeZoneInfo.TransitionTime" />.</param>
    </member>
    <member name="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Выполняется после завершения десериализации объекта.</summary>
      <param name="sender">Объект, который инициировал обратный вызов. Данная функциональная возможность для этого параметра в настоящее время не реализована.   </param>
    </member>
    <member name="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации этого объекта.</summary>
      <param name="info">Объект SerializationInfo, который необходимо заполнить данными.</param>
      <param name="context">Целевой объект сериализации (см. раздел, посвященный структуре <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
    </member>
    <member name="P:System.TimeZoneInfo.TransitionTime.TimeOfDay">
      <summary>Возвращает час, минуту и секунду, когда происходит изменение времени.</summary>
      <returns>Значение типа <see cref="T:System.DateTime" />, указывающее время дня, когда происходит изменение времени.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.TransitionTime.Week">
      <summary>Возвращает неделю месяца, когда происходит изменение времени.</summary>
      <returns>Неделя месяца, когда происходит изменение времени.</returns>
    </member>
    <member name="T:System.TimeZoneNotFoundException">
      <summary>Исключение, выбрасываемое, когда не удается найти часовой пояс.</summary>
    </member>
    <member name="M:System.TimeZoneNotFoundException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TimeZoneNotFoundException" />, используя системное сообщение.</summary>
    </member>
    <member name="M:System.TimeZoneNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TimeZoneNotFoundException" /> из сериализованных данных.</summary>
      <param name="info">Объект, содержащий сериализованные данные.</param>
      <param name="context">Поток, содержащий сериализованные данные.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="info" /> имеет значение null.-или-Параметр <paramref name="context" /> имеет значение null.</exception>
    </member>
    <member name="M:System.TimeZoneNotFoundException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TimeZoneNotFoundException" /> указанной строкой сообщения.</summary>
      <param name="message">Строка, описывающая исключение.</param>
    </member>
    <member name="M:System.TimeZoneNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TimeZoneNotFoundException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Строка, описывающая исключение.    </param>
      <param name="innerException">Исключение, являющееся причиной текущего исключения.  </param>
    </member>
    <member name="T:System.Collections.Generic.HashSet`1">
      <summary>
                    Представляет набор значений.
                </summary>
      <typeparam name="T">
                    Тип элементов в списке.
                </typeparam>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor">
      <summary>
                    Инициализирует пустой экземпляр класса <see cref="T:System.Collections.Generic.HashSet`1" />, который является пустым и использует компаратор по умолчанию для типа набора.
                </summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                    Инициализирует новый экземпляр <see cref="T:System.Collections.Generic.HashSet`1" />, который использует компаратор по умолчанию для типа набора, содержит элементы, скопированные из указанной коллекции, и обладает емкостью, достаточной для того, чтобы вместить количество скопированных элементов.
                </summary>
      <param name="collection">
                    Коллекция, элементы которой копируются в новый набор.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="collection" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
      <summary>
                    Инициализирует новый экземпляр <see cref="T:System.Collections.Generic.HashSet`1" />, который использует указанный компаратор для типа набора, содержит элементы, скопированные из указанной коллекции, и обладает емкостью, достаточной для того, чтобы вместить количество скопированных элементов.
                </summary>
      <param name="collection">
                    Коллекция, элементы которой копируются в новый набор.
                </param>
      <param name="comparer">
                    Реализация <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которую следует использовать при сравнении значений в наборе, или значение null, чтобы использовать реализацию <see cref="T:System.Collections.Generic.EqualityComparer`1" /> по умолчанию для типа набора.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="collection" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <summary>
                    Инициализирует пустой экземпляр класса <see cref="T:System.Collections.Generic.HashSet`1" />, который является пустым и использует указанный компаратор для типа набора.
                </summary>
      <param name="comparer">
                    Реализация <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которую следует использовать при сравнении значений в наборе, или значение null, чтобы использовать реализацию <see cref="T:System.Collections.Generic.EqualityComparer`1" /> по умолчанию для типа набора.
                </param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
                    Инициализирует новый экземпляр <see cref="T:System.Collections.Generic.HashSet`1" /> с сериализованными данными.
                </summary>
      <param name="info">
                    Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит сведения, требуемые для сериализации объекта <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <param name="context">
                    Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащая исходный и конечный объекты сериализованного потока, связанного с объектом <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Add(`0)">
      <summary>
                    Добавляет указанный элемент в набор.
                </summary>
      <returns>
                    Значение true, если элемент добавлен в объект <see cref="T:System.Collections.Generic.HashSet`1" />; значение false, если элемент уже присутствует в нем.
                </returns>
      <param name="item">
                    Элемент, добавляемый в набор.
                </param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Clear">
      <summary>
                    Удаляет все элементы из объекта <see cref="T:System.Collections.Generic.HashSet`1" />.
                </summary>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Comparer">
      <summary>
                    Получает объект <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для определения равенства для значений в наборе.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для определения равенства для значений в наборе.
                </returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Contains(`0)">
      <summary>
                    Определяет, содержит ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> указанный элемент.
                </summary>
      <returns>
                    Значение true, если объект содержит указанный элемент <see cref="T:System.Collections.Generic.HashSet`1" />; в противном случае — значение false.
                </returns>
      <param name="item">
                    Объект, который требуется отыскать в объекте <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
      <summary>
                    Копирует элементы объекта <see cref="T:System.Collections.Generic.HashSet`1" /> в массив.
                </summary>
      <param name="array">
                    Одномерный массив, являющийся назначением элементов, копируемых из объекта <see cref="T:System.Collections.Generic.HashSet`1" />. Индексация в массиве должна начинаться с нуля.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="array" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
      <summary>
                    Копирует элементы объекта <see cref="T:System.Collections.Generic.HashSet`1" /> в массив, начиная с указанного индекса массива.
                </summary>
      <param name="array">
                    Одномерный массив, являющийся назначением элементов, копируемых из объекта <see cref="T:System.Collections.Generic.HashSet`1" />. Индексация в массиве должна начинаться с нуля.
                </param>
      <param name="arrayIndex">
                    Индекс (с нуля) в массиве <paramref name="array" />, с которого начинается копирование.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="array" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> меньше 0.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Значение <paramref name="arrayIndex" /> больше длины массива назначения <paramref name="array" />.
                
                    -или-
                
                    Значение <paramref name="count" /> больше размера массива назначения <paramref name="array" />.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
      <summary>
                    Копирует указанное количество элементов объекта <see cref="T:System.Collections.Generic.HashSet`1" /> в массив, начиная с указанного индекса массива.
                </summary>
      <param name="array">
                    Одномерный массив, являющийся назначением элементов, копируемых из объекта <see cref="T:System.Collections.Generic.HashSet`1" />. Индексация в массиве должна начинаться с нуля.
                </param>
      <param name="arrayIndex">
                    Индекс (с нуля) в массиве <paramref name="array" />, с которого начинается копирование.
                </param>
      <param name="count">
                    Число элементов, копируемых в массив <paramref name="array" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="array" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="arrayIndex" /> меньше 0.
                
                    -или-
                
                    Значение параметра <paramref name="count" /> меньше 0.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Значение <paramref name="arrayIndex" /> больше длине массива назначения <paramref name="array" />.
                
                    -или-
                
                    Значение <paramref name="count" /> превышает доступное место, начиная с индекса <paramref name="index" /> и до конца массива назначения <paramref name="array" />.
                </exception>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Count">
      <summary>
                    Возвращает число элементов, содержащихся в наборе.
                </summary>
      <returns>
                    Число элементов, содержащихся в наборе.
                </returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
      <summary>
                    Возвращает объект <see cref="T:System.Collections.IEqualityComparer" />, который может быть использован для выполнения глубокой проверки равенства для объекта <see cref="T:System.Collections.Generic.HashSet`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.IEqualityComparer" />, который может быть использован для выполнения глубокой проверки равенства для объекта <see cref="T:System.Collections.Generic.HashSet`1" />.
                </returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                    Удаляет все элементы в указанной коллекции из текущего объекта <see cref="T:System.Collections.Generic.HashSet`1" />.
                </summary>
      <param name="other">
                    Коллекция элементов, удаляемая из объекта <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="other" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.GetEnumerator">
      <summary>
                    Возвращает перечислитель, осуществляющий перебор элементов объекта <see cref="T:System.Collections.Generic.HashSet`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /> для объекта <see cref="T:System.Collections.Generic.HashSet`1" />.
                </returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
                    Реализует интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" /> и возвращает данные, необходимые для сериализации объекта <see cref="T:System.Collections.Generic.HashSet`1" />.
                </summary>
      <param name="info">
                    Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит сведения, требуемые для сериализации объекта <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <param name="context">
                    Структура <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащая исходный и конечный объекты сериализованного потока, связанного с объектом <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="info" /> равно null.
                </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                    Изменяет текущий объект <see cref="T:System.Collections.Generic.HashSet`1" />, чтобы он содержал только элементы, которые имеются в этом объекте и в указанной коллекции.
                </summary>
      <param name="other">
                    Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="other" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                    Определяет, является ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> строгим подмножеством указанной коллекции.
                </summary>
      <returns>
                    Значение true, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> строгим подмножеством <paramref name="other" />; в противном случае — значение false.
                </returns>
      <param name="other">
                    Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="other" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                    Определяет, является ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> строгим надмножеством указанной коллекции.
                </summary>
      <returns>
                    Значение true, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> строгим надмножеством <paramref name="other" />; в противном случае — значение false.
                </returns>
      <param name="other">
                    Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />. 
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="other" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                    Определяет, является ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> подмножеством указанной коллекции.
                </summary>
      <returns>
                    Значение true, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> подмножеством <paramref name="other" />; в противном случае — значение false.
                </returns>
      <param name="other">
                    Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="other" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                    Определяет, является ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> надмножеством указанной коллекции.
                </summary>
      <returns>
                    Значение true, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> строгим надмножеством <paramref name="other" />; в противном случае — значение false.
                </returns>
      <param name="other">
                    Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="other" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
      <summary>
                    Реализует интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" /> и вызывает событие десериализации при завершении десериализации.
                </summary>
      <param name="sender">
                    Источник события десериализации.
                </param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                    Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, связанный с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />, является недействительным.
                </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                    Определяет, перекрывает ли текущий объект <see cref="T:System.Collections.Generic.HashSet`1" /> указанную коллекцию.
                </summary>
      <returns>
                    Значение true, если объекты <see cref="T:System.Collections.Generic.HashSet`1" /> и <paramref name="other" /> совместно используют по крайней мере один общий элемент; в противном случае — значение false.
                </returns>
      <param name="other">
                    Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="other" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Remove(`0)">
      <summary>
                    Удаляет указанный элемент из объекта <see cref="T:System.Collections.Generic.HashSet`1" />.
                </summary>
      <returns>
                    Значение true, если элемент успешно найден и удален; в противном случае — значение false.  Этот метод возвращает значение false, если параметр <paramref name="item" /> не найден в объекте <see cref="T:System.Collections.Generic.HashSet`1" />.
                </returns>
      <param name="item">
                    Подлежащий удалению элемент.
                </param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
      <summary>
                    Удаляет все элементы, удовлетворяющие условиям, которые были определены указанным предикатом из коллекции <see cref="T:System.Collections.Generic.HashSet`1" />.
                </summary>
      <returns>
                    Количество элементов, удаленных из коллекции <see cref="T:System.Collections.Generic.HashSet`1" />.
                </returns>
      <param name="match">
                    Делегат <see cref="T:System.Predicate`1" />, определяющий условия удаления элемента.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="match" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                    Определяет, содержат ли объект <see cref="T:System.Collections.Generic.HashSet`1" /> и указанная коллекция одни и те же элементы.
                </summary>
      <returns>
                    Значение true, если объект <see cref="T:System.Collections.Generic.HashSet`1" /> равен данному параметру; в противном случае — значение <paramref name="other" />.
                </returns>
      <param name="other">
                    Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="other" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                    Изменяет текущий объект <see cref="T:System.Collections.Generic.HashSet`1" />, чтобы он содержал только элементы, которые имеются либо в этом объекте, либо в указанной коллекции, но не одновременно в них обоих.
                </summary>
      <param name="other">
                    Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="other" /> равно null.
                </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>
                    Добавляет элемент в объект <see cref="T:System.Collections.Generic.ICollection`1" />.
                </summary>
      <param name="item">
                    Объект, добавляемый в объект <see cref="T:System.Collections.Generic.ICollection`1" />.
                </param>
      <exception cref="T:System.NotSupportedException">
                    Интерфейс <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.
                </exception>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>
                    Получает значение, указывающее, доступна ли коллекция только для чтения.
                </summary>
      <returns>
                    Значение true если коллекция доступна только для чтения; в противном случае — значение false.
                </returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>
                    Возвращает перечислитель, осуществляющий итерацию по коллекции.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который может использоваться для перебора элементов коллекции.
                </returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>
                    Возвращает перечислитель, который осуществляет перебор элементов коллекции.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для перебора элементов коллекции.
                </returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.TrimExcess">
      <summary>
                    Задает емкость объекта <see cref="T:System.Collections.Generic.HashSet`1" /> равной фактическому числу элементов, которые в нем содержатся, округленному в большую сторону ближайшего значения, зависящего от реализации.
                </summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                    Изменяет текущий объект <see cref="T:System.Collections.Generic.HashSet`1" />, чтобы он содержал все элементы, которые имеются и в этом объекте, и в указанной коллекции.
                </summary>
      <param name="other">
                    Коллекция для сравнения с текущим объектом <see cref="T:System.Collections.Generic.HashSet`1" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="other" /> равно null.
                </exception>
    </member>
    <member name="T:System.Collections.Generic.HashSet`1.Enumerator">
      <summary>Выполняет перечисление элементов объекта <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
      <summary>Получает элемент, расположенный в текущей позиции перечислителя.</summary>
      <returns>Элемент коллекции <see cref="T:System.Collections.Generic.HashSet`1" />, соответствующий текущей позиции перечислителя.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
      <summary>Перемещает перечислитель к следующему элементу коллекции <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <returns>true, если перечислитель успешно перемещен к следующему элементу; false, если перечислитель достиг конца коллекции.</returns>
      <exception cref="T:System.InvalidOperationException">Коллекция была изменена после создания перечислителя. </exception>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Получает элемент, расположенный в текущей позиции перечислителя.</summary>
      <returns>Элемент коллекции, находящийся в текущей позиции перечислителя, в виде объекта <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.InvalidOperationException">Перечислитель помещается перед первым элементом коллекции или после последнего элемента. </exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Устанавливает перечислитель в его начальное положение, перед первым элементом коллекции.</summary>
      <exception cref="T:System.InvalidOperationException">Коллекция была изменена после создания перечислителя. </exception>
    </member>
    <member name="T:System.Diagnostics.EventSchemaTraceListener">
      <summary>Направляет результаты трассировки или отладки сквозных событий в совместимый со схемой файл журнала в XML-представлении.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" />, используя указанный файл в качестве получателя выходных данных отладки и трассировки.</summary>
      <param name="fileName">Новый путь для файла журнала.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> с заданным именем, используя указанный файл в качестве получателя выходных данных отладки и трассировки.</summary>
      <param name="fileName">Новый путь для файла журнала.</param>
      <param name="name">Имя прослушивателя.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> с заданным именем и указанным размером буфера, используя указанный файл в качестве получателя выходных данных отладки и трассировки.</summary>
      <param name="fileName">Новый путь для файла журнала.</param>
      <param name="name">Имя прослушивателя.</param>
      <param name="bufferSize">Размер буфера выходных данных (в байтах).</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> с заданным именем и указанным размером буфера, используя указанный файл с заданной политикой хранения журнала в качестве получателя выходных данных отладки и трассировки.</summary>
      <param name="fileName">Новый путь для файла журнала.</param>
      <param name="name">Имя прослушивателя.</param>
      <param name="bufferSize">Размер буфера выходных данных (в байтах).</param>
      <param name="logRetentionOption">Одно из значений <see cref="T:System.Diagnostics.TraceLogRetentionOption" />. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> с заданным именем и указанным размером буфера, используя указанный файл с заданной политикой хранения и максимальным размером журнала в качестве получателя выходных данных отладки и трассировки.</summary>
      <param name="fileName">Новый путь для файла журнала.</param>
      <param name="name">Имя прослушивателя.</param>
      <param name="bufferSize">Размер буфера выходных данных (в байтах).</param>
      <param name="logRetentionOption">Одно из значений <see cref="T:System.Diagnostics.TraceLogRetentionOption" />.</param>
      <param name="maximumFileSize">Максимальный размер файла в байтах.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Значение свойства <paramref name="maximumFileSize" /> меньше значения <paramref name="bufferSize" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Значение параметра <paramref name="maximumFileSize" /> является отрицательным числом.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> с заданным именем и указанным размером буфера, используя в качестве получателя выходных данных отладки и трассировки указанный файл с заданной политикой хранения и максимальным размером журнала, а также счетчиком файлов.</summary>
      <param name="fileName">Новый путь для файла журнала.</param>
      <param name="name">Имя прослушивателя.</param>
      <param name="bufferSize">Размер буфера выходных данных (в байтах).</param>
      <param name="logRetentionOption">Одно из значений <see cref="T:System.Diagnostics.TraceLogRetentionOption" />.</param>
      <param name="maximumFileSize">Максимальный размер файла в байтах.</param>
      <param name="maximumNumberOfFiles">Максимальное количество выходных файлов журнала.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Значение свойства <paramref name="maximumFileSize" /> меньше значения <paramref name="bufferSize" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Значение параметра <paramref name="maximumFileSize" /> является отрицательным числом.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Значение параметра <paramref name="maximumNumberOfFiles" /> меньше 1, а значение параметра <paramref name="logRetentionOption" /> равно <see cref="F:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Значение параметра <paramref name="maximumNumberOfFiles" /> меньше 2, а значение параметра <paramref name="logRetentionOption" /> равно <see cref="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.EventSchemaTraceListener.BufferSize">
      <summary>Получает размер буфера выходных данных.</summary>
      <returns>Размер буфера выходных данных (в байтах). </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.Close">
      <summary>Закрывает файл журнала данного прослушивателя. Теперь этот журнал не будет получать выходные данные отладки или трассировки.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)">
      <summary>Записывает в файл журнала сведения об ошибках, в том числе базовое и подробное сообщение об ошибке.</summary>
      <param name="message">Записываемое базовое сообщение об ошибке.</param>
      <param name="detailMessage">Подробное сообщение об ошибке, дополняющее базовое сообщение об ошибке.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.Flush">
      <summary>Вызывает запись буферизированных данных в журнал этого прослушивателя.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes">
      <summary>Возвращает настраиваемые атрибуты конфигурации XML, поддерживаемые прослушивателем трассировки.</summary>
      <returns>Массив типа <see cref="T:System.String" />, содержащий атрибуты конфигурации XML, распознаваемые данным прослушивателем.</returns>
    </member>
    <member name="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe">
      <summary>Возвращает значение, указывающее, является ли прослушиватель трассировки потокобезопасным.</summary>
      <returns>Всегда возвращает значение true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
      <summary>Возвращает максимальный размер файла журнала.</summary>
      <returns>Максимальный размер файла в байтах.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
      <summary>Возвращает максимальное количество файлов журнала.</summary>
      <returns>Максимальное количество файлов журнала, определяемое значением свойства <see cref="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" /> файла.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>Записывает в файл журнала сведения трассировки, единичный объект данных и сведения о событии.</summary>
      <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса и потока, а также сведения трассировки стека.</param>
      <param name="source">Имя источника. </param>
      <param name="eventType">Одно из значений <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <param name="id">Числовой идентификатор события.</param>
      <param name="data">Объект данных для выдачи.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>Записывает в файл журнала сведения трассировки, несколько объектов данных и сведения о событии.</summary>
      <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса и потока, а также сведения трассировки стека.</param>
      <param name="source">Имя источника. </param>
      <param name="eventType">Одно из значений <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <param name="id">Числовой идентификатор события.</param>
      <param name="data">Массив объектов данных для выдачи.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>Записывает сведения трассировки, сообщение и сведения о событиях в файл журнала.</summary>
      <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса и потока, а также сведения трассировки стека.</param>
      <param name="source">Имя источника. </param>
      <param name="eventType">Одно из значений <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <param name="id">Числовой идентификатор события.</param>
      <param name="message">Сообщение для записи.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>Записывает сведения трассировки, форматированное сообщение и сведения о событиях в файл журнала.</summary>
      <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса и потока, а также сведения трассировки стека.</param>
      <param name="source">Имя источника. </param>
      <param name="eventType">Одно из значений <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <param name="id">Числовой идентификатор события.</param>
      <param name="format">Строка формата, содержащая нулевое или ненулевое количество элементов форматирования, соответствующих объектам в массиве <paramref name="args" />.</param>
      <param name="args">Массив объектов, содержащий нулевое или ненулевое количество объектов, которые необходимо отформатировать.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption">
      <summary>Возвращает для файла параметр хранения журнала трассировки.</summary>
      <returns>Одно из значений <see cref="T:System.Diagnostics.TraceLogRetentionOption" />. Значение по умолчанию — <see cref="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize" />. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
      <summary>Записывает сведения трассировки, включая идентификацию сопутствующего действия, сообщение и сведения о событии в файл журнала.</summary>
      <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий текущие идентификаторы процесса и потока, а также сведения трассировки стека.</param>
      <param name="source">Имя источника. </param>
      <param name="id">Числовой идентификатор события.</param>
      <param name="message">Сообщение трассировки для записи.</param>
      <param name="relatedActivityId">Структура <see cref="T:System.Guid" />, идентифицирующая сопутствующую активность.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)">
      <summary>Записывает сообщение в файл журнала, не указывая какой-либо дополнительной контекстной информации.</summary>
      <param name="message">Сообщение для записи.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)">
      <summary>Записывает в файл журнала сообщение, после которого следует текущий разделитель строк, без какой-либо дополнительной контекстной информации.</summary>
      <param name="message">Сообщение для записи.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.EventSchemaTraceListener.Writer">
      <summary>Возвращает или задает основной модуль записи текста, записывающий данные в файл журнала.</summary>
      <returns>Объект <see cref="T:System.IO.TextWriter" />.</returns>
      <exception cref="T:System.NotSupportedException">Предпринята попытка присвоить значение свойству <see cref="P:System.Diagnostics.EventSchemaTraceListener.Writer" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.TraceLogRetentionOption">
      <summary>Задает структуру файла, которая будет использоваться для журнала <see cref="T:System.Diagnostics.EventSchemaTraceListener" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize">
      <summary>Один файл без ограничения максимального размера.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize">
      <summary>Один файл с максимальным размером, определенным свойством <see cref="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" />.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles">
      <summary>Неограниченное число последовательных файлов, каждый из которых с максимальным размером, определенным свойством <see cref="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" />. Не существует логических границ для количества или размера файлов, однако существуют пределы физических ограничений, налагаемых компьютером.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles">
      <summary>Конечное число последовательных файлов, каждый из которых максимального размера. При достижении значения свойства <see cref="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" /> начинается запись нового файла с увеличенным целочисленным суффиксом.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles">
      <summary>Конечное число последовательных файлов, каждый из которых максимального размера. При достижении значения свойства <see cref="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" /> начинается запись нового файла с увеличенным целочисленным суффиксом. При достижении значения свойства <see cref="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles" /> первый файл очищается и перезаписывается. Затем файлы последовательно циклически перезаписываются.</summary>
    </member>
    <member name="T:System.Diagnostics.UnescapedXmlDiagnosticData">
      <summary>Предоставляет не являющиеся escape-последовательностью XML-данные для внесения в журнал предоставленных пользователем данных трассировки.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.UnescapedXmlDiagnosticData.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" />, используя указанную строку XML-данных.</summary>
      <param name="xmlPayload">XML-данные, которые необходимо внести в журнал в узле схемы событий UserData.  </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString">
      <summary>Возвращает строковое представление объекта <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" />.</summary>
      <returns>Строковое представление объекта <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" />. Если объекту соответствует значение null, этот метод возвращает пустую строку.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml">
      <summary>Получает или задает строку XML-данных, не являющуюся escape-последовательностью.</summary>
      <returns>Строка XML, не являющаяся escape-последовательностью.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.EventDescriptor">
      <summary>Содержит метаданные, определяющие событие.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventDescriptor.#ctor(System.Int32,System.Byte,System.Byte,System.Byte,System.Byte,System.Int32,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.EventDescriptor" />.</summary>
      <param name="id">Идентификатор события.</param>
      <param name="version">Версия события. В версии указывается редакция определения события. Этот элемент и элемент Id можно использовать для идентификации уникального события.</param>
      <param name="channel">Определяет потенциальную цель для события.</param>
      <param name="level">Указывает уровень детализации сведений, включаемых в событие.</param>
      <param name="opcode">Операция, выполняемая во время записи события.</param>
      <param name="task">Идентифицирует логический компонент приложения, записывающего событие.</param>
      <param name="keywords">Битовая маска, указывающая категорию события. Ключевое слово может содержать одно или несколько ключевых слов, определенных поставщиком, стандартные ключевые слова или и те, и другие.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.EventDescriptor.Channel">
      <summary>Получает значение канала из дескриптора событий.</summary>
      <returns>Канал, который определяет потенциальную цель для события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.EventDescriptor.EventId">
      <summary>Получает значение идентификатора события из дескриптора событий.</summary>
      <returns>Идентификатор события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.EventDescriptor.Keywords">
      <summary>Получает значение ключевого слова из дескриптора событий.</summary>
      <returns>Ключевое слово, которое является битовой маской, указывающей категорию события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.EventDescriptor.Level">
      <summary>Получает значение уровня из дескриптора событий.</summary>
      <returns>Уровень детализации сведений, включаемых в событие.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.EventDescriptor.Opcode">
      <summary>Получает значение кода операции из дескриптора событий.</summary>
      <returns>Операция, выполняемая во время записи события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.EventDescriptor.Task">
      <summary>Получает значение задачи из дескриптора событий.</summary>
      <returns>Задача, которая определяет логический компонент приложения, записывающего событие.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.EventDescriptor.Version">
      <summary>Получает значение версии из дескриптора событий.</summary>
      <returns>Версия события. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.EventProvider">
      <summary>Этот класс используется для записи событий.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.EventProvider" />.</summary>
      <param name="providerGuid">Идентификатор Guid, однозначно определяющий поставщика.</param>
      <exception cref="T:System.InsufficientMemoryException">Недостаточно памяти для выполнения операции.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы в пространстве имен <see cref="N:System.Diagnostics.Eventing" /> работают только в Windows Vista.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="providerGuid" /> не может быть равен null.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Ошибка, возвращенная подсистемой ETW. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.Close">
      <summary>Удаляет регистрацию поставщика из подсистемы ETW и освобождает все неуправляемые ресурсы.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">Ошибка, возвращенная подсистемой ETW. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.CreateActivityId">
      <summary>Создает уникальный идентификатор действия для поставщика.</summary>
      <returns>Уникальный идентификатор Guid, который используется при вызове метода <see cref="M:System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)" />, чтобы установить идентификатор действия для поставщика.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.Dispose">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)">
      <param name="disposing"></param>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.Finalize"></member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError">
      <summary>Возвращает код последней ошибки, связанной со сбоем записи события.</summary>
      <returns>Это значение используется для определения причины сбоя записи события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.IsEnabled">
      <summary>Определяет, разрешен ли поставщик каким-либо сеансом, независимо от значений уровня и ключевого слова, используемых для разрешения этого поставщика.</summary>
      <returns>Значение true, если поставщик разрешен для какого-либо сеанса, в противном случае — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)">
      <summary>Определяет, запрашивается ли каким-либо сеансом от поставщика указанное событие.</summary>
      <returns>Значение true, если в каком-либо сеансе запрашивается указанное событие, в противном случае — false.</returns>
      <param name="level">Уровень детализации сведений, включаемых в событие.</param>
      <param name="keywords">Битовая маска, указывающая категорию события. Эта маска должна быть такой же, как и маска ключевого слова, которая определена в манифесте события.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)">
      <summary>Задает идентификатор текущего действия, используемый методом <see cref="Overload:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent" />.</summary>
      <param name="id">Уникальный идентификатор действия, возвращаемый методом <see cref="M:System.Diagnostics.Eventing.EventProvider.CreateActivityId" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)">
      <summary>Записывает событие. Данные события указаны в качестве блока памяти.</summary>
      <returns>Значение true, если событие записано, в противном случае — false. Если событие не записано, для определения причины сбоя можно использовать метод <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /></returns>
      <param name="eventDescriptor">Экземпляр <see cref="T:System.Diagnostics.Eventing.EventDescriptor" />, определяющий событие для записи.</param>
      <param name="dataCount">Размер данных события, на которые указывает параметр <paramref name="data" />. Максимальный размер данных события ограничен 64 КБ за вычетом размера заголовков события. Размер события может быть меньше, если меньше размер буфера сеанса и сеанс включает вместе с событием расширенные элементы данных.</param>
      <param name="data">Указатель на данные события для записи.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])">
      <summary>Записывает событие. Данные события указываются в виде массива объектов.</summary>
      <returns>Значение true, если событие записано, в противном случае — false. Если событие не записано, для определения причины сбоя можно использовать метод <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /></returns>
      <param name="eventDescriptor">Экземпляр <see cref="T:System.Diagnostics.Eventing.EventDescriptor" />, определяющий событие для записи.</param>
      <param name="eventPayload">Массив объектов, которые содержат данные записываемого события. Объекты должны быть в том порядке, который указан в манифесте. Размер массива ограничен 32 объектами, из которых только 8 могут быть строчными. Максимальный размер данных события ограничен 64 КБ за вычетом размера заголовков события. Размер события может быть меньше, если меньше размер буфера сеанса и сеанс включает вместе c событием расширенные элементы данных.Этот параметр может быть равен null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="eventPayload" /> содержит слишком много объектов или строк.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)">
      <summary>Записывает событие. Данные события указаны в виде строки.</summary>
      <returns>Значение true, если событие записано, в противном случае — false. Если событие не записано, для определения причины сбоя можно использовать метод <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /></returns>
      <param name="eventDescriptor">Экземпляр <see cref="T:System.Diagnostics.Eventing.EventDescriptor" />, определяющий событие для записи.</param>
      <param name="data">Строка для записи в качестве данных события.</param>
      <exception cref="T:System.ArgumentException">Если значение <paramref name="data" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)">
      <summary>Записывает событие, которое содержит строку в качестве данных.</summary>
      <returns>Значение true, если событие записано, в противном случае — false. Если событие не записано, для определения причины сбоя можно использовать метод <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /></returns>
      <param name="eventMessage">Строка для записи в качестве данных события.</param>
      <exception cref="T:System.ArgumentException">Если значение <paramref name="eventMessage" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)">
      <summary>Записывает событие, которое содержит строку в качестве данных, если уровень и ключевое слово соответствуют событиям, запрашиваемым сеансом.</summary>
      <returns>Значение true, если событие записано, в противном случае — false. Если событие не записано, для определения причины сбоя можно использовать метод <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /></returns>
      <param name="eventMessage">Строка для записи в качестве данных события.</param>
      <param name="eventLevel">Уровень детализации сведений, включаемых в событие. Если поставщик использует манифест для определения события, это значение устанавливается таким же, как и значение уровня, определенное в манифесте.</param>
      <param name="eventKeywords">Битовая маска, указывающая категорию события. Если поставщик использует манифест для определения события, это значение устанавливается таким же, как и значение маски ключевого слова, определенное в манифесте.</param>
      <exception cref="T:System.ArgumentException">Если значение <paramref name="eventMessage" /> равно null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)">
      <summary>Связывает события при сквозной трассировке. Данные события указаны в качестве блока памяти.</summary>
      <returns>Значение true, если событие записано, в противном случае — false. Если событие не записано, для определения причины сбоя можно использовать метод <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /></returns>
      <param name="eventDescriptor">Экземпляр <see cref="T:System.Diagnostics.Eventing.EventDescriptor" />, определяющий событие для записи.</param>
      <param name="relatedActivityId">Идентификатор действия от предыдущего компонента. Этот параметр используется для связи событий компонента с событиями предыдущего компонента.</param>
      <param name="dataCount">Размер данных события, на которые указывает параметр <paramref name="data" />. Максимальный размер данных события ограничен 64 КБ за вычетом размера заголовков события. Размер события может быть меньше, если меньше размер буфера сеанса и сеанс включает вместе с событием расширенные элементы данных.</param>
      <param name="data">Указатель на данные события для записи.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])">
      <summary>Связывает события при сквозной трассировке. Данные события указываются в виде массива объектов.</summary>
      <returns>Значение true, если событие записано, в противном случае — false. Если событие не записано, для определения причины сбоя можно использовать метод <see cref="M:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError" /></returns>
      <param name="eventDescriptor">Экземпляр <see cref="T:System.Diagnostics.Eventing.EventDescriptor" />, определяющий событие для записи.</param>
      <param name="relatedActivityId">Идентификатор действия от предыдущего компонента. Этот параметр используется для связи событий компонента с событиями предыдущего компонента.</param>
      <param name="eventPayload">Массив объектов, которые содержат данные записываемого события. Объекты должны быть в том порядке, который указан в манифесте. Размер массива ограничен 32 объектами, из которых только 8 могут быть строчными. Максимальный размер данных события ограничен 64 КБ за вычетом размера заголовков события. Размер события может быть меньше, если меньше размер буфера сеанса и сеанс включает вместе с событием расширенные элементы данных.</param>
      <exception cref="T:System.ArgumentException">Если параметр <paramref name="eventPayload" /> содержит слишком много объектов или строк.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode">
      <summary>Определяет возможные состояния последней операции записи.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode.NoError">
      <summary>Запись выполнена успешно.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode.NoFreeBuffers">
      <summary>Сеанс исчерпал свободные буфера для записи. Это может произойти при высокой частоте событий из-за перегрузки дисковой подсистемы или недостаточного количества буферов. Вместо блокировки события до тех пор, пока буферы не станут доступны, оно удаляется. Следует увеличить количество и размер буферов для сеанса, уменьшить количество записанных событий или их размер.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode.EventTooBig">
      <summary>Событие превышает размер буфера сеанса. События не могут выходить за пределы буферов.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.EventProviderTraceListener">
      <summary>Прослушиватель <see cref="T:System.Diagnostics.TraceSource" /> записывает события в подсистему ETW. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> с помощью указанного идентификатора поставщика.</summary>
      <param name="providerId">Уникальная строка <see cref="T:System.Guid" />, определяющая поставщика.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> с помощью указанного идентификатора поставщика и имени прослушивателя.</summary>
      <param name="providerId">Уникальная строка <see cref="T:System.Guid" />, определяющая поставщика.</param>
      <param name="name">Имя прослушивателя.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> с помощью указанного идентификатора поставщика, имени прослушивателя и разделителя.</summary>
      <param name="providerId">Уникальная строка <see cref="T:System.Guid" />, определяющая поставщика.</param>
      <param name="name">Имя прослушивателя.</param>
      <param name="delimiter">Разделитель, используемый для разделения данных события. (Дополнительные сведения см. в свойстве <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />.)</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.Close">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter">
      <summary>Возвращает и задает разделитель, используемый для разделения данных события, которые записаны в подсистему ETW.</summary>
      <returns>Разделитель, используемый для разделения данных события. Разделителем по умолчанию является запятая.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)">
      <param name="message"></param>
      <param name="detailMessage"></param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.Flush">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes"></member>
    <member name="P:System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <param name="eventCache"></param>
      <param name="source"></param>
      <param name="eventType"></param>
      <param name="id"></param>
      <param name="data"></param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <param name="eventCache"></param>
      <param name="source"></param>
      <param name="eventType"></param>
      <param name="id"></param>
      <param name="data"></param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <param name="eventCache"></param>
      <param name="source"></param>
      <param name="eventType"></param>
      <param name="id"></param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <param name="eventCache"></param>
      <param name="source"></param>
      <param name="eventType"></param>
      <param name="id"></param>
      <param name="message"></param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <param name="eventCache"></param>
      <param name="source"></param>
      <param name="eventType"></param>
      <param name="id"></param>
      <param name="format"></param>
      <param name="args"></param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
      <param name="eventCache"></param>
      <param name="source"></param>
      <param name="id"></param>
      <param name="message"></param>
      <param name="relatedActivityId"></param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)">
      <param name="message"></param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)">
      <param name="message"></param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <summary>Представляет местозаполнитель (закладку) в потоке событий. Местозаполнитель можно использовать для пометки события и возвращения к данной позиции в потоке событий. Экземпляр данного объекта можно получить из объекта <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />; в этом случае он соответствует позиции данной записи события.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventBookmark.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> из указанных экземпляров <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит сведения, требуемые для сериализации нового объекта <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник сериализованного потока, связанного с новым объектом <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" />.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventBookmark.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект <see cref="T:System.Runtime.Serialization." /><see cref="SerializationInfo" /> данными, необходимыми для сериализации целевого объекта.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization." /><see cref="SerializationInfo" />, который требуется заполнить данными.</param>
      <param name="context">Назначение этой сериализации.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventBookmark.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект <see cref="T:System.Runtime.Serialization." /><see cref="SerializationInfo" /> данными, необходимыми для сериализации целевого объекта.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization." /><see cref="SerializationInfo" />, который требуется заполнить данными.</param>
      <param name="context">Назначение этой сериализации.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <summary>Представляет ключевое слово для события. Ключевые слова определены в поставщике событий и используются для группирования события с другими идентичными событиями в соответствии с использованием событий.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName">
      <summary>Получает локализованное имя ключевого слова.</summary>
      <returns>Возвращает строку, содержащую локализованное имя для данного ключевого слова.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name">
      <summary>Получает нелокализованное имя ключевого слова.</summary>
      <returns>Возвращает строку, содержащую нелокализованное имя данного ключевого слова.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value">
      <summary>Получает цифровое значение, связанное с ключевым словом.</summary>
      <returns>Возвращает значение long.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLevel">
      <summary>Содержит уровень события, определенный в поставщике событий. Данный уровень указывает серьезность события.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName">
      <summary>Получает локализованное имя для уровня событий. Имя описывает уровень серьезности событий, для которых используется данный уровень.</summary>
      <returns>Возвращает строку, содержащую локализованное имя для уровня событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Name">
      <summary>Получает нелокализованное имя уровня событий.</summary>
      <returns>Возвращает строку, содержащую нелокализованное имя уровня событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Value">
      <summary>Получает цифровое значение уровня события.</summary>
      <returns>Возвращает целое значение.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <summary>Содержит статическую информацию и параметры конфигурации для журнала событий. Многие параметры конфигураций были определены поставщиком событий, создавшим журнал.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)">
      <summary>Инициализирует новый объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />, указывая локальный журнал событий, для которого следует получить информацию и параметры конфигурации. </summary>
      <param name="logName">Имя локального журнала событий, для которого следует получить информацию и параметры конфигурации.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
      <summary>Инициализирует новый объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />, указывая имя журнала, для которого следует получить информацию и параметры конфигурации. Журнал может располагаться на локальном или удаленном компьютере (в зависимости от указанного сеанса журнала событий).</summary>
      <param name="logName">Имя журнала событий, для которого следует получить информацию и параметры конфигурации.</param>
      <param name="session">Сеанс журнала событий, используемый для определения службы журнала событий, к которой принадлежит указанный журнал. Сеанс подключается к службе журнала событий на локальном или удаленном компьютере.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <summary>Освобождает все ресурсы, используемые этим объектом.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые этим объектом. Кроме того, возможно освобождение управляемых ресурсов.</summary>
      <param name="disposing">
                Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog">
      <summary>Получает флаг, указывающий, является ли журнал событий классическим журналом событий. Классический журнал событий является журналом, события которого определены в файле .mc, а не в файле манифеста (XML-файле), используемом поставщиком событий.</summary>
      <returns>Возвращает значение true, если журнал событий является классическим журналом; возвращает значение false, если журнал событий не является классическим журналом.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled">
      <summary>Получает или задает логическое значение, определяющее состояние журнала события (включен или отключен). Включенный журнал событий является журналом, в котором могут регистрироваться события; отключенный журнал событий является журналом, в котором события регистрироваться не могут.</summary>
      <returns>Возвращает значение true, если журнал включен; возвращает значениеfalse, если журнал отключен.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath">
      <summary>Получает или задает путь к каталогу файла, в котором сохраняются события для журнала.</summary>
      <returns>Возвращает строку, содержащую путь к файлу журнала событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation">
      <summary>Получает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" />, указывающее тип журнала событий (журнал событий приложений, журнал событий системы или пользовательский журнал событий). </summary>
      <returns>Возвращает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode">
      <summary>Получает или задает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" />, определяющее способ обработки событий при заполнении журнала событий.</summary>
      <returns>Возвращает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName">
      <summary>Получает имя журнала событий.</summary>
      <returns>Возвращает строку, содержащую имя журнала событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType">
      <summary>Получает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" />, определяющее тип журнала событий.</summary>
      <returns>Возвращает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes">
      <summary>Получает или задает максимальный размер файла журнала событий (в байтах). При достижении максимального размера файл считается заполненным.</summary>
      <returns>Возвращает длинное значение, представляющее максимальный размер файла журнала событий (в байтах).</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName">
      <summary>Получает имя поставщика событий, создавшего данный журнал событий.</summary>
      <returns>Возвращает строку, содержащую имя поставщика событий, создавшего данный журнал событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize">
      <summary>Получает размер буфера, используемого поставщиком событий для публикации событий в журнале.</summary>
      <returns>Возвращает целое значение (может иметь значение null).</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid">
      <summary>Получает глобальный уникальный ИД (GUID) для журнала событий, если журнал является журналом отладки. Если данный журнал не является журналом отладки, данное значение будет равно null. </summary>
      <returns>Возвращает значение GUID или значение null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords">
      <summary>Получает или задает маску ключевого слова, используемого поставщиком событий.</summary>
      <returns>Возвращает длинное значение, которое может быть равно null, если поставщик событий не определил ключевые слова.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency">
      <summary>Получает максимальное время задержки, используемое поставщиком событий при публикации событий в журнале.</summary>
      <returns>Возвращает целое значение, которое может иметь значение null, если время задержки не было определено поставщиком событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel">
      <summary>Получает или задает максимальный уровень события (определяющий важность события) для регистрации в журнале событий. Данное значение определяется поставщиком событий.</summary>
      <returns>Возвращает целое значение, которое может иметь значение null, если максимальный уровень события не был определен поставщиком событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers">
      <summary>Получает максимальное количество буферов, используемых поставщиком событий при публикации событий в журнале событий.</summary>
      <returns>Возвращает целое значение, представляющее максимальное количество буферов, используемых поставщиком событий при публикации событий в журнале событий. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers">
      <summary>Получает минимальное количество буферов, используемых поставщиком событий при публикации событий в журнале событий.</summary>
      <returns>Возвращает целое значение, представляющее минимальное количество буферов, используемых поставщиком событий при публикации событий в журнале событий. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames">
      <summary>Получает перечисляемую коллекцию имен всех поставщиков событий, которые могут публиковать события в данном журнале событий.</summary>
      <returns>Возвращает перечисляемую коллекцию строк, содержащих имена поставщиков событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges">
      <summary>Сохраняет параметры конфигурации </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor">
      <summary>Получает или задает дескриптор безопасности журнала событий. Дескриптор безопасности определяет пользователей и группы, которые могут считывать и производить запись в журнал событий.</summary>
      <returns>Возвращает строку, содержащую дескриптор безопасности журнала событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogException">
      <summary>Представляет базовый класс для всех исключений, вызываемых при происхождении ошибки в ходе считывании информации, связанной с журналом событий. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> с кодом ошибки для исключения.</summary>
      <param name="errorCode">Код ошибки для ошибки, произошедшей при считывании или конфигурировании информации, связанной с журналом событий. Дополнительная информация и список кодов ошибок, связанных с журналом событий, приведены по адресу http://go.microsoft.com/fwlink/?LinkId=82629.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> с сериализованными данными.</summary>
      <param name="serializationInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта о выдаваемом исключении.</param>
      <param name="streamingContext">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> путем указания сообщения об ошибке, описывающего текущее исключение.</summary>
      <param name="message">Сообщение об ошибке, описывающее текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" />, используя указанное сообщение об ошибке и внутреннее исключение.</summary>
      <param name="message">Сообщение об ошибке, описывающее текущее исключение.</param>
      <param name="innerException">Экземпляр класса Exception, вызвавший текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает в объекте SerializationInfo информацию об исключении.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта о выдаваемом исключении.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogException.Message">
      <summary>Получает сообщение об ошибке, описывающее текущее исключение.</summary>
      <returns>Возвращает строку, содержащую сообщение об ошибке с описанием текущего исключения.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <summary>Позволяет осуществлять доступ к свойствам времени выполнения активных журналов событий и файлов журналов событий. Эти свойства включают количество событий в журнале, размер журнала, значение, определяющее заполнение журнала и время последнего доступа к журналу или произведения в нем записи.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes">
      <summary>Получает атрибуты файла журнала, связанные с журналом.</summary>
      <returns>Возвращает целое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime">
      <summary>Получает данные времени создания файла журнала, связанного с журналом событий.</summary>
      <returns>Возвращает объект <see cref="T:System.DateTime" />. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize">
      <summary>Получает размер файла (в байтах), связанного с журналом событий.</summary>
      <returns>Возвращает длинное значение.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull">
      <summary>Получает логическое значение, определяющее, достиг ли размер файла журнала максимального допустимого размера (журнал заполнен).</summary>
      <returns>Возвращает значение true, если журнал заполнен; возвращает значениеfalse, если журнал не заполнен.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime">
      <summary>Получает данные времени последнего доступа к файлу журнала, связанного с журналом событий.</summary>
      <returns>Возвращает объект <see cref="T:System.DateTime" />. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime">
      <summary>Получает данные времени последней записи данных в файл журнала, связанного с журналом событий.</summary>
      <returns>Возвращает объект <see cref="T:System.DateTime" />. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber">
      <summary>Получает число наиболее старых записей в журнале событий.</summary>
      <returns>Возвращает длинное значение, представляющее количество наиболее старых записей событий в журнале событий. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount">
      <summary>Получает число наиболее записей событий в журнале событий.</summary>
      <returns>Возвращает длинное значение, представляющее количество записей событий в журнале событий. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <summary>Представляет исключение, вызываемое при публикации поставщиком данных недопустимых данных в событии.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> с сериализованными данными.</summary>
      <param name="serializationInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта о выдаваемом исключении.</param>
      <param name="streamingContext">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> путем указания сообщения об ошибке, описывающего текущее исключение.</summary>
      <param name="message">Сообщение об ошибке, описывающее текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" />, используя указанное сообщение об ошибке и внутреннее исключение.</summary>
      <param name="message">Сообщение об ошибке, описывающее текущее исключение.</param>
      <param name="innerException">Экземпляр класса Exception, вызвавший текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogIsolation">
      <summary>Определяет права доступа по умолчанию для журнала событий. Значение приложения и системы указывают, что журнал использует список управления доступом (ACL) совместно с соответствующим журналом Windows (журнал событий приложения или системы), а также совместно использует сеанс трассировки событий Windows (ETW) с другими журналами одной изоляции. Все каналы с пользовательской изоляцией используют закрытый сеанс ETW.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application">
      <summary>Журнал совместно использует список управления доступом с журналом событий приложения; журнал совместно использует сеанс ETW с другими журналами, имеющими изоляцию приложения.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System">
      <summary>Журнал событий совместно использует список управления доступом с журналом событий системы; журнал событий использует совместный доступ к сеансу ETW с другими журналами, имеющими системную изоляцию.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom">
      <summary>Журнал событий является пользовательским журналом событий, использующим собственный закрытый сеанс ETW.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <summary>Представляет связь между поставщиком событий и журналом событий, в котором поставщик публикует данные событий. Этот объект не может быть использован для создания объектов.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName">
      <summary>Получает локализованное имя журнала событий.</summary>
      <returns>Возвращает строку, содержащую локализованное имя журнала событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported">
      <summary>Получает логическое значение, определяющее, импортируется ли журнал событий вопреки параметрам, определенным в поставщике событий. Импортированный журнал событий определяется в другом поставщике.</summary>
      <returns>Возвращает значение true, если журнал событий импортируется поставщиком событий; возвращает значение false, если журнал событий не импортируется поставщиком событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName">
      <summary>Получает нелокализованное имя журнала событий, связанного с данным объектом.</summary>
      <returns>Возвращает строку, содержащую нелокализованное имя журнала событий, связанного с данным объектом.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogMode">
      <summary>Определяет поведение при обработке службой журнала событий журнала событий при достижении максимального размера (при заполнении журнала событий).</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular">
      <summary>Новый события сохраняются при заполнении журнала. Каждое новое входящее событие заменяет в журнале более старое событие.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup">
      <summary>Выполните архивирование журнала при его заполнении. Не следует производить регистрацию событий поверх событий, зарегистрированных ранее. При необходимости журнал архивируется автоматически. Событий не перезаписываются. </summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain">
      <summary>Не следует перезаписывать события. Очистку журнала предпочтительно выполнять вручную.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <summary>Представляет исключение, вызываемое в случае, если запрошенный журнал событий (как правило, указывается имя журнала событий или путь к файлу журнала событий) не существует.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> с сериализованными данными.</summary>
      <param name="serializationInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта о выдаваемом исключении.</param>
      <param name="streamingContext">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> путем указания сообщения об ошибке, описывающего текущее исключение.</summary>
      <param name="message">Сообщение об ошибке, описывающее текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" />, используя указанное сообщение об ошибке и внутреннее исключение.</summary>
      <param name="message">Сообщение об ошибке, описывающее текущее исключение.</param>
      <param name="innerException">Экземпляр класса Exception, вызвавший текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <summary>Содержит массив строк, представляющих запросы XPath для элементов в представлении XML события на основе Event Schema. Запросы в данном объекте используются для извлечения значений из события.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" />.</summary>
      <param name="propertyQueries">Запросы XPath, используемые для извлечения значений из представления XML события.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <summary>Освобождает все ресурсы, используемые этим объектом.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые этим объектом. Кроме того, возможно освобождение управляемых ресурсов.</summary>
      <param name="disposing">
                Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <summary>Представляет исключение, которое вызывается, когда определенное имя поставщика событий ссылается на отключенного поставщика событий. Отключенный поставщик событий не может публиковать события.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> с сериализованными данными.</summary>
      <param name="serializationInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта о выдаваемом исключении.</param>
      <param name="streamingContext">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> путем указания сообщения об ошибке, описывающего текущее исключение.</summary>
      <param name="message">Сообщение об ошибке, описывающее текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" />, используя указанное сообщение об ошибке и внутреннее исключение.</summary>
      <param name="message">Сообщение об ошибке, описывающее текущее исключение.</param>
      <param name="innerException">Экземпляр класса Exception, вызвавший текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <summary>Представляет запрос для событий в журнале событий и параметры, определяющие метод выполнения запроса и компьютер, на котором запрос будет выполнен.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />, указывая цель запроса. Цель может быть активным журналом событий или файлом журнала.</summary>
      <param name="path">Имя запрашиваемого журнала событий или путь к запрашиваемому файлу журнала событий.</param>
      <param name="pathType">Указывает, что определяет строка в параметре path: имя журнала события или путь к файлу журнала события.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />, указывая цель запроса и запрос события. Цель может быть активным журналом событий или файлом журнала.</summary>
      <param name="path">Имя запрашиваемого журнала событий или путь к запрашиваемому файлу журнала событий.</param>
      <param name="pathType">Указывает, что определяет строка в параметре path: имя журнала события или путь к файлу журнала события.</param>
      <param name="query">Запрос события, используемый для извлечения события, соответствующих условию запроса.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection">
      <summary>Получает или задает логическое значение, определяющее, следует ли считывать события в журнале, начиная с новейшего события до наиболее старого события.</summary>
      <returns>Возвращает значение true, если события в журнале считываются, начиная с новейшего события до наиболее старого события; возвращает значение false, если события в журнале считываются, начиная с наиболее старого события до новейшего события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session">
      <summary>Получает или задает сеанс, осуществляющий доступ к службе журнала событий на локальном или удаленном компьютере. Данный объект может быть настроен для осуществления доступа к удаленному журналу событий путем создания объекта <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> или объекта <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> с данным объектом <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />.</summary>
      <returns>Возвращает объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors">
      <summary>Получает или задает логическое значение, определяющее, будет ли данный запрос продолжать извлечение событий при наличии в запросе ошибки.</summary>
      <returns>
            Значение true указывает, что запрос будет продолжать извлекать события даже при ошибке запроса на некоторых журналах; значение false указывает, что запрос остановит извлечение событий при ошибке запроса.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <summary>Позволяет считывать события из журнала событий в соответствии с запросом события. События, считываемые данным объектом, возвращаются в качестве объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />, указывая запрос события.</summary>
      <param name="eventQuery">Запрос события, используемый для извлечения событий.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />, указывая запрос события и закладку, используемую в качестве начальной позиции для запроса.</summary>
      <param name="eventQuery">Запрос события, используемый для извлечения событий.</param>
      <param name="bookmark">Закладка (местозаполнитель), используемая в качестве начальной позиции в журнале событий или потоке событий. По запросу будут возвращены только события, зарегистрированные после события закладки.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />, указывая активный журнал событий, из которого следует извлечь события.</summary>
      <param name="path">Имя журнала событий, из которого следует извлечь события.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />, указывая имя журнала событий, из которого следует извлечь события, или путь к файлу журнала, из которого следует извлечь события.</summary>
      <param name="path">Имя журнала событий, из которого следует извлечь события или путь к файлу журнала событий, из которого следует извлечь события.</param>
      <param name="pathType">Указывает, что определяет строка в параметре path: имя журнала события или путь к файлу журнала события.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize">
      <summary>Получает или задает количество событий, извлекаемых из потока событий при каждой операции считывания.</summary>
      <returns>Возвращает целое значение.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading">
      <summary>Отменяет текущую операцию запроса.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <summary>Освобождает все ресурсы, используемые этим объектом.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые этим объектом. Кроме того, возможно освобождение управляемых ресурсов.</summary>
      <param name="disposing">
                Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus">
      <summary>Получает состояние каждого журнала событий или файла журнала событий, связанного с запросом события в данном объекте.</summary>
      <returns>Возвращает список объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventLogStatus" />, каждый из которых содержит информацию состояния журнала событий, связанного с запросом события в данном объекте.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <summary>Считывает следующее событие, возвращенное из запроса события в данном объекте.</summary>
      <returns>Возвращает объект <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)">
      <summary>Считывает следующее событие, возвращенное из запроса события в данном объекте.</summary>
      <returns>Возвращает объект <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</returns>
      <param name="timeout">Максимальное время выполнения операции чтения до отмены операции.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Путем указания события закладки изменяет позицию в потоке событий, из которого поступит следующее считываемое событие. События, зарегистрированные до события закладки, извлечены не будут.</summary>
      <param name="bookmark">Закладка (местозаполнитель), используемая в качестве начальной позиции в журнале событий или потоке событий. По запросу будут возвращены только события, зарегистрированные после события закладки.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <summary>Путем указания события закладки и числа смещения событий из закладки изменяет позицию в потоке событий, из которого поступит следующее считываемое событие. События, зарегистрированные до события закладки с учетом смещения, извлечены не будут.</summary>
      <param name="bookmark">Закладка (местозаполнитель), используемая в качестве начальной позиции в журнале событий или потоке событий. По запросу будут возвращены только события, зарегистрированные после события закладки.</param>
      <param name="offset">Число смещения событий для изменения позиции закладки.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)">
      <summary>Путем указания начальной позиции и смещения от начальной позиции изменяет позицию в потоке событий, из которого поступит следующее считываемое событие. События, зарегистрированные до начальной позиции с учетом смещения, извлечены не будут.</summary>
      <param name="origin">Значение из перечисления <see cref="T:System.IO.SeekOrigin" /> определяет начальную позицию запроса событий в потоке событий.</param>
      <param name="offset">Число смещения событий для добавления к началу координат.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <summary>Представляет исключение, происходящее при возникновении ошибки в процессе чтения, запроса или подписки на события в журнале событий. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> с сериализованными данными.</summary>
      <param name="serializationInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта о выдаваемом исключении.</param>
      <param name="streamingContext">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> путем указания сообщения об ошибке, описывающего текущее исключение.</summary>
      <param name="message">Сообщение об ошибке, описывающее текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" />, используя указанное сообщение об ошибке и внутреннее исключение.</summary>
      <param name="message">Сообщение об ошибке, описывающее текущее исключение.</param>
      <param name="innerException">Экземпляр класса Exception, вызвавший текущее исключение.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <summary>Содержит свойства экземпляра событий для события, принятого от объекта <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />. Свойства события предоставляют информацию о событии (например, имя компьютера, на котором было зарегистрировано событие и время создания события).</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId">
      <summary>Получает глобальный уникальный идентификатор (GUID) для обрабатываемого действия, для которого задействуется событие. Это позволит потребителям группировать связанные действия.</summary>
      <returns>Возвращает значение GUID.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark">
      <summary>Получает местозаполнитель (закладку), соответствующий данному событию. Может использоваться в качестве местозаполнителя в потоке событий.</summary>
      <returns>Возвращает объект <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog">
      <summary>Получает имя журнала событий или файла журнала событий, в котором хранится событие.</summary>
      <returns>Возвращает строку, содержащую имя журнала событий или файла журнала событий, в котором хранится событие.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые этим объектом. Кроме того, возможно освобождение управляемых ресурсов.</summary>
      <param name="disposing">
                Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <summary>Получает сообщение события в текущем языковом стандарте.</summary>
      <returns>Возвращает строку, содержащую сообщение события в текущем языковом стандарте.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>Получает сообщение события, замещая переменные в сообщении заданными значениями.</summary>
      <returns>Возвращает строку, содержащую сообщение события в текущем языковом стандарте.</returns>
      <param name="values">Значения, используемые для замещения переменных в сообщении события. Переменные представлены в виде %n, где n является числом.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
      <summary>Получает перечисление значений свойств определяемых пользователем событий или результаты данных на основе XPath, если событие имеет представление XML.</summary>
      <returns>Возвращает список объектов.</returns>
      <param name="propertySelector">Выбирает возвращаемые значения свойств.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id">
      <summary>Получает идентификатор для данного события. Все события с данным идентификатором представляют один тип событий.</summary>
      <returns>Возвращает целое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords">
      <summary>Получает маску ключевого слова события. Получает значение свойства <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" /> для получения имени ключевых слов, используемых в данной маске.</summary>
      <returns>Возвращает длинное значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames">
      <summary>Получает отображаемые имена ключевых слов, используемых в маске ключевых слов для данного события.</summary>
      <returns>Возвращает перечисляемую коллекцию строк, содержащих отображаемые имена ключевых слов, используемых в маске ключевых слов для данного события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level">
      <summary>Получает уровень события. Данный уровень указывает серьезность события. Для имени уровня следует получить значение свойства <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" />.</summary>
      <returns>Возвращает значение байта. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName">
      <summary>Получает отображаемое имя уровня для данного события.</summary>
      <returns>Возвращает строку, содержащую отображаемое имя уровня для данного события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName">
      <summary>Получает имя журнала события, в котором регистрируется данное событие.</summary>
      <returns>Возвращает строку, содержащую имя журнала, содержащего данное событие.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName">
      <summary>Получает имя компьютера, на котором данное событие было зарегистрировано в журнале.</summary>
      <returns>Получает строку, содержащую имя компьютера, на котором данное событие было зарегистрировано.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds">
      <summary>Получает список идентификаторов запроса, которым соответствует данное событие. Данное событие соответствует запросу при возвращении запросом данного события.</summary>
      <returns>Возвращает перечисляемую коллекцию целых значений.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode">
      <summary>Получает код операция события. Код операций определяет числовое значение, идентифицирующее действие или пункт действия, который выполнялся приложением при вызове события. Для имени кода операций следует получить значение свойства <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" />.</summary>
      <returns>Возвращает короткое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName">
      <summary>Получает отображаемое имя кода операций для данного события.</summary>
      <returns>Возвращает строку, содержащую отображаемое имя кода операций для данного события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId">
      <summary>Получает идентификатор процесса для поставщика событий, зарегистрировавшего данное событие.</summary>
      <returns>Возвращает целое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties">
      <summary>Получает определяемые пользователем свойства события.</summary>
      <returns>Возвращает список объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId">
      <summary>Получает глобальный уникальный идентификатор (GUID) поставщика событий, опубликовавшего данное событие.</summary>
      <returns>Возвращает значение GUID. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName">
      <summary>Получает имя поставщика событий, опубликовавшего данное событие.</summary>
      <returns>Возвращает строку, содержащую имя поставщика событий, опубликовавшего данное событие.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers">
      <summary>Получает номера квалификаторов, используемых для идентификации события.</summary>
      <returns>Возвращает целое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId">
      <summary>Получает идентификатор записи события в журнале.</summary>
      <returns>Возвращает длинное значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId">
      <summary>Получает глобальный уникальный идентификатор (GUID) для связанного действия в процессе, для которого задействуется событие.</summary>
      <returns>Возвращает значение GUID. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task">
      <summary>Получает идентификатор задачи для части приложения или компонента, публикующего событие. Задача является 16-разрядным значением, 16 верхних значений зарезервированы. Данный тип позволяет использовать любое значение между 0x0000 и 0xffef. Для имени задачи следует получить значение свойства <see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" />.</summary>
      <returns>Возвращает целое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName">
      <summary>Получает отображаемое имя задачи для данного события.</summary>
      <returns>Возвращает строку, содержащую отображаемое имя задачи для события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId">
      <summary>Получает идентификатор потока для потока, в котором действует поставщик событий.</summary>
      <returns>Возвращает целое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated">
      <summary>Получает время создания события в формате <see cref="T:System.DateTime" />.</summary>
      <returns>Возвращает значение <see cref="T:System.DateTime" />. Может иметь значение NULL.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml">
      <summary>Получает представление XML события. Все свойства события представлены в XML события. XML соответствует схеме событий.</summary>
      <returns>Возвращает строку, содержащую представление XML события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId">
      <summary>Получает дескриптор безопасности пользователя, контекст которого используется для публикации события.</summary>
      <returns>Возвращает значение <see cref="T:System.Security.Principal.SecurityIdentifier" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version">
      <summary>Получает номер версии для события.</summary>
      <returns>Возвращает значение байта. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <summary>Используется для доступа к службе журнала событий на локальном компьютере или удаленном компьютере, что обеспечивает возможность управления и сбора информации о журналах событий и поставщиках событий на компьютере.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />, устанавливает соединение с локальной службой журнала событий.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)">
      <summary>Инициализирует новый объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />, устанавливает соединение со службой журнала событий на указанном компьютере. Учетные данные (имя пользователя и пароль) пользователя, вызывающего данный метод, используются в качестве учетных данных для доступа к удаленному компьютеру.</summary>
      <param name="server">Имя компьютера, на котором необходимо выполнить подключение к службе журнала событий.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
      <summary>Инициализирует новый объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />, устанавливает соединение со службой журнала событий на указанном компьютере. Указанные учетные данные (имя пользователя и пароль) используются в качестве учетных данных для доступа к удаленному компьютеру.</summary>
      <param name="server">Имя компьютера, на котором необходимо выполнить подключение к службе журнала событий.</param>
      <param name="domain">Домен указанного пользователя.</param>
      <param name="user">Имя пользователя, используемое для подключения к удаленному компьютеру.</param>
      <param name="password">Пароль, используемый для подключения к удаленному компьютеру.</param>
      <param name="logOnType">Тип соединения, используемый для подключения к удаленному компьютеру.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations">
      <summary>Отменяет любые операции (например, чтение журнала событий или подписка на журнал событий), активные в настоящий период времени для службы журнала событий, к которой подключен данный объект.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)">
      <summary>Удаляет события из указанного журнала событий.</summary>
      <param name="logName">Имя журнала событий, из которого необходимо удалить все события.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)">
      <summary>Удаляет события из указанного журнала событий и сохраняет удаленные события в указанном файле.</summary>
      <param name="logName">Имя журнала событий, из которого необходимо удалить все события.</param>
      <param name="backupPath">Путь к файлу, в котором будут сохранены удаленные события. Файл должен иметь расширение .evtx.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <summary>Освобождает все ресурсы, используемые этим объектом.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые этим объектом. Кроме того, возможно освобождение управляемых ресурсов.</summary>
      <param name="disposing">
                Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>Экспортирует события во внешний журнал событий. События хранятся без сообщений о событиях.</summary>
      <param name="path">Имя журнала событий, из которого следует произвести экспорт событий или путь к файлу журнала событий, из которого следует произвести экспорт событий.</param>
      <param name="pathType">Указывает, что определяет строка в параметре path: имя журнала события или путь к файлу журнала события.</param>
      <param name="query">Запрос, используемый для выбора экспортируемых событий.  Будут экспортированы только события, возвращенные по запросу.</param>
      <param name="targetFilePath">Путь к файлу журнала (с расширением .evtx), в котором экспортированные события будут храниться после выполнения данного метода.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)">
      <summary>Экспортирует события во внешний журнал событий. Для того, чтобы экспортирование событий не прекращалось даже в случае сбоя определенных запросов при обработке некоторых журналов, можно установить соответствующий флаг. События хранятся без сообщений о событиях.</summary>
      <param name="path">Имя журнала событий, из которого следует произвести экспорт событий или путь к файлу журнала событий, из которого следует произвести экспорт событий.</param>
      <param name="pathType">Указывает, что определяет строка в параметре path: имя журнала события или путь к файлу журнала события.</param>
      <param name="query">Запрос, используемый для выбора экспортируемых событий. Будут экспортированы только события, возвращенные по запросу.</param>
      <param name="targetFilePath">Путь к файлу журнала (с расширением .evtx), в котором экспортированные события будут храниться после выполнения данного метода.</param>
      <param name="tolerateQueryErrors">
                Значение true указывает, что метод продолжит экспортирование событий даже в случае сбоя при обработке определенных журналов; значение false указывает, что метод остановит экспортирование событий в случае сбоя определенного запроса.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>Экспортирует события и их сообщения в файл внешнего журнала.</summary>
      <param name="path">Имя журнала событий, из которого следует произвести экспорт событий или путь к файлу журнала событий, из которого следует произвести экспорт событий.</param>
      <param name="pathType">Указывает, что определяет строка в параметре path: имя журнала события или путь к файлу журнала события.</param>
      <param name="query">Запрос, используемый для выбора экспортируемых событий.  Будут экспортированы только события, возвращенные по запросу.</param>
      <param name="targetFilePath">Путь к файлу журнала (с расширением .evtx), в котором экспортированные события будут храниться после выполнения данного метода.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>Экспортирует события и их сообщения в файл внешнего журнала. Для того, чтобы экспортирование событий не прекращалось даже в случае сбоя определенных запросов при обработке некоторых журналов, можно установить соответствующий флаг. Сообщения событий экспортируются с использованием заданного языка.</summary>
      <param name="path">Имя журнала событий, из которого следует произвести экспорт событий или путь к файлу журнала событий, из которого следует произвести экспорт событий.</param>
      <param name="pathType">Указывает, что определяет строка в параметре path: имя журнала события или путь к файлу журнала события.</param>
      <param name="query">Запрос, используемый для выбора экспортируемых событий.  Будут экспортированы только события, возвращенные по запросу.</param>
      <param name="targetFilePath">Путь к файлу журнала (с расширением .evtx), в котором экспортированные события будут храниться после выполнения данного метода.</param>
      <param name="tolerateQueryErrors">
                Значение true указывает, что метод продолжит экспортирование событий даже в случае сбоя при обработке определенных журналов; значение false указывает, что метод остановит экспортирование событий в случае сбоя определенного запроса.</param>
      <param name="targetCultureInfo">Язык и региональные параметры, определяющие язык, который будет использоваться при экспортировании сообщений событий.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>Получает объект, содержащий информацию выполнения для указанного журнала событий.</summary>
      <returns>Возвращает объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInformation" />, содержащий информацию об указанном журнале.</returns>
      <param name="logName">Имя журнала событий, о котором следует получить информацию или путь к файлу журнала событий, о котором следует получить информацию.</param>
      <param name="pathType">Указывает, что определяет строка в параметре path: имя журнала события или путь к файлу журнала события.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames">
      <summary>Получает перечисляемую коллекцию всех имен журналов событий, зарегистрированных службой журнала событий.</summary>
      <returns>Возвращает перечисляемую коллекцию строк, содержащих имена журналов событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames">
      <summary>Получает перечисляемую коллекцию всех имен поставщиков событий, зарегистрированных службой журнала событий. Поставщик событий является приложением, публикующим события в журнале событий.</summary>
      <returns>Возвращает перечисляемую коллекцию строк, содержащих имена поставщиков событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession">
      <summary>Получает статический предопределенный объект сеанса, подключаемый к службе журнала событий на локальном компьютере.</summary>
      <returns>Возвращает <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> статический предопределенный объект сеанса, подключаемый к службе журнала событий на локальном компьютере.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <summary>Содержит код состояния или код ошибки для определенного журнала событий. Данное состояние может использоваться для определения доступности журнала событий для операций.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName">
      <summary>Получает имя журнала событий, для которого производится получение кода состояния.</summary>
      <returns>Возвращает строку, содержащую имя журнала событий, для которого производится получение кода состояния.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode">
      <summary>Получает код состояния или код ошибки для определенного журнала событий. Данное состояние или ошибка являются результатом операции подписки или чтения журнала событий.</summary>
      <returns>Возвращает целое значение.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogType">
      <summary>Определяет тип событий, регистрируемых в журнале событий. Каждый журнал может содержать только один тип события.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative">
      <summary>Эти события предназначены, в основном, для конечных пользователей, администраторов и службы поддержки. События в журналах административного типа указывают на неполадку с явно определенным решением, которую может устранить администратор. Примером административного события может служить событие, происходящее при отказе приложения подключиться к принтеру. </summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational">
      <summary>События в журнале событий операционного типа используются для анализа и диагностики проблемы или происхождения события. Они могут использоваться для запуска инструментальных средств или задач, исходя из проблемы или происхождения события. Примером события операционного типа может служить событие, происходящее при добавлении или удалении принтера из системы.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical">
      <summary>События в журнале аналитических событий публикуются в больших объемах. Они описывают функционирование программы и указывают проблемы, которые не могут быть устранены вмешательством пользователя.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug">
      <summary>События в журнале событий отладочного типа используются только разработчиками для диагностики проблемы при отладке.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <summary>Позволяет подписаться на входящие события. Каждый раз при публикации требуемого события в журнале событий вызывается событие <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> и выполняется метод, обрабатывающий данное событие. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />, указывая запрос события.</summary>
      <param name="eventQuery">Указывает запрос для подписки на событие. Событие <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> вызывается при регистрации события, соответствующего критериям, выраженным в запросе. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />, указывая запрос события и закладку, используемую в качестве начальной позиции для запроса.</summary>
      <param name="eventQuery">Указывает запрос для подписки на событие. Событие <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> вызывается при регистрации события, соответствующего критериям, выраженным в запросе.</param>
      <param name="bookmark">Закладка (местозаполнитель), используемая в качестве начальной позиции в журнале событий или потоке событий. По запросу будут возвращены только события, зарегистрированные после события закладки.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />, указывая запрос события, закладку, используемую в качестве начальной позиции для запроса и логическое значение, определяющее, следует ли считывать события, уже зарегистрированные в журнале событий.</summary>
      <param name="eventQuery">Указывает запрос для подписки на событие. Событие <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> вызывается при регистрации события, соответствующего критериям, выраженным в запросе.</param>
      <param name="bookmark">Закладка (местозаполнитель), используемая в качестве начальной позиции в журнале событий или потоке событий. По запросу будут возвращены только события, зарегистрированные после события закладки.</param>
      <param name="readExistingEvents">Логическое значение, определяющее, следует ли считывать события, уже зарегистрированные в журнале событий. Если значение равно true, зарегистрированные события буду считываться; если значение равно false, зарегистрированные события считываться не будут.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />, указывая имя или путь к журналу событий.</summary>
      <param name="path">Маршрут или имя монитора журнала событий. Если событие зарегистрировано в данном журнале событий, вызывается событие <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <summary>Освобождает все ресурсы, используемые этим объектом.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые этим объектом. Кроме того, возможно освобождение управляемых ресурсов.</summary>
      <param name="disposing">
                Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled">
      <summary>Определяет, следует ли данному объекту начать доставку событий делегату событий.</summary>
      <returns>Возвращает значение true, если данный объект может начать доставку событий делегату событий; возвращает значение false, если данный объект остановил доставку.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten">
      <summary>Позволяет задать делегат (метод обработчика событий), который вызывается каждый раз при публикации события, соответствующего критериям, указанным в запросе события для данного объекта. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <summary>Содержит метаданные (свойства и параметры) для события, определенного в поставщике событий. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description">
      <summary>Получает шаблон описания, связанный с событием, использующим язык текущего потока для языка описания.</summary>
      <returns>Возвращает строку, содержащую шаблон описания, связанный с событием.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id">
      <summary>Получает идентификатор события, определенный в поставщике событий.</summary>
      <returns>Возвращает значение long, являющееся идентификатором события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords">
      <summary>Получает ключевое слово, связанное с событием, определенным в поставщике событий.</summary>
      <returns>Возвращает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level">
      <summary>Получает уровень, связанный с событием, определенным в поставщике событий. Уровень определяет серьезность события.</summary>
      <returns>Возвращает объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink">
      <summary>Получает ссылку на журнал событий, принимающий событие при публикации поставщиком данного события.</summary>
      <returns>Возвращает объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode">
      <summary>Получает код операций, связанный с данным событием, определенным поставщиком событий. Код операций определяет числовое значение, идентифицирующее действие или пункт действия, который выполнялся приложением при вызове события.</summary>
      <returns>Возвращает объект <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task">
      <summary>Получает задачу, связанную с событием. Задача, идентифицирующая часть приложения или компонента, публикующего событие. </summary>
      <returns>Возвращает объект <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template">
      <summary>Получает шаблонную строку для события. Шаблоны используются для описания данных, используемых поставщиком при публикации события. Шаблоны опционально указывают XML, предоставляющий структуру события. XML позволяет выполнять подстановку значений, предоставляемых издателем событий, в процессе отрисовки события.</summary>
      <returns>Возвращает строку, содержащую шаблон для события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version">
      <summary>Получает версию события, квалифицирующую идентификатор события.</summary>
      <returns>Возвращает значение байта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <summary>Содержит код операций события, определенный в поставщике событий. Код операций определяет числовое значение, идентифицирующее действие или пункт действия, который выполнялся приложением при вызове события.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName">
      <summary>Получает локализованное имя для кода операций событий.</summary>
      <returns>Возвращает строку, содержащую локализованное имя кода операций события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name">
      <summary>Получает нелокализованное имя для кода операций событий.</summary>
      <returns>Возвращает строку, содержащую нелокализованное имя кода операций события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value">
      <summary>Получает числовое значение, связанное с кодом операций события.</summary>
      <returns>Возвращает целое значение.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventProperty">
      <summary>Содержит значение свойства события, указанное поставщиком событий при публикации события.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventProperty.Value">
      <summary>Получает значение свойства события, указанное поставщиком событий при публикации события.</summary>
      <returns>Возвращает объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecord">
      <summary>Определяет свойства экземпляра событий для события, принятого от объекта <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" />. Свойства события предоставляют информацию о событии (например, имя компьютера, на котором было зарегистрировано событие и время создания события). Этот класс является абстрактным классом. Класс <see cref="T:System.Diagnostics.Eventing.Reader.EventLogRecord" /> реализует данный класс.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
      <summary>Получает глобальный уникальный идентификатор (GUID) для обрабатываемого действия, для которого задействуется событие. Это позволит потребителям группировать связанные действия.</summary>
      <returns>Возвращает значение GUID.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
      <summary>Получает местозаполнитель (закладку), соответствующий данному событию. Может использоваться в качестве местозаполнителя в потоке событий.</summary>
      <returns>Возвращает объект <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <summary>Освобождает все ресурсы, используемые этим объектом.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые этим объектом. Кроме того, возможно освобождение управляемых ресурсов.</summary>
      <param name="disposing">
                Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <summary>Получает сообщение события в текущем языковом стандарте.</summary>
      <returns>Возвращает строку, содержащую сообщение события в текущем языковом стандарте.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>Получает сообщение события, замещая переменные в сообщении заданными значениями.</summary>
      <returns>Возвращает строку, содержащую сообщение события в текущем языковом стандарте.</returns>
      <param name="values">Значения, используемые для замещения переменных в сообщении события. Переменные представлены в виде %n, где n является числом.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
      <summary>Получает идентификатор для данного события. Все события с данным идентификатором представляют один тип событий.</summary>
      <returns>Возвращает целое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
      <summary>Получает маску ключевого слова события. Получает значение свойства <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" /> для получения имени ключевых слов, используемых в данной маске.</summary>
      <returns>Возвращает длинное значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
      <summary>Получает отображаемые имена ключевых слов, используемых в маске ключевых слов для данного события. </summary>
      <returns>Возвращает перечисляемую коллекцию строк, содержащих отображаемые имена ключевых слов, используемых в маске ключевых слов для данного события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
      <summary>Получает уровень события. Данный уровень указывает серьезность события. Для имени уровня следует получить значение свойства <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" />.</summary>
      <returns>Возвращает значение байта. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
      <summary>Получает отображаемое имя уровня для данного события.</summary>
      <returns>Возвращает строку, содержащую отображаемое имя уровня для данного события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
      <summary>Получает имя журнала события, в котором регистрируется данное событие.</summary>
      <returns>Возвращает строку, содержащую имя журнала, содержащего данное событие.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
      <summary>Получает имя компьютера, на котором данное событие было зарегистрировано в журнале.</summary>
      <returns>Получает строку, содержащую имя компьютера, на котором данное событие было зарегистрировано.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
      <summary>Получает код операция события. Код операций определяет числовое значение, идентифицирующее действие или пункт действия, который выполнялся приложением при вызове события. Для имени кода операций следует получить значение свойства <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" />.</summary>
      <returns>Возвращает короткое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
      <summary>Получает отображаемое имя кода операций для данного события.</summary>
      <returns>Возвращает строку, содержащую отображаемое имя кода операций для данного события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
      <summary>Получает идентификатор процесса для поставщика событий, зарегистрировавшего данное событие.</summary>
      <returns>Возвращает целое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
      <summary>Получает определяемые пользователем свойства события.</summary>
      <returns>Возвращает список объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
      <summary>Получает глобальный уникальный идентификатор (GUID) поставщика событий, опубликовавшего данное событие.</summary>
      <returns>Возвращает значение GUID. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
      <summary>Получает имя поставщика событий, опубликовавшего данное событие.</summary>
      <returns>Возвращает строку, содержащую имя поставщика событий, опубликовавшего данное событие.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
      <summary>Получает номера квалификаторов, используемых для идентификации события.</summary>
      <returns>Возвращает целое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
      <summary>Получает идентификатор записи события в журнале.</summary>
      <returns>Возвращает длинное значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
      <summary>Получает глобальный уникальный идентификатор (GUID) для связанного действия в процессе, для которого задействуется событие.</summary>
      <returns>Возвращает значение GUID. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
      <summary>Получает идентификатор задачи для части приложения или компонента, публикующего событие. Задача является 16-разрядным значением, 16 верхних значений зарезервированы. Данный тип позволяет использовать любое значение между 0x0000 и 0xffef. Для получения имени задачи следует получить значение свойства <see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" />.</summary>
      <returns>Возвращает целое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
      <summary>Получает отображаемое имя задачи для данного события.</summary>
      <returns>Возвращает строку, содержащую отображаемое имя задачи для события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
      <summary>Получает идентификатор потока для потока, в котором действует поставщик событий.</summary>
      <returns>Возвращает целое значение. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
      <summary>Получает время создания события в формате <see cref="T:System.DateTime" />.</summary>
      <returns>Возвращает значение <see cref="T:System.DateTime" />. Может иметь значение NULL.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
      <summary>Получает представление XML события. Все свойства события представлены в XML события. XML соответствует схеме событий.</summary>
      <returns>Возвращает строку, содержащую представление XML события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
      <summary>Получает дескриптор безопасности пользователя, контекст которого используется для публикации события.</summary>
      <returns>Возвращает значение <see cref="T:System.Security.Principal.SecurityIdentifier" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
      <summary>Получает номер версии для события.</summary>
      <returns>Возвращает значение байта. Это значение может быть равно null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <summary>При вызове события <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> экземпляр данного объекта передается методу делегата, обрабатывающему событие. Данный объект содержит событие, опубликованное в журнале событий или исключение, произошедшее при сбое подписки на событие. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException">
      <summary>Получает исключение, произошедшее при сбое подписки на событие. Исключение имеет описание причин сбоя подписки.</summary>
      <returns>Возвращает объект <see cref="T:System.Exception" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord">
      <summary>Получает запись события, опубликованную в журнале событий. Данное событие соответствует критериям запроса, указанного в подписке на событие.</summary>
      <returns>Возвращает объект <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventTask">
      <summary>Содержит задачу события, определенную в поставщике событий. Задача идентифицирует часть приложения или компонента, публикующего событие. Задача является 16-разрядным значением, 16 верхних значений зарезервированы.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName">
      <summary>Получает локализованное имя для задачи события.</summary>
      <returns>Возвращает строку, содержащую локализованное имя для задачи события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid">
      <summary>Получает глобальный уникальный ИД (GUID), связанный с задачей. </summary>
      <returns>Возвращает значение GUID.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Name">
      <summary>Получает нелокализованное имя задачи события.</summary>
      <returns>Возвращает строку, содержащую нелокализованное имя задачи события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Value">
      <summary>Получает цифровое значение, связанное с задачей.</summary>
      <returns>Возвращает целое значение.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.PathType">
      <summary>Указывает, что строка содержит: имя журнала события или путь к файлу журнала события.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.LogName">
      <summary>Параметр пути содержит имя журнала события.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.FilePath">
      <summary>Параметр пути содержит путь к файлу журнала события.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <summary>Содержит статическую информацию о поставщике событий (например, имя и ИД поставщика), а также коллекцию событий, определенных в поставщике.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />, указывая имя поставщика, о котором требуется извлечь информацию.</summary>
      <param name="providerName">Имя поставщика событий, о котором требуется извлечь информацию.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" />, указывая имя поставщика, о котором требуется извлечь информацию, службу журнала событий, с которой зарегистрирован поставщик, и язык, с использованием которого необходимо возвратить информацию.</summary>
      <param name="providerName">Имя поставщика событий, о котором требуется извлечь информацию.</param>
      <param name="session">Объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />, указывающий, следует ли получить информацию о поставщике от поставщика на локальном компьютере или от поставщика на удаленном компьютере.</param>
      <param name="targetCultureInfo">Язык и региональные параметры, указывающие язык, с использованием которого требуется возвратить информацию.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName">
      <summary>Получает нелокализованное имя поставщика событий.</summary>
      <returns>Возвращает строку, содержащую локализованное имя поставщика событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <summary>Освобождает все ресурсы, используемые этим объектом.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые этим объектом. Кроме того, возможно освобождение управляемых ресурсов.</summary>
      <param name="disposing">
                Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events">
      <summary>Получает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" />, каждый из которых представляет событие, определенное в поставщике.</summary>
      <returns>Возвращает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink">
      <summary>Получает базовый URL, используемый для формирования запросов справки для событий в данном поставщике событий.</summary>
      <returns>Возвращает значение <see cref="T:System.Uri" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id">
      <summary>Получает глобальный идентификатор (GUID) для поставщика событий.</summary>
      <returns>Возвращает значение GUID для поставщика событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords">
      <summary>Получает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />, каждый из которых представляет ключевое слово события, определенное в поставщике событий.</summary>
      <returns>Возвращает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels">
      <summary>Получает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />, каждый из которых представляет уровень, определенный в поставщике событий.</summary>
      <returns>Возвращает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks">
      <summary>Получает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" />, каждый из которых представляет ссылку на журнал событий, используемый поставщиком событий.</summary>
      <returns>Возвращает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath">
      <summary>Получает путь к файлу, содержащему ресурс таблицы сообщений, содержащий строки, связанные с метаданными поставщика.</summary>
      <returns>Возвращает строку, содержащую путь файла сообщения поставщика.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name">
      <summary>Получает уникальное имя поставщика событий.</summary>
      <returns>Возвращает строку, содержащую уникальное имя поставщика событий.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes">
      <summary>Получает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />, каждый из которых представляет код операций, определенный в поставщике событий.</summary>
      <returns>Возвращает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath">
      <summary>Получает путь файла, содержащего ресурс таблицы сообщений, содержащий строки, используемые для замены параметров в описаниях события.</summary>
      <returns>Возвращает строку, содержащую путь файла, содержащего ресурс таблицы сообщений, содержащий строки, используемые для замены параметров в описаниях события.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath">
      <summary>Возвращает путь к файлу, содержащему метаданные, связанные с поставщиком.</summary>
      <returns>Возвращает строку, содержащую путь к файлу, содержащему метаданные, связанные с поставщиком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks">
      <summary>Получает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />, каждый из которых представляет задачу, определенную в поставщике событий.</summary>
      <returns>Возвращает перечисляемую коллекцию объектов <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.SessionAuthentication">
      <summary>Определяет значения для типа проверки подлинности, используемого при удаленном вызове процедуры (RPC) входа на сервер. Вход в систему происходит таким образом при создании объекта <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />, указывающего подключение к удаленному компьютеру.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default">
      <summary>При удаленном вызове процедуры входа в систему следует использовать проверку подлинности по умолчанию. Метод проверки подлинности по умолчанию эквивалентен "Согласованию".</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate">
      <summary>При удаленном вызове процедуры входа в систему следует использовать проверку подлинности "Согласование". Это позволит клиентскому приложению выбрать наиболее подходящий для текущей ситуации метод проверки подлинности ("NTLM" или "Kerberos"). </summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos">
      <summary>Используйте проверку подлинности "Kerberos" при удаленном вызове процедуры входа в систему. </summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm">
      <summary>Используйте проверку подлинности "NTLM" (Windows NT LAN Manager) при удаленном вызове процедуры входа в систему.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords">
      <summary>Определяет стандартные ключевые слова, вложенные в событие поставщиком событий. Дополнительные сведения о ключевых словах см. в разделе <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None">
      <summary>Данное значение указывает, что фильтрация по ключевому слову не выполняется при публикации события.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext">
      <summary>Вкладывается во все контекстные события инфраструктуры диагностики Windows (WDI).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic">
      <summary>Вкладывается во все диагностические события инфраструктуры диагностики Windows (WDI).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm">
      <summary>Вкладывается во все события механизма качества служб (SQM).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure">
      <summary>Вкладывается во все неудавшиеся события аудита безопасности. Данное ключевое слово следует использовать только для событий в журнале безопасности.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess">
      <summary>Вкладывается во все успешные события аудита безопасности. Данное ключевое слово следует использовать только для событий в журнале безопасности.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint">
      <summary>Вкладывается во все события перемещения, в которых идентификатор действия (корреляционный ИД) является вычисленным значениям; его уникальность не гарантируется (не является действительным GUID).</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic">
      <summary>Вкладывается в события, вызываемые с использованием функции RaiseEvent.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventLevel">
      <summary>Определяет стандартные уровни событий, используемые службой журнала событий. Уровень определяет серьезность события. Пользовательские уровни события могут определяться вне зависимости от данных стандартных уровней. Дополнительные сведения об уровнях см. в разделе <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways">
      <summary>Данное значение указывает, что фильтрация на данном уровне при публикации событий не выполняется.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical">
      <summary>Данный уровень соответствует критическим ошибкам (серьезным ошибкам, вызвавшим серьезную неисправность). </summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error">
      <summary>Данный уровень соответствует обычным сообщениям об ошибке, указывающим на наличие проблемы. </summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning">
      <summary>Данный уровень соответствует событиям-предупреждениям. Например, событие, публикуемое при уровне заполнения пространства диска, близком к максимальному, является событием-предупреждением.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational">
      <summary>Данный уровень соответствует информационным событиям или сообщениям, не являющимся ошибками. Данные события будут полезны при трассировке состояния или хода выполнения приложения.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose">
      <summary>Данный уровень соответствует длительным событиям или сообщениям. </summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode">
      <summary>Определяет стандартные коды операций, вложенные в событие поставщиком событий. Дополнительные сведения о кодах операций см. в разделе <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info">
      <summary>Событие с данным кодом операций является информационным событием.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start">
      <summary>Событие с данным кодом операций публикуется при запуске приложением новой транзакции или нового действия. Событие может внедряться в другую транзакцию или действие, если несколько событий с кодом операций Start следуют друг за другом без кода операций Stop.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop">
      <summary>Событие с данным кодом операций публикуется при завершении действия или транзакции в приложении. Событие соответствует последнему непарному событию с кодом операций Start.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart">
      <summary>Событие с данным кодом операций является событием запуска коллекции трассировки.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop">
      <summary>Событие с данным кодом операций является событием остановки коллекции трассировки.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension">
      <summary>Событие с данным кодом операций является событием расширения.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply">
      <summary>Событие с данным кодом операций публикуется после ответа действия в приложении на событие.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume">
      <summary>Событие с данным кодом операций публикуется после выхода действия в приложении из приостановленного состояния. За этим событием должно следовать событие с кодом операций Suspend.</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend">
      <summary>Событие с данным кодом операций публикуется при приостановке действия в приложении. </summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send">
      <summary>Событие с данным кодом публикуется при передаче одним действием в приложении данных или системных ресурсов другому действию. </summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive">
      <summary>Событие с данным кодом операций публикуется при приеме одним действием данных в приложении.</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventTask">
      <summary>Определяет стандартные задачи, вложенные в событие поставщиком событий. Дополнительные сведения о задачах см. в разделе <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None">
      <summary>Для идентификации части приложения, публикующего событие, не используется ни одна задача.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterData">
      <summary>Содержит необработанные данные для счетчика.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.Value">
      <summary>Установка или извлечение необработанных данных счетчиков.</summary>
      <returns>Необработанные данные счетчиков.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSet">
      <summary>Идентифицирует набор логических счетчиков.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)">
      <summary>Выполняет инициализацию нового экземпляра класса<see cref="T:System.Diagnostics.PerformanceData.CounterSet" />.</summary>
      <param name="providerGuid">Идентификатор GUID, который уникально идентифицирует поставщика данных счетчика. Используйте идентификатор GUID, указанный в манифесте.</param>
      <param name="counterSetGuid">Идентификатор GUID, который уникально идентифицирует набор счетчиков поставщика. Используйте идентификатор GUID, указанный в манифесте.</param>
      <param name="instanceType">Идентифицирует тип набора счетчиков, например, является ли набор счетчиков набором для одного или нескольких экземпляров.</param>
      <exception cref="T:System.InsufficientMemoryException">Недостаточно памяти для выполнения операции.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Не поддерживается в версиях, предшествующих Windows Vista.</exception>
      <exception cref="T:System.ArgumentException">Один из параметров имеет значение NULL или недопустимое значение.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Сбой вызова базовой функции Win32.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)">
      <summary>Добавляет в набор счетчиков счетчик с указанным идентификатором и типом. </summary>
      <param name="counterId">Идентифицирует счетчик. Для идентификации счетчика используйте значение, указанное в манифесте.</param>
      <param name="counterType">Идентифицирует тип счетчика. Тип счетчика определяет способ вычисления, усреднения и отображения данных счетчика. </param>
      <exception cref="T:System.ArgumentException">Идентификатор счетчика уже существует в наборе или имеет отрицательное значение, или тип счетчика имеет значение NULL или недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">После создания экземпляра набора счетчиков невозможно добавить счетчик в набор счетчиков.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)">
      <summary>Добавляет в набор счетчиков счетчик с указанным идентификатором, типом и отображаемым именем.</summary>
      <param name="counterId">Идентифицирует счетчик. Для идентификации счетчика используйте значение, указанное в манифесте.</param>
      <param name="counterType">Идентифицирует тип счетчика. Тип счетчика определяет способ вычисления, усреднения и отображения данных счетчика. </param>
      <param name="counterName">Имя счетчика. Это имя можно использовать для индексации счетчика в экземпляре набора счетчиков. (См. <see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />.)</param>
      <exception cref="T:System.ArgumentException">Идентификатор счетчика уже существует в наборе или имеет отрицательное значение, или тип счетчика имеет значение NULL или недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">После создания экземпляра набора счетчиков невозможно добавить счетчик в набор счетчиков.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)">
      <summary>Создает экземпляр набора счетчиков.</summary>
      <returns>Экземпляр набора счетчиков, в котором будут содержаться данные счетчиков.</returns>
      <param name="instanceName">Имя экземпляра. Это имя должно быть уникальным.</param>
      <exception cref="T:System.ArgumentException">Имя экземпляра имеет значение NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Добавлять счетчики в набор счетчиков следует перед созданием экземпляра набора счетчиков.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)">
      <param name="disposing"></param>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Finalize"></member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstance">
      <summary>Создает экземпляр логических счетчиков, определенных в классе <see cref="T:System.Diagnostics.PerformanceData.CounterSet" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstance.Counters">
      <summary>Извлекает из экземпляра набора счетчиков коллекцию данных счетчиков.</summary>
      <returns>Коллекция данных счетчиков, содержащаяся в экземпляре набора счетчиков.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Dispose">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet">
      <summary>Содержит набор значений счетчика.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Dispose">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.Int32)">
      <summary>Осуществляет доступ к значению счетчика в наборе с помощью указанного идентификатора счетчика.</summary>
      <returns>Данные счетчиков.</returns>
      <param name="counterId">Идентификатор счетчика. Идентификатор счетчика, указанный при добавлении счетчика в набор счетчиков.</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)">
      <summary>Осуществляет доступ к значению счетчика в наборе с помощью указанного имени счетчика.</summary>
      <returns>Данные счетчиков.</returns>
      <param name="counterName">Имя счетчика. Имя счетчика, указанное при добавлении счетчика в набор счетчиков.</param>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceType">
      <summary>Указывает, допустимо ли для набора счетчиков использование нескольких экземпляров, например, процессов или физических дисков, или одного экземпляра, например, памяти.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Single">
      <summary>Набор счетчиков содержит счетчики с единственным экземпляром, например, счетчик объема физической памяти.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple">
      <summary>Набор счетчиков содержит многоэкземплярные счетчики, например, счетчик для измерения среднего числа операций дискового ввода-вывода для процесса.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate">
      <summary>Набор счетчиков содержит счетчики с единственным экземпляром, статистические значения которых извлекаются из одного или более источников. Например, счетчик в наборе счетчиков данного типа может получать число операций чтения для каждого из трех жестких дисков компьютера и суммировать эти значения.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregateWithHistory">
      <summary>Данный тип аналогичен <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate" /> за исключением того, что в наборе счетчиков данного типа хранятся все значения счетчиков за время существования клиентского приложения (значение счетчика хранится в кэше после завершения времени существования счетчика). Например, если в примере глобальной статистики перестает быть доступным один из жестких дисков, общее число байт, считанных с данного диска, будет доступно и может использоваться при вычислении статистического значения.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate">
      <summary>Набор счетчиков содержит многоэкземплярные счетчики, статистические значения которых извлекаются из всех экземпляров счетчика. Например, счетчик в наборе счетчиков данного типа может получать значения общего времени выполнения потока для всех потоков многопоточного приложения и суммировать эти значения.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate">
      <summary>Данный тип аналогичен <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" /> за исключением того, что вместо статистической обработки данных всех экземпляров в одном статистическом экземпляре (_Total) выполняется статистическая обработка данных счетчиков экземпляров для одного имени. Например, если несколько процессов поставщика содержат экземпляры с именем IExplore, элементы <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple" /> и <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" /> CounterSet отобразят несколько экземпляров IExplore (IExplore, IExplore#1, IExplore#2 и так далее). Однако при использовании экземпляра типа <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate" /> опубликован будет только один экземпляр IExplore со статистическими данными счетчиков из всех экземпляров для имени IExplore.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterType">
      <summary>Определяет возможные типы счетчика.
 Каждому счетчику присваивается тип. Тип счетчика определяет способ вычисления, усреднения и отображения данных счетчиков.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength">
      <summary>Счетчик данного типа предназначен для отслеживания средней длины очереди на доступ к ресурсу за все время наблюдения. Он показывает разницу между длинами очередей, наблюдаемых в течение двух последних интервалов измерения, деленную на продолжительность интервала. (См. сведения о типе счетчика PERF_COUNTER_QUEUELEN_TYPE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.LargeQueueLength">
      <summary>Счетчик данного типа отслеживает среднюю длину очереди к ресурсу за все время наблюдения. Счетчики этого типа отображают разницу между длинами очередей, наблюдаемых в течение двух последних интервалов измерения, деленную на продолжительность интервала. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.QueueLength" />, за исключением того, что используются большие поля для размещения больших значений. (См. сведения о типе счетчика PERF_COUNTER_LARGE_QUEUELEN_TYPE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength100Ns">
      <summary>Счетчик данного типа вычисляет произведение пространства и времени для длины очереди на интервалах в 100 нс. (См. сведения о типе счетчика PERF_COUNTER_100NS_QUEUELEN_TYPE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLengthObjectTime">
      <summary>Счетчик данного типа вычисляет произведение пространства и времени для длины очереди на интервалах времени, относящихся к определенному объекту. (См. сведения о типе счетчика PERF_COUNTER_OBJ_QUEUELEN_TYPE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData32">
      <summary>Счетчик данного типа служит для отображения только последнего зафиксированного значения. Он не отображает среднее значение. (См. сведения о типе счетчика PERF_COUNTER_RAWCOUNT в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData64">
      <summary>Счетчик данного типа служит для отображения только последнего зафиксированного значения, а не среднего. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawData32" />, за исключением того, что используются большие поля для размещения больших значений. (См. сведения о типе счетчика PERF_COUNTER_LARGE_RAWCOUNT в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32">
      <summary>Счетчик данного типа служит для отображения последнего измеренного значения в шестнадцатеричном формате. Он не отображает среднее значение. (См. сведения о типе счетчика PERF_COUNTER_RAWCOUNT_HEX в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex64">
      <summary>Счетчик данного типа служит для отображения последнего измеренного значения в шестнадцатеричном формате. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32" />, за исключением того, что используются большие поля для размещения больших значений. (См. сведения о типе счетчика PERF_COUNTER_LARGE_RAWCOUNT_HEX в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32">
      <summary>Счетчик данного типа служит для отображения среднего числа операций, завершенных в течение каждой секунды интервала измерения. Счетчики этого типа измеряют время в тактах системных часов. (См. сведения о типе счетчика PERF_COUNTER_COUNTER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond64">
      <summary>Счетчик данного типа служит для отображения среднего числа операций, завершенных в течение каждой секунды интервала измерения. Счетчики этого типа измеряют время в тактах системных часов. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32" />, за исключением того, что используются большие поля для размещения больших значений. (См. сведения о типе счетчика PERF_COUNTER_BULK_COUNT в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32">
      <summary>Счетчик данного типа служит для отображения процентного соотношения подмножества и содержащего его множества. Например, он позволяет сравнить число байтов, используемых на диске, и общее число байтов на этом диске. Счетчики этого типа отображают только текущий процент, а не среднее значение за все время. (См. сведения о типе счетчика PERF_RAW_FRACTION в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64">
      <summary>Счетчик данного типа служит для отображения процентного соотношения подмножества и содержащего его множества. Например, он позволяет сравнить число байтов, используемых на диске, и общее число байтов на этом диске. Счетчики этого типа отображают только текущий процент, а не среднее значение за все время. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" />, за исключением того, что используются большие поля для размещения больших значений.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase32">
      <summary>Счетчик данного типа хранит только последнее зафиксированное значение. Это значение выступает в роли знаменателя значения счетчика, представляющего собой обычную арифметическую дробь. Для данного типа поддерживается тип счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" />. (См. сведения о типе счетчика PERF_RAW_BASE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase64">
      <summary>Счетчик данного типа хранит последнее зафиксированное значение. Он аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawBase32" />, за исключением того, что используются большие поля для размещения больших значений. Для данного типа поддерживается тип счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64" />. (См. сведения о типе счетчика PERF_LARGE_RAW_BASE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction">
      <summary>Счетчик данного типа служит для отображения среднего коэффициента обращения ко всем операциям за последние два интервала измерения. (См. сведения о типе счетчика PERF_SAMPLE_FRACTION в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleCounter">
      <summary>Счетчик данного типа служит для отображения среднего числа операций, завершенных за одну секунду. Он измеряет время в тактах системного таймера производительности. Переменная F означает количество тактов в одной секунде. Значение F добавляется в уравнение для того, чтобы результат отображался в секундах. (См. сведения о типе счетчика PERF_SAMPLE_COUNTER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleBase">
      <summary>Данный счетчик хранит количество выполненных прерываний для измерения и используется в качестве знаменателя дробного значения. Для данного типа поддерживается тип счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32">
      <summary>Счетчик данного типа измеряет время, которое в среднем займет завершение процесса или операции. Счетчики этого типа отображают отношение всего прошедшего интервала измерения к числу процессов или операций, завершенных за это время. Этот тип счетчика измеряет время в тактах системных часов. (См. сведения о типе счетчика PERF_AVERAGE_ TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageBase">
      <summary>Данный счетчик используется как базовые данные (знаменатель) при вычислении времени или усредненных значений счетчиков типа <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64" /> и <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32" />. Счетчик данного типа хранит только последнее зафиксированное значение. (См. сведения о типе счетчика PERF_AVERAGE_BASE в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64">
      <summary>Счетчик данного типа показывает, сколько элементов обработано в среднем за операцию. Счетчики этого типа отображают отношение обработанных элементов (например, отправленных байтов) к числу завершенных операций. Отношение вычисляется соотношением числа обработанных элементов в течение последнего интервала времени к числу завершенных операций за этот же интервал. (См. сведения о типе счетчика PERF_AVERAGE_BULK в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive">
      <summary>Счетчик данного типа служит для отображения среднего времени как процента отношения времени активности компонента к полному времени измерения. (См. сведения о типе счетчика PERF_COUNTER_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive">
      <summary>Это обратный тип счетчика. Обратные счетчики измеряют время, в течение которого компонент не был активным, и таким образом получают значение времени активности. Счетчик данного типа служит для отображения среднего процента измеренного времени активности за интервал измерения. Значение этих счетчиков вычисляется за счет измерения процента времени, в течение которого служба была неактивна, и затем вычитанием этого значения из 100%. Этот тип счетчика аналогичен типу <see cref="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns" />, за тем исключением, что в нем вычисляется время в тактах системного таймера производительности, а не в единицах измерения, равных 100 нс. (См. сведения о типе счетчика PERF_COUNTER_TIMER_INV в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive100Ns">
      <summary>Счетчик данного типа служит для отображения процента времени активности компонента за все прошедшее время интервала измерения. Время измеряется в интервалах времени, равных 100 нс. Счетчики этого типа предназначены для измерения активности компонента в течение какого-либо времени. (См. сведения о типе счетчика PERF_100NSEC_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns">
      <summary>Счетчик данного типа служит для отображения среднего процента измеренного времени активности за интервал измерения. Это обратный счетчик. Значение этих счетчиков вычисляется за счет измерения процента времени, в течение которого служба была неактивна, и затем вычитанием этого значения из 100%. (См. сведения о типе счетчика PERF_100NSEC_TIMER_INV в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ElapsedTime">
      <summary>Счетчик данного типа показывает полное время между началом работы компонента или процесса и вычислением значения. (См. сведения о типе счетчика PERF_ELAPSED_TIME в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive">
      <summary>Этот тип счетчика представляет собой мультитаймер. Мультитаймеры записывают данные более одного экземпляра компонента, например процессора или диска. Счетчики данного типа отображают процент отношения времени активности одного или более компонентов ко всему интервалу измерения. Поскольку числитель записывает время активности работающих компонентов одновременно, результат может превышать 100%. Этот тип счетчика отличается от <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" />, в нем вычисляется время в тактах системного таймера производительности, а не в единицах измерения, равных 100 нс. (См. сведения о типе счетчика PERF_COUNTER_MULTI_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive">
      <summary>Счетчики данного типа отображают процент отношения времени активности одного или более компонентов ко всему интервалу измерения. Этот тип счетчика представляет собой обратный мультитаймер. Мультитаймеры исследуют более одного экземпляра компонента, например процессора или диска. Обратные счетчики измеряют время, в течение которого компонент не был активным, и таким образом получают значение времени активности. Этот счетчик отличается от <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" />, в нем вычисляется время в тактах системного таймера производительности, а не в единицах измерения, равных 100 нс. (См. сведения о типе счетчика PERF_COUNTER_MULTI_TIMER_INV в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns">
      <summary>Счетчики данного типа отображают процент отношения времени активности одного или более компонентов ко всему интервалу измерения. Время измеряется в интервалах времени, равных 100 нс. Этот тип счетчика представляет собой мультитаймер. Мультитаймеры предназначены для исследования нескольких экземпляров компонента, например процессора или диска. (См. сведения о типе счетчика PERF_100NSEC_MULTI_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns">
      <summary>Счетчики данного типа отображают процент отношения времени активности одного или более компонентов ко всему интервалу измерения. Такие счетчики вычисляют время в единицах времени, равных 100 нс. Этот тип счетчика представляет собой обратный мультитаймер. Мультитаймеры предназначены для исследования нескольких экземпляров компонента, например процессора или диска. Обратные счетчики измеряют время, в течение которого компонент не был активным, и таким образом вычисляется время активности компонента. (См. сведения о типе счетчика PERF_100NSEC_MULTI_TIMER_INV в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerBase">
      <summary>Указывает количество измеренных элементов. Используется как знаменатель в вычислениях для получения среднего значения среди измеренных элементов при измерении времени нескольких, но однотипных элементов. Данный тип поддерживает следующие типы счетчиков: <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive" />, <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive" />, <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" /> и <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" />.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta32">
      <summary>Счетчик этого типа показывает изменение в измеряемом атрибуте между двумя последними интервалами измерения. (См. сведения о типе счетчика PERF_ COUNTER_DELTA в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta64">
      <summary>Счетчик этого типа показывает изменение в измеряемом атрибуте между двумя последними интервалами измерения. Данный тип аналогичен типу счетчика <see cref="F:System.Diagnostics.PerformanceData.CounterType.Delta32" />, за исключением того, что используются большие поля для размещения больших значений. (См. сведения о типе счетчика PERF_COUNTER_LARGE_DELTA в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ObjectSpecificTimer">
      <summary>Данный 64-разрядный тип счетчика представляет собой таймер для отображения единиц измерения определенного объекта. (См. сведения о типе счетчика PERF_OBJ_TIME_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionSystemTimer">
      <summary>Счетчик данного типа служит для отображения значения, которое состоит из значений двух счетчиков: количества времени, прошедшего с начала отслеживания события, и частоты системного таймера производительности. Данный тип счетчика отличается от других таймеров тем, что значение счетчика тактируется с помощью системных часов, что исключает погрешность из-за задержки вызова функции.  Точные типы счетчиков используются в случаях, когда стандартный системный таймер не обеспечивает необходимую точность значений. (См. сведения о типе счетчика PERF_PRECISION_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionTimer100Ns">
      <summary>Счетчик данного типа служит для отображения значения, которое состоит из значений двух счетчиков: количества времени, прошедшего с начала отслеживания события, и времени, измеренного частным таймером в тех же единицах измерения. Время измеряется в интервалах времени, равных 100 нс.
 Данный тип счетчика отличается от других таймеров тем, что значение счетчика тактируется с помощью системных часов, что исключает погрешность из-за задержки вызова функции.  Точные типы счетчиков используются в случаях, когда стандартный системный таймер не обеспечивает необходимую точность значений. (См. сведения о типе счетчика PERF_PRECISION_100NS_TIMER в пакете развертывания).</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionObjectSpecificTimer">
      <summary>Счетчик данного типа служит для отображения значения, которое состоит из значений двух счетчиков: количества времени, прошедшего с начала отслеживания события, и частоты, указанной в поле PerfFreq заголовка объекта. Данный тип счетчика отличается от других таймеров тем, что значение счетчика тактируется с помощью системных часов, что исключает погрешность из-за задержки вызова функции.  Точные типы счетчиков используются в случаях, когда стандартный системный таймер не обеспечивает необходимую точность значений. (См. сведения о типе счетчика PERF_PRECISION_OBJECT_TIMER в пакете развертывания).</summary>
    </member>
    <member name="T:System.IO.HandleInheritability">
      <summary>Указывает, является ли основной дескриптор наследуемым дочерними процессами.</summary>
    </member>
    <member name="F:System.IO.HandleInheritability.None">
      <summary>Указывает, что дескриптор не является наследуемым дочерними процессами.</summary>
    </member>
    <member name="F:System.IO.HandleInheritability.Inheritable">
      <summary>Указывает, что дескриптор является наследуемым дочерними процессами.</summary>
    </member>
    <member name="T:System.IO.Pipes.AnonymousPipeClientStream">
      <summary>Предоставляет сторону клиента в потоке анонимного канала, поддерживающем синхронные и асинхронные операции чтения и записи.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> на основе указанного дескриптора.</summary>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="safePipeHandle">
        <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> для канала, который будет инкапсулироваться данным объектом <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />.</param>
      <exception cref="T:System.NotSupportedException">
                В качестве параметра <paramref name="direction" /> задано <see cref="F:System.IO.Pipes.PipeDirection.InOut" />. </exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="safePipeHandle" /> не является дескриптором канала.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> с использованием указанного направления канала и строкового представления дескриптора канала.</summary>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="pipeHandleAsString">Объект <see cref="T:System.String" />, представляющий дескриптор канала.</param>
      <exception cref="T:System.NotSupportedException">
                В качестве параметра <paramref name="direction" /> задано <see cref="F:System.IO.Pipes.PipeDirection.InOut" />. </exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="pipeHandleAsString" /> не является ссылкой на дескриптор канала.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> с использованием указанного дескриптора канала в строковом представлении.</summary>
      <param name="pipeHandleAsString">Объект <see cref="T:System.String" />, представляющий дескриптор канала.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="pipeHandleAsString" /> не является ссылкой на дескриптор канала.</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
      <summary>Задает режим чтения для объекта <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />.</summary>
      <returns>Одно из значений <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, которое указывает, как объект <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> читает данные из канала.</returns>
      <exception cref="T:System.NotSupportedException">В качестве режима чтения задано <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение не является допустимым значением <see cref="T:System.IO.Pipes.PipeTransmissionMode" />.</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
      <summary>Получает режим передачи, поддерживаемый текущим каналом.</summary>
      <returns>Всегда <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />.</returns>
    </member>
    <member name="T:System.IO.Pipes.AnonymousPipeServerStream">
      <summary>Предоставляет поток для анонимного канала, поддерживающий синхронные и асинхронные операции чтения и записи.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> с указанным направлением канала.</summary>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <exception cref="T:System.NotSupportedException">
                В качестве параметра <paramref name="direction" /> задано <see cref="F:System.IO.Pipes.PipeDirection.InOut" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> на основе указанного дескриптора канала.</summary>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="serverSafePipeHandle">
        <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> для канала, который будет инкапсулироваться данным объектом <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</param>
      <param name="clientSafePipeHandle">
        <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> для объекта <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />.</param>
      <exception cref="T:System.NotSupportedException">
                В качестве параметра <paramref name="direction" /> задано <see cref="F:System.IO.Pipes.PipeDirection.InOut" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
      <exception cref="T:System.IO.IOException">Произошла ошибка ввода-вывода, например ошибка диска.–или–Поток закрыт.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> с указанным направлением канала и режимом наследования.</summary>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="inheritability">Одно из значений <see cref="T:System.IO.HandleInheritability" />, определяющих, может ли базовый дескриптор наследоваться дочерними процессами.</param>
      <exception cref="T:System.NotSupportedException">
                В качестве параметра <paramref name="direction" /> задано <see cref="F:System.IO.Pipes.PipeDirection.InOut" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Параметр <paramref name="inheritability" /> не является допустимым значением <see cref="T:System.IO.HandleInheritability" />.–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> с указанным направлением канала, режимом наследования и размером буфера.</summary>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="inheritability">Одно из значений <see cref="T:System.IO.HandleInheritability" />, определяющих, может ли базовый дескриптор наследоваться дочерними процессами.</param>
      <param name="bufferSize">Положительное значение типа <see cref="T:System.Int32" /> (большее или равное 0), задающее размер буфера.</param>
      <exception cref="T:System.NotSupportedException">
                В качестве параметра <paramref name="direction" /> задано <see cref="F:System.IO.Pipes.PipeDirection.InOut" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Параметр <paramref name="inheritability" /> не является допустимым значением <see cref="T:System.IO.HandleInheritability" />.–или–
                Значение параметра <paramref name="bufferSize" /> меньше 0.–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> с указанным направлением канала, режимом наследования, размером буфера и режимом безопасности канала.</summary>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="inheritability">Одно из значений <see cref="T:System.IO.HandleInheritability" />, определяющих, может ли базовый дескриптор наследоваться дочерними процессами.</param>
      <param name="bufferSize">Положительное значение <see cref="T:System.Int32" />, определяющее размер буфера.</param>
      <param name="pipeSecurity">Объект <see cref="T:System.IO.Pipes.PipeSecurity" />, определяющий правила управления доступом и аудита безопасности для канала.</param>
      <exception cref="T:System.NotSupportedException">
                В качестве параметра <paramref name="direction" /> задано <see cref="F:System.IO.Pipes.PipeDirection.InOut" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Параметр <paramref name="inheritability" /> не является допустимым значением <see cref="T:System.IO.HandleInheritability" />.–или–
                Значение параметра <paramref name="bufferSize" /> меньше 0.–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
      <summary>Получает безопасный дескриптор для объекта <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />, который в данный момент подключен к объекту <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</summary>
      <returns>Объект <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> для объекта <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />, который в данный момент подключен к объекту <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</returns>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
      <summary>Закрывает локальную копию дескриптора объекта <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
      <summary>Получает дескриптор подключенного объекта <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> в виде строки.</summary>
      <returns>Значение типа <see cref="T:System.String" />, представляющее дескриптор подключенного объекта <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />.</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
      <summary>Задает режим чтения для объекта <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</summary>
      <returns>Одно из значений <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, которое указывает, как объект <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> читает данные из канала.</returns>
      <exception cref="T:System.NotSupportedException">В качестве режима чтения задано <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение не является допустимым значением <see cref="T:System.IO.Pipes.PipeTransmissionMode" />.</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
      <summary>Получает режим передачи, поддерживаемый текущим каналом.</summary>
      <returns>Всегда <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />.</returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeClientStream">
      <summary>Предоставляет объект <see cref="T:System.IO.Stream" /> для именованного канала, поддерживающий синхронные и асинхронные операции чтения и записи.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> для заданного дескриптора канала с указанным направлением канала.</summary>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="isAsync">true, если дескриптор открыт асинхронно, в противном случае — false.</param>
      <param name="isConnected">true, если канал подключен, в противном случае — false.</param>
      <param name="safePipeHandle">Объект <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> для канала, который будет инкапсулироваться данным объектом <see cref="T:System.IO.Pipes.NamedPipeClientStream" />.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="safePipeHandle" /> не является допустимым дескриптором канала.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> с указанным именем канала.</summary>
      <param name="pipeName">Имя канала.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="pipeName" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> с заданными именами канала и сервера.</summary>
      <param name="serverName">Имя удаленного компьютера, к которому нужно подключиться, или значение ".", чтобы указать локальный компьютер.</param>
      <param name="pipeName">Имя канала.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="pipeName" /> имеет значение null.–или–
                Значение параметра <paramref name="serverName" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.–или–
                Параметр <paramref name="serverName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> с заданными именами канала и сервера, параметрами канала, уровнем олицетворения безопасности и режимом наследования.</summary>
      <param name="serverName">Имя удаленного компьютера, к которому нужно подключиться, или значение ".", чтобы указать локальный компьютер.</param>
      <param name="pipeName">Имя канала.</param>
      <param name="desiredAccessRights">Одно из значений <see cref="T:System.IO.Pipes.PipeAccessRights" />, задающих требуемые права доступа для канала.</param>
      <param name="options">Одно из значений &lt;<see cref="T:System.IO.Pipes.PipeOptions" />, с помощью которого можно определить способ открытия или создания канала.</param>
      <param name="impersonationLevel">Одно из значений <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, определяющих уровень олицетворения безопасности.</param>
      <param name="inheritability">Одно из значений <see cref="T:System.IO.HandleInheritability" />, определяющих, будет ли базовый дескриптор наследоваться дочерними процессами.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="pipeName" /> имеет значение null.–или–
                Значение параметра <paramref name="serverName" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.–или–
                Параметр <paramref name="serverName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="options" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeOptions" />.–или–
                Параметр <paramref name="impersonationLevel" /> не является допустимым значением <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.–или–
                Параметр <paramref name="inheritability" /> не является допустимым значением <see cref="T:System.IO.HandleInheritability" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> с заданными именами канала и сервера и указанным направлением канала.</summary>
      <param name="serverName">Имя удаленного компьютера, к которому нужно подключиться, или значение ".", чтобы указать локальный компьютер.</param>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="pipeName" /> имеет значение null.–или–
                Значение параметра <paramref name="serverName" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.–или–
                Параметр <paramref name="serverName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> с заданными именами канала и сервера, направлением канала и параметрами канала.</summary>
      <param name="serverName">Имя удаленного компьютера, к которому нужно подключиться, или значение ".", чтобы указать локальный компьютер.</param>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="options">Одно из значений &lt;<see cref="T:System.IO.Pipes.PipeOptions" />, с помощью которого можно определить способ открытия или создания канала.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="pipeName" /> имеет значение null.–или–
                Значение параметра <paramref name="serverName" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.–или–
                Параметр <paramref name="serverName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.–или–
                Параметр <paramref name="options" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeOptions" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> с заданными именами канала и сервера, направлением канала, параметрами канала и уровнем олицетворения безопасности.</summary>
      <param name="serverName">Имя удаленного компьютера, к которому нужно подключиться, или значение ".", чтобы указать локальный компьютер.</param>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="options">Одно из значений &lt;<see cref="T:System.IO.Pipes.PipeOptions" />, с помощью которого можно определить способ открытия или создания канала.</param>
      <param name="impersonationLevel">Одно из значений <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, определяющих уровень олицетворения безопасности.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="pipeName" /> имеет значение null.–или–
                Значение параметра <paramref name="serverName" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.–или–
                Параметр <paramref name="serverName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.–или–
                Параметр <paramref name="options" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeOptions" />.–или–
                Параметр <paramref name="impersonationLevel" /> не является допустимым значением <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> с заданными именами канала и сервера, направлением канала, параметрами канала, уровнем олицетворения безопасности и режимом наследования.</summary>
      <param name="serverName">Имя удаленного компьютера, к которому нужно подключиться, или значение ".", чтобы указать локальный компьютер.</param>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="options">Одно из значений &lt;<see cref="T:System.IO.Pipes.PipeOptions" />, с помощью которого можно определить способ открытия или создания канала.</param>
      <param name="impersonationLevel">Одно из значений <see cref="T:System.Security.Principal.TokenImpersonationLevel" />, определяющих уровень олицетворения безопасности.</param>
      <param name="inheritability">Одно из значений <see cref="T:System.IO.HandleInheritability" />, определяющих, будет ли базовый дескриптор наследоваться дочерними процессами.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="pipeName" /> имеет значение null.–или–
                Значение параметра <paramref name="serverName" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.–или–
                Параметр <paramref name="serverName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.–или–
                Параметр <paramref name="options" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeOptions" />.–или–
                Параметр <paramref name="impersonationLevel" /> не является допустимым значением <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.–или–
                Параметр <paramref name="inheritability" /> не является допустимым значением <see cref="T:System.IO.HandleInheritability" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect">
      <summary>Подключается к ждущему серверу.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
      <summary>Устанавливает подключение к ожидающему серверу в рамках заданного периода ожидания.</summary>
      <param name="timeout">Количество миллисекунд, задающее время ожидания соединения с сервером.</param>
      <exception cref="T:System.TimeoutException">Не удалось подключиться к серверу в течение указанного времени <paramref name="timeout" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Значение <paramref name="timeout" /> меньше 0.</exception>
    </member>
    <member name="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
      <summary>Получает число экземпляров сервера с одинаковым именем канала.</summary>
      <returns>Число экземпляров сервера с одинаковым именем канала.</returns>
      <exception cref="T:System.InvalidOperationException">Дескриптор канала не задан.–или–Текущий объект <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> еще не подключен к объекту <see cref="T:System.IO.Pipes.NamedPipeServerStream" />.</exception>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeServerStream">
      <summary>Предоставляет <see cref="T:System.IO.Stream" /> в именованном канале, поддерживая синхронные и асинхронные операции чтения и записи.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> на основе указанного дескриптора канала.</summary>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="isAsync">true, если дескриптор открыт асинхронно, в противном случае — false.</param>
      <param name="isConnected">true, если канал подключен, в противном случае — false.</param>
      <param name="safePipeHandle">Дескриптор <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> для канала, который будет инкапсулироваться данным объектом <see cref="T:System.IO.Pipes.NamedPipeClientStream" />.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="safePipeHandle" /> не является допустимым дескриптором канала.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> с указанным именем канала.</summary>
      <param name="pipeName">Имя канала.</param>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="pipeName" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".</exception>
      <exception cref="T:System.PlatformNotSupportedException">Операционной системой является Windows Millennium Edition, Windows 98 или Windows 95.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> с указанным именем канала и направлением канала.</summary>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="pipeName" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Операционной системой является Windows Millennium Edition, Windows 98 или Windows 95.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> с заданным именем канала, направлением и максимальным количеством экземпляров сервера.</summary>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="maxNumberOfServerInstances">Максимальное число экземпляров сервера с одинаковыми именами.</param>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="pipeName" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.–или–
                Значение параметра <paramref name="maxNumberofServerInstances" /> меньше единицы или больше 254.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Операционной системой является Windows Millennium Edition, Windows 98 или Windows 95.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> с заданным именем канала, направлением канала, максимальным количеством экземпляров сервера и режимом передачи.</summary>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="maxNumberOfServerInstances">Максимальное число экземпляров сервера с одинаковыми именами.</param>
      <param name="transmissionMode">Одно из значений <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, определяющих режим передачи для канала.</param>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="pipeName" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.–или–
                Значение параметра <paramref name="maxNumberofServerInstances" /> меньше единицы или больше 254.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Операционной системой является Windows Millennium Edition, Windows 98 или Windows 95.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> с заданным именем канала, направлением канала, максимальным количеством экземпляров сервера, режимом передачи и параметрами канала.</summary>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="maxNumberOfServerInstances">Максимальное число экземпляров сервера с одинаковыми именами.</param>
      <param name="transmissionMode">Одно из значений <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, определяющих режим передачи для канала.</param>
      <param name="options">Одно из значений &lt;<see cref="T:System.IO.Pipes.PipeOptions" />, с помощью которого можно определить способ открытия или создания канала.</param>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="pipeName" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.–или–
                Значение параметра <paramref name="maxNumberofServerInstances" /> меньше единицы или больше 254.–или–
                Параметр <paramref name="options" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeOptions" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Операционной системой является Windows Millennium Edition, Windows 98 или Windows 95.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> с заданным именем канала, направлением канала, максимальным количеством экземпляров сервера, режимом передачи, параметрами канала и рекомендуемыми размерами входного и выходного буферов.</summary>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="maxNumberOfServerInstances">Максимальное число экземпляров сервера с одинаковыми именами.</param>
      <param name="transmissionMode">Одно из значений <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, определяющих режим передачи для канала.</param>
      <param name="options">Одно из значений &lt;<see cref="T:System.IO.Pipes.PipeOptions" />, с помощью которого можно определить способ открытия или создания канала.</param>
      <param name="inBufferSize">Положительное значение <see cref="T:System.Int32" />, указывающее размер входного буфера.</param>
      <param name="outBufferSize">Положительное значение <see cref="T:System.Int32" />, указывающее размер выходного буфера.</param>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="pipeName" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.–или–
                Значение параметра <paramref name="maxNumberofServerInstances" /> меньше единицы или больше 254.–или–
                Параметр <paramref name="options" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeOptions" />.–или–
                Значение <paramref name="inBufferSize" /> является отрицательным числом.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Операционной системой является Windows Millennium Edition, Windows 98 или Windows 95.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> с заданным именем канала, направлением канала, максимальным количеством экземпляров сервера, режимом передачи, параметрами канала, рекомендуемыми размерами входного и выходного буферов и режимом безопасности канала.</summary>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="maxNumberOfServerInstances">Максимальное число экземпляров сервера с одинаковыми именами.</param>
      <param name="transmissionMode">Одно из значений <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, определяющих режим передачи для канала.</param>
      <param name="options">Одно из значений &lt;<see cref="T:System.IO.Pipes.PipeOptions" />, с помощью которого можно определить способ открытия или создания канала.</param>
      <param name="inBufferSize">Положительное значение <see cref="T:System.Int32" />, указывающее размер входного буфера.</param>
      <param name="outBufferSize">Положительное значение <see cref="T:System.Int32" />, указывающее размер выходного буфера.</param>
      <param name="pipeSecurity">Объект <see cref="T:System.IO.Pipes.PipeSecurity" />, определяющий правила управления доступом и аудита безопасности для канала.</param>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="pipeName" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.–или–
                Значение параметра <paramref name="maxNumberofServerInstances" /> меньше единицы или больше 254.–или–
                Параметр <paramref name="options" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeOptions" />.–или–
                Значение <paramref name="inBufferSize" /> является отрицательным числом.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Операционной системой является Windows Millennium Edition, Windows 98 или Windows 95.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> с заданным именем канала, направлением канала, максимальным количеством экземпляров сервера, режимом передачи, параметрами канала, рекомендуемыми размерами входного и выходного буферов, режимом безопасности канала и режимом наследования.</summary>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="maxNumberOfServerInstances">Максимальное число экземпляров сервера с одинаковыми именами.</param>
      <param name="transmissionMode">Одно из значений <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, определяющих режим передачи для канала.</param>
      <param name="options">Одно из значений &lt;<see cref="T:System.IO.Pipes.PipeOptions" />, с помощью которого можно определить способ открытия или создания канала.</param>
      <param name="inBufferSize">Положительное значение <see cref="T:System.Int32" />, указывающее размер входного буфера.</param>
      <param name="outBufferSize">Положительное значение <see cref="T:System.Int32" />, указывающее размер выходного буфера.</param>
      <param name="pipeSecurity">Объект <see cref="T:System.IO.Pipes.PipeSecurity" />, определяющий правила управления доступом и аудита безопасности для канала.</param>
      <param name="inheritability">Одно из значений <see cref="T:System.IO.HandleInheritability" />, определяющих, может ли базовый дескриптор наследоваться дочерними процессами.</param>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="pipeName" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.–или–
                Значение параметра <paramref name="maxNumberofServerInstances" /> меньше единицы или больше 254.–или–
                Параметр <paramref name="options" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeOptions" />.–или–
                Значение <paramref name="inBufferSize" /> является отрицательным числом.–или–
                Параметр <paramref name="inheritability" /> не является допустимым значением <see cref="T:System.IO.HandleInheritability" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Операционной системой является Windows Millennium Edition, Windows 98 или Windows 95.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> с заданным именем канала, направлением канала, максимальным количеством экземпляров сервера, режимом передачи, параметрами канала, рекомендуемыми размерами входного и выходного буферов, режимом безопасности канала, режимом наследования и правами доступа к каналу.</summary>
      <param name="pipeName">Имя канала.</param>
      <param name="direction">Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, с помощью которого можно определить направление канала.</param>
      <param name="maxNumberOfServerInstances">Максимальное число экземпляров сервера с одинаковыми именами.</param>
      <param name="transmissionMode">Одно из значений <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, определяющих режим передачи для канала.</param>
      <param name="options">Одно из значений &lt;<see cref="T:System.IO.Pipes.PipeOptions" />, с помощью которого можно определить способ открытия или создания канала.</param>
      <param name="inBufferSize">Размер входного буфера.</param>
      <param name="outBufferSize">Размер выходного буфера.</param>
      <param name="pipeSecurity">Объект <see cref="T:System.IO.Pipes.PipeSecurity" />, определяющий правила управления доступом и аудита безопасности для канала.</param>
      <param name="inheritability">Одно из значений <see cref="T:System.IO.HandleInheritability" />, определяющих, может ли базовый дескриптор наследоваться дочерними процессами.</param>
      <param name="additionalAccessRights">Одно из значений <see cref="T:System.IO.Pipes.PipeAccessRights" />, задающих права доступа для канала.</param>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="pipeName" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="pipeName" /> является строкой нулевой длины.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                В качестве <paramref name="pipeName" /> задано "anonymous".–или–
                Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.–или–
                Значение параметра <paramref name="maxNumberofServerInstances" /> меньше единицы или больше 254.–или–
                Параметр <paramref name="options" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeOptions" />.–или–
                Значение <paramref name="inBufferSize" /> является отрицательным числом.–или–
                Параметр <paramref name="inheritability" /> не является допустимым значением <see cref="T:System.IO.HandleInheritability" />.–или–
                Параметр <paramref name="additionalAccessRights" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeAccessRights" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Операционной системой является Windows Millennium Edition, Windows 98 или Windows 95.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)">
      <summary>Начинает асинхронную операцию ожидания подключения клиента.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, ссылающийся на асинхронный запрос.</returns>
      <param name="callback">Метод, который нужно вызывать, когда клиент подключается к объекту <see cref="T:System.IO.Pipes.NamedPipeServerStream" />.</param>
      <param name="state">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного асинхронного запроса от других запросов.</param>
      <exception cref="T:System.InvalidOperationException">Канал не был открыт асинхронно.–или–Подключение канала уже установлено.–или–Дескриптор канала не задан.</exception>
      <exception cref="T:System.IO.IOException">Подключение канала разорвано.</exception>
      <exception cref="T:System.ObjectDisposedException">Канал закрыт.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Disconnect">
      <summary>Отсоединяет текущее подключение.</summary>
      <exception cref="T:System.InvalidOperationException">Подключения канала еще не установлены.–или–Подключенный канал уже отсоединен.–или–Дескриптор канала не задан.</exception>
      <exception cref="T:System.ObjectDisposedException">Канал закрыт.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)">
      <summary>Заканчивает асинхронную операцию, чтобы ждать подключения клиента.</summary>
      <param name="asyncResult">Отложенный асинхронный запрос.</param>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="asyncResult" /> — null.</exception>
      <exception cref="T:System.InvalidOperationException">Канал не был открыт асинхронно.–или–Дескриптор канала не задан.</exception>
      <exception cref="T:System.IO.IOException">Подключение канала разорвано.</exception>
      <exception cref="T:System.ObjectDisposedException">Канал закрыт.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName">
      <summary>Получает имя пользователя клиента на другом конце канала.</summary>
      <returns>Имя пользователя клиента на другом конце канала.</returns>
      <exception cref="T:System.InvalidOperationException">Подключения канала еще не установлены.–или–Подключенный канал уже отсоединен.–или–Дескриптор канала не задан.</exception>
      <exception cref="T:System.ObjectDisposedException">Канал закрыт.</exception>
      <exception cref="T:System.IO.IOException">Подключение канала разорвано.</exception>
    </member>
    <member name="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances">
      <summary>Представляет максимальное число экземпляров сервера, допускаемое системными ресурсами.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)">
      <summary>Вызывает делегата во время выполнения олицетворения клиента.</summary>
      <param name="impersonationWorker">Делегат, определяющий метод, который необходимо вызвать.</param>
      <exception cref="T:System.InvalidOperationException">Подключения канала еще не установлены.–или–Подключенный канал уже отсоединен.–или–Дескриптор канала не задан.</exception>
      <exception cref="T:System.ObjectDisposedException">Канал закрыт.</exception>
      <exception cref="T:System.IO.IOException">Подключение канала разорвано.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection">
      <summary>Ожидает подключения клиента к данному объекту <see cref="T:System.IO.Pipes.NamedPipeServerStream" />.</summary>
      <exception cref="T:System.InvalidOperationException">Подключение канала уже установлено.–или–Дескриптор канала не задан.</exception>
      <exception cref="T:System.ObjectDisposedException">Канал закрыт.</exception>
      <exception cref="T:System.IO.IOException">Подключение канала разорвано.</exception>
    </member>
    <member name="T:System.IO.Pipes.PipeAccessRights">
      <summary>Определяет права доступа, которые используются при создании правил доступа и аудита. Это перечисление имеет атрибут <see cref="T:System.FlagsAttribute" />, поддерживающий битовую комбинацию составляющих его значений.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadData">
      <summary>Указывает право на чтение данных из канала. Оно не включает в себя право на чтение атрибутов файловой системы, дополнительных атрибутов файловой системы или правил доступа и аудита.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.WriteData">
      <summary>Указывает право на запись данных в канал. Оно не включает в себя право на запись атрибутов файловой системы или дополнительных атрибутов файловой системы.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadAttributes">
      <summary>Указывает право на чтение атрибутов файловой системы из канала. Оно не включает в себя право на чтение данных, дополнительных атрибутов файловой системы или правил доступа и аудита.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.WriteAttributes">
      <summary>Указывает право на запись атрибутов файловой системы в канал. Оно не включает в себя право на запись данных или дополнительных атрибутов файловой системы.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes">
      <summary>Указывает право на чтение дополнительных атрибутов файловой системы из канала. Оно не включает в себя право на чтение данных, атрибутов файловой системы или правил доступа и аудита.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes">
      <summary>Указывает право на запись дополнительных атрибутов файловой системы в канал. Оно не включает в себя право на запись данных или атрибутов файловой системы.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.CreateNewInstance">
      <summary>Указывает право на создание нового канала. При задании этого права также устанавливается право <see cref="F:System.IO.Pipes.PipeAccessRights.Synchronize" />.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Delete">
      <summary>Указывает право на удаление канала.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadPermissions">
      <summary>Указывает право на чтение правил доступа и аудита из канала. Оно не включает в себя право на чтение данных, атрибутов файловой системы или дополнительных атрибутов файловой системы.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ChangePermissions">
      <summary>Указывает право на изменение правил безопасности и аудита, связанных с каналом.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.TakeOwnership">
      <summary>Указывает право на смену владельца канала. Обратите внимание, что владельцы канала имеют полный доступ к этому ресурсу.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Synchronize">
      <summary>Указывает, может ли приложение ждать синхронизации дескриптора канала с завершением операции ввода-вывода.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.FullControl">
      <summary>Указывает право на полный контроль над каналом, а также на изменение правил управления доступом и аудита. Это значение представляет комбинацию всех прав, определяемых данным перечислением.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Read">
      <summary>Указывает право на чтение из канала. Это право включает в себя права <see cref="F:System.IO.Pipes.PipeAccessRights.ReadAttributes" />, <see cref="F:System.IO.Pipes.PipeAccessRights.ReadData" />, <see cref="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes" /> и <see cref="F:System.IO.Pipes.PipeAccessRights.ReadPermissions" />.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Write">
      <summary>Указывает право на запись в канал. Это право включает в себя права <see cref="F:System.IO.Pipes.PipeAccessRights.WriteAttributes" />, <see cref="F:System.IO.Pipes.PipeAccessRights.WriteData" /> и <see cref="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes" />.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadWrite">
      <summary>Указывает право на чтение из канала и запись в канал. Это право включает в себя права <see cref="F:System.IO.Pipes.PipeAccessRights.ReadAttributes" />, <see cref="F:System.IO.Pipes.PipeAccessRights.ReadData" />, <see cref="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes" />, <see cref="F:System.IO.Pipes.PipeAccessRights.ReadPermissions" />, <see cref="F:System.IO.Pipes.PipeAccessRights.WriteAttributes" />, <see cref="F:System.IO.Pipes.PipeAccessRights.WriteData" /> и <see cref="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes" />.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity">
      <summary>Указывает право на внесение изменений в системный список управления доступом (SACL).</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeAccessRule">
      <summary>Представляет абстракцию записи управления доступом (ACE), определяющей правило доступа для канала.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.PipeAccessRule" /> с указанным удостоверением, правами доступа для канала и типом управления доступом.</summary>
      <param name="identity">Объект <see cref="T:System.Security.Principal.IdentityReference" />, инкапсулирующий ссылку на учетную запись пользователя.</param>
      <param name="rights">Одно из значений <see cref="T:System.IO.Pipes.PipeAccessRights" />, задающих тип операции, связанной с правилом доступа.</param>
      <param name="type">Одно из значений перечисления <see cref="T:System.Security.AccessControl.AccessControlType" />, с помощью которого можно задать запрет или разрешение на выполнение операции.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.PipeAccessRule" /> с указанным удостоверением, правами доступа для канала и типом управления доступом.</summary>
      <param name="identity">Имя учетной записи пользователя.</param>
      <param name="rights">Одно из значений <see cref="T:System.IO.Pipes.PipeAccessRights" />, задающих тип операции, связанной с правилом доступа.</param>
      <param name="type">Одно из значений перечисления <see cref="T:System.Security.AccessControl.AccessControlType" />, с помощью которого можно задать запрет или разрешение на выполнение операции.</param>
    </member>
    <member name="P:System.IO.Pipes.PipeAccessRule.PipeAccessRights">
      <summary>Получает флаги <see cref="T:System.IO.Pipes.PipeAccessRights" />, связанные с текущим объектом <see cref="T:System.IO.Pipes.PipeAccessRule" />.</summary>
      <returns>Битовая комбинация значений <see cref="T:System.IO.Pipes.PipeAccessRights" />.</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeAuditRule">
      <summary>Представляет абстракцию записи управления доступом (ACE), определяющей правило аудита для канала.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.PipeAuditRule" /> для учетной записи пользователя, указанной в объекте <see cref="T:System.Security.Principal.IdentityReference" />.</summary>
      <param name="identity">Объект <see cref="T:System.Security.Principal.IdentityReference" />, инкапсулирующий ссылку на учетную запись пользователя.</param>
      <param name="rights">Одно из значений <see cref="T:System.IO.Pipes.PipeAccessRights" />, задающих тип операции, связанной с правилом доступа.</param>
      <param name="flags">Одно из значений <see cref="T:System.Security.AccessControl.AuditFlags" />, задающих, когда следует проводить аудит.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.PipeAuditRule" /> для заданной учетной записи пользователя.</summary>
      <param name="identity">Имя учетной записи пользователя.</param>
      <param name="rights">Одно из значений <see cref="T:System.IO.Pipes.PipeAccessRights" />, задающих тип операции, связанной с правилом доступа.</param>
      <param name="flags">Одно из значений <see cref="T:System.Security.AccessControl.AuditFlags" />, задающих, когда следует проводить аудит.</param>
    </member>
    <member name="P:System.IO.Pipes.PipeAuditRule.PipeAccessRights">
      <summary>Получает флаги <see cref="T:System.IO.Pipes.PipeAccessRights" />, связанные с текущим объектом <see cref="T:System.IO.Pipes.PipeAuditRule" />.</summary>
      <returns>Битовая комбинация значений <see cref="T:System.IO.Pipes.PipeAccessRights" />. </returns>
    </member>
    <member name="T:System.IO.Pipes.PipeDirection">
      <summary>Задает направление канала.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.In">
      <summary>Указывает, что канал входящий.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.Out">
      <summary>Указывает, что канал исходящий.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.InOut">
      <summary>Указывает, что канал двусторонний.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeOptions">
      <summary>Предоставляет параметры для создания объекта <see cref="T:System.IO.Pipes.PipeStream" />. Это перечисление имеет атрибут <see cref="T:System.FlagsAttribute" />, поддерживающий битовую комбинацию составляющих его значений.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.None">
      <summary>Указывает, что дополнительных параметров не предусмотрено.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.WriteThrough">
      <summary>Указывает, что запись в системе должна выполняться через любой промежуточный кэш с переходом непосредственно в канал.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.Asynchronous">
      <summary>Указывает, что канал может использоваться для асинхронного чтения и записи.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeSecurity">
      <summary>Представляет правила управления доступом и аудита безопасности для канала.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
    </member>
    <member name="P:System.IO.Pipes.PipeSecurity.AccessRightType">
      <summary>Возвращает защищаемый объект <see cref="T:System.Type" />, связанный с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <returns>Тип защищаемого объекта, связанного с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.AccessRule" /> с использованием указанных значений.</summary>
      <returns>Объект <see cref="T:System.Security.AccessControl.AccessRule" />, созданный данным методом.</returns>
      <param name="identityReference">Удостоверение, к которому применяется правило доступа. Это должен быть объект, который можно привести к типу объекта <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="accessMask">Маска доступа данного правила. Маска доступа представляет собой группу из 32 битов, значение каждого из которых определяется отдельными интеграторами.</param>
      <param name="isInherited">true, если данное правило наследуется из родительского контейнера, в противном случае — false.</param>
      <param name="inheritanceFlags">Одно из значений <see cref="T:System.Security.AccessControl.InheritanceFlags" />, задающих свойства наследования правила доступа.</param>
      <param name="propagationFlags">Одно из значений <see cref="T:System.Security.AccessControl.PropagationFlags" />, задающих возможность автоматического распространения наследуемых правил доступа. Флаги распространения игнорируются, если параметр <paramref name="inheritanceFlags" /> имеет значение <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
      <param name="type">Указывает допустимый тип управления доступом.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Параметр <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> или <paramref name="type" /> задает недопустимое значение.</exception>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="identityReference" /> равно null. –или–
                Значение параметра <paramref name="accessMask" /> равно нулю.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> не принадлежит к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> или к типу (такому, как <see cref="T:System.Security.Principal.NTAccount" />), допускающему преобразование в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
      <summary>Возвращает объект <see cref="T:System.Type" />, связанный с правилами доступа для текущего объекта <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <returns>Тип объекта, связанного с правилами доступа для текущего объекта <see cref="T:System.IO.Pipes.PipeSecurity" />.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>Добавляет правило доступа в список управления доступом на уровне пользователей (DACL), связанный с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <param name="rule">Добавляемое правило доступа.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rule" /> — null.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
      <summary>Добавляет правило аудита в системный список управления доступом (SACL), связанный с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <param name="rule">Добавляемое правило аудита.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rule" /> — null.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.AuditRule" /> с использованием указанных значений.</summary>
      <returns>Объект <see cref="T:System.Security.AccessControl.AuditRule" />, созданный данным методом.</returns>
      <param name="identityReference">Удостоверение, к которому применяется правило доступа. Это должен быть объект, который можно привести к типу объекта <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
      <param name="accessMask">Маска доступа данного правила. Маска доступа представляет собой группу из 32 битов, значение каждого из которых определяется отдельными интеграторами.</param>
      <param name="isInherited">true, если данное правило наследуется из родительского контейнера, в противном случае — false.</param>
      <param name="inheritanceFlags">Одно из значений <see cref="T:System.Security.AccessControl.InheritanceFlags" />, задающих свойства наследования правила доступа.</param>
      <param name="propagationFlags">Одно из значений <see cref="T:System.Security.AccessControl.PropagationFlags" />, задающих возможность автоматического распространения наследуемых правил доступа. Флаги распространения игнорируются, если параметр <paramref name="inheritanceFlags" /> имеет значение <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
      <param name="flags">Одно из значений <see cref="T:System.Security.AccessControl.AuditFlags" />, задающих допустимый тип управления доступом.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Свойство <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> или <paramref name="flags" /> задает недопустимое значение.</exception>
      <exception cref="T:System.ArgumentNullException">Значение свойства <paramref name="identityReference" /> равно null. –или–Значение свойства <paramref name="accessMask" /> равно нулю.</exception>
      <exception cref="T:System.ArgumentException">Свойство <paramref name="identityReference" /> не принадлежит к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> или к типу (такому, как <see cref="T:System.Security.Principal.NTAccount" />), допускающему преобразование в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
      <summary>Возвращает объект <see cref="T:System.Type" />, связанный с правилами аудита для текущего объекта <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <returns>Тип объекта, связанного с правилами аудита для текущего объекта <see cref="T:System.IO.Pipes.PipeSecurity" />.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)">
      <summary>Сохраняет указанные разделы дескриптора безопасности, связанного с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />, в постоянном хранилище.</summary>
      <param name="handle">Дескриптор защищаемого объекта, с которым связан текущий объект <see cref="T:System.IO.Pipes.PipeSecurity" />.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.Persist(System.String)">
      <summary>Сохраняет указанные разделы дескриптора безопасности, связанного с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />, в постоянном хранилище.</summary>
      <param name="name">Имя защищаемого объекта, с которым связан текущий объект <see cref="T:System.IO.Pipes.PipeSecurity" />.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>Удаляет правило доступа из списка управления доступом на уровне пользователей (DACL), связанного с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <returns>true, если операция выполнена успешно, в противном случае — false.</returns>
      <param name="rule">Удаляемое правило доступа.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rule" /> — null.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
      <summary>Удаляет указанное правило доступа из списка управления доступом на уровне пользователей (DACL), связанного с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <param name="rule">Удаляемое правило доступа.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rule" /> — null.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
      <summary>Удаляет правило аудита из системного списка управления доступом (SACL), связанного с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <returns>true, если правило аудита удалено, в противном случае — false</returns>
      <param name="rule">Удаляемое правило аудита.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rule" /> — null.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
      <summary>Удаляет все правила аудита с тем же идентификатором безопасности, что и у заданного правила аудита, из системного списка управления доступом (SACL), связанного с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <param name="rule">Удаляемое правило аудита.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rule" /> — null.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
      <summary>Удаляет указанное правило аудита из системного списка управления доступом (SACL), связанного с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <param name="rule">Удаляемое правило аудита.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rule" /> — null.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>Удаляет все правила доступа из списка управления доступом на уровне пользователей (DACL), связанного с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />, а затем добавляет указанное правило доступа.</summary>
      <param name="rule">Добавляемое правило доступа.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rule" /> — null.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>Задает правило доступа в списке управления доступом на уровне пользователей (DACL), связанном с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <param name="rule">Задаваемое правило.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rule" /> — null.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
      <summary>Задает правило аудита в системном списке управления доступом (SACL), связанном с текущим объектом <see cref="T:System.IO.Pipes.PipeSecurity" />.</summary>
      <param name="rule">Задаваемое правило.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rule" /> — null.</exception>
    </member>
    <member name="T:System.IO.Pipes.PipeStream">
      <summary>
                    Предоставляет объект <see cref="T:System.IO.Stream" /> для канала, поддерживающий анонимные и именованные каналы.
                </summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
      <summary>
                    Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.PipeStream" /> с использованием указанного значения <see cref="T:System.IO.Pipes.PipeDirection" /> и размера буфера.
                </summary>
      <param name="direction">
                    Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, указывающих направление объекта канала.
                </param>
      <param name="bufferSize">
                    Положительное значение типа <see cref="T:System.Int32" /> (большее или равное 0), соответствующее размеру буфера.
                </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.
                
                    –или–
                
                    Значение параметра <paramref name="bufferSize" /> меньше 0.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
      <summary>
                    Инициализирует новый экземпляр класса <see cref="T:System.IO.Pipes.PipeStream" /> с использованием указанных значений <see cref="T:System.IO.Pipes.PipeDirection" />, <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> и размера буфера.
                </summary>
      <param name="direction">
                    Одно из значений <see cref="T:System.IO.Pipes.PipeDirection" />, указывающих направление объекта канала.
                </param>
      <param name="transmissionMode">
                    Одно из значений <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, указывающих режим передачи для объекта канала.
                </param>
      <param name="outBufferSize">
                    Положительное значение типа <see cref="T:System.Int32" /> (большее или равное 0), соответствующее размеру буфера.
                </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Параметр <paramref name="direction" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeDirection" />.
                
                    –или–
                
                    Параметр <paramref name="transmissionMode" /> не является допустимым значением <see cref="T:System.IO.Pipes.PipeTransmissionMode" />.
                
                    –или–
                
                    Значение параметра <paramref name="bufferSize" /> меньше 0.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
                    Начинает операцию асинхронного чтения.
                </summary>
      <returns>
                    Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное чтение.
                </returns>
      <param name="buffer">
                    Буфер, в который необходимо считать данные.
                </param>
      <param name="offset">
                    Смещение в <paramref name="buffer" /> (в байтах), с которого начинается чтение.
                </param>
      <param name="count">
                    Максимальное число байтов, предназначенных для чтения.
                </param>
      <param name="callback">
                    Метод, вызываемый после завершения операции асинхронного чтения.
                </param>
      <param name="state">
                    Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронное чтение от других запросов.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="buffer" /> — null.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="offset" /> меньше 0.
                
                    –или–
                <paramref name="count" /> меньше 0.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Значение <paramref name="count" /> больше числа байтов в буфере <paramref name="buffer" />.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
      <exception cref="T.System.NotSupportedException">
                    Канал не поддерживает операции чтения.
                </exception>
      <exception cref="T.System.InvalidOperationException">
                    Канал разорван, ожидает соединения, либо дескриптор не был установлен.
                </exception>
      <exception cref="T.System.IO.IOException">
                    Канал разорван или возникла иная ошибка ввода/вывода.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
                    Начинает операцию асинхронной записи.
                </summary>
      <returns>
                    Объект <see cref="T:System.IAsyncResult" />, который ссылается на операцию асинхронной записи.
                </returns>
      <param name="buffer">
                    Буфер, содержащий данные для записи в текущий поток.
                </param>
      <param name="offset">
                    Отсчитываемое от нуля смещение в <paramref name="buffer" /> (в байтах), с которого начинается копирование байтов в текущий поток.
                </param>
      <param name="count">
                    Максимальное число байтов для записи.
                </param>
      <param name="callback">
                    Метод, вызываемый после завершения операции асинхронной записи.
                </param>
      <param name="state">
                    Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронную запись от других запросов.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="buffer" /> — null.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="offset" /> меньше 0.
                
                    –или–
                <paramref name="count" /> меньше 0.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Значение <paramref name="count" /> больше числа байтов в буфере <paramref name="buffer" />.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
      <exception cref="T:System.NotSupportedException">
                    Канал не поддерживает операции записи.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Канал разорван, ожидает соединения, либо дескриптор не был установлен.
                </exception>
      <exception cref="T.System.IO.IOException">
                    Канал разорван или возникла иная ошибка ввода/вывода.
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanRead">
      <summary>
                    Получает значение, определяющее в текущем потоке наличие поддержки операций чтения.
                </summary>
      <returns>true, если поток поддерживает операции чтения, в противном случае — false.
                </returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanSeek">
      <summary>
                    Получает значение, показывающее, поддерживаются ли в текущем потоке операции поиска.
                </summary>
      <returns>
                    Значение false во всех случаях.
                </returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanWrite">
      <summary>
                    Получает значение, показывающее, поддерживаются ли в текущем потоке операции записи.
                </summary>
      <returns>true, если поток поддерживает операции записи, в противном случае — false.
                </returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations">
      <summary>
                    Проверяет, допускает ли состояние канала получение или установку свойств.
                </summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckReadOperations">
      <summary>
                    Проверяет, находится ли канал в подключенном состоянии для выполнения операций чтения.
                </summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckWriteOperations">
      <summary>
                    Проверяет, находится ли канал в подключенном состоянии для выполнения операций записи.
                </summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
      <summary>
                    Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.IO.Pipes.PipeStream" /> (при необходимости освобождает и управляемые ресурсы).
                </summary>
      <param name="disposing">
                    Значение true позволяет освободить управляемые и неуправляемые ресурсы; значение false позволяет освободить только неуправляемые ресурсы.
                </param>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
      <summary>
                    Завершает отложенный запрос асинхронного чтения.
                </summary>
      <returns>
                    Количество прочитанных байтов. Возвращаемое значение, равное нулю, обозначает конец потока (канал был закрыт).
                </returns>
      <param name="asyncResult">
                    Ссылка на отложенный асинхронный запрос.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="asyncResult" />— null. 
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> не был возвращен методом <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> текущего потока. 
                </exception>
      <exception cref="T:System.IO.IOException">
                    Поток закрылся или произошла внутренняя ошибка.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
      <summary>
                    Завершает отложенный запрос асинхронной записи.
                </summary>
      <param name="asyncResult">
                    Ссылка на отложенный асинхронный запрос.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="asyncResult" /> — null. 
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> не был возвращен методом <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> текущего потока. 
                </exception>
      <exception cref="T:System.IO.IOException">
                    Поток закрылся, или произошла внутренняя ошибка.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Flush">
      <summary>
                    Очищает буфер для текущего потока и вызывает запись всех буферизованных данных в соответствующее устройство.
                </summary>
      <exception cref="T.System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
      <exception cref="T.System.NotSupportedException">
                    Канал не поддерживает операции записи.
                </exception>
      <exception cref="T.System.IO.IOException">
                    Канал разорван или возникла иная ошибка ввода/вывода.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.GetAccessControl">
      <summary>
                    Получает объект <see cref="T:System.IO.Pipes.PipeSecurity" />, который инкапсулирует записи списка управления доступом (ACL) для канала, описываемого текущим объектом <see cref="T:System.IO.Pipes.PipeStream" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.IO.Pipes.PipeSecurity" />, который инкапсулирует записи списка управления доступом (ACL) для канала, описываемого текущим объектом <see cref="T:System.IO.Pipes.PipeStream" />.
                </returns>
      <exception cref="T.System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                    Внутренний вызов для установки информации о безопасности произошел с ошибкой.
                </exception>
      <exception cref="T.System.InvalidOperationException">
                    Внутренний вызов для установки информации о безопасности произошел с ошибкой.
                </exception>
      <exception cref="T.System.NotSupportedException">
                    Внутренний вызов для установки информации о безопасности произошел с ошибкой.
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.InBufferSize">
      <summary>
                    Получает размер (в байтах) входящего буфера для канала.
                </summary>
      <returns>
                    Целочисленное значение, представляющее размер входящего буфера (в байтах).
                </returns>
      <exception cref="T.System.InvalidOperationException">
                    Канал ожидает соединения.
                </exception>
      <exception cref="T.System.IO.IOException">
                    Канал разорван или возникла иная ошибка ввода/вывода.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
      <summary>
                    Инициализирует объект <see cref="T:System.IO.Pipes.PipeStream" /> на основе указанного объекта <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" />.
                </summary>
      <param name="handle">
                    Объект <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> для инициализируемого канала.
                </param>
      <param name="isExposed">
                    Значение true для предоставления дескриптора, в противном случае — false.
                </param>
      <param name="isAsync">true, если дескриптор открыт асинхронно, в противном случае — false.
                </param>
      <exception cref="T:System.IO.IOException">
                    Дескриптор не может быть привязан к каналу.
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsAsync">
      <summary>
                    Получает значение, показывающее, как был открыт объект <see cref="T:System.IO.Pipes.PipeStream" /> — синхронно или асинхронно.
                </summary>
      <returns>true, если объект <see cref="T:System.IO.Pipes.PipeStream" /> был открыт асинхронно, в противном случае — false.
                </returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsConnected">
      <summary>
                    Возвращает или задает значение, показывающее, подключен ли объект <see cref="T:System.IO.Pipes.PipeStream" />.
                </summary>
      <returns>
                    Значение true, если объект <see cref="T:System.IO.Pipes.PipeStream" /> подключен, в противном случае — false.
                </returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsHandleExposed">
      <summary>
                    Получает значение, показывающее, предоставлен ли дескриптор объекта <see cref="T:System.IO.Pipes.PipeStream" />.
                </summary>
      <returns>
                    Значение true, если дескриптор объекта <see cref="T:System.IO.Pipes.PipeStream" /> предоставлен; в противном случае — false.
                </returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsMessageComplete">
      <summary>
                    Получает значение, указывающее, содержатся ли еще данные в сообщении, возвращенном из последней операции чтения.
                </summary>
      <returns>true, если в сообщении больше нет символов для чтения, в противном случае — false.
                </returns>
      <exception cref="T:System.InvalidOperationException">
                    Канал не подключен.
                
                    –или–
                
                    Дескриптор канала не задан.
                
                    –или–
                
                    Значение свойства <see cref="P:System.IO.Pipes.PipeStream.ReadMode" /> канала отлично от <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.
                </exception>
      <exception cref="T.System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Length">
      <summary>
                    Получает длину потока в байтах.
                </summary>
      <returns>
                    0 во всех случаях.
                </returns>
      <exception cref="T:System.NotSupportedException">
                    Генерируется всегда.
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.OutBufferSize">
      <summary>
                    Получает размер (в байтах) исходящего буфера для канала.
                </summary>
      <returns>
                    Размер исходящего буфера в байтах.
                </returns>
      <exception cref="T.System.InvalidOperationException">
                    Канал ожидает соединения.
                </exception>
      <exception cref="T.System.IO.IOException">
                    Канал разорван или возникла иная ошибка ввода/вывода.
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Position">
      <summary>
                    Возвращает или задает текущую позицию в текущем потоке.
                </summary>
      <returns>
                    0 во всех случаях.
                </returns>
      <exception cref="T:System.NotSupportedException">
                    Генерируется всегда.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
                    Чтение блока байтов из потока и запись данных в заданный буфер.
                </summary>
      <returns>
                    Общее число байтов, считанных в <paramref name="buffer" />. Это число может быть меньше количества запрошенных байтов, если это количество байтов в настоящее время недоступно, а также равняться нулю, если достигнут конец потока.
                </returns>
      <param name="buffer">
                    При возвращении управления данным методом содержит указанный массив байтов, в котором значения между <paramref name="offset" /> и (<paramref name="offset" /> + <paramref name="count" /> - 1) заменены байтами, считанными из текущего источника.
                </param>
      <param name="offset">
                    Смещение в массиве <paramref name="buffer" /> (в байтах), начиная с которого будут размещаться считанные байты.
                </param>
      <param name="count">
                    Максимальное число байтов, предназначенных для чтения.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="buffer" /> — null.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="offset" /> меньше 0.
                
                    –или–
                <paramref name="count" /> меньше 0.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Значение <paramref name="count" /> больше числа байтов в буфере <paramref name="buffer" />.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
      <exception cref="T:System.NotSupportedException">
                    Канал не поддерживает операции чтения.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Канал разорван, ожидает соединения, либо дескриптор не был установлен.
                </exception>
      <exception cref="T:System.IO.IOException">
                    Произошла какая-либо ошибка ввода-вывода.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadByte">
      <summary>
                    Считывает байт из канала.
                </summary>
      <returns>
                    Байт, приведенный к типу <see cref="T:System.Int32" />, или -1, если достигнут конец потока (канал закрыт).
                </returns>
      <exception cref="T:System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
      <exception cref="T:System.NotSupportedException">
                    Канал не поддерживает операции чтения.
                </exception>
      <exception cref="T.System.InvalidOperationException">
                    Канал разорван, ожидает соединения, либо дескриптор не был установлен.
                </exception>
      <exception cref="T.System.IO.IOException">
                    Произошла какая-либо ошибка ввода-вывода.
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.ReadMode">
      <summary>
                    Возвращает или задает режим чтения для объекта <see cref="T:System.IO.Pipes.PipeStream" />.
                </summary>
      <returns>
                    Одно из значений <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, которое указывает, как объект <see cref="T:System.IO.Pipes.PipeStream" /> читает данные из канала.
                </returns>
      <exception cref="T.System.NotSupportedException">
                    Заданное значение не является допустимым значением <see cref="T:System.IO.Pipes.PipeTransmissionMode" />.
                </exception>
      <exception cref="T.System.InvalidOperationException">
                    Дескриптор не установлен.
                
                    –или–
                
                    Канал ожидает соединения с именованным клиентом.
                </exception>
      <exception cref="T.System.IO.IOException">
                    Канал разорван или возникла ошибка ввода/вывода с именованным клиентом.
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.SafePipeHandle">
      <summary>
                    Получает безопасный дескриптор для локального конца канала, инкапсулируемого текущим объектом <see cref="T:System.IO.Pipes.PipeStream" />.
                </summary>
      <returns>
                    Объект <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> для канала, инкапсулируемого текущим объектом <see cref="T:System.IO.Pipes.PipeStream" />.
                </returns>
      <exception cref="T:System.InvalidOperationException">
                    Дескриптор канала не задан.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
                    Устанавливает заданное значение в качестве текущей позиции в текущем потоке.
                </summary>
      <returns>
                    Новая позиция в потоке.
                </returns>
      <param name="offset">
                    Смещение относительно <paramref name="origin" />, задающее место, с которого начинается поиск.
                </param>
      <param name="origin">
                    Описывает начальную, конечную или текущую позицию как опорную точку для <paramref name="offset" />, используя значение типа <see cref="T:System.IO.SeekOrigin" />.
                </param>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
      <summary>
                    Применяет записи списка управления доступом (ACL), заданные объектом <see cref="T:System.IO.Pipes.PipeSecurity" />, к каналу, заданному объектом <see cref="T:System.IO.Pipes.PipeStream" />.
                </summary>
      <param name="pipeSecurity">
                    Объект <see cref="T:System.IO.Pipes.PipeSecurity" />, задающий запись списка управления доступом (ACL), которую необходимо применить к текущему каналу.
                </param>
      <exception cref="T.System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
      <exception cref="T.System.ArgumentNullException">
                    Значение параметра <paramref name="pipeSecurity" /> — null.
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                    Внутренний вызов для установки информации о безопасности произошел с ошибкой.
                </exception>
      <exception cref="T.System.InvalidOperationException">
                    Внутренний вызов для установки информации о безопасности произошел с ошибкой.
                </exception>
      <exception cref="T.System.NotSupportedException">
                    Внутренний вызов для установки информации о безопасности произошел с ошибкой.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
      <summary>
                    Задает указанное значение для длины текущего потока.
                </summary>
      <param name="value">
                    Новая длина потока.
                </param>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.TransmissionMode">
      <summary>
                    Получает режим передачи канала, поддерживаемый текущим каналом.
                </summary>
      <returns>
                    Одно из значений <see cref="T:System.IO.Pipes.PipeTransmissionMode" />, указывающих режим передачи, поддерживаемый текущим каналом.
                </returns>
      <exception cref="T.System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
      <exception cref="T.System.InvalidOperationException">
                    Дескриптор не установлен.
                
                    –или–
                
                    Канал ожидает соединения в процессе анонимной клиент-серверной операции или с именованным клиентом. 
                </exception>
      <exception cref="T.System.IO.IOException">
                    Канал разорван или возникла иная ошибка ввода/вывода.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
      <summary>
                    Ожидает завершения считывания всех отправленных байтов на противоположном конце канала.
                </summary>
      <exception cref="T.System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
      <exception cref="T.System.NotSupportedException">
                    Канал не поддерживает операции записи.
                </exception>
      <exception cref="T.System.IO.IOException">
                    Канал разорван или возникла иная ошибка ввода/вывода.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
                    Записывает в текущий поток блок байтов, используя данные из буфера.
                </summary>
      <param name="buffer">
                    Буфер, содержащий данные для записи в канал.
                </param>
      <param name="offset">
                    Отсчитываемое от нуля смещение в <paramref name="buffer" /> (в байтах), с которого начинается копирование байтов в текущий поток.
                </param>
      <param name="count">
                    Максимальное число байтов для записи в текущий поток.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Значение параметра <paramref name="buffer" /> — null.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="offset" /> меньше 0.
                
                    –или–
                <paramref name="count" /> меньше 0.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Значение <paramref name="count" /> больше числа байтов в буфере <paramref name="buffer" />.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
      <exception cref="T:System.NotSupportedException">
                    Канал не поддерживает операции записи.
                </exception>
      <exception cref="T:System.IO.IOException">
                    Канал разорван или возникла иная ошибка ввода/вывода.
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
      <summary>
                    Выполняет запись байта в текущий поток.
                </summary>
      <param name="value">
                    Байт, записываемый в поток.
                </param>
      <exception cref="T:System.ObjectDisposedException">
                    Канал закрыт.
                </exception>
      <exception cref="T:System.NotSupportedException">
                    Канал не поддерживает операции записи.
                </exception>
      <exception cref="T.System.InvalidOperationException">
                    Канал разорван, ожидает соединения, либо дескриптор не был установлен.
                </exception>
      <exception cref="T.System.IO.IOException">
                    Канал разорван или возникла иная ошибка ввода/вывода.
                </exception>
    </member>
    <member name="T:System.IO.Pipes.PipeStreamImpersonationWorker">
      <summary>Представляет метод, который необходимо вызвать как клиент.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeTransmissionMode">
      <summary>Задает режим передачи для канала.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Byte">
      <summary>Указывает, что данные в канале передаются и считываются как поток байтов.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Message">
      <summary>Указывает, что данные в канале передаются и считываются как поток сообщений.</summary>
    </member>
    <member name="T:System.Linq.Enumerable">
      <summary>
                    Предоставляет набор методов типа static (Shared в Visual Basic) для выполнения запросов к объектам, реализующим интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />.
                </summary>
    </member>
    <member name="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
      <summary>
                    Применяет к последовательности агрегатную функцию.
                </summary>
      <returns>
                    Конечное агрегатное значение.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, для которого выполняется статистическая операция.
                </param>
      <param name="func">
                    Агрегатная функция, вызываемая для каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="func" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
      <summary>
                    Применяет к последовательности агрегатную функцию. Указанное начальное значение используется в качестве исходного значения агрегатной операции.
                </summary>
      <returns>
                    Конечное агрегатное значение.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, для которого выполняется статистическая операция.
                </param>
      <param name="seed">
                    Начальное агрегатное значение.
                </param>
      <param name="func">
                    Агрегатная функция, вызываемая для каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TAccumulate">
                    Тип агрегатного значения.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="func" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary>
                    Применяет к последовательности агрегатную функцию. Указанное начальное значение служит исходным значением для агрегатной операции, а указанная функция используется для выбора результирующего значения.
                </summary>
      <returns>
                    Преобразованное конечное агрегатное значение.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, для которого выполняется статистическая операция.
                </param>
      <param name="seed">
                    Начальное агрегатное значение.
                </param>
      <param name="func">
                    Агрегатная функция, вызываемая для каждого элемента.
                </param>
      <param name="resultSelector">
                    Функция, преобразующая конечное агрегатное значение в результирующее значение.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TAccumulate">
                    Тип агрегатного значения.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующего значения.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="func" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Проверяет, все ли элементы последовательности удовлетворяют условию.
                </summary>
      <returns>true, если каждый элемент исходной последовательности проходит проверку, определяемую указанным предикатом, или если последовательность пуста; в противном случае — false.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий элементы, к которым применяется предикат.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Проверяет, содержит ли последовательность какие-либо элементы.
                </summary>
      <returns>true, если исходная последовательность содержит какие-либо элементы, в противном случае — false.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, проверяемый на наличие элементов.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Проверяет, удовлетворяет ли какой-либо элемент последовательности заданному условию.
                </summary>
      <returns>true, если какие-либо элементы исходной последовательности проходят проверку, определяемую указанным предикатом; в противном случае — false.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, к элементам которого применяется предикат.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает входные данные, приведенные к типу <see cref="T:System.Collections.Generic.IEnumerable`1" />.
                </summary>
      <returns>
                    Входная последовательность, приведенная к типу <see cref="T:System.Collections.Generic.IEnumerable`1" />.
                </returns>
      <param name="source">
                    Последовательность, которая приводится к типу <see cref="T:System.Collections.Generic.IEnumerable`1" />.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Decimal" />.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Decimal" />, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма элементов последовательности больше, чем <see cref="F:System.Decimal.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Double" />.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Double" />, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Int32" />.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int32" />, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма элементов последовательности больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Int64" />.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int64" />, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма элементов последовательности больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Decimal" /> обнуляемого типа, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма элементов последовательности больше, чем <see cref="F:System.Decimal.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Double" /> обнуляемого типа.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Double" /> обнуляемого типа, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Int32" /> обнуляемого типа.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int32" /> обнуляемого типа, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма элементов последовательности больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Int64" /> обнуляемого типа.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int64" /> обнуляемого типа, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма элементов последовательности больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Single" /> обнуляемого типа.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Single" /> обнуляемого типа, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Single" />.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Single" />, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Decimal" />, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений, используемых для вычисления среднего.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма элементов последовательности больше, чем <see cref="F:System.Decimal.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Double" />, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Int32" />, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма элементов последовательности больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Int64" />, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов исходной последовательности.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма элементов последовательности больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма элементов последовательности больше, чем <see cref="F:System.Decimal.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Double" /> обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Int32" /> обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма элементов последовательности больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Int64" /> обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Single" /> обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Single" />, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
      <summary>
                    Преобразовывает элементы объекта <see cref="T:System.Collections.IEnumerable" /> в заданный тип.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, который содержит все элементы исходной последовательности, преобразованные в заданный тип.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.IEnumerable" />, содержащий преобразуемые элементы.
                </param>
      <typeparam name="TResult">
                    Тип, в который преобразуются элементы объекта <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidCastException">
                    Элемент последовательности не может быть приведен к типу <paramref name="TResult" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Объединяет две последовательности.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий объединенные элементы двух входных последовательностей.
                </returns>
      <param name="first">
                    Первая из объединяемых последовательностей.
                </param>
      <param name="second">
                    Последовательность, объединяемая с первой последовательностью.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="first" /> или <paramref name="second" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary>
                    Определяет, содержится ли указанный элемент в последовательности, используя компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>true, если исходная последовательность содержит элемент с указанным значением, в противном случае — false.
                </returns>
      <param name="source">
                    Последовательность, в которой требуется найти данное значение.
                </param>
      <param name="value">
                    Значение, которое требуется найти в последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Определяет, содержит ли последовательность заданный элемент, используя указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>true, если исходная последовательность содержит элемент с указанным значением, в противном случае — false.
                </returns>
      <param name="source">
                    Последовательность, в которой требуется найти данное значение.
                </param>
      <param name="value">
                    Значение, которое требуется найти в последовательности.
                </param>
      <param name="comparer">
                    Компаратор проверки на равенство, используемый для сравнения значений.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает количество элементов в последовательности.
                </summary>
      <returns>
                    Число элементов во входной последовательности.
                </returns>
      <param name="source">
                    Последовательность, элементы которой требуется подсчитать.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Число элементов в последовательности <paramref name="source" /> больше, чем <see cref="F:System.Int32.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Возвращает число, представляющее количество элементов последовательности, удовлетворяющих заданному условию.
                </summary>
      <returns>
                    Число, представляющее количество элементов последовательности, удовлетворяющих условию функции предиката.
                </returns>
      <param name="source">
                    Последовательность, элементы которой требуется проверить и подсчитать.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Число элементов в последовательности <paramref name="source" /> больше, чем <see cref="F:System.Int32.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает элементы указанной последовательности или одноэлементную коллекцию, содержащую значение параметра типа по умолчанию, если последовательность пуста.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий значение default(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста; в противном случае возвращается <paramref name="source" />.
                </returns>
      <param name="source">
                    Последовательность, для которой возвращается значение по умолчанию, если она пуста.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
      <summary>
                    Возвращает элементы указанной последовательности или одноэлементную коллекцию, содержащую указанное значение, если последовательность пуста.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий значение <paramref name="defaultValue" />, если последовательность <paramref name="source" /> пуста; в противном случае возвращается <paramref name="source" />.
                </returns>
      <param name="source">
                    Последовательность, для которой возвращается указанное значение, если она пуста.
                </param>
      <param name="defaultValue">
                    Значение, возвращаемое в случае пустой последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает различающиеся элементы последовательности, используя для сравнения значений компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий различающиеся элементы из исходной последовательности.
                </returns>
      <param name="source">
                    Последовательность, из которой требуется удалить дубликаты элементов.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Возвращает различающиеся элементы последовательности, используя для сравнения значений указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий различающиеся элементы из исходной последовательности.
                </returns>
      <param name="source">
                    Последовательность, из которой требуется удалить дубликаты элементов.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>
                    Возвращает элемент по указанному индексу в последовательности.
                </summary>
      <returns>
                    Элемент, находящийся в указанной позиции в исходной последовательности.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="index">
                    Отсчитываемый от нуля индекс элемента, который требуется извлечь.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение <paramref name="index" /> меньше 0 либо больше или равно числу элементов последовательности <paramref name="source" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>
                    Возвращает элемент по указанному индексу в последовательности или значение по умолчанию, если индекс вне допустимого диапазона.
                </summary>
      <returns>default(<paramref name="TSource" />), если индекс указывает позицию вне исходной последовательности, в противном случае — элемент, находящийся в указанной позиции в исходной последовательности.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="index">
                    Отсчитываемый от нуля индекс элемента, который требуется извлечь.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Empty``1">
      <summary>
                    Возвращает пустую коллекцию <see cref="T:System.Collections.Generic.IEnumerable`1" /> с указанным аргументом типа.
                </summary>
      <returns>
                    Пустая коллекция <see cref="T:System.Collections.Generic.IEnumerable`1" /> с аргументом типа <paramref name="TResult" />.
                </returns>
      <typeparam name="TResult">
                    Тип, присваиваемый параметру типа возвращаемого универсального интерфейса <see cref="T:System.Collections.Generic.IEnumerable`1" />.
                </typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Находит разность множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Последовательность, представляющая собой разность двух последовательностей как множеств.
                </returns>
      <param name="first">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется извлечь элементы, отсутствующие в последовательности <paramref name="second" />.
                </param>
      <param name="second">
                    Последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которой, входящие также в первую последовательность, должны быть исключены из возвращаемой последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="first" /> или <paramref name="second" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Находит разность множеств, представленных двумя последовательностями, используя для сравнения значений указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Последовательность, представляющая собой разность двух последовательностей как множеств.
                </returns>
      <param name="first">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется извлечь элементы, отсутствующие в последовательности <paramref name="second" />.
                </param>
      <param name="second">
                    Последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которой, входящие также в первую последовательность, должны быть исключены из возвращаемой последовательности.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="first" /> или <paramref name="second" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает первый элемент последовательности.
                </summary>
      <returns>
                    Первый элемент указанной последовательности.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, первый элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Исходная последовательность пуста.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Возвращает первый элемент последовательности, удовлетворяющий указанному условию.
                </summary>
      <returns>
                    Первый элемент последовательности, который прошел проверку, определенную указанной функцией предиката.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Ни один элемент не удовлетворяет условию предиката <paramref name="predicate" />.
                
                    -или-
                
                    Исходная последовательность пуста.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает первый элемент последовательности или значение по умолчанию, если последовательность не содержит элементов.
                </summary>
      <returns>default(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста, в противном случае — первый элемент последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, первый элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Возвращает первый удовлетворяющий условию элемент последовательности или значение по умолчанию, если ни одного такого элемента не найдено.
                </summary>
      <returns>default(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста или ни один ее элемент не прошел проверку, определенную предикатом <paramref name="predicate" />; в противном случае — первый элемент последовательности <paramref name="source" />, прошедший проверку, определенную предикатом <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа.
                </summary>
      <returns>
                    Объект IEnumerable&lt;IGrouping&lt;TKey, TSource&gt;&gt; в C# или IEnumerable(Of IGrouping(Of TKey, TSource)) в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит последовательность объектов и ключ.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и сравнивает ключи с помощью указанного компаратора.
                </summary>
      <returns>
                    Объект IEnumerable&lt;IGrouping&lt;TKey, TSource&gt;&gt; в C# или IEnumerable(Of IGrouping(Of TKey, TSource)) в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит коллекцию объектов и ключ.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и проецирует элементы каждой группы с помощью указанной функции.
                </summary>
      <returns>
                    Объект IEnumerable&lt;IGrouping&lt;TKey, TElement&gt;&gt; в C# или IEnumerable(Of IGrouping(Of TKey, TElement)) в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит коллекцию объектов типа <paramref name="TElement" /> и ключ.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип элементов объекта <see cref="T:System.Linq.IGrouping`2" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="elementSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Группирует элементы последовательности в соответствии с функцией селектора ключа. Ключи сравниваются с помощью компаратора, элементы каждой группы проецируются с помощью указанной функции.
                </summary>
      <returns>
                    Объект IEnumerable&lt;IGrouping&lt;TKey, TElement&gt;&gt; в C# или IEnumerable(Of IGrouping(Of TKey, TElement)) в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит коллекцию объектов типа <paramref name="TElement" /> и ключ.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип элементов объекта <see cref="T:System.Linq.IGrouping`2" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="elementSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа. Элементы каждой группы проецируются с помощью указанной функции.
                </summary>
      <returns>
                    Коллекция элементов типа <paramref name="TResult" />, в которой каждый элемент представляет проекцию группы и ее ключа.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего значения для каждой группы.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип элементов каждого объекта <see cref="T:System.Linq.IGrouping`2" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.
                </typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа. Значения ключей сравниваются с помощью указанного компаратора, элементы каждой группы проецируются с помощью указанной функции.
                </summary>
      <returns>
                    Коллекция элементов типа <paramref name="TResult" />, в которой каждый элемент представляет проекцию группы и ее ключа.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего значения для каждой группы.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип элементов каждого объекта <see cref="T:System.Linq.IGrouping`2" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.
                </typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа.
                </summary>
      <returns>
                    Коллекция элементов типа <paramref name="TResult" />, в которой каждый элемент представляет проекцию группы и ее ключа.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего значения для каждой группы.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.
                </typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа. Ключи сравниваются с использованием заданного компаратора.
                </summary>
      <returns>
                    Коллекция элементов типа <paramref name="TResult" />, в которой каждый элемент представляет проекцию группы и ее ключа.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего значения для каждой группы.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.
                </typeparam>
    </member>
    <member name="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary>
                    Устанавливает корреляцию между элементами двух последовательностей на основе равенства ключей и группирует результаты. Для сравнения ключей используется компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате соединения двух последовательностей с группировкой.
                </returns>
      <param name="outer">
                    Первая последовательность для соединения.
                </param>
      <param name="inner">
                    Последовательность, соединяемая с первой последовательностью.
                </param>
      <param name="outerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента первой последовательности.
                </param>
      <param name="innerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента второй последовательности.
                </param>
      <param name="resultSelector">
                    Функция, создающая результирующий элемент для элемента первой последовательности и коллекции соответствующих элементов второй последовательности.
                </param>
      <typeparam name="TOuter">
                    Тип элементов первой последовательности.
                </typeparam>
      <typeparam name="TInner">
                    Тип элементов второй последовательности.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключей, возвращаемых функциями селектора ключа.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующих элементов.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>
                    Устанавливает корреляцию между элементами двух последовательностей на основе равенства ключей и группирует результаты. Для сравнения ключей используется указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате соединения двух последовательностей с группировкой.
                </returns>
      <param name="outer">
                    Первая последовательность для соединения.
                </param>
      <param name="inner">
                    Последовательность, соединяемая с первой последовательностью.
                </param>
      <param name="outerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента первой последовательности.
                </param>
      <param name="innerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента второй последовательности.
                </param>
      <param name="resultSelector">
                    Функция, создающая результирующий элемент для элемента первой последовательности и коллекции соответствующих элементов второй последовательности.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для хеширования и сравнения ключей.
                </param>
      <typeparam name="TOuter">
                    Тип элементов первой последовательности.
                </typeparam>
      <typeparam name="TInner">
                    Тип элементов второй последовательности.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключей, возвращаемых функциями селектора ключа.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующих элементов.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Находит пересечение множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Последовательность элементов, представляющая собой пересечение двух заданных последовательностей как множеств.
                </returns>
      <param name="first">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого извлекаются различающиеся элементы, входящие также в последовательность <paramref name="second" />.
                </param>
      <param name="second">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого извлекаются различающиеся элементы, входящие также в первую последовательность.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="first" /> или <paramref name="second" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Находит пересечение множеств, представленных двумя последовательностями, используя для сравнения значений указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Последовательность элементов, представляющая собой пересечение двух заданных последовательностей как множеств.
                </returns>
      <param name="first">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого извлекаются различающиеся элементы, входящие также в последовательность <paramref name="second" />.
                </param>
      <param name="second">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого извлекаются различающиеся элементы, входящие также в первую последовательность.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="first" /> или <paramref name="second" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary>
                    Устанавливает корреляцию между элементами двух последовательностей на основе сопоставления ключей. Для сравнения ключей используется компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате внутреннего соединения двух последовательностей.
                </returns>
      <param name="outer">
                    Первая последовательность для соединения.
                </param>
      <param name="inner">
                    Последовательность, соединяемая с первой последовательностью.
                </param>
      <param name="outerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента первой последовательности.
                </param>
      <param name="innerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента второй последовательности.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего элемента для пары соответствующих элементов.
                </param>
      <typeparam name="TOuter">
                    Тип элементов первой последовательности.
                </typeparam>
      <typeparam name="TInner">
                    Тип элементов второй последовательности.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключей, возвращаемых функциями селектора ключа.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующих элементов.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>
                    Устанавливает корреляцию между элементами двух последовательностей на основе сопоставления ключей. Для сравнения ключей используется указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате внутреннего соединения двух последовательностей.
                </returns>
      <param name="outer">
                    Первая последовательность для соединения.
                </param>
      <param name="inner">
                    Последовательность, соединяемая с первой последовательностью.
                </param>
      <param name="outerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента первой последовательности.
                </param>
      <param name="innerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента второй последовательности.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего элемента для пары соответствующих элементов.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для хеширования и сравнения ключей.
                </param>
      <typeparam name="TOuter">
                    Тип элементов первой последовательности.
                </typeparam>
      <typeparam name="TInner">
                    Тип элементов второй последовательности.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключей, возвращаемых функциями селектора ключа.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующих элементов.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает последний элемент последовательности.
                </summary>
      <returns>
                    Значение, находящееся в последней позиции исходной последовательности.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, последний элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Исходная последовательность пуста.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Возвращает последний элемент последовательности, удовлетворяющий указанному условию.
                </summary>
      <returns>
                    Последний элемент последовательности, который прошел проверку, определенную указанной функцией предиката.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Ни один элемент не удовлетворяет условию предиката <paramref name="predicate" />.
                
                    -или-
                
                    Исходная последовательность пуста.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает последний элемент последовательности или значение по умолчанию, если последовательность не содержит элементов.
                </summary>
      <returns>default(<paramref name="TSource" />), если исходная последовательность пуста, в противном случае — последний элемент коллекции <see cref="T:System.Collections.Generic.IEnumerable`1" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, последний элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Возвращает последний элемент последовательности, удовлетворяющий указанному условию, или значение по умолчанию, если ни одного такого элемента не найдено.
                </summary>
      <returns>default(<paramref name="TSource" />), если последовательность пуста или ни один ее элемент не прошел проверку функцией предиката, в противном случае — последний элемент, прошедший проверку функцией предиката.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает значение типа <see cref="T:System.Int64" />, представляющее общее число элементов в последовательности.
                </summary>
      <returns>
                    Число элементов в исходной последовательности.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий элементы, которые требуется подсчитать.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Число элементов больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Возвращает значение типа <see cref="T:System.Int64" />, представляющее число элементов последовательности, удовлетворяющих заданному условию.
                </summary>
      <returns>
                    Число, представляющее количество элементов последовательности, удовлетворяющих условию функции предиката.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий элементы, которые требуется подсчитать.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Число найденных элементов больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>
                    Возвращает максимальное значение, содержащееся в последовательности значений типа <see cref="T:System.Decimal" />.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений типа <see cref="T:System.Decimal" />, для которой определяется максимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
                    Возвращает максимальное значение, содержащееся в последовательности значений типа <see cref="T:System.Double" />.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений типа <see cref="T:System.Double" />, для которой определяется максимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
                    Возвращает максимальное значение, содержащееся в последовательности значений типа <see cref="T:System.Int32" />.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений типа <see cref="T:System.Int32" />, для которой определяется максимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>
                    Возвращает максимальное значение, содержащееся в последовательности значений типа <see cref="T:System.Int64" />.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений типа <see cref="T:System.Int64" />, для которой определяется максимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>
                    Возвращает максимальное значение в последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Decimal&gt; в C# или Nullable(Of Decimal) в Visual Basic, соответствующее максимальному значению последовательности. 
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Decimal" /> обнуляемого типа, для которой определяется максимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>
                    Возвращает максимальное значение в последовательности значений <see cref="T:System.Double" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Double&gt; в C# или Nullable(Of Double) в Visual Basic, соответствующее максимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Double" /> обнуляемого типа, для которой определяется максимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>
                    Возвращает максимальное значение в последовательности значений <see cref="T:System.Int32" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Int32&gt; в C# или Nullable(Of Int32) в Visual Basic, соответствующее максимальному значению последовательности. 
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int32" /> обнуляемого типа, для которой определяется максимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>
                    Возвращает максимальное значение в последовательности значений <see cref="T:System.Int64" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Int64&gt; в C# или Nullable(Of Int64) в Visual Basic, соответствующее максимальному значению последовательности. 
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int64" /> обнуляемого типа, для которой определяется максимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <summary>
                    Возвращает максимальное значение в последовательности значений <see cref="T:System.Single" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Single&gt; в C# или Nullable(Of Single) в Visual Basic, соответствующее максимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Single" /> обнуляемого типа, для которой определяется максимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})">
      <summary>
                    Возвращает максимальное значение, содержащееся в последовательности значений типа <see cref="T:System.Single" />.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений типа <see cref="T:System.Single" />, для которой определяется максимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает максимальное значение, содержащееся в универсальной последовательности.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение типа <see cref="T:System.Decimal" />.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение типа <see cref="T:System.Double" />.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение типа <see cref="T:System.Int32" />.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение типа <see cref="T:System.Int64" />.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение <see cref="T:System.Decimal" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Decimal&gt; в C# или Nullable(Of Decimal) в Visual Basic, соответствующее максимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение <see cref="T:System.Double" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Double&gt; в C# или Nullable(Of Double) в Visual Basic, соответствующее максимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение <see cref="T:System.Int32" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Int32&gt; в C# или Nullable(Of Int32) в Visual Basic, соответствующее максимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение <see cref="T:System.Int64" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Int64&gt; в C# или Nullable(Of Int64) в Visual Basic, соответствующее максимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение <see cref="T:System.Single" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Single&gt; в C# или Nullable(Of Single) в Visual Basic, соответствующее максимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение типа <see cref="T:System.Single" />.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента универсальной последовательности и возвращает максимальное результирующее значение.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип значения, возвращаемого функцией <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>
                    Возвращает минимальное значение, содержащееся в последовательности значений типа <see cref="T:System.Decimal" />.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений типа <see cref="T:System.Decimal" />, для которой определяется минимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
                    Возвращает минимальное значение, содержащееся в последовательности значений типа <see cref="T:System.Double" />.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений типа <see cref="T:System.Double" />, для которой определяется минимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
                    Возвращает минимальное значение, содержащееся в последовательности значений типа <see cref="T:System.Int32" />.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений типа <see cref="T:System.Int32" />, для которой определяется минимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>
                    Возвращает минимальное значение, содержащееся в последовательности значений типа <see cref="T:System.Int64" />.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений типа <see cref="T:System.Int64" />, для которой определяется минимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>
                    Возвращает минимальное значение в последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Decimal&gt; в C# или Nullable(Of Decimal) в Visual Basic, соответствующее минимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Decimal" /> обнуляемого типа, для которой определяется минимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>
                    Возвращает минимальное значение в последовательности значений <see cref="T:System.Double" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Double&gt; в C# или Nullable(Of Double) в Visual Basic, соответствующее минимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Double" /> обнуляемого типа, для которой определяется минимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>
                    Возвращает минимальное значение в последовательности значений <see cref="T:System.Int32" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Int32&gt; в C# или Nullable(Of Int32) в Visual Basic, соответствующее минимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int32" /> обнуляемого типа, для которой определяется минимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>
                    Возвращает минимальное значение в последовательности значений <see cref="T:System.Int64" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Int64&gt; в C# или Nullable(Of Int64) в Visual Basic, соответствующее минимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int64" /> обнуляемого типа, для которой определяется минимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <summary>
                    Возвращает минимальное значение в последовательности значений <see cref="T:System.Single" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Single&gt; в C# или Nullable(Of Single) в Visual Basic, соответствующее минимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Single" /> обнуляемого типа, для которой определяется минимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})">
      <summary>
                    Возвращает минимальное значение, содержащееся в последовательности значений типа <see cref="T:System.Single" />.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений типа <see cref="T:System.Single" />, для которой определяется минимальное значение.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает минимальное значение, содержащееся в универсальной последовательности.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение типа <see cref="T:System.Decimal" />.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение типа <see cref="T:System.Double" />.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение типа <see cref="T:System.Int32" />.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение типа <see cref="T:System.Int64" />.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение <see cref="T:System.Decimal" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Decimal&gt; в C# или Nullable(Of Decimal) в Visual Basic, соответствующее минимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение <see cref="T:System.Double" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Double&gt; в C# или Nullable(Of Double) в Visual Basic, соответствующее минимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение <see cref="T:System.Int32" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Int32&gt; в C# или Nullable(Of Int32) в Visual Basic, соответствующее минимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение <see cref="T:System.Int64" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Int64&gt; в C# или Nullable(Of Int64) в Visual Basic, соответствующее минимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение <see cref="T:System.Single" /> обнуляемого типа.
                </summary>
      <returns>
                    Значение типа Nullable&lt;Single&gt; в C# или Nullable(Of Single) в Visual Basic, соответствующее минимальному значению последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение типа <see cref="T:System.Single" />.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Последовательность <paramref name="source" /> не содержит элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>
                    Вызывает функцию преобразования для каждого элемента универсальной последовательности и возвращает минимальное результирующее значение.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимальное значение.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип значения, возвращаемого функцией <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)">
      <summary>
                    Выполняет фильтрацию элементов объекта <see cref="T:System.Collections.IEnumerable" /> по заданному типу.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий элементы входной последовательности типа <paramref name="TResult" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.IEnumerable" />, элементы которого следует фильтровать.
                </param>
      <typeparam name="TResult">
                    Тип, по которому фильтруются элементы последовательности.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>
                    Сортирует элементы последовательности в порядке возрастания ключа.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, элементы которого отсортированы по ключу.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует упорядочить.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>
                    Сортирует элементы последовательности в порядке возрастания с использованием указанного компаратора.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, элементы которого отсортированы по ключу.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует упорядочить.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>
                    Сортирует элементы последовательности в порядке убывания ключа.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, элементы которого отсортированы по ключу в порядке убывания.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует упорядочить.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>
                    Сортирует элементы последовательности в порядке убывания с использованием указанного компаратора.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, элементы которого отсортированы по ключу в порядке убывания.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует упорядочить.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Range(System.Int32,System.Int32)">
      <summary>
                    Генерирует последовательность целых чисел в заданном диапазоне.
                </summary>
      <returns>
                    Объект IEnumerable&lt;Int32&gt; в C# или IEnumerable(Of Int32) в Visual Basic, содержащий диапазон последовательных целых чисел.
                </returns>
      <param name="start">
                    Значение первого целого числа для последовательности.
                </param>
      <param name="count">
                    Количество генерируемых последовательных целых чисел.
                </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="count" /> меньше 0.
                
                    -или-
                <paramref name="start" /> + <paramref name="count" /> -1 больше, чем <see cref="F:System.Int32.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Repeat``1(``0,System.Int32)">
      <summary>
                    Генерирует последовательность, содержащую одно повторяющееся значение.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий повторяющееся значение.
                </returns>
      <param name="element">
                    Повторяемое значение.
                </param>
      <param name="count">
                    Требуемое число повторений данного значения в создаваемой последовательности.
                </param>
      <typeparam name="TResult">
                    Тип значения, которое будет повторяться в результирующей последовательности.
                </typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="count" /> меньше 0.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Изменяет порядок элементов последовательности на противоположный.
                </summary>
      <returns>
                    Последовательность, элементы которой соответствуют элементам входной последовательности, но следуют в противоположном порядке.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует расставить в обратном порядке.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>
                    Проецирует каждый элемент последовательности в новую форму.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого получены в результате вызова функции преобразования для каждого элемента последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вызывается функция преобразования.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип значения, возвращаемого функцией <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
      <summary>
                    Проецирует каждый элемент последовательности в новую форму, добавляя индекс элемента.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого получены в результате вызова функции преобразования для каждого элемента последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вызывается функция преобразования.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому исходному элементу; второй параметр функции представляет индекс исходного элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип значения, возвращаемого функцией <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary>
                    Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, объединяет результирующие последовательности в одну и вызывает функцию селектора результата для каждого элемента этой последовательности.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого получены в результате вызова функции преобразования "один ко многим" <paramref name="collectionSelector" /> для каждого элемента последовательности <paramref name="source" /> и последующего сопоставления каждого элемента такой промежуточной последовательности и соответствующего ему исходного элемента с результирующим элементом.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует проецировать.
                </param>
      <param name="collectionSelector">
                    Функция преобразования, применяемая к каждому элементу входной последовательности.
                </param>
      <param name="resultSelector">
                    Функция преобразования, применяемая к каждому элементу промежуточной последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TCollection">
                    Тип промежуточных элементов, собранных функцией <paramref name="collectionSelector" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип элементов результирующей последовательности.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="collectionSelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <summary>
                    Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> и объединяет результирующие последовательности в одну последовательность.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого получены в результате вызова функции преобразования "один ко многим" для каждого элемента входной последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует проецировать.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип элементов последовательности, возвращаемых функцией <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary>
                    Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, объединяет результирующие последовательности в одну и вызывает функцию селектора результата для каждого элемента этой последовательности. Индекс каждого элемента исходной последовательности используется в промежуточной проецированной форме этого элемента.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого получены в результате вызова функции преобразования "один ко многим" <paramref name="collectionSelector" /> для каждого элемента последовательности <paramref name="source" /> и последующего сопоставления каждого элемента такой промежуточной последовательности и соответствующего ему исходного элемента с результирующим элементом.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует проецировать.
                </param>
      <param name="collectionSelector">
                    Функция преобразования, применяемая к каждому исходному элементу; второй параметр функции представляет индекс исходного элемента.
                </param>
      <param name="resultSelector">
                    Функция преобразования, применяемая к каждому элементу промежуточной последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TCollection">
                    Тип промежуточных элементов, собранных функцией <paramref name="collectionSelector" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип элементов результирующей последовательности.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="collectionSelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <summary>
                    Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> и объединяет результирующие последовательности в одну последовательность. Индекс каждого элемента исходной последовательности используется в проецированной форме этого элемента.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого получены в результате вызова функции преобразования "один ко многим" для каждого элемента входной последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует проецировать.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому исходному элементу; второй параметр функции представляет индекс исходного элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип элементов последовательности, возвращаемых функцией <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Определяет, совпадают ли две последовательности, используя для сравнения элементов компаратор проверки на равенство по умолчанию, предназначенный для их типа.
                </summary>
      <returns>true, если у двух исходных последовательностей одинаковая длина и соответствующие элементы совпадают, согласно компаратору проверки на равенство по умолчанию для этого типа элементов, в противном случае — false.
                </returns>
      <param name="first">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, сравниваемый с последовательностью <paramref name="second" />.
                </param>
      <param name="second">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, сравниваемый с первой последовательностью.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="first" /> или <paramref name="second" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Определяет, совпадают ли две последовательности, используя для сравнения элементов указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>true, если у двух исходных последовательностей одинаковая длина и соответствующие элементы совпадают согласно компаратору <paramref name="comparer" />, в противном случае — false.
                </returns>
      <param name="first">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, сравниваемый с последовательностью <paramref name="second" />.
                </param>
      <param name="second">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, сравниваемый с первой последовательностью.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения элементов.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="first" /> или <paramref name="second" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает единственный элемент последовательности и генерирует исключение, если число элементов последовательности отлично от 1.
                </summary>
      <returns>
                    Единственный элемент входной последовательности.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, единственный элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Во входной последовательности больше одного элемента.
                
                    -или-
                
                    Входная последовательность пуста.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Возвращает единственный элемент последовательности, удовлетворяющий заданному условию, и генерирует исключение, если таких элементов больше одного.
                </summary>
      <returns>
                    Единственный элемент входной последовательности, удовлетворяющий условию.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется возвратить единственный элемент.
                </param>
      <param name="predicate">
                    Функция для проверки элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Ни один элемент не удовлетворяет условию предиката <paramref name="predicate" />.
                
                    -или-
                
                    Условию предиката <paramref name="predicate" /> удовлетворяет более одного элемента.
                
                    -или-
                
                    Исходная последовательность пуста.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Возвращает единственный элемент последовательности или значение по умолчанию, если последовательность пуста; если в последовательности более одного элемента, генерируется исключение.
                </summary>
      <returns>
                    Единственный элемент входной последовательности или default(<paramref name="TSource" />), если в последовательности нет элементов.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, единственный элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Во входной последовательности больше одного элемента.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Возвращает единственный элемент последовательности, удовлетворяющий заданному условию, или значение по умолчанию, если такого элемента не существует; если условию удовлетворяет более одного элемента, генерируется исключение.
                </summary>
      <returns>
                    Единственный элемент входной последовательности, удовлетворяющий условию, или default(<paramref name="TSource" />), если такой элемент не найден.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется возвратить единственный элемент.
                </param>
      <param name="predicate">
                    Функция для проверки элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Условию предиката <paramref name="predicate" /> удовлетворяет более одного элемента.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>
                    Пропускает заданное число элементов в последовательности и возвращает остальные элементы.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий элементы из входной последовательности, начиная с указанного индекса.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется возвратить элементы.
                </param>
      <param name="count">
                    Число элементов, пропускаемых перед возвращением остальных элементов.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Пропускает элементы в последовательности, пока они удовлетворяют заданному условию, и затем возвращает оставшиеся элементы.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий цепочку элементов входной последовательности, начиная с первого элемента, который не прошел проверку, заданную предикатом <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется возвратить элементы.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>
                    Пропускает элементы в последовательности, пока они удовлетворяют заданному условию, и затем возвращает оставшиеся элементы. Индекс элемента используется в логике функции предиката.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий цепочку элементов входной последовательности, начиная с первого элемента, который не прошел проверку, заданную предикатом <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого требуется возвратить элементы.
                </param>
      <param name="predicate">
                    Функция, применяемая к каждому исходному элементу для проверки условия; второй параметр функции представляет индекс исходного элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Decimal" />.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Decimal" />, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Decimal.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Double" />.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Double" />, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Int32" />.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int32" />, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Int32.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Int64" />.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int64" />, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Decimal" /> обнуляемого типа, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Decimal.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Double" /> обнуляемого типа.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Double" /> обнуляемого типа, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Int32" /> обнуляемого типа.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int32" /> обнуляемого типа, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Int32.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Int64" /> обнуляемого типа.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int64" /> обнуляемого типа, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Single" /> обнуляемого типа.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Single" /> обнуляемого типа, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Single" />.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Single" />, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Decimal" />, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется сумма.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Decimal.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Double" />, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется сумма.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Int32" />, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется сумма.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Int32.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Int64" />, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется сумма.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется сумма.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Decimal.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Double" /> обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется сумма.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Int32" /> обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется сумма.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Int32.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Int64" /> обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется сумма.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.OverflowException">
                    Сумма больше, чем <see cref="F:System.Int64.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Single" /> обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется сумма.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Single" />, получаемой в результате применения функции преобразования к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется сумма.
                </param>
      <param name="selector">
                    Функция преобразования, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <summary>
                    Возвращает указанное число подряд идущих элементов с начала последовательности.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий заданное число элементов с начала входной последовательности.
                </returns>
      <param name="source">
                    Последовательность, из которой требуется возвратить элементы.
                </param>
      <param name="count">
                    Число возвращаемых элементов.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Возвращает цепочку элементов последовательности, удовлетворяющих указанному условию.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий элементы входной последовательности до первого элемента, который не прошел проверку.
                </returns>
      <param name="source">
                    Последовательность, из которой требуется возвратить элементы.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>
                    Возвращает цепочку элементов последовательности, удовлетворяющих указанному условию. Индекс элемента используется в логике функции предиката.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий элементы входной последовательности до первого элемента, который не прошел проверку.
                </returns>
      <param name="source">
                    Последовательность, из которой требуется возвратить элементы.
                </param>
      <param name="predicate">
                    Функция, применяемая к каждому исходному элементу для проверки условия; второй параметр функции представляет индекс исходного элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
      <summary>
                    Выполняет дополнительное упорядочение элементов последовательности в порядке возрастания ключа.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, элементы которого отсортированы по ключу.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, содержащий сортируемые элементы.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>
                    Выполняет дополнительное упорядочение элементов последовательности в порядке возрастания с использованием указанного компаратора.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, элементы которого отсортированы по ключу.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, содержащий сортируемые элементы.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
      <summary>
                    Выполняет дополнительное упорядочение элементов последовательности в порядке убывания ключа.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, элементы которого отсортированы по ключу в порядке убывания.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, содержащий сортируемые элементы.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>
                    Выполняет дополнительное упорядочение элементов последовательности в порядке убывания с использованием указанного компаратора.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, элементы которого отсортированы по ключу в порядке убывания.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, содержащий сортируемые элементы.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Создает массив из объекта <see cref="T:System.Collections.Generic.IEnumerable`1" />.
                </summary>
      <returns>
                    Массив, содержащий элементы из входной последовательности.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, на основе которого создается массив.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>
                    Создает словарь <see cref="T:System.Collections.Generic.Dictionary`2" /> из объекта <see cref="T:System.Collections.Generic.IEnumerable`1" /> в соответствии с заданной функцией селектора ключа.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, содержащий ключи и значения.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, на основе которого создается словарь <see cref="T:System.Collections.Generic.Dictionary`2" />.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                
                    -или-
                
                    Функция <paramref name="keySelector" /> возвращает null в качестве ключа.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Функция <paramref name="keySelector" /> выдает дубликаты ключей для двух элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Создает словарь <see cref="T:System.Collections.Generic.Dictionary`2" /> из объекта <see cref="T:System.Collections.Generic.IEnumerable`1" /> в соответствии с заданной функцией селектора ключа и компаратором ключей.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, содержащий ключи и значения.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, на основе которого создается словарь <see cref="T:System.Collections.Generic.Dictionary`2" />.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключей, возвращаемых функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                
                    -или-
                
                    Функция <paramref name="keySelector" /> возвращает null в качестве ключа.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Функция <paramref name="keySelector" /> выдает дубликаты ключей для двух элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>
                    Создает словарь <see cref="T:System.Collections.Generic.Dictionary`2" /> из объекта <see cref="T:System.Collections.Generic.IEnumerable`1" /> в соответствии с заданными функциями селектора ключа и селектора элемента.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, содержащий элементы входной последовательности типа <paramref name="TElement" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, на основе которого создается словарь <see cref="T:System.Collections.Generic.Dictionary`2" />.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция преобразования для получения результирующего значения каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип значения, возвращаемого функцией <paramref name="elementSelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="elementSelector" /> имеет значение null.
                
                    -или-
                
                    Функция <paramref name="keySelector" /> возвращает null в качестве ключа.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Функция <paramref name="keySelector" /> выдает дубликаты ключей для двух элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Создает словарь <see cref="T:System.Collections.Generic.Dictionary`2" /> из объекта <see cref="T:System.Collections.Generic.IEnumerable`1" /> в соответствии с заданным компаратором и функциями селектора ключа и селектора элемента.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, содержащий элементы входной последовательности типа <paramref name="TElement" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, на основе которого создается словарь <see cref="T:System.Collections.Generic.Dictionary`2" />.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция преобразования для получения результирующего значения каждого элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип значения, возвращаемого функцией <paramref name="elementSelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="elementSelector" /> имеет значение null.
                
                    -или-
                
                    Функция <paramref name="keySelector" /> возвращает null в качестве ключа.
                </exception>
      <exception cref="T:System.ArgumentException">
                    Функция <paramref name="keySelector" /> выдает дубликаты ключей для двух элементов.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Создает список <see cref="T:System.Collections.Generic.List`1" /> из объекта <see cref="T:System.Collections.Generic.IEnumerable`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.List`1" />, содержащий элементы из входной последовательности.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, на основе которого создается список <see cref="T:System.Collections.Generic.List`1" />.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
      <summary>
                    Создает объект <see cref="T:System.Linq.Lookup`2" /> из объекта <see cref="T:System.Collections.Generic.IEnumerable`1" /> в соответствии с заданной функцией селектора ключа.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.Lookup`2" />, содержащий ключи и значения.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, на основе которого создается объект <see cref="T:System.Linq.Lookup`2" />.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Создает объект <see cref="T:System.Linq.Lookup`2" /> из объекта <see cref="T:System.Collections.Generic.IEnumerable`1" /> в соответствии с заданной функцией селектора ключа и компаратором ключей.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.Lookup`2" />, содержащий ключи и значения.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, на основе которого создается объект <see cref="T:System.Linq.Lookup`2" />.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary>
                    Создает объект <see cref="T:System.Linq.Lookup`2" /> из объекта <see cref="T:System.Collections.Generic.IEnumerable`1" /> в соответствии с заданными функциями селектора ключа и селектора элемента.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.Lookup`2" />, содержащий элементы входной последовательности типа <paramref name="TElement" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, на основе которого создается объект <see cref="T:System.Linq.Lookup`2" />.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция преобразования для получения результирующего значения каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип значения, возвращаемого функцией <paramref name="elementSelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="elementSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Создает объект <see cref="T:System.Linq.Lookup`2" /> из объекта <see cref="T:System.Collections.Generic.IEnumerable`1" /> в соответствии с заданным компаратором и функциями селектора ключа и селектора элемента.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.Lookup`2" />, содержащий элементы входной последовательности типа <paramref name="TElement" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, на основе которого создается объект <see cref="T:System.Linq.Lookup`2" />.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция преобразования для получения результирующего значения каждого элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип значения, возвращаемого функцией <paramref name="elementSelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="elementSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Находит объединение множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, который содержит элементы, имеющиеся в обеих входных последовательностях, кроме дубликатов.
                </returns>
      <param name="first">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, различающиеся элементы которого образуют первое множество для объединения.
                </param>
      <param name="second">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, различающиеся элементы которого образуют второе множество для объединения.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="first" /> или <paramref name="second" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Находит объединение множеств, представленных двумя последовательностями, используя указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, который содержит элементы, имеющиеся в обеих входных последовательностях, кроме дубликатов.
                </returns>
      <param name="first">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, различающиеся элементы которого образуют первое множество для объединения.
                </param>
      <param name="second">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, различающиеся элементы которого образуют второе множество для объединения.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="first" /> или <paramref name="second" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
      <summary>
                    Выполняет фильтрацию последовательности значений на основе заданного предиката.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий элементы входной последовательности, которые удовлетворяют условию.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, подлежащий фильтрации.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary>
                    Выполняет фильтрацию последовательности значений на основе заданного предиката. Индекс каждого элемента используется в логике функции предиката.
                </summary>
      <returns>
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий элементы входной последовательности, которые удовлетворяют условию.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, подлежащий фильтрации.
                </param>
      <param name="predicate">
                    Функция, применяемая к каждому исходному элементу для проверки условия; второй параметр функции представляет индекс исходного элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="T:System.Linq.IGrouping`2">
      <summary>Представляет коллекцию объектов, имеющих общий ключ.</summary>
      <typeparam name="TKey">Тип ключа объекта <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
      <typeparam name="TElement">Тип значений объекта <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Linq.IGrouping`2.Key">
      <summary>Возвращает ключ объекта <see cref="T:System.Linq.IGrouping`2" />.</summary>
      <returns>Ключ объекта <see cref="T:System.Linq.IGrouping`2" />.</returns>
    </member>
    <member name="T:System.Linq.ILookup`2">
      <summary>Определяет индексатор, свойство размера и метод логического поиска для структур данных, сопоставляющих ключи с последовательностями <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
      <typeparam name="TKey">Тип ключей объекта <see cref="T:System.Linq.ILookup`2" />.</typeparam>
      <typeparam name="TElement">Тип элементов в последовательностях <see cref="T:System.Collections.Generic.IEnumerable`1" />, представляющих значения объекта <see cref="T:System.Linq.ILookup`2" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Linq.ILookup`2.Contains(`0)">
      <summary>Определяет, существует ли указанный ключ в объекте <see cref="T:System.Linq.ILookup`2" />.</summary>
      <returns>true, если ключ <paramref name="key" /> содержится в объекте <see cref="T:System.Linq.ILookup`2" />, в противном случае — false.</returns>
      <param name="key">Ключ, который требуется найти в объекте <see cref="T:System.Linq.ILookup`2" />.</param>
    </member>
    <member name="P:System.Linq.ILookup`2.Count">
      <summary>Получает число пар “ключ/коллекция значений”, содержащихся в объекте <see cref="T:System.Linq.ILookup`2" />.</summary>
      <returns>Число пар “ключ/коллекция значений”, содержащихся в объекте <see cref="T:System.Linq.ILookup`2" />.</returns>
    </member>
    <member name="P:System.Linq.ILookup`2.Item(`0)">
      <summary>Получает последовательность значений <see cref="T:System.Collections.Generic.IEnumerable`1" /> по индексу, определенному указанным ключом.</summary>
      <returns>Последовательность значений <see cref="T:System.Collections.Generic.IEnumerable`1" /> с индексом, определенным указанным ключом.</returns>
      <param name="key">Ключ требуемой последовательности значений.</param>
    </member>
    <member name="T:System.Linq.IOrderedEnumerable`1">
      <summary>Представляет отсортированную последовательность.</summary>
      <typeparam name="TElement">Тип элементов последовательности.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
      <summary>Выполняет дополнительное упорядочение элементов объекта <see cref="T:System.Linq.IOrderedEnumerable`1" /> по ключу.</summary>
      <returns>Объект <see cref="T:System.Linq.IOrderedEnumerable`1" />, элементы которого отсортированы по ключу.</returns>
      <param name="keySelector">Функция <see cref="T:System.Func`2" />, используемая для извлечения ключа для каждого элемента.</param>
      <param name="comparer">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей при формировании возвращаемой последовательности.</param>
      <param name="descending">true, если элементы требуется сортировать в порядке убывания; false, чтобы сортировать элементы в порядке возрастания.</param>
      <typeparam name="TKey">Тип ключа, созданного функцией <paramref name="keySelector" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Linq.IOrderedQueryable">
      <summary>Представляет результат операции сортировки.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Linq.IOrderedQueryable`1">
      <summary>Представляет результат операции сортировки.</summary>
      <typeparam name="T">Тип содержимого источника данных.</typeparam>
    </member>
    <member name="T:System.Linq.IQueryable">
      <summary>
                    Предоставляет функциональные возможности расчета запросов к конкретному источнику данных, для которого не указан тип данных.
                </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Linq.IQueryable.ElementType">
      <summary>
                    Получает тип элементов, которые возвращаются при выполнении дерева выражения, связанного с данным экземпляром класса <see cref="T:System.Linq.IQueryable" />.
                </summary>
      <returns>
                    Тип <see cref="T:System.Type" />, представляющий тип элементов, которые возвращаются при выполнении дерева выражения, связанного с данным объектом.
                </returns>
    </member>
    <member name="P:System.Linq.IQueryable.Expression">
      <summary>
                    Получает выражение, связанное с экземпляром класса <see cref="T:System.Linq.IQueryable" />.
                </summary>
      <returns>
                    Выражение <see cref="T:System.Linq.Expressions.Expression" />, связанное с данным экземпляром класса <see cref="T:System.Linq.IQueryable" />.
                </returns>
    </member>
    <member name="P:System.Linq.IQueryable.Provider">
      <summary>
                    Возвращает объект поставщика запросов, связанного с указанным источником данных.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryProvider" />, связанный с указанным источником данных.
                </returns>
    </member>
    <member name="T:System.Linq.IQueryable`1">
      <summary>Предоставляет функциональные возможности расчета запросов к конкретному источнику данных с известным типом данных.</summary>
      <typeparam name="T">Тип данных в источнике данных.</typeparam>
    </member>
    <member name="T:System.Linq.IQueryProvider">
      <summary>Определяет методы создания и выполнения запросов, описываемых объектом <see cref="T:System.Linq.IQueryable" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
      <summary>Создает объект <see cref="T:System.Linq.IQueryable`1" />, который позволяет вычислить запрос, представленный заданным деревом выражения.</summary>
      <returns>Объект <see cref="T:System.Linq.IQueryable`1" />, который позволяет вычислить запрос, представленный заданным деревом выражения.</returns>
      <param name="expression">Дерево выражения, представляющее запрос LINQ.</param>
      <typeparam name="TElement">Тип элементов возвращаемого объекта <see cref="T:System.Linq.IQueryable`1" />.</typeparam>
    </member>
    <member name="M:System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)">
      <summary>Создает объект <see cref="T:System.Linq.IQueryable" />, который позволяет вычислить запрос, представленный заданным деревом выражения.</summary>
      <returns>Объект <see cref="T:System.Linq.IQueryable" />, который позволяет вычислить запрос, представленный заданным деревом выражения.</returns>
      <param name="expression">Дерево выражения, представляющее запрос LINQ.</param>
    </member>
    <member name="M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)">
      <summary>Выполняет строго типизированный запрос, представленный заданным деревом выражения.</summary>
      <returns>Значение, получаемое в результате выполнения указанного запроса.</returns>
      <param name="expression">Дерево выражения, представляющее запрос LINQ.</param>
      <typeparam name="TResult">Тип значения, получаемого в результате выполнения запроса.</typeparam>
    </member>
    <member name="M:System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)">
      <summary>Выполняет запрос, представленный заданным деревом выражения.</summary>
      <returns>Значение, получаемое в результате выполнения указанного запроса.</returns>
      <param name="expression">Дерево выражения, представляющее запрос LINQ.</param>
    </member>
    <member name="T:System.Linq.Lookup`2">
      <summary>Представляет коллекцию ключей, каждый из которых сопоставлен с одним или несколькими значениями.</summary>
      <typeparam name="TKey">Тип ключей объекта <see cref="T:System.Linq.Lookup`2" />.</typeparam>
      <typeparam name="TElement">Тип элементов для каждого значения <see cref="T:System.Collections.Generic.IEnumerable`1" /> в составе объекта <see cref="T:System.Linq.Lookup`2" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})">
      <summary>Применяет функцию преобразования к каждому ключу и связанным с ним значениям и возвращает результаты.</summary>
      <returns>Коллекция, содержащая одно значение для каждой пары "ключ/коллекция значений", содержащейся в объекте <see cref="T:System.Linq.Lookup`2" />.</returns>
      <param name="resultSelector">Функция, проецирующая результирующее значение из каждого ключа и связанных с ним значений.</param>
      <typeparam name="TResult">Тип результирующих значений, возвращаемых функцией <paramref name="resultSelector" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Linq.Lookup`2.Contains(`0)">
      <summary>Определяет, содержится ли указанный ключ в объекте <see cref="T:System.Linq.Lookup`2" />.</summary>
      <returns>true, если ключ <paramref name="key" /> содержится в объекте <see cref="T:System.Linq.Lookup`2" />, в противном случае — false.</returns>
      <param name="key">Ключ, который требуется найти в объекте <see cref="T:System.Linq.Lookup`2" />.</param>
    </member>
    <member name="P:System.Linq.Lookup`2.Count">
      <summary>Получает число пар "ключ/коллекция значений", содержащихся в объекте <see cref="T:System.Linq.Lookup`2" />.</summary>
      <returns>Число пар "ключ/коллекция значений", содержащихся в объекте <see cref="T:System.Linq.Lookup`2" />.</returns>
    </member>
    <member name="M:System.Linq.Lookup`2.GetEnumerator">
      <summary>Возвращает универсальный перечислитель, осуществляющий итерацию элементов объекта <see cref="T:System.Linq.Lookup`2" />.</summary>
      <returns>Перечислитель для объекта <see cref="T:System.Linq.Lookup`2" />.</returns>
    </member>
    <member name="P:System.Linq.Lookup`2.Item(`0)">
      <summary>Получает коллекцию значений по индексу, определенному указанным ключом.</summary>
      <returns>Коллекция значений по индексу, определенному указанным ключом.</returns>
      <param name="key">Ключ требуемой коллекции значений.</param>
    </member>
    <member name="M:System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, осуществляющий итерацию элементов массива <see cref="T:System.Linq.Lookup`2" />. Этот класс не может быть унаследован.</summary>
      <returns>Перечислитель для объекта <see cref="T:System.Linq.Lookup`2" />.</returns>
    </member>
    <member name="T:System.Linq.Queryable">
      <summary>
                    Предоставляет набор методов типа static (Shared в Visual Basic) для выполнения запросов к структурам данных, реализующим объект <see cref="T:System.Linq.IQueryable`1" />.
                </summary>
    </member>
    <member name="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
      <summary>
                    Применяет к последовательности агрегатную функцию.
                </summary>
      <returns>
                    Конечное агрегатное значение.
                </returns>
      <param name="source">
                    Последовательность, для которой выполняется статистическая операция.
                </param>
      <param name="func">
                    Агрегатная функция, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="func" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
      <summary>
                    Применяет к последовательности агрегатную функцию. Указанное начальное значение используется в качестве исходного значения агрегатной операции.
                </summary>
      <returns>
                    Конечное агрегатное значение.
                </returns>
      <param name="source">
                    Последовательность, для которой выполняется статистическая операция.
                </param>
      <param name="seed">
                    Начальное агрегатное значение.
                </param>
      <param name="func">
                    Агрегатная функция, вызываемая для каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TAccumulate">
                    Тип агрегатного значения.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="func" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
      <summary>
                    Применяет к последовательности агрегатную функцию. Указанное начальное значение служит исходным значением для агрегатной операции, а указанная функция используется для выбора результирующего значения.
                </summary>
      <returns>
                    Преобразованное конечное агрегатное значение.
                </returns>
      <param name="source">
                    Последовательность, для которой выполняется статистическая операция.
                </param>
      <param name="seed">
                    Начальное агрегатное значение.
                </param>
      <param name="func">
                    Агрегатная функция, вызываемая для каждого элемента.
                </param>
      <param name="selector">
                    Функция, преобразующая конечное агрегатное значение в результирующее значение.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TAccumulate">
                    Тип агрегатного значения.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующего значения.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="func" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Проверяет, все ли элементы последовательности удовлетворяют условию.
                </summary>
      <returns>true, если каждый элемент исходной последовательности проходит проверку, определяемую указанным предикатом, или если последовательность пуста; в противном случае — false.
                </returns>
      <param name="source">
                    Последовательность, элементы которой проверяются на соответствие условию.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})">
      <summary>
                    Проверяет, содержит ли последовательность какие-либо элементы.
                </summary>
      <returns>true, если исходная последовательность содержит какие-либо элементы, в противном случае — false.
                </returns>
      <param name="source">
                    Последовательность, проверяемая на наличие элементов.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Проверяет, удовлетворяет ли какой-либо элемент последовательности заданному условию.
                </summary>
      <returns>true, если какие-либо элементы исходной последовательности проходят проверку, определяемую указанным предикатом; в противном случае — false.
                </returns>
      <param name="source">
                    Последовательность, элементы которой проверяются на соответствие условию.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Преобразовывает универсальный объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> в универсальный объект <see cref="T:System.Linq.IQueryable`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, представляющий входную последовательность.
                </returns>
      <param name="source">
                    Последовательность, подлежащая преобразованию.
                </param>
      <typeparam name="TElement">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)">
      <summary>
                    Преобразовывает объект <see cref="T:System.Collections.IEnumerable" /> в <see cref="T:System.Linq.IQueryable" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable" />, представляющий входную последовательность.
                </returns>
      <param name="source">
                    Последовательность, подлежащая преобразованию.
                </param>
      <exception cref="T:System.ArgumentException">
                    Последовательность <paramref name="source" /> не реализует объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> для некоторых типов <paramref name="T" />.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Decimal" />.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Decimal" />, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Double" />.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Double" />, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Int32" />.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int32" />, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Int64" />.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int64" />, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Decimal" /> обнуляемого типа, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Double" /> обнуляемого типа.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Double" /> обнуляемого типа, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Int32" /> обнуляемого типа.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int32" /> обнуляемого типа, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Int64" /> обнуляемого типа.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int64" /> обнуляемого типа, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Single" /> обнуляемого типа.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если исходная последовательность пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Single" /> обнуляемого типа, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Single" />.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Single" />, для которых вычисляется среднее.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Decimal" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений, используемых для вычисления среднего.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Double" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Int32" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Int64" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа, которая получается в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если последовательность <paramref name="source" /> пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Double" /> обнуляемого типа, которая получается в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если последовательность <paramref name="source" /> пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Int32" /> обнуляемого типа, которая получается в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если последовательность <paramref name="source" /> пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Int64" /> обнуляемого типа, которая получается в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если последовательность <paramref name="source" /> пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
      <summary>
                    Вычисляет среднее для последовательности значений <see cref="T:System.Single" /> обнуляемого типа, которая получается в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее арифметическое значений последовательности, или null, если последовательность <paramref name="source" /> пуста либо содержит только значения null.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
      <summary>
                    Вычисляет среднее для последовательности значений типа <see cref="T:System.Single" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Среднее для последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений, для которых вычисляется среднее.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)">
      <summary>
                    Преобразовывает элементы объекта <see cref="T:System.Linq.IQueryable" /> в заданный тип.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит все элементы исходной последовательности, преобразованные в заданный тип.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable" />, содержащий преобразуемые элементы.
                </param>
      <typeparam name="TResult">
                    Тип, в который преобразуются элементы объекта <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Объединяет две последовательности.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий объединенные элементы двух входных последовательностей.
                </returns>
      <param name="source1">
                    Первая из объединяемых последовательностей.
                </param>
      <param name="source2">
                    Последовательность, объединяемая с первой последовательностью.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source1" /> или <paramref name="source2" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
      <summary>
                    Определяет, содержится ли указанный элемент в последовательности, используя компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>true, если входная последовательность содержит элемент с указанным значением, в противном случае — false.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, в котором требуется найти элемент <paramref name="item" />.
                </param>
      <param name="item">
                    Объект, который требуется найти в последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Определяет, содержит ли последовательность заданный элемент, используя указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>true, если входная последовательность содержит элемент с указанным значением, в противном случае — false.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, в котором требуется найти элемент <paramref name="item" />.
                </param>
      <param name="item">
                    Объект, который требуется найти в последовательности.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает количество элементов в последовательности.
                </summary>
      <returns>
                    Число элементов во входной последовательности.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы, которые требуется подсчитать.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Возвращает количество элементов указанной последовательности, удовлетворяющих определенному условию.
                </summary>
      <returns>
                    Число элементов последовательности, удовлетворяющих условию функции предиката.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы, которые требуется подсчитать.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает элементы указанной последовательности или одноэлементную коллекцию, содержащую значение параметра типа по умолчанию, если последовательность пуста.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий значение default(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста; в противном случае возвращается <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, для которого возвращается значение по умолчанию, если последовательность пуста.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
      <summary>
                    Возвращает элементы указанной последовательности или одноэлементную коллекцию, содержащую указанное значение, если последовательность пуста.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий значение <paramref name="defaultValue" />, если последовательность <paramref name="source" /> пуста; в противном случае возвращается <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, для которого возвращается указанное значение, если последовательность пуста.
                </param>
      <param name="defaultValue">
                    Значение, возвращаемое в случае пустой последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает различающиеся элементы последовательности, используя для сравнения значений компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий различающиеся элементы из последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется удалить дубликаты.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Возвращает различающиеся элементы последовательности, используя для сравнения значений указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий различающиеся элементы из последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется удалить дубликаты.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="comparer" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary>
                    Возвращает элемент по указанному индексу в последовательности.
                </summary>
      <returns>
                    Элемент, находящийся в указанной позиции в последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="index">
                    Отсчитываемый от нуля индекс элемента, который требуется извлечь.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="index" /> меньше нуля.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary>
                    Возвращает элемент по указанному индексу в последовательности или значение по умолчанию, если индекс вне допустимого диапазона.
                </summary>
      <returns>default(<paramref name="TSource" />), если позиция <paramref name="index" /> находится вне последовательности <paramref name="source" />; в противном случае — элемент, находящийся в указанной позиции в последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="index">
                    Отсчитываемый от нуля индекс элемента, который требуется извлечь.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="index" /> меньше нуля.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Находит разность множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, являющийся разностью двух последовательностей как множеств.
                </returns>
      <param name="source1">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется извлечь элементы, отсутствующие в последовательности <paramref name="source2" />.
                </param>
      <param name="source2">
                    Последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которой, входящие также в первую последовательность, не будут включены в возвращаемую последовательность.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source1" /> или <paramref name="source2" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Находит разность множеств, представленных двумя последовательностями, используя для сравнения значений указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, являющийся разностью двух последовательностей как множеств.
                </returns>
      <param name="source1">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется извлечь элементы, отсутствующие в последовательности <paramref name="source2" />.
                </param>
      <param name="source2">
                    Последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которой, входящие также в первую последовательность, не будут включены в возвращаемую последовательность.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source1" /> или <paramref name="source2" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает первый элемент последовательности.
                </summary>
      <returns>
                    Первый элемент последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, первый элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Возвращает первый элемент последовательности, удовлетворяющий указанному условию.
                </summary>
      <returns>
                    Первый элемент последовательности <paramref name="source" />, прошедший проверку с помощью предиката <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает первый элемент последовательности или значение по умолчанию, если последовательность не содержит элементов.
                </summary>
      <returns>default(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста, в противном случае — первый элемент последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, первый элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Возвращает первый элемент последовательности, удовлетворяющий указанному условию, или значение по умолчанию, если ни одного такого элемента не найдено.
                </summary>
      <returns>default(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста или если ни один ее элемент не прошел проверку, определенную предикатом <paramref name="predicate" />; в противном случае — первый элемент последовательности <paramref name="source" />, прошедший проверку, определенную предикатом <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа.
                </summary>
      <returns>
                    Объект IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt; в C# или IQueryable(Of IGrouping(Of TKey, TSource)) в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит последовательность объектов и ключ.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и сравнивает ключи с помощью указанного компаратора.
                </summary>
      <returns>
                    Объект IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt; в C# или IQueryable(Of IGrouping(Of TKey, TSource)) в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит последовательность объектов и ключ.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="comparer" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и проецирует элементы каждой группы с помощью указанной функции.
                </summary>
      <returns>
                    Объект IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt; в C# или IQueryable(Of IGrouping(Of TKey, TElement)) в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит последовательность объектов типа <paramref name="TElement" /> и ключ.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип элементов каждого объекта <see cref="T:System.Linq.IGrouping`2" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="elementSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Группирует элементы последовательности и проецирует элементы каждой группы с помощью указанной функции. Значения ключей сравниваются с использованием заданного компаратора.
                </summary>
      <returns>
                    Объект IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt; в C# или IQueryable(Of IGrouping(Of TKey, TElement)) в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит последовательность объектов типа <paramref name="TElement" /> и ключ.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип элементов каждого объекта <see cref="T:System.Linq.IGrouping`2" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" />, <paramref name="elementSelector" /> или <paramref name="comparer" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа. Элементы каждой группы проецируются с помощью указанной функции.
                </summary>
      <returns>
                    Объект T:System.Linq.IQueryable`1 с аргументом типа <paramref name="TResult" />, каждый элемент которого представляет проекцию группы и ее ключа.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего значения для каждой группы.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип элементов каждого объекта <see cref="T:System.Linq.IGrouping`2" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" />, <paramref name="elementSelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа. Ключи сравниваются с помощью указанного компаратора, элементы каждой группы проецируются с помощью указанной функции.
                </summary>
      <returns>
                    Объект T:System.Linq.IQueryable`1 с аргументом типа <paramref name="TResult" />, каждый элемент которого представляет проекцию группы и ее ключа.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="elementSelector">
                    Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего значения для каждой группы.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TElement">
                    Тип элементов каждого объекта <see cref="T:System.Linq.IGrouping`2" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" />, <paramref name="elementSelector" />, <paramref name="resultSelector" /> или <paramref name="comparer" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа.
                </summary>
      <returns>
                    Объект T:System.Linq.IQueryable`1 с аргументом типа <paramref name="TResult" />, каждый элемент которого представляет проекцию группы и ее ключа.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего значения для каждой группы.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary>
                    Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа. Ключи сравниваются с использованием заданного компаратора.
                </summary>
      <returns>
                    Объект T:System.Linq.IQueryable`1 с аргументом типа <paramref name="TResult" />, каждый элемент которого представляет проекцию группы и ее ключа.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ для каждого элемента.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего значения для каждой группы.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" />, <paramref name="resultSelector" /> или <paramref name="comparer" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
      <summary>
                    Устанавливает корреляцию между элементами двух последовательностей на основе равенства ключей и группирует результаты. Для сравнения ключей используется компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате соединения двух последовательностей с группировкой.
                </returns>
      <param name="outer">
                    Первая последовательность для соединения.
                </param>
      <param name="inner">
                    Последовательность, соединяемая с первой последовательностью.
                </param>
      <param name="outerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента первой последовательности.
                </param>
      <param name="innerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента второй последовательности.
                </param>
      <param name="resultSelector">
                    Функция, создающая результирующий элемент для элемента первой последовательности и коллекции соответствующих элементов второй последовательности.
                </param>
      <typeparam name="TOuter">
                    Тип элементов первой последовательности.
                </typeparam>
      <typeparam name="TInner">
                    Тип элементов второй последовательности.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключей, возвращаемых функциями селектора ключа.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующих элементов.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>
                    Устанавливает корреляцию между элементами двух последовательностей на основе равенства ключей и группирует результаты. Для сравнения ключей используется указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате соединения двух последовательностей с группировкой.
                </returns>
      <param name="outer">
                    Первая последовательность для соединения.
                </param>
      <param name="inner">
                    Последовательность, соединяемая с первой последовательностью.
                </param>
      <param name="outerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента первой последовательности.
                </param>
      <param name="innerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента второй последовательности.
                </param>
      <param name="resultSelector">
                    Функция, создающая результирующий элемент для элемента первой последовательности и коллекции соответствующих элементов второй последовательности.
                </param>
      <param name="comparer">
                    Компаратор, используемый для хеширования и сравнения ключей.
                </param>
      <typeparam name="TOuter">
                    Тип элементов первой последовательности.
                </typeparam>
      <typeparam name="TInner">
                    Тип элементов второй последовательности.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключей, возвращаемых функциями селектора ключа.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующих элементов.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Находит пересечение множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Последовательность, представляющая собой пересечение двух заданных последовательностей как множеств.
                </returns>
      <param name="source1">
                    Последовательность, из которой возвращаются различающиеся элементы, входящие также в <paramref name="source2" />.
                </param>
      <param name="source2">
                    Последовательность, из которой возвращаются различающиеся элементы, входящие также в первую последовательность.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source1" /> или <paramref name="source2" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Находит пересечение множеств, представленных двумя последовательностями, используя для сравнения значений указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, являющийся пересечением двух последовательностей как множеств.
                </returns>
      <param name="source1">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется извлечь различающиеся элементы, входящие также в последовательность <paramref name="source2" />.
                </param>
      <param name="source2">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого извлекаются различающиеся элементы, входящие также в первую последовательность.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source1" /> или <paramref name="source2" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
      <summary>
                    Устанавливает корреляцию между элементами двух последовательностей на основе сопоставления ключей. Для сравнения ключей используется компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате внутреннего соединения двух последовательностей.
                </returns>
      <param name="outer">
                    Первая последовательность для соединения.
                </param>
      <param name="inner">
                    Последовательность, соединяемая с первой последовательностью.
                </param>
      <param name="outerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента первой последовательности.
                </param>
      <param name="innerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента второй последовательности.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего элемента для пары соответствующих элементов.
                </param>
      <typeparam name="TOuter">
                    Тип элементов первой последовательности.
                </typeparam>
      <typeparam name="TInner">
                    Тип элементов второй последовательности.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключей, возвращаемых функциями селектора ключа.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующих элементов.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
      <summary>
                    Устанавливает корреляцию между элементами двух последовательностей на основе сопоставления ключей. Для сравнения ключей используется указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате внутреннего соединения двух последовательностей.
                </returns>
      <param name="outer">
                    Первая последовательность для соединения.
                </param>
      <param name="inner">
                    Последовательность, соединяемая с первой последовательностью.
                </param>
      <param name="outerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента первой последовательности.
                </param>
      <param name="innerKeySelector">
                    Функция, извлекающая ключ соединения из каждого элемента второй последовательности.
                </param>
      <param name="resultSelector">
                    Функция для создания результирующего элемента для пары соответствующих элементов.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для хеширования и сравнения ключей.
                </param>
      <typeparam name="TOuter">
                    Тип элементов первой последовательности.
                </typeparam>
      <typeparam name="TInner">
                    Тип элементов второй последовательности.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключей, возвращаемых функциями селектора ключа.
                </typeparam>
      <typeparam name="TResult">
                    Тип результирующих элементов.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает последний элемент последовательности.
                </summary>
      <returns>
                    Значение, находящееся в последней позиции последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, последний элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Возвращает последний элемент последовательности, удовлетворяющий указанному условию.
                </summary>
      <returns>
                    Последний элемент последовательности <paramref name="source" />, прошедший проверку, заданную предикатом <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает последний элемент последовательности или значение по умолчанию, если последовательность не содержит элементов.
                </summary>
      <returns>default(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста, в противном случае — последний элемент последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, последний элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Возвращает последний элемент последовательности, удовлетворяющий указанному условию, или значение по умолчанию, если ни одного такого элемента не найдено.
                </summary>
      <returns>default(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста или ни один ее элемент не прошел проверку функцией предиката, в противном случае — последний элемент последовательности <paramref name="source" />, прошедший проверку функцией предиката.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает значение типа <see cref="T:System.Int64" />, представляющее общее число элементов в последовательности.
                </summary>
      <returns>
                    Число элементов в последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы, которые требуется подсчитать.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Возвращает значение типа <see cref="T:System.Int64" />, представляющее число элементов последовательности, удовлетворяющих заданному условию.
                </summary>
      <returns>
                    Число элементов последовательности <paramref name="source" />, удовлетворяющих условию функции предиката.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы, которые требуется подсчитать.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает максимальное значение для универсального интерфейса <see cref="T:System.Linq.IQueryable`1" />.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимум.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
                    Вызывает функцию проекции для каждого элемента универсального интерфейса <see cref="T:System.Linq.IQueryable`1" /> и возвращает максимальное результирующее значение.
                </summary>
      <returns>
                    Максимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется максимум.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип значения, возвращаемого функцией, заданной параметром <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает минимальное значение для универсального интерфейса <see cref="T:System.Linq.IQueryable`1" />.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимум.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
                    Вызывает функцию проекции для каждого элемента универсального интерфейса <see cref="T:System.Linq.IQueryable`1" /> и возвращает минимальное результирующее значение.
                </summary>
      <returns>
                    Минимальное значение в последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, для которой определяется минимум.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип значения, возвращаемого функцией, заданной параметром <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)">
      <summary>
                    Выполняет фильтрацию элементов объекта <see cref="T:System.Linq.IQueryable" /> по заданному типу.
                </summary>
      <returns>
                    Коллекция элементов последовательности <paramref name="source" />, имеющих тип <paramref name="TResult" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable" />, элементы которого следует фильтровать.
                </param>
      <typeparam name="TResult">
                    Тип, по которому фильтруются элементы последовательности.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
                    Сортирует элементы последовательности в порядке возрастания ключа.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует упорядочить.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary>
                    Сортирует элементы последовательности в порядке возрастания с использованием указанного компаратора.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует упорядочить.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="comparer" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
                    Сортирует элементы последовательности в порядке убывания ключа.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу в порядке убывания.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует упорядочить.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary>
                    Сортирует элементы последовательности в порядке убывания с использованием указанного компаратора.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу в порядке убывания.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует упорядочить.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="comparer" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})">
      <summary>
                    Изменяет порядок элементов последовательности на противоположный.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого соответствуют элементам входной последовательности, но следуют в противоположном порядке.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует расставить в обратном порядке.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
                    Проецирует каждый элемент последовательности в новую форму.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции для каждого элемента последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует проецировать.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип значения, возвращаемого функцией, заданной параметром <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
      <summary>
                    Проецирует каждый элемент последовательности в новую форму, добавляя индекс элемента.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции для каждого элемента последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует проецировать.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип значения, возвращаемого функцией, заданной параметром <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <summary>
                    Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> и вызывает функцию селектора результата для каждого элемента. Результирующие значения из всех промежуточных последовательностей возвращаются объединенными в одну одномерную последовательность.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции "один ко многим" <paramref name="collectionSelector" /> для каждого элемента последовательности <paramref name="source" /> и последующего сопоставления каждого элемента такой промежуточной последовательности и соответствующего ему элемента последовательности <paramref name="source" /> с результирующим элементом.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует проецировать.
                </param>
      <param name="collectionSelector">
                    Функция проекции, применяемая к каждому элементу входной последовательности.
                </param>
      <param name="resultSelector">
                    Функция проекции, применяемая к каждому элементу каждой промежуточной последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TCollection">
                    Тип промежуточных элементов, собранных функцией, заданной параметром <paramref name="collectionSelector" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип элементов результирующей последовательности.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="collectionSelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
      <summary>
                    Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> и объединяет результирующие последовательности в одну последовательность.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции "один ко многим" для каждого элемента входной последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует проецировать.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип элементов последовательности, возвращаемых функцией, заданной параметром <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <summary>
                    Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, включающий индекс исходного элемента, на основе которого он был создан. Для каждого элемента каждой промежуточной последовательности вызывается функция селектора результата, и результирующие значения возвращаются объединенными в одну одномерную последовательность.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции "один ко многим" <paramref name="collectionSelector" /> для каждого элемента последовательности <paramref name="source" /> и последующего сопоставления каждого элемента такой промежуточной последовательности и соответствующего ему элемента последовательности <paramref name="source" /> с результирующим элементом.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует проецировать.
                </param>
      <param name="collectionSelector">
                    Функция проекции, применяемая к каждому элементу входной последовательности; второй параметр этой функции представляет индекс исходного элемента.
                </param>
      <param name="resultSelector">
                    Функция проекции, применяемая к каждому элементу каждой промежуточной последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TCollection">
                    Тип промежуточных элементов, собранных функцией, заданной параметром <paramref name="collectionSelector" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип элементов результирующей последовательности.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="collectionSelector" /> или <paramref name="resultSelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
      <summary>
                    Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> и объединяет результирующие последовательности в одну последовательность. Индекс каждого элемента исходной последовательности используется в проецированной форме этого элемента.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции "один ко многим" для каждого элемента входной последовательности.
                </returns>
      <param name="source">
                    Последовательность значений, которые следует проецировать.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу; второй параметр этой функции представляет индекс исходного элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TResult">
                    Тип элементов последовательности, возвращаемых функцией, заданной параметром <paramref name="selector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Определяет, совпадают ли две последовательности, используя для сравнения элементов компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>true, если у двух исходных последовательностей одинаковая длина и соответствующие элементы совпадают, в противном случае — false.
                </returns>
      <param name="source1">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого сравниваются с элементами последовательности <paramref name="source2" />.
                </param>
      <param name="source2">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого сравниваются с элементами первой последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source1" /> или <paramref name="source2" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Определяет, совпадают ли две последовательности, используя для сравнения элементов указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>true, если у двух исходных последовательностей одинаковая длина и соответствующие элементы совпадают, в противном случае — false.
                </returns>
      <param name="source1">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого сравниваются с элементами последовательности <paramref name="source2" />.
                </param>
      <param name="source2">
                    Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого сравниваются с элементами первой последовательности.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения элементов.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source1" /> или <paramref name="source2" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает единственный элемент последовательности и генерирует исключение, если число элементов последовательности отлично от 1.
                </summary>
      <returns>
                    Единственный элемент входной последовательности.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, единственный элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Возвращает единственный элемент последовательности, удовлетворяющий заданному условию, и генерирует исключение, если таких элементов больше одного.
                </summary>
      <returns>
                    Единственный элемент входной последовательности, удовлетворяющий условию предиката <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить единственный элемент.
                </param>
      <param name="predicate">
                    Функция для проверки элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    Ни один элемент не удовлетворяет условию предиката <paramref name="predicate" />.
                
                    -или-
                
                    Условию предиката <paramref name="predicate" /> удовлетворяет более одного элемента.
                
                    -или-
                
                    Исходная последовательность пуста.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})">
      <summary>
                    Возвращает единственный элемент последовательности или значение по умолчанию, если последовательность пуста; если в последовательности более одного элемента, генерируется исключение.
                </summary>
      <returns>
                    Единственный элемент входной последовательности или default(<paramref name="TSource" />), если в последовательности нет элементов.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, единственный элемент которого требуется возвратить.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Возвращает единственный элемент последовательности, удовлетворяющий заданному условию, или значение по умолчанию, если такого элемента не существует; если условию удовлетворяет более одного элемента, генерируется исключение.
                </summary>
      <returns>
                    Единственный элемент входной последовательности, удовлетворяющий условию предиката <paramref name="predicate" />, или default(<paramref name="TSource" />), если такой элемент не найден.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить единственный элемент.
                </param>
      <param name="predicate">
                    Функция для проверки элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary>
                    Пропускает заданное число элементов в последовательности и возвращает остальные элементы.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы из входной последовательности, начиная с указанного индекса.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элементы.
                </param>
      <param name="count">
                    Число элементов, пропускаемых перед возвращением остальных элементов.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Пропускает элементы в последовательности, пока они удовлетворяют заданному условию, и затем возвращает оставшиеся элементы.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий цепочку элементов последовательности <paramref name="source" />, начиная с первого элемента, который не прошел проверку, заданную предикатом <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элементы.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <summary>
                    Пропускает элементы в последовательности, пока они удовлетворяют заданному условию, и затем возвращает оставшиеся элементы. Индекс элемента используется в логике функции предиката.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий цепочку элементов последовательности <paramref name="source" />, начиная с первого элемента, который не прошел проверку, заданную предикатом <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элементы.
                </param>
      <param name="predicate">
                    Функция, применяемая к каждому элементу для проверки условия; второй параметр этой функции представляет индекс исходного элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Decimal" />.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Decimal" />, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Double" />.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Double" />, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Int32" />.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int32" />, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Int64" />.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int64" />, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Decimal" /> обнуляемого типа, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Double" /> обнуляемого типа.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Double" /> обнуляемого типа, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Int32" /> обнуляемого типа.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int32" /> обнуляемого типа, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Int64" /> обнуляемого типа.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Int64" /> обнуляемого типа, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Single" /> обнуляемого типа.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Single" /> обнуляемого типа, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Single" />.
                </summary>
      <returns>
                    Сумма последовательности значений.
                </returns>
      <param name="source">
                    Последовательность значений <see cref="T:System.Single" />, сумму которых требуется вычислить.
                </param>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Decimal" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений типа <paramref name="TSource" />.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Double" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений типа <paramref name="TSource" />.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Int32" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений типа <paramref name="TSource" />.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Int64" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений типа <paramref name="TSource" />.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Decimal" /> (допускающей значения NULL), получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений типа <paramref name="TSource" />.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Double" /> (допускающей значения NULL), получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений типа <paramref name="TSource" />.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Int32" /> (допускающей значения NULL), получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений типа <paramref name="TSource" />.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
      <summary>
                    Вычисляет сумму последовательности значений <see cref="T:System.Int64" /> обнуляемого типа, получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений типа <paramref name="TSource" />.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Single" /> (допускающей значения NULL), получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений типа <paramref name="TSource" />.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
      <summary>
                    Вычисляет сумму последовательности значений типа <see cref="T:System.Single" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.
                </summary>
      <returns>
                    Сумма проецированных значений.
                </returns>
      <param name="source">
                    Последовательность значений типа <paramref name="TSource" />.
                </param>
      <param name="selector">
                    Функция проекции, применяемая к каждому элементу.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary>
                    Возвращает указанное число подряд идущих элементов с начала последовательности.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий заданное число элементов с начала последовательности <paramref name="source" />.
                </returns>
      <param name="source">
                    Последовательность, из которой требуется возвратить элементы.
                </param>
      <param name="count">
                    Число возвращаемых элементов.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Возвращает цепочку элементов последовательности, удовлетворяющих указанному условию.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы входной последовательности до первого элемента, который не прошел проверку, заданную предикатом <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Последовательность, из которой требуется возвратить элементы.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <summary>
                    Возвращает цепочку элементов последовательности, удовлетворяющих указанному условию. Индекс элемента используется в логике функции предиката.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы входной последовательности до первого элемента, который не прошел проверку, заданную предикатом <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Последовательность, из которой требуется возвратить элементы.
                </param>
      <param name="predicate">
                    Функция, применяемая к каждому элементу для проверки условия; второй параметр этой функции представляет индекс элемента в исходной последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
                    Выполняет дополнительное упорядочение элементов последовательности в порядке возрастания ключа.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, содержащий сортируемые элементы.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary>
                    Выполняет дополнительное упорядочение элементов последовательности в порядке возрастания с использованием указанного компаратора.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, содержащий сортируемые элементы.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="comparer" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
                    Выполняет дополнительное упорядочение элементов последовательности в порядке убывания ключа.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу в порядке убывания.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, содержащий сортируемые элементы.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary>
                    Выполняет дополнительное упорядочение элементов последовательности в порядке убывания с использованием указанного компаратора.
                </summary>
      <returns>
                    Коллекция, элементы которой отсортированы по ключу в порядке убывания.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, содержащий сортируемые элементы.
                </param>
      <param name="keySelector">
                    Функция, извлекающая ключ из каждого элемента.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <typeparam name="TKey">
                    Тип ключа, возвращаемого функцией <paramref name="keySelector" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="comparer" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary>
                    Находит объединение множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы, имеющиеся в обеих входных последовательностях, кроме дубликатов.
                </returns>
      <param name="source1">
                    Последовательность, различающиеся элементы которой образуют первое множество для операции объединения.
                </param>
      <param name="source2">
                    Последовательность, различающиеся элементы которой образуют второе множество для операции объединения.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source1" /> или <paramref name="source2" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary>
                    Находит объединение множеств, представленных двумя последовательностями, используя указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы, имеющиеся в обеих входных последовательностях, кроме дубликатов.
                </returns>
      <param name="source1">
                    Последовательность, различающиеся элементы которой образуют первое множество для операции объединения.
                </param>
      <param name="source2">
                    Последовательность, различающиеся элементы которой образуют второе множество для операции объединения.
                </param>
      <param name="comparer">
                    Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.
                </param>
      <typeparam name="TSource">
                    Тип элементов входных последовательностей.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source1" /> или <paramref name="source2" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
                    Выполняет фильтрацию последовательности значений на основе заданного предиката.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы входной последовательности, которые удовлетворяют условию, заданному предикатом <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, подлежащий фильтрации.
                </param>
      <param name="predicate">
                    Функция для проверки каждого элемента на соответствие условию.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <summary>
                    Выполняет фильтрацию последовательности значений на основе заданного предиката. Индекс каждого элемента используется в логике функции предиката.
                </summary>
      <returns>
                    Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы входной последовательности, которые удовлетворяют условию, заданному предикатом <paramref name="predicate" />.
                </returns>
      <param name="source">
                    Объект <see cref="T:System.Linq.IQueryable`1" />, подлежащий фильтрации.
                </param>
      <param name="predicate">
                    Функция, применяемая к каждому элементу для проверки условия; второй параметр этой функции представляет индекс элемента в исходной последовательности.
                </param>
      <typeparam name="TSource">
                    Тип элементов последовательности <paramref name="source" />.
                </typeparam>
      <exception cref="T:System.ArgumentNullException">
                    Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение null.
                </exception>
    </member>
    <member name="T:System.Linq.Expressions.BinaryExpression">
      <summary>Представляет выражение, содержащее бинарный оператор.</summary>
    </member>
    <member name="P:System.Linq.Expressions.BinaryExpression.Conversion">
      <summary>Получает функцию преобразования типа, используемую операцией преобразования.</summary>
      <returns>Объект <see cref="T:System.Linq.Expressions.LambdaExpression" />, представляющий тип функции преобразования.</returns>
    </member>
    <member name="P:System.Linq.Expressions.BinaryExpression.IsLifted">
      <summary>Возвращает значение, указывающее, представляет ли узел дерева выражения ликвидированный вызов оператора.</summary>
      <returns>true, если узел представляет удаленный вызов; в противном случае — false.</returns>
    </member>
    <member name="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull">
      <summary>Возвращает значение, указывающее, представляет ли узел дерева выражения ликвидированный вызов оператора, тип возврата которого удален для типа со значением NULL.</summary>
      <returns>true, если тип возврата оператора удален до типа со значением NULL, иначе возвращается значение false.</returns>
    </member>
    <member name="P:System.Linq.Expressions.BinaryExpression.Left">
      <summary>Получает левый операнд бинарной операции.</summary>
      <returns>Объект <see cref="T:System.Linq.Expressions.Expression" />, который предоставляет левый операнд бинарной операции.</returns>
    </member>
    <member name="P:System.Linq.Expressions.BinaryExpression.Method">
      <summary>Получает реализацию метода для бинарной операции.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" />, представляющий метод реализации.</returns>
    </member>
    <member name="P:System.Linq.Expressions.BinaryExpression.Right">
      <summary>Получает правый операнд бинарной операции.</summary>
      <returns>Объект <see cref="T:System.Linq.Expressions.Expression" />, который предоставляет правый операнд бинарной операции.</returns>
    </member>
    <member name="T:System.Linq.Expressions.ConditionalExpression">
      <summary>Представляет выражение, содержащее условный оператор.</summary>
    </member>
    <member name="P:System.Linq.Expressions.ConditionalExpression.IfFalse">
      <summary>Получает выражение для выполнения, если проверка имеет значение false.</summary>
      <returns>Свойство <see cref="T:System.Linq.Expressions.Expression" />, представляющее выражение для выполнения, если значение проверки вычислено как false.</returns>
    </member>
    <member name="P:System.Linq.Expressions.ConditionalExpression.IfTrue">
      <summary>Получает выражение для выполнения, если проверка имеет значение true.</summary>
      <returns>Свойство <see cref="T:System.Linq.Expressions.Expression" />, представляющее выражение для выполнения, если значение проверки вычислено как true.</returns>
    </member>
    <member name="P:System.Linq.Expressions.ConditionalExpression.Test">
      <summary>Получает проверку условной операции.</summary>
      <returns>Объект <see cref="T:System.Linq.Expressions.Expression" />, который предоставляет проверку условной операции.</returns>
    </member>
    <member name="T:System.Linq.Expressions.ConstantExpression">
      <summary>Представляет выражение, содержащее постоянное значение.</summary>
    </member>
    <member name="P:System.Linq.Expressions.ConstantExpression.Value">
      <summary>Возвращает значение постоянного выражения.</summary>
      <returns>Значение <see cref="T:System.Object" /> значению представленного выражения.</returns>
    </member>
    <member name="T:System.Linq.Expressions.ElementInit">
      <summary>Представляет инициализатор отдельного элемента коллекции <see cref="T:System.Collections.IEnumerable" />.</summary>
    </member>
    <member name="P:System.Linq.Expressions.ElementInit.AddMethod">
      <summary>Получает метод экземпляра, который используется для добавления элемента в коллекцию <see cref="T:System.Collections.IEnumerable" />.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" />, который представляет метод экземпляра, который добавляет элемент в коллекцию.</returns>
    </member>
    <member name="P:System.Linq.Expressions.ElementInit.Arguments">
      <summary>Получает коллекцию аргументов, которые передаются методу, которые добавляет элемент в коллекцию <see cref="T:System.Collections.IEnumerable" />.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Linq.Expressions.Expression" />, представляющих аргументы для метода, добавляющего элемент к коллекции.</returns>
    </member>
    <member name="M:System.Linq.Expressions.ElementInit.ToString">
      <summary>Возвращает текстовое представление объекта <see cref="T:System.Linq.Expressions.ElementInit" />.</summary>
      <returns>Текстовое представление объекта <see cref="T:System.Linq.Expressions.ElementInit" />.</returns>
    </member>
    <member name="T:System.Linq.Expressions.Expression">
      <summary>Обеспечивает базовый класс, производными от которого являются классы, представляющие узлы дерева выражения. Также содержит заводские методы static (Shared в Visual Basic) для создания различных типов узлов. Это класс abstract.</summary>
    </member>
    <member name="M:System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <param name="nodeType">
        <see cref="T:System.Linq.Expressions.ExpressionType" />, чтобы установить в качестве типа узла.</param>
      <param name="type">
        <see cref="T:System.Type" />, чтобы задать в качестве типа выражения, которое представляет этот <see cref="T:System.Linq.Expressions.Expression" />.</param>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического сложения, не содержащую проверку переполнения.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством<see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Add" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор сложения не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического сложения, не содержащую проверку переполнения. Может быть указан рметод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Add" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, и оператор сложения не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического сложения, содержащую проверку переполнения.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным<see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор сложения не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического сложения, содержащую проверку переполнения. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, и оператор сложения не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает<see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющее побитовую операцию AND.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.And" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Побитовый оператор AND не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющее побитовую операцию AND. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.And" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, и побитовый операторAND не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий условную операцию AND, вычисляющую второй операнд только, если необходимо.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Побитовый оператор AND не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.-или-
                Типы <paramref name="left" />.Type и <paramref name="right" />.Type отличаются от логического типа.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий условную операцию AND, вычисляющую второй операнд только, если необходимо. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, и побитовый операторAND не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.-или-
                Метод <paramref name="method" /> равен null, а типы <paramref name="left" />.Type и <paramref name="right" />.Type отличаются от логического типа.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <summary>Создает <see cref="T:System.Linq.Expressions.MethodCallExpression" />, представляющее применение оператора индекса массива к массиву с рангом более одного.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MethodCallExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, и свойствами <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> и <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />, для которых заданы указанные значения.</returns>
      <param name="array">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />.</param>
      <param name="indexes">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.Expression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="array" /> или <paramref name="indexes" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="array" />.Type не представляет тип массива.-или-Ранг типа <paramref name="array" />.Type не соответствует количеству элементов в <paramref name="indexes" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> одного или нескольких элементов <paramref name="indexes" /> не представляет тип <see cref="T:System.Int32" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющее применение оператора индекса массива к массиву ранга один.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.ArrayIndex" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="array">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="index">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="array" /> или <paramref name="index" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="array" />.Type не представляет тип массива.-или-
                Тип <paramref name="array" />.Type представляет тип массива, ранг которого не равен 1.-или-
                Тип <paramref name="index" />.Type не представляет тип <see cref="T:System.Int32" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.MethodCallExpression" />, представляющее применение оператора индекса массива к массиву с рангом более одного.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MethodCallExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, и свойствами <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> и <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />, для которых заданы указанные значения.</returns>
      <param name="array">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />.</param>
      <param name="indexes">Массив объектов <see cref="T:System.Linq.Expressions.Expression" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="array" /> или <paramref name="indexes" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="array" />.Type не представляет тип массива.-или-Ранг типа <paramref name="array" />.Type не соответствует количеству элементов в <paramref name="indexes" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> одного или нескольких элементов <paramref name="indexes" /> не представляет тип <see cref="T:System.Int32" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий получение длины одномерного массива.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.ArrayLength" />, и свойство <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, равное <paramref name="array" />.</returns>
      <param name="array">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="array" />.Type не представляет тип массива.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberAssignment" />, который представляет инициализацию поля или свойства.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberAssignment" />, содержащее свойство <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />, равное <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" /> и <see cref="P:System.Linq.Expressions.MemberBinding.Member" />, и свойства <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" />, для которых заданы указанные значения.</returns>
      <param name="member">Объект <see cref="T:System.Reflection.MemberInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberBinding.Member" />.</param>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="member" /> или <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="member" /> не представляет поле или свойство.-или-Свойство, представленное <paramref name="member" />, не обладает доступа set.-или-
                Тип <paramref name="expression" />.Type не может быть назначен типу поля или свойства, который представляет <paramref name="member" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberAssignment" />, который представляет инициализацию элемента с помощью метода доступа свойства.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberAssignment" />, содержащее свойство <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />, равное <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" />, свойству <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> присвоено значение <see cref="T:System.Reflection.PropertyInfo" />, представляющее свойство, доступ к которому осуществляется в <paramref name="propertyAccessor" />, и свойство <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" />, для которого задано значение <paramref name="expression" />.</returns>
      <param name="propertyAccessor">
        <see cref="T:System.Reflection.MethodInfo" />, представляющий метод доступа свойства.</param>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="propertyAccessor" /> или <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyAccessor" /> не представляет метод доступа свойства.-или-Свойство, с доступом <paramref name="propertyAccessor" />, не обладает доступом set.-или-
                Тип <paramref name="expression" />.Type не может быть назначен типу поля или свойства, который представляет <paramref name="member" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.MethodCallExpression" />, представляющий вызов метода без аргументов.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MethodCallExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, и свойствами <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> и <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="instance">
        <see cref="T:System.Linq.Expressions.Expression" />, чтобы задать свойство <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, равное (передать null для метода static (Shared в Visual Basic)).</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="method" /> имеет значение null.-или-
                Параметр <paramref name="instance" /> является типом null, и <paramref name="method" /> представляет метод экземпляра.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="instance" />.Type не назначается объявляемому типу метода, представленному параметром <paramref name="method" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <summary>Создает <see cref="T:System.Linq.Expressions.MethodCallExpression" />, представляющий вызов метода, принимающего аргументы.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MethodCallExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, и свойствами <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> и <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />, для которых заданы указанные значения.</returns>
      <param name="instance">
        <see cref="T:System.Linq.Expressions.Expression" />, чтобы задать свойство <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, равное (передать null для метода static (Shared в Visual Basic)).</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />.</param>
      <param name="arguments">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.Expression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="method" /> имеет значение null.-или-
                Параметр <paramref name="instance" /> является типом null, и <paramref name="method" /> представляет метод экземпляра.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="instance" />.Type не назначается объявляемому типу метода, представленному параметром <paramref name="method" />.-или-Количество элементов в <paramref name="arguments" /> не равно количеству параметров для метода, представленного методом <paramref name="method" />.-или-Один или несколько элементов <paramref name="arguments" /> нельзя назначить для соответствующего параметра для метода, представленного параметром <paramref name="method" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.MethodCallExpression" />, представляющий вызов метода с аргументами.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MethodCallExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, и свойствами <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> и <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />, для которых заданы указанные значения.</returns>
      <param name="instance">
        <see cref="T:System.Linq.Expressions.Expression" />, чтобы задать свойство <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, равное (передать null для метода static (Shared в Visual Basic)).</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />.</param>
      <param name="arguments">Массив объектов <see cref="T:System.Linq.Expressions.Expression" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="method" /> имеет значение null.-или-
                Параметр <paramref name="instance" /> является типом null, и <paramref name="method" /> представляет метод экземпляра.-или-<paramref name="arguments" /> не равно null, а один или несколько элементов равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="instance" />.Type не назначается объявляемому типу метода, представленному параметром <paramref name="method" />.-или-Количество элементов в <paramref name="arguments" /> не равно количеству параметров для метода, представленного методом <paramref name="method" />.-или-Один или несколько элементов <paramref name="arguments" /> нельзя назначить для соответствующего параметра для метода, представленного параметром <paramref name="method" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.MethodCallExpression" />, представляющий вызов для метода экземпляра, вызывая соответствующий заводской метод.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MethodCallExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, свойство <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, равное <paramref name="instance" />, для <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />, задано значение <see cref="T:System.Reflection.MethodInfo" />, представляющее указанный метод экземпляра, а для указанных аргументов заданы значения <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />.</returns>
      <param name="instance">
        <see cref="T:System.Linq.Expressions.Expression" />, для значения свойства <see cref="P:System.Linq.Expressions.Expression.Type" /> которого будет выполнен поиск определенного метода</param>
      <param name="methodName">Имя метода.</param>
      <param name="typeArguments">Массив объектов <see cref="T:System.Type" />, указывающий тип параметров данного метода.</param>
      <param name="arguments">Массив объектов <see cref="T:System.Linq.Expressions.Expression" />, который представляет аргументы для метода.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="instance" /> или <paramref name="methodName" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Отсутствует метод с именем <paramref name="methodName" />, параметры типа которого соответствуют <paramref name="typeArguments" /> и типы параметров которого <paramref name="arguments" /> обнаружены в типе <paramref name="instance" />.Type или его базовых типах.-или-Больше одного метода с именем <paramref name="methodName" />, параметры типа которого соответствуют <paramref name="typeArguments" />, и типы параметров которого <paramref name="arguments" /> обнаружены в типе <paramref name="instance" />.Type или его базовых типах.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.MethodCallExpression" />, который представляет вызов в метод static (Shared в Visual Basic).</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MethodCallExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, и свойствами <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> и <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />, для которых заданы указанные значения.</returns>
      <param name="method">
        <see cref="T:System.Reflection.MethodInfo" />, представляющий метод static (Shared в Visual Basic), чтобы задать значение <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> для свойства.</param>
      <param name="arguments">Массив объектов <see cref="T:System.Linq.Expressions.Expression" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="method" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Количество элементов в <paramref name="arguments" /> не равно количеству параметров для метода, представленного <paramref name="method" />.-или-Один или несколько элементов <paramref name="arguments" /> нельзя назначить для соответствующего параметра для метода, представленного параметром <paramref name="method" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.MethodCallExpression" />, представляющий вызов для метода static (Shared в Visual Basic), вызывая соответствующий заводской метод.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MethodCallExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, для свойства <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> задано значение <see cref="T:System.Reflection.MethodInfo" />, представляющее указанный метод static (Shared в Visual Basic), а для свойства <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" />  заданы указанные аргументы.</returns>
      <param name="type">Объект <see cref="T:System.Type" />, указывающий тип, который содержит указанный метод static (Shared в Visual Basic).</param>
      <param name="methodName">Имя метода.</param>
      <param name="typeArguments">Массив объектов <see cref="T:System.Type" />, указывающий тип параметров данного метода.</param>
      <param name="arguments">Массив объектов <see cref="T:System.Linq.Expressions.Expression" />, которые представляют аргументы для метода.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="type" /> или <paramref name="methodName" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Отсутствует метод с именем <paramref name="methodName" />, параметры типа которого соответствуют <paramref name="typeArguments" /> и типы параметров которого <paramref name="arguments" /> обнаружены в типе <paramref name="type" /> или его базовых типах.-или-Больше одного метода с именем <paramref name="methodName" />, параметры типа которого соответствуют <paramref name="typeArguments" />, и типы параметров которого <paramref name="arguments" /> обнаружены в типе <paramref name="type" /> или его базовых типах.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий объединяющую операцию.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> параметра <paramref name="left" /> не представляет тип ссылки или тип, поддерживающий значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Типы <paramref name="left" />.Type и <paramref name="right" />.Type не преобразовываются друг в друга.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий объединяющую операцию, заданную функции преобразования.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="conversion">Объект <see cref="T:System.Linq.Expressions.LambdaExpression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Типы <paramref name="left" />.Type и <paramref name="right" />.Type не преобразовываются друг в друга.-или-<paramref name="conversion" /> не является null, а тип <paramref name="conversion" />.Type является типом делегата, не принимающим ровно один аргумент.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> параметра <paramref name="left" /> не представляет тип ссылки или тип, поддерживающий значение null.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /><paramref name="left" /> представляет тип, который не назначается для типа параметра типа делегата <paramref name="conversion" />.Type.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /><paramref name="right" /> не равно типу возврата типа делегата <paramref name="conversion" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает объект <see cref="T:System.Linq.Expressions.ConditionalExpression" />.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ConditionalExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" />, и свойствами <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> и <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />, для которых заданы указанные значения.</returns>
      <param name="test">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />.</param>
      <param name="ifTrue">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />.</param>
      <param name="ifFalse">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="test" />, <paramref name="ifTrue" /> или <paramref name="ifFalse" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="test" />.Type не является типом <see cref="T:System.Boolean" />.-или-
                Тип <paramref name="ifTrue" />.Type не равен типу <paramref name="ifFalse" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Constant(System.Object)">
      <summary>Создает <see cref="T:System.Linq.Expressions.ConstantExpression" />, для свойства <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> которого задано указанное значение.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ConstantExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Constant" />, и свойством <see cref="P:System.Linq.Expressions.ConstantExpression.Value" />, для которого задано указанное значение.</returns>
      <param name="value">Объект <see cref="T:System.Object" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ConstantExpression.Value" />.</param>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)">
      <summary>Создает <see cref="T:System.Linq.Expressions.ConstantExpression" />, содержащее свойства <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> и <see cref="P:System.Linq.Expressions.Expression.Type" />, для которых заданы указанные значения.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ConstantExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Constant" />, и свойствами <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> и <see cref="P:System.Linq.Expressions.Expression.Type" />, для которых заданы указанные значения.</returns>
      <param name="value">Объект <see cref="T:System.Object" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ConstantExpression.Value" />.</param>
      <param name="type">Объект <see cref="T:System.Type" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.Expression.Type" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="type" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="value" /> не имеет значение null, а <paramref name="type" /> не может быть назначен из динамического типа <paramref name="value" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий операцию преобразования.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Convert" />, и свойствами <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> и <see cref="P:System.Linq.Expressions.Expression.Type" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <param name="type">Объект <see cref="T:System.Type" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.Expression.Type" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> или <paramref name="type" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор преобразования не определен для типов <paramref name="expression" />.Type и <paramref name="type" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, который представляет операцию преобразования, для которой указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Convert" />, и свойствами <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, <see cref="P:System.Linq.Expressions.Expression.Type" /> и <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <param name="type">Объект <see cref="T:System.Type" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.Expression.Type" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> или <paramref name="type" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="method" /> не равно null и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно один аргумент.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Найдено более одного метода, соответствующего описанию <paramref name="method" />.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор преобразования не определен для типов <paramref name="expression" />.Type и <paramref name="type" />.Type.-или-
                Параметр <paramref name="expression" />.Type не назначается типу аргумента метода, представленному параметром <paramref name="method" />.-или-Тип возврата метода, представленный <paramref name="method" />, не назначается для <paramref name="type" />.-или-
                Тип <paramref name="expression" />.Type или <paramref name="type" /> поддерживает тип значения, а соответствующий тип, не поддерживающий значение null, не равен типу аргумента и типу возврата, соответственно метода, представленного <paramref name="method" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющее операцию преобразования, создающую исключение, если целевой тип переполнен.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" />, и свойствами <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> и <see cref="P:System.Linq.Expressions.Expression.Type" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <param name="type">Объект <see cref="T:System.Type" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.Expression.Type" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> или <paramref name="type" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор преобразования не определен для типов <paramref name="expression" />.Type и <paramref name="type" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий операцию преобразования, создающую исключение, если целевой тип переполнен, и для которой указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" />, и свойствами <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, <see cref="P:System.Linq.Expressions.Expression.Type" /> и <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <param name="type">Объект <see cref="T:System.Type" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.Expression.Type" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> или <paramref name="type" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="method" /> не равно null и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно один аргумент.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Найдено более одного метода, соответствующего описанию <paramref name="method" />.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор преобразования не определен для типов <paramref name="expression" />.Type и <paramref name="type" />.Type.-или-
                Параметр <paramref name="expression" />.Type не назначается типу аргумента метода, представленному параметром <paramref name="method" />.-или-Тип возврата метода, представленный <paramref name="method" />, не назначается для <paramref name="type" />.-или-
                Тип <paramref name="expression" />.Type или <paramref name="type" /> поддерживает тип значения, а соответствующий тип, не поддерживающий значение null, не равен типу аргумента и типу возврата, соответственно метода, представленного <paramref name="method" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического деления.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Divide" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор деления не определен для типов <paramref name="left" /> и <paramref name="right" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического деления. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Divide" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, и оператор деления не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <summary>Создает <see cref="T:System.Linq.Expressions.ElementInit" />, присвоенный <see cref="T:System.Collections.Generic.IEnumerable`1" /> в качестве второго аргумента.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ElementInit" />, содержащее свойства  <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> и <see cref="P:System.Linq.Expressions.ElementInit.Arguments" />, для которых заданы указанные значения.</returns>
      <param name="addMethod">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" />.</param>
      <param name="arguments">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, который содержит объекты <see cref="T:System.Linq.Expressions.Expression" />, которые следует задать для свойства <see cref="P:System.Linq.Expressions.ElementInit.Arguments" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="addMethod" /> или <paramref name="arguments" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Метод, представленный параметром <paramref name="addMethod" />, не назван "Add" (без учета регистра).-или-Метод, представленный параметром <paramref name="addMethod" />, не является методом экземпляра.-или-<paramref name="arguments" /> не содержит количество элементов, равное количеству параметров для метода, представленного <paramref name="addMethod" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> одного или нескольких элементов <paramref name="arguments" /> нельзя назначить для типа соответствующего параметра метода, представленного параметром <paramref name="addMethod" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.ElementInit" />, присвоенный массиву значений в качестве второго аргумента.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ElementInit" /> со свойствами <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> и <see cref="P:System.Linq.Expressions.ElementInit.Arguments" />, для которых заданы указанные значения.</returns>
      <param name="addMethod">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" />.</param>
      <param name="arguments">Массив объектов <see cref="T:System.Linq.Expressions.Expression" />, которые следует задать для свойства <see cref="P:System.Linq.Expressions.ElementInit.Arguments" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="addMethod" /> или <paramref name="arguments" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Название метода, представленного параметром addMethod, отлично от "Add" (без учета регистра).-или-Метод, представленный параметром addMethod, не является методом экземпляра.-или-Число элементов, содержащихся в параметре arguments, отличается от числа параметров для метода, представленного параметром addMethod.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> одного или нескольких элементов <paramref name="arguments" /> нельзя назначить для типа соответствующего параметра метода, представленного параметром <paramref name="addMethod" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий сравнение равенства.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Equal" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор равенства не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий сравнение равенства. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="liftToNull">true, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />значение true; false, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> значение false.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, а оператор равенства не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющее побитовую операцию XOR.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">ОператорXOR не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющее побитовую операцию XOR. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равно null, а оператор XOR не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberExpression" />, представляющий доступ к полю.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, и свойствами <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> и <see cref="P:System.Linq.Expressions.MemberExpression.Member" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />.</param>
      <param name="field">Объект <see cref="T:System.Reflection.FieldInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberExpression.Member" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="field" /> имеет значение null.-или-Поле, представленное параметром <paramref name="field" />, не является static (Shared в Visual Basic), и <paramref name="expression" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="expression" />.Type не назначается объявляемому типу поля, представленному параметром <paramref name="field" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberExpression" />, который представляет доступ к полю, которому предоставлено имя поля.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, свойству <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> присвоено значение <paramref name="expression" />, а свойству <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> присвоено значение <see cref="T:System.Reflection.FieldInfo" />, представляющее поле, обозначенное с помощью параметра <paramref name="fieldName" />.</returns>
      <param name="expression">
        <see cref="T:System.Linq.Expressions.Expression" /> где <see cref="P:System.Linq.Expressions.Expression.Type" /> содержит поле с именем <paramref name="fieldName" />.</param>
      <param name="fieldName">Имя поля.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> или <paramref name="fieldName" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Не определено поле с именем <paramref name="fieldName" /> для параметра <paramref name="expression" />.Type или его базовых типов.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.GetActionType(System.Type[])">
      <summary>Создает объект <see cref="T:System.Type" />, представляющие универсальный тип делегата System.Action с определенным типом аргументов.</summary>
      <returns>Тип делегатаSystem.Action с определенными аргументами типа.</returns>
      <param name="typeArgs">Массив от нуля до четырех объектов <see cref="T:System.Type" />, указывающих аргументы типа для типа делегата System.Action.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeArgs" /> содержит более четырех элементов.</exception>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="typeArgs" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])">
      <summary>Создает объект <see cref="T:System.Type" />, представляющие общий тип делегата System.Func с определенным типом аргументов.</summary>
      <returns>Тип делегатаSystem.Func с определенными аргументами типа.</returns>
      <param name="typeArgs">Массив от одного до пяти объектов <see cref="T:System.Type" />, указывающих тип аргументов для типа делегата System.Func.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeArgs" /> содержит менее одного или более пяти элементов.</exception>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="typeArgs" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющее числовое сравнение объектов "больше, чем".</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор "больше, чем" не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющее числовое сравнение объектов "больше, чем". Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="liftToNull">true, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />значение true; false, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> значение false.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> is null, а оператор "больше, чем" не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий числовое сравнение объектов "больше или равно".</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор "больше или равно" не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий числовое сравнение объектов "больше или равно". Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="liftToNull">true, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />значение true; false, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> значение false.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, а оператор "больше или равно" не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <summary>Создает объект <see cref="T:System.Linq.Expressions.InvocationExpression" />.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.InvocationExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Invoke" /> и <see cref="P:System.Linq.Expressions.InvocationExpression.Expression" />, и свойства <see cref="P:System.Linq.Expressions.InvocationExpression.Arguments" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.InvocationExpression.Expression" />.</param>
      <param name="arguments">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.Expression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.InvocationExpression.Arguments" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="expression" />.Type не представляет тип делегата или <see cref="T:System.Linq.Expressions.Expression`1" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="arguments" /> нельзя назначить для типа соответствующего параметра делегата, представленного параметром <paramref name="expression" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="arguments" /> не содержит количество элементов, равное количеству списка параметров для делегата, представленного <paramref name="expression" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
      <summary>Создает объект <see cref="T:System.Linq.Expressions.InvocationExpression" />.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.InvocationExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Invoke" />, и свойствами <see cref="P:System.Linq.Expressions.InvocationExpression.Expression" /> и <see cref="P:System.Linq.Expressions.InvocationExpression.Arguments" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.InvocationExpression.Expression" />.</param>
      <param name="arguments">Массив объектов <see cref="T:System.Linq.Expressions.Expression" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.InvocationExpression.Arguments" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="expression" />.Type не представляет тип делегата или <see cref="T:System.Linq.Expressions.Expression`1" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="arguments" /> нельзя назначить для типа соответствующего параметра делегата, представленного параметром <paramref name="expression" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="arguments" /> не содержит количество элементов, равное количеству списка параметров для делегата, представленного <paramref name="expression" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <summary>Создает <see cref="T:System.Linq.Expressions.Expression`1" />, где тип делегата известен в момент компиляции.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.Expression`1" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> и <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />, и свойства <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />, для которых заданы указанные значения.</returns>
      <param name="body">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />.</param>
      <param name="parameters">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.ParameterExpression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />.</param>
      <typeparam name="TDelegate">Тип делегата</typeparam>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="body" /> имеет значение null.-или-Один или несколько элементов в <paramref name="parameters" /> являются null.</exception>
      <exception cref="T:System.ArgumentException">
                Элемент <paramref name="TDelegate" /> не является типом делегата.-или-
                Тип <paramref name="body" />.Type представляет тип, который не может быть назначен для типа возврата параметра <paramref name="TDelegate" />.-или-<paramref name="parameters" /> не содержит количество элементов, равное количеству списка параметров для <paramref name="TDelegate" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="parameters" /> нельзя назначить из типа соответствующего параметра <paramref name="TDelegate" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.LambdaExpression" /> по первому созданию типа делегата.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.LambdaExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />, и свойствами <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> и <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />, для которых заданы указанные значения.</returns>
      <param name="body">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />.</param>
      <param name="parameters">Массив объектов <see cref="T:System.Linq.Expressions.ParameterExpression" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="body" /> имеет значение null.-или-Один или несколько элементов в <paramref name="parameters" /> являются null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="parameters" /> содержит более четырех элементов.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.Expression`1" />, где тип делегата известен в момент компиляции.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.Expression`1" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> и <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />, и свойства <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />, для которых заданы указанные значения.</returns>
      <param name="body">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />.</param>
      <param name="parameters">Массив объектов <see cref="T:System.Linq.Expressions.ParameterExpression" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />.</param>
      <typeparam name="TDelegate">Тип делегата</typeparam>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="body" /> имеет значение null.-или-Один или несколько элементов в <paramref name="parameters" /> являются null.</exception>
      <exception cref="T:System.ArgumentException">
                Элемент <paramref name="TDelegate" /> не является типом делегата.-или-
                Тип <paramref name="body" />.Type представляет тип, который не может быть назначен для типа возврата параметра <paramref name="TDelegate" />.-или-<paramref name="parameters" /> не содержит количество элементов, равное количеству списка параметров для <paramref name="TDelegate" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="parameters" /> нельзя назначить из типа соответствующего параметра <paramref name="TDelegate" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <summary>Создает <see cref="T:System.Linq.Expressions.LambdaExpression" /> и может использоваться, когда тип делегата неизвестен в момент компиляции.</summary>
      <returns>Объект, представляющий лямбда-выражение со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> и <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />, и свойства <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />, для которых заданы указанные значения.</returns>
      <param name="delegateType">Объект <see cref="T:System.Type" />, отражающий тип делегата.</param>
      <param name="body">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />.</param>
      <param name="parameters">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.ParameterExpression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="delegateType" /> или <paramref name="body" /> имеет значение null.-или-Один или несколько элементов в <paramref name="parameters" /> являются null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="delegateType" /> не представляет тип делегата.-или-
                Тип <paramref name="body" />.Type представляет тип, который не может быть назначен для типа возврата типа делегата, представленного <paramref name="delegateType" />.-или-<paramref name="parameters" /> не содержит количество элементов, равное количеству списка параметров для типа делегата, представленного <paramref name="delegateType" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="parameters" /> нельзя назначить от типа соответствующего типа параметра типа делегата, представленного через <paramref name="delegateType" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.LambdaExpression" /> и может использоваться, когда тип делегата неизвестен в момент компиляции.</summary>
      <returns>Объект, представляющий лямбда-выражение со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> и <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />, и свойства <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />, для которых заданы указанные значения.</returns>
      <param name="delegateType">Объект <see cref="T:System.Type" />, отражающий тип делегата.</param>
      <param name="body">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />.</param>
      <param name="parameters">Массив объектов <see cref="T:System.Linq.Expressions.ParameterExpression" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="delegateType" /> или <paramref name="body" /> имеет значение null.-или-Один или несколько элементов в <paramref name="parameters" /> являются null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="delegateType" /> не представляет тип делегата.-или-
                Тип <paramref name="body" />.Type представляет тип, который не может быть назначен для типа возврата типа делегата, представленного <paramref name="delegateType" />.-или-<paramref name="parameters" /> не содержит количество элементов, равное количеству списка параметров для типа делегата, представленного <paramref name="delegateType" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="parameters" /> нельзя назначить от типа соответствующего типа параметра типа делегата, представленного через <paramref name="delegateType" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий побитовую операцию со сдвигом влево.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор сдвига влево не определен для типов <paramref name="left" />.Type and <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий побитовую операцию сдвига влево. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, а оператор сдвига влево не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий числовое сравнение объектов "меньше, чем".</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор "меньше, чем" не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий числовое сравнение объектов "меньше, чем". Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="liftToNull">true, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />значение true; false, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> значение false.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, а оператор "меньше, чем" не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий числовое сравнение объектов "меньше или равно".</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор "меньше или равно" не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий числовое сравнение объектов "меньше или равно". Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="liftToNull">true, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />значение true; false, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> значение false.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, а оператор "меньше или равно" не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberListBinding" />, где элемент является полем или свойством.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberListBinding" /> со свойством <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />, равным <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, и свойствами <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> и <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />, для которых заданы указанные значения.</returns>
      <param name="member">
        <see cref="T:System.Reflection.MemberInfo" />, представляющий поле или свойство, чтобы задать для свойства <see cref="P:System.Linq.Expressions.MemberBinding.Member" />.</param>
      <param name="initializers">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.ElementInit" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="member" /> имеет значение null. -или-Значение одного или нескольких элементов параметра <paramref name="initializers" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="member" /> не представляет поле или свойство.-или-Тип <see cref="P:System.Reflection.FieldInfo.FieldType" /> или <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> поля или свойства, которые представляет <paramref name="member" />, не реализовывает <see cref="T:System.Collections.IEnumerable" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberListBinding" />, где элемент является полем или свойством.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberListBinding" /> со свойством <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />, равным <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, и свойствами <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> и <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />, для которых заданы указанные значения.</returns>
      <param name="member">
        <see cref="T:System.Reflection.MemberInfo" />, представляющий поле или свойство, чтобы задать для свойства <see cref="P:System.Linq.Expressions.MemberBinding.Member" />.</param>
      <param name="initializers">Массив объектов <see cref="T:System.Linq.Expressions.ElementInit" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="member" /> имеет значение null. -или-Значение одного или нескольких элементов параметра <paramref name="initializers" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="member" /> не представляет поле или свойство.-или-Тип <see cref="P:System.Reflection.FieldInfo.FieldType" /> или <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> поля или свойства, которые представляет <paramref name="member" />, не реализовывает <see cref="T:System.Collections.IEnumerable" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberListBinding" /> на основе указанного метода доступа к свойству.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberListBinding" />, содержащее свойство <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />, равное <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, свойство <see cref="P:System.Linq.Expressions.MemberBinding.Member" />, равное <see cref="T:System.Reflection.MemberInfo" />, представляющее свойство с доступом в <paramref name="propertyAccessor" />, и <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />, заполненные элементами <paramref name="initializers" />.</returns>
      <param name="propertyAccessor">
        <see cref="T:System.Reflection.MethodInfo" />, представляющий метод доступа свойства.</param>
      <param name="initializers">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.ElementInit" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="propertyAccessor" /> имеет значение null. -или-Один или несколько элементов в <paramref name="initializers" /> являются null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyAccessor" /> не представляет метод доступа свойства.-или-Тип <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> свойства, представленного методом с помощью доступа <paramref name="propertyAccessor" />, не реализовывает <see cref="T:System.Collections.IEnumerable" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])">
      <summary>Создает объект <see cref="T:System.Linq.Expressions.MemberListBinding" /> на основе указанного метода доступа к свойству.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberListBinding" />, содержащее свойство <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />, равное <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, свойство <see cref="P:System.Linq.Expressions.MemberBinding.Member" />, равное <see cref="T:System.Reflection.MemberInfo" />, представляющее свойство с доступом в <paramref name="propertyAccessor" />, и <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />, заполненные элементами <paramref name="initializers" />.</returns>
      <param name="propertyAccessor">
        <see cref="T:System.Reflection.MethodInfo" />, представляющий метод доступа свойства.</param>
      <param name="initializers">Массив объектов <see cref="T:System.Linq.Expressions.ElementInit" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="propertyAccessor" /> имеет значение null. -или-Значение одного или нескольких элементов параметра <paramref name="initializers" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyAccessor" /> не представляет метод доступа свойства.-или-Тип <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> свойства, представленного методом с помощью доступа <paramref name="propertyAccessor" />, не реализовывает <see cref="T:System.Collections.IEnumerable" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
      <summary>Создает <see cref="T:System.Linq.Expressions.ListInitExpression" />, использующий указанные объекты <see cref="T:System.Linq.Expressions.ElementInit" /> для инициализации коллекции.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ListInitExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />, и свойствами <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> и <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />, для которых заданы указанные значения.</returns>
      <param name="newExpression">Объект <see cref="T:System.Linq.Expressions.NewExpression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />.</param>
      <param name="initializers">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.ElementInit" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="newExpression" /> или <paramref name="initializers" /> имеет значение null.-или-Значение одного или нескольких элементов параметра <paramref name="initializers" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="newExpression" />.Type не реализует <see cref="T:System.Collections.IEnumerable" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <summary>Создает <see cref="T:System.Linq.Expressions.ListInitExpression" />, использующий метод с именем "Добавить", чтобы добавить элементы к коллекции.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ListInitExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />, и свойством <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />, для которого задано указанное значение.</returns>
      <param name="newExpression">Объект <see cref="T:System.Linq.Expressions.NewExpression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />.</param>
      <param name="initializers">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.Expression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="newExpression" /> или <paramref name="initializers" /> имеет значение null.-или-Значение одного или нескольких элементов параметра <paramref name="initializers" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="newExpression" />.Type не реализует <see cref="T:System.Collections.IEnumerable" />.</exception>
      <exception cref="T:System.InvalidOperationException">Не существует метод экземпляра с именем "Add" (без учета регистра), объявленного в <paramref name="newExpression" />.Type или его базовом типе.-или-Метод сложения для типа <paramref name="newExpression" />.Type или его базового типа не принимает точно один аргумент.-или-Тип, представленный свойством <see cref="P:System.Linq.Expressions.Expression.Type" /> первого элемента <paramref name="initializers" /> не назначается для типа метода добавления для <paramref name="newExpression" />.Type или его базового типа.-или-Метод, совместимый более чем с одним аргументом, с именем "Add" (без учета регистра), существует для типа <paramref name="newExpression" />.Type или его базового типа.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.ListInitExpression" />, использующий указанные объекты <see cref="T:System.Linq.Expressions.ElementInit" /> для инициализации коллекции.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ListInitExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />, и свойствами <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> и <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />, для которых заданы указанные значения.</returns>
      <param name="newExpression">Объект <see cref="T:System.Linq.Expressions.NewExpression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />.</param>
      <param name="initializers">Массив объектов <see cref="T:System.Linq.Expressions.ElementInit" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="newExpression" /> или <paramref name="initializers" /> имеет значение null.-или-Значение одного или нескольких элементов параметра <paramref name="initializers" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="newExpression" />.Type не реализует <see cref="T:System.Collections.IEnumerable" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.ListInitExpression" />, использующий метод с именем "Add", чтобы добавить элементы к коллекции.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ListInitExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />, и свойством <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />, для которого задано указанное значение.</returns>
      <param name="newExpression">Объект <see cref="T:System.Linq.Expressions.NewExpression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />.</param>
      <param name="initializers">Массив объектов <see cref="T:System.Linq.Expressions.Expression" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="newExpression" /> или <paramref name="initializers" /> имеет значение null.-или-Значение одного или нескольких элементов параметра <paramref name="initializers" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="newExpression" />.Type не реализует <see cref="T:System.Collections.IEnumerable" />.</exception>
      <exception cref="T:System.InvalidOperationException">Не существует метод экземпляра с именем "Add" (без учета регистра), объявленного в <paramref name="newExpression" />.Type или его базовом типе.-или-Метод сложения для типа <paramref name="newExpression" />.Type или его базового типа не принимает точно один аргумент.-или-Тип, представленный свойством <see cref="P:System.Linq.Expressions.Expression.Type" /> первого элемента <paramref name="initializers" /> не назначается для типа метода добавления для <paramref name="newExpression" />.Type или его базового типа.-или-Метод, совместимый более чем с одним аргументом, с именем "Add" (без учета регистра), существует для типа <paramref name="newExpression" />.Type или его базового типа.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <summary>Создает <see cref="T:System.Linq.Expressions.ListInitExpression" />, использующий указанный метод, чтобы добавить элементы к коллекции.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ListInitExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />, и свойством <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />, для которого задано указанное значение.</returns>
      <param name="newExpression">Объект <see cref="T:System.Linq.Expressions.NewExpression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />.</param>
      <param name="addMethod">Параметр <see cref="T:System.Reflection.MethodInfo" />, представляющий метод экземпляра с именем "Add" (без учета регистра), добавляющий элемент к коллекции.</param>
      <param name="initializers">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.Expression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="newExpression" /> или <paramref name="initializers" /> имеет значение null.-или-Значение одного или нескольких элементов параметра <paramref name="initializers" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="newExpression" />.Type не реализует <see cref="T:System.Collections.IEnumerable" />.-или-
                Значение <paramref name="addMethod" /> не равно null и не представляет метод экземпляра с именем "Add" (без учета регистра), принимающий точно один аргумент.-или-
                Значение <paramref name="addMethod" /> не равно null, а тип, представленный свойством <see cref="P:System.Linq.Expressions.Expression.Type" /> одного или нескольких элементов параметра <paramref name="initializers" />, нельзя назначить для типа аргумента метода, представленного <paramref name="addMethod" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="addMethod" /> не равен null, и отсутствует метод экземпляра с именем "Add", принимающий один аргумент, совместимый с типом, для параметра <paramref name="newExpression" />.Type или его базового типа.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.ListInitExpression" />, использующий указанный метод, чтобы добавить элементы к коллекции.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ListInitExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />, и свойством <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />, для которого задано указанное значение.</returns>
      <param name="newExpression">Объект <see cref="T:System.Linq.Expressions.NewExpression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />.</param>
      <param name="addMethod">Параметр <see cref="T:System.Reflection.MethodInfo" />, представляющий метод экземпляра с одним аргументом, добавляющий элемент к коллекции.</param>
      <param name="initializers">Массив объектов <see cref="T:System.Linq.Expressions.Expression" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="newExpression" /> или <paramref name="initializers" /> имеет значение null.-или-Значение одного или нескольких элементов параметра <paramref name="initializers" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="newExpression" />.Type не реализует <see cref="T:System.Collections.IEnumerable" />.-или-
                Значение <paramref name="addMethod" /> не равно null и не представляет метод экземпляра с именем "Add" (без учета регистра), принимающий точно один аргумент.-или-
                Значение <paramref name="addMethod" /> не равно null, а тип, представленный свойством <see cref="P:System.Linq.Expressions.Expression.Type" /> одного или нескольких элементов параметра <paramref name="initializers" />, нельзя назначить для типа аргумента метода, представленного <paramref name="addMethod" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="addMethod" /> не равен null, и отсутствует метод экземпляра с именем "Add", принимающий один аргумент, совместимый с типом, для параметра <paramref name="newExpression" />.Type или его базового типа.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, присвоенные левый и правый операнды с помощью вызова соответствующего заводского метода.</summary>
      <returns>Объект <see cref="T:System.Linq.Expressions.BinaryExpression" />, полученный в результате вызова соответствующего заводского метода.</returns>
      <param name="binaryType">
        <see cref="T:System.Linq.Expressions.ExpressionType" />, указывающий тип бинарной операции.</param>
      <param name="left">
        <see cref="T:System.Linq.Expressions.Expression" /> представляет левый операнд.</param>
      <param name="right">
        <see cref="T:System.Linq.Expressions.Expression" /> представляет правый операнд.</param>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="binaryType" /> не соответствует двоичному узлу выражения.</exception>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, присвоенный левый операнд, правый операнд и метод реализации с помощью вызова соответствующего заводского метода.</summary>
      <returns>Объект <see cref="T:System.Linq.Expressions.BinaryExpression" />, полученный в результате вызова соответствующего заводского метода.</returns>
      <param name="binaryType">
        <see cref="T:System.Linq.Expressions.ExpressionType" />, указывающий тип бинарной операции.</param>
      <param name="left">
        <see cref="T:System.Linq.Expressions.Expression" /> представляет левый операнд.</param>
      <param name="right">
        <see cref="T:System.Linq.Expressions.Expression" /> представляет правый операнд.</param>
      <param name="liftToNull">true, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />значение true; false, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> значение false.</param>
      <param name="method">
        <see cref="T:System.Reflection.MethodInfo" />, указывающий метод реализации.</param>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="binaryType" /> не соответствует двоичному узлу выражения.</exception>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, присвоенный левый операнд, правый операнд, метод реализации и функция преобразования метода с помощью вызова соответствующего заводского метода.</summary>
      <returns>Объект <see cref="T:System.Linq.Expressions.BinaryExpression" />, полученный в результате вызова соответствующего заводского метода.</returns>
      <param name="binaryType">
        <see cref="T:System.Linq.Expressions.ExpressionType" />, указывающий тип бинарной операции.</param>
      <param name="left">
        <see cref="T:System.Linq.Expressions.Expression" /> представляет левый операнд.</param>
      <param name="right">
        <see cref="T:System.Linq.Expressions.Expression" /> представляет правый операнд.</param>
      <param name="liftToNull">true, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />значение true; false, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> значение false.</param>
      <param name="method">
        <see cref="T:System.Reflection.MethodInfo" />, указывающий метод реализации.</param>
      <param name="conversion">Объект <see cref="T:System.Linq.Expressions.LambdaExpression" />, представляющий тип функции преобразования. Этот параметр используется только, если значение <paramref name="binaryType" /> равно <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" />.</param>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="binaryType" /> не соответствует двоичному узлу выражения.</exception>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberExpression" />, который представляет доступ к полю или свойству.</summary>
      <returns>
        <see cref="T:System.Linq.Expressions.MemberExpression" />, полученный в результате вызова соответствующего заводского метода.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" /> представляет объект, к которому принадлежит элемент.</param>
      <param name="member">
        <see cref="T:System.Reflection.MemberInfo" />, описывающий поле или свойство, к которому следует осуществить доступ.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> или <paramref name="member" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="member" /> не представляет поле или свойство.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, присвоенный операнду с помощью вызова соответствующего заводского метода.</summary>
      <returns>
        <see cref="T:System.Linq.Expressions.UnaryExpression" />, полученный в результате вызова соответствующего заводского метода.</returns>
      <param name="unaryType">
        <see cref="T:System.Linq.Expressions.ExpressionType" />, указывающий тип унарной операции.</param>
      <param name="operand">
        <see cref="T:System.Linq.Expressions.Expression" /> представляет операнд.</param>
      <param name="type">Тип <see cref="T:System.Type" />, указывающий тип для преобразования в (передать null, если не применяется).</param>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="unaryType" /> не соответствует унарному узлу выражения.</exception>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="operand" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, присвоенный операнд и метод реализации с помощью вызова соответствующего заводского метода.</summary>
      <returns>
        <see cref="T:System.Linq.Expressions.UnaryExpression" />, полученный в результате вызова соответствующего заводского метода.</returns>
      <param name="unaryType">
        <see cref="T:System.Linq.Expressions.ExpressionType" />, указывающий тип унарной операции.</param>
      <param name="operand">
        <see cref="T:System.Linq.Expressions.Expression" /> представляет операнд.</param>
      <param name="type">Тип <see cref="T:System.Type" />, указывающий тип для преобразования в (передать null, если не применяется).</param>
      <param name="method">
        <see cref="T:System.Reflection.MethodInfo" />, представляющий метод реализации.</param>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="unaryType" /> не соответствует унарному узлу выражения.</exception>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="operand" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberMemberBinding" />, который представляет рекурсивную инициализацию элементов поля или свойства.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> со свойством <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />, равным <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, и свойствами <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> и <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />, для которых заданы указанные значения.</returns>
      <param name="member">Объект <see cref="T:System.Reflection.MemberInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberBinding.Member" />.</param>
      <param name="bindings">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.MemberBinding" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="member" /> или <paramref name="bindings" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="member" /> не представляет поле или свойство.-или-Свойство <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> элемента <paramref name="bindings" /> не представляет элемент типа поля или свойства, представленного <paramref name="member" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberMemberBinding" />, который представляет рекурсивную инициализацию элементов поля или свойства.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> со свойством <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />, равным <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, и свойствами <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> и <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />, для которых заданы указанные значения.</returns>
      <param name="member">Объект <see cref="T:System.Reflection.MemberInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberBinding.Member" />.</param>
      <param name="bindings">Массив объектов <see cref="T:System.Linq.Expressions.MemberBinding" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="member" /> или <paramref name="bindings" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="member" /> не представляет поле или свойство.-или-Свойство <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> элемента <paramref name="bindings" /> не представляет элемент типа поля или свойства, представленного <paramref name="member" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberMemberBinding" />, который представляет рекурсивную инициализацию элементов элемента, доступ к которому осуществляется с помощью метода доступа свойства.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberMemberBinding" />, содержащее свойство <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />, равное <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, свойство <see cref="P:System.Linq.Expressions.MemberBinding.Member" />, для которого задано значение <see cref="T:System.Reflection.PropertyInfo" />, представляющее свойство с доступом в <paramref name="propertyAccessor" />, и свойства <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />, для которых заданы указанные значения.</returns>
      <param name="propertyAccessor">
        <see cref="T:System.Reflection.MethodInfo" />, представляющий метод доступа к свойству.</param>
      <param name="bindings">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.MemberBinding" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="propertyAccessor" /> или <paramref name="bindings" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyAccessor" /> не представляет метод доступа свойства.-или-Свойство <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> элемента <paramref name="bindings" /> не представляет элемент типа свойства, доступ к которому осуществляется методом, который представляет <paramref name="propertyAccessor" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberMemberBinding" />, который представляет рекурсивную инициализацию элементов элемента, доступ к которому осуществляется с помощью метода доступа свойства.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberMemberBinding" />, содержащее свойство <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" />, равное <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, свойство <see cref="P:System.Linq.Expressions.MemberBinding.Member" />, для которого задано значение <see cref="T:System.Reflection.PropertyInfo" />, представляющее свойство с доступом в <paramref name="propertyAccessor" />, и свойства <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />, для которых заданы указанные значения.</returns>
      <param name="propertyAccessor">
        <see cref="T:System.Reflection.MethodInfo" />, представляющий метод доступа к свойству.</param>
      <param name="bindings">Массив объектов <see cref="T:System.Linq.Expressions.MemberBinding" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="propertyAccessor" /> или <paramref name="bindings" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyAccessor" /> не представляет метод доступа свойства.-или-Свойство <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> элемента <paramref name="bindings" /> не представляет элемент типа свойства, доступ к которому осуществляется методом, который представляет <paramref name="propertyAccessor" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
      <summary>Создает объект <see cref="T:System.Linq.Expressions.MemberInitExpression" />.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberInitExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" />, и свойствами <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> и <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" />, для которых заданы указанные значения.</returns>
      <param name="newExpression">Объект <see cref="T:System.Linq.Expressions.NewExpression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" />.</param>
      <param name="bindings">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.MemberBinding" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="newExpression" /> или <paramref name="bindings" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> элемента <paramref name="bindings" /> не представляет элемент типа поля или свойства, который представляет <paramref name="newExpression" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])">
      <summary>Создает объект <see cref="T:System.Linq.Expressions.MemberInitExpression" />.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberInitExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" />, и свойствами <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> и <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" />, для которых заданы указанные значения.</returns>
      <param name="newExpression">Объект <see cref="T:System.Linq.Expressions.NewExpression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" />.</param>
      <param name="bindings">Массив объектов <see cref="T:System.Linq.Expressions.MemberBinding" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="newExpression" /> или <paramref name="bindings" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> элемента <paramref name="bindings" /> не представляет элемент типа поля или свойства, который представляет <paramref name="newExpression" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического остатка.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор модуля не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического остатка. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
                Значение <paramref name="method" /> равно null, а оператор модуля не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического умножения, не содержащую проверку переполнения.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор умножения не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического умножения, не содержащую проверку переполнения, для которой указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
                Значение <paramref name="method" /> равно null, а оператор умножения не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического умножения, содержащую проверку переполнения.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор умножения не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического умножения, содержащую проверку переполнения. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
                Значение <paramref name="method" /> равно null, а оператор умножения не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий операцию арифметического отрицания.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Negate" />, и свойством <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, для которого задано указанное значение.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Унарный минус-оператор не определен для типа <paramref name="expression" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий операцию арифметического отрицания. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Negate" /> и <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, и свойства <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не обладает ровно одним аргументом.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равно null, а унарный минус-оператор не определен для типа <paramref name="expression" />.Type.-или-
                Тип <paramref name="expression" />.Type (или соответствующий тип, не поддерживающий значение null, если он является типом, поддерживающим значение null) не назначается типу аргумента метода, представленного <paramref name="method" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий операцию арифметического отрицания, содержащую проверку переполнения.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" />, и свойством <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, для которого задано указанное значение.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Унарный минус-оператор не определен для типа <paramref name="expression" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий операцию арифметического отрицания, содержащую проверку переполнения. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" /> и <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, и свойства <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не обладает ровно одним аргументом.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равно null, а унарный минус-оператор не определен для типа <paramref name="expression" />.Type.-или-
                Тип <paramref name="expression" />.Type (или соответствующий тип, не поддерживающий значение null, если он является типом, поддерживающим значение null) не назначается типу аргумента метода, представленного <paramref name="method" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.NewExpression" />, представляющий вызов указанного конструктора без аргументов.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.NewExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.New" />, и свойством <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />, для которого задано указанное значение.</returns>
      <param name="constructor">Объект <see cref="T:System.Reflection.ConstructorInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="constructor" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Конструктор, который представляет <paramref name="constructor" />, содержит не менее одного параметра.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <summary>Создает <see cref="T:System.Linq.Expressions.NewExpression" />, представляющий вызов указанного конструктора с указанными аргументами.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.NewExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.New" />, и свойствами <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> и <see cref="P:System.Linq.Expressions.NewExpression.Arguments" />, для которых заданы указанные значения.</returns>
      <param name="constructor">Объект <see cref="T:System.Reflection.ConstructorInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />.</param>
      <param name="arguments">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.Expression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.NewExpression.Arguments" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="constructor" /> имеет значение null.-или-Элемент массива <paramref name="arguments" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="arguments" /> не содержит количество элементов, равное количеству параметров для конструктора, представленного <paramref name="constructor" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="arguments" /> нельзя назначить для типа соответствующего параметра конструктора, который представляет <paramref name="constructor" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})">
      <summary>Создает <see cref="T:System.Linq.Expressions.NewExpression" />, представляющий вызов указанного конструктора с указанными аргументами. Указаны элементы с доступом к полям, инициализированным конструктором.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.NewExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.New" /> и<see cref="P:System.Linq.Expressions.NewExpression.Constructor" />, <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> и свойства <see cref="P:System.Linq.Expressions.NewExpression.Members" />, для которых заданы указанные значения.</returns>
      <param name="constructor">Объект <see cref="T:System.Reflection.ConstructorInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />.</param>
      <param name="arguments">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.Expression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.NewExpression.Arguments" />.</param>
      <param name="members">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Reflection.MemberInfo" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.NewExpression.Members" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="constructor" /> имеет значение null.-или-Элемент массива <paramref name="arguments" /> равен null.-или-Элемент массива <paramref name="members" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="arguments" /> не содержит количество элементов, равное количеству параметров для конструктора, представленного <paramref name="constructor" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="arguments" /> нельзя назначить для типа соответствующего параметра конструктора, который представляет <paramref name="constructor" />.-или-Параметр <paramref name="members" /> не содержит то же количество элементов, что и параметр <paramref name="arguments" />.-или-Элемент свойства <paramref name="arguments" /> содержит <see cref="P:System.Linq.Expressions.Expression.Type" />, представляющий тип, который нельзя назначить для типа элемента, представленного соответствующим элементом <paramref name="members" />.-или-Элемент массива members представляет свойство, у которого отсутствует метод доступа get.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.NewExpression" />, представляющий вызов указанного конструктора с указанными аргументами. Указаны элементы с доступом к полям, инициализированным в качестве массива.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.NewExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.New" /> и<see cref="P:System.Linq.Expressions.NewExpression.Constructor" />, <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> и свойства <see cref="P:System.Linq.Expressions.NewExpression.Members" />, для которых заданы указанные значения.</returns>
      <param name="constructor">Объект <see cref="T:System.Reflection.ConstructorInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />.</param>
      <param name="arguments">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.Expression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.NewExpression.Arguments" />.</param>
      <param name="members">Массив объектов <see cref="T:System.Reflection.MemberInfo" /> для использования с целью заполнения коллекции <see cref="P:System.Linq.Expressions.NewExpression.Members" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="constructor" /> имеет значение null.-или-Элемент массива <paramref name="arguments" /> равен null.-или-Элемент массива <paramref name="members" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="arguments" /> не содержит количество элементов, равное количеству параметров для конструктора, представленного <paramref name="constructor" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="arguments" /> нельзя назначить для типа соответствующего параметра конструктора, который представляет <paramref name="constructor" />.-или-Параметр <paramref name="members" /> не содержит то же количество элементов, что и параметр <paramref name="arguments" />.-или-Элемент свойства <paramref name="arguments" /> содержит <see cref="P:System.Linq.Expressions.Expression.Type" />, представляющий тип, который нельзя назначить для типа элемента, представленного соответствующим элементом <paramref name="members" />.-или-Элемент <paramref name="members" /> представляет свойство, которое не обладает доступом get.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.NewExpression" />, представляющий вызов указанного конструктора с указанными аргументами.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.NewExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.New" />, и свойствами <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> и <see cref="P:System.Linq.Expressions.NewExpression.Arguments" />, для которых заданы указанные значения.</returns>
      <param name="constructor">Объект <see cref="T:System.Reflection.ConstructorInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />.</param>
      <param name="arguments">Массив объектов <see cref="T:System.Linq.Expressions.Expression" /> для заполнения коллекции <see cref="P:System.Linq.Expressions.NewExpression.Arguments" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="constructor" /> имеет значение null.-или-Элемент массива <paramref name="arguments" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Длина <paramref name="arguments" /> не соответствует количеству для конструктора, который представляет <paramref name="constructor" />.-или-Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="arguments" /> нельзя назначить для типа соответствующего параметра конструктора, который представляет <paramref name="constructor" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.New(System.Type)">
      <summary>Создает <see cref="T:System.Linq.Expressions.NewExpression" />, представляющий вызов конструктора указанного типа без параметров.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.NewExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.New" />, и свойство<see cref="P:System.Linq.Expressions.NewExpression.Constructor" />, для которого задано значение <see cref="T:System.Reflection.ConstructorInfo" />, представляющее конструктор указанного типа без параметров.</returns>
      <param name="type">
        <see cref="T:System.Type" /> содержит конструктор без аргументов.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="type" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Тип, который представляет <paramref name="type" />, не содержит конструктор без параметров.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <summary>Создает <see cref="T:System.Linq.Expressions.NewArrayExpression" />, представляющее создание массива с указанным рангом.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.NewArrayExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" />, и свойством <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />, для которого задано указанное значение.</returns>
      <param name="type">Тип <see cref="T:System.Type" />, представляющий тип элемента массива.</param>
      <param name="bounds">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.Expression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="type" /> или <paramref name="bounds" /> имеет значение null.-или-Элемент массива <paramref name="bounds" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="bounds" /> не представляет целочисленный тип.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.NewArrayExpression" />, представляющее создание массива с указанным рангом.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.NewArrayExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" />, и свойством <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />, для которого задано указанное значение.</returns>
      <param name="type">Тип <see cref="T:System.Type" />, представляющий тип элемента массива.</param>
      <param name="bounds">Массив объектов <see cref="T:System.Linq.Expressions.Expression" /> для использования с целью заполнения коллекции <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="type" /> или <paramref name="bounds" /> имеет значение null.-или-Элемент массива <paramref name="bounds" /> равен null.</exception>
      <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="bounds" /> не представляет целочисленный тип.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <summary>Создает <see cref="T:System.Linq.Expressions.NewArrayExpression" />, представляющий создание одномерного массива и его инициализацию из списка элементов.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.NewArrayExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" />, и свойством <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />, для которого задано указанное значение.</returns>
      <param name="type">Тип <see cref="T:System.Type" />, представляющий тип элемента массива.</param>
      <param name="initializers">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий все объекты <see cref="T:System.Linq.Expressions.Expression" />, используемые для заполнения коллекции <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="type" /> или <paramref name="initializers" /> имеет значение null.-или-Элемент массива <paramref name="initializers" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="initializers" /> представляет тип, который не назначается для типа, который представляет <paramref name="type" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])">
      <summary>Создает <see cref="T:System.Linq.Expressions.NewArrayExpression" />, представляющий создание одномерного массива и его инициализацию из списка элементов.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.NewArrayExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" />, и свойством <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />, для которого задано указанное значение.</returns>
      <param name="type">Тип <see cref="T:System.Type" />, представляющий тип элемента массива.</param>
      <param name="initializers">Массив объектов <see cref="T:System.Linq.Expressions.Expression" /> для использования с целью заполнения коллекции <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="type" /> или <paramref name="initializers" /> имеет значение null.-или-Элемент массива <paramref name="initializers" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Linq.Expressions.Expression.Type" /> элемента <paramref name="initializers" /> представляет тип, который не назначается для типа <paramref name="type" />.</exception>
    </member>
    <member name="P:System.Linq.Expressions.Expression.NodeType">
      <summary>Возвращает тип узла этого выражения <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Одно из значений <see cref="T:System.Linq.Expressions.ExpressionType" />.</returns>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий побитовую операцию дополнения.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Not" />, и свойством <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, для которого задано указанное значение.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Унарный  оператор Not не определен для типа <paramref name="expression" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий побитовую операцию дополнения. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Not" /> и <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, и свойства <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не обладает ровно одним аргументом.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равно null, а унарный оператор Not не определен для типа <paramref name="expression" />.Type.-или-
                Тип <paramref name="expression" />.Type (или соответствующий тип, не поддерживающий значение null, если он является типом, поддерживающим значение null) не назначается типу аргумента метода, представленного <paramref name="method" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий сравнение неравенства.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор неравенства не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий сравнение неравенства. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="liftToNull">true, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />значение true; false, чтобы задать для <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> значение false.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равно null, а оператор неравенства не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющее побитовую операцию OR.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Or" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Побитовый оператор OR не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющее побитовую операцию OR. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Or" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, и побитовый операторOR не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий условную операцию OR, вычисляющую второй операнд только, если необходимо.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Побитовый оператор OR не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.-или-
                Типы <paramref name="left" />.Type и <paramref name="right" />.Type отличаются от логического типа.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий условную операцию OR, вычисляющую второй операнд только, если необходимо. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, и побитовый операторOR не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.-или-
                Метод <paramref name="method" /> равен null, а типы <paramref name="left" />.Type и <paramref name="right" />.Type отличаются от логического типа.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)">
      <summary>Создает объект <see cref="T:System.Linq.Expressions.ParameterExpression" />.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.ParameterExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Parameter" />, и свойствами <see cref="P:System.Linq.Expressions.Expression.Type" /> и <see cref="P:System.Linq.Expressions.ParameterExpression.Name" />, для которых заданы указанные значения.</returns>
      <param name="type">Объект <see cref="T:System.Type" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.Expression.Type" />.</param>
      <param name="name">Значение, которое следует задать для свойства <see cref="P:System.Linq.Expressions.ParameterExpression.Name" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="type" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий возведение числа в степень.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Power" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор потенцирования не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.-или-
                Типы <paramref name="left" />.Type и <paramref name="right" />.Type не являются <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий возведение числа в степень. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Power" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равен null, а оператор потенцирования не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.-или-
                Значение <paramref name="method" /> равно null, а типы <paramref name="left" />.Type и <paramref name="right" />.Type не равны <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberExpression" />, который представляет доступ к свойству с помощью метода доступа свойства.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, свойству <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> присвоено значение <paramref name="expression" />, а свойству <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> присвоено значение <see cref="T:System.Reflection.PropertyInfo" />, представляющее свойство, доступ к которому осуществляется в <paramref name="propertyAccessor" />.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />.</param>
      <param name="propertyAccessor">
        <see cref="T:System.Reflection.MethodInfo" />, представляющий метод доступа к свойству.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="propertyAccessor" /> имеет значение null.-или-Метод, который представляет <paramref name="propertyAccessor" />, не является static (Shared в Visual Basic), и <paramref name="expression" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="expression" />.Type не назначается объявляемому типу метода, представленному параметром <paramref name="propertyAccessor" />.-или-Метод, который представляет <paramref name="propertyAccessor" />, не является методом доступа к свойству.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberExpression" />, представляющий доступ к свойству.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, и свойствами <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> и <see cref="P:System.Linq.Expressions.MemberExpression.Member" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />.</param>
      <param name="property">Объект <see cref="T:System.Reflection.PropertyInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.MemberExpression.Member" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="property" /> имеет значение null.-или-Свойство, которое представляет <paramref name="property" />, не является static (Shared в Visual Basic), и <paramref name="expression" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">
                Тип <paramref name="expression" />.Type не может быть назначен объявляемому типу, который представляет <paramref name="property" />.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberExpression" />, который представляет доступ к свойству, которому предоставлено имя свойства.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, свойству <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> присвоено значение <paramref name="expression" />, а свойству <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> присвоено значение <see cref="T:System.Reflection.PropertyInfo" />, представляющее свойство, обозначенное с помощью параметра <paramref name="propertyName" />.</returns>
      <param name="expression">
        <see cref="T:System.Linq.Expressions.Expression" /> где <see cref="P:System.Linq.Expressions.Expression.Type" /> содержит свойство с именем <paramref name="propertyName" />.</param>
      <param name="propertyName">Имя свойства.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> или <paramref name="propertyName" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Не определено свойство с именем <paramref name="propertyName" /> для типа <paramref name="expression" />.Type или его базовых типов.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)">
      <summary>Создает <see cref="T:System.Linq.Expressions.MemberExpression" />, который представляет доступ к свойству или полю, которому предоставлено имя свойства или поля.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.MemberExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, свойству <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> присвоено значение <paramref name="expression" />, а свойству <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> присвоены значения <see cref="T:System.Reflection.PropertyInfo" /> или <see cref="T:System.Reflection.FieldInfo" />, представляющие свойство или поле, обозначенное с помощью параметра <paramref name="propertyOrFieldName" />.</returns>
      <param name="expression">
        <see cref="T:System.Linq.Expressions.Expression" /> где <see cref="P:System.Linq.Expressions.Expression.Type" /> содержит свойство или поле с именем <paramref name="propertyOrFieldName" />.</param>
      <param name="propertyOrFieldName">Имя свойства или поля.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> или <paramref name="propertyOrFieldName" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Не определено свойство или поле с именем <paramref name="propertyOrFieldName" /> для типа <paramref name="expression" />.Type или его базовых типов.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющее выражение, которое содержит постоянное значение типа <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Quote" />, и свойство <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, для которого задано указанное значение.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий побитовую операцию сдвига вправо.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор сдвига вправо не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий побитовую операцию сдвига вправо. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
                Значение <paramref name="method" /> равно null, а оператор сдвига вправо не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического вычитания, не содержащую проверку переполнения.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор вычитания не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического вычитания, не содержащую проверку переполнения. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равно null, а оператор вычитания не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического вычитания, содержащую проверку переполнения.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" />, и свойствами <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор вычитания не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.BinaryExpression" />, представляющий операцию арифметического вычитания, содержащую проверку переполнения. Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.BinaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" /> и <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, и свойства <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="left">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />.</param>
      <param name="right">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="left" /> или <paramref name="right" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не принимает ровно два аргумента.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равно null, а оператор вычитания не определен для типов <paramref name="left" />.Type и <paramref name="right" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.ToString">
      <summary>Возвращает текстовое представление <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Текстовое представление <see cref="T:System.Linq.Expressions.Expression" />.</returns>
    </member>
    <member name="P:System.Linq.Expressions.Expression.Type">
      <summary>Получает статичный тип выражения, представленного этим выражением <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Тип <see cref="T:System.Type" />, представляющий этот статичный тип выражения.</returns>
    </member>
    <member name="M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий преобразование явной ссылки или упаковки, где null поддерживается в случае неудачного преобразования.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.TypeAs" />, и свойствами <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> и <see cref="P:System.Linq.Expressions.Expression.Type" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <param name="type">Объект <see cref="T:System.Type" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.Expression.Type" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> или <paramref name="type" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)">
      <summary>Создает объект <see cref="T:System.Linq.Expressions.TypeBinaryExpression" />.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> со свойством <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равным <see cref="F:System.Linq.Expressions.ExpressionType.TypeIs" />, и свойствами <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" /> и <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" />.</param>
      <param name="type">Объект <see cref="T:System.Type" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> или <paramref name="type" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий операцию "унарный плюс".</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" />, и свойство <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, для которого задано указанное значение.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Оператор "унарный плюс" не определен для типа <paramref name="expression" />.Type.</exception>
    </member>
    <member name="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <summary>Создает <see cref="T:System.Linq.Expressions.UnaryExpression" />, представляющий операцию "унарный плюс". Может быть указан метод реализации.</summary>
      <returns>Выражение <see cref="T:System.Linq.Expressions.UnaryExpression" />, содержащее свойство <see cref="P:System.Linq.Expressions.Expression.NodeType" />, равное <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" /> и <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, и свойства <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />, для которых заданы указанные значения.</returns>
      <param name="expression">Объект <see cref="T:System.Linq.Expressions.Expression" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />.</param>
      <param name="method">Объект <see cref="T:System.Reflection.MethodInfo" />, который следует присвоить свойству <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="expression" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="method" /> не равно null, и метод, который оно представляет, возвращает void, не является static (Shared в Visual Basic) и не обладает ровно одним аргументом.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="method" /> равно null, а оператор "Унарный плюс" не определен для типа <paramref name="expression" />.-или-
                Тип <paramref name="expression" />.Type (или соответствующий тип, не поддерживающий значение null, если он является типом, поддерживающим значение null) не назначается типу аргумента метода, представленного <paramref name="method" />.</exception>
    </member>
    <member name="T:System.Linq.Expressions.Expression`1">
      <summary>Представляет строго типизированное лямбда-выражение в виде структуры данные в форме дерева выражений. Этот класс не может быть унаследован.</summary>
      <typeparam name="TDelegate">Тип делегата, который представляет <see cref="T:System.Linq.Expressions.Expression`1" />.</typeparam>
    </member>
    <member name="M:System.Linq.Expressions.Expression`1.Compile">
      <summary>Компилирует лямбда-выражение, описанное с помощью дерева выражений в исполняемый код.</summary>
      <returns>Делегат типа <paramref name="TDelegate" />, который представляет лямбда-выражение описанное с помощью <see cref="T:System.Linq.Expressions.Expression`1" />.</returns>
    </member>
    <member name="T:System.Linq.Expressions.ExpressionType">
      <summary>Описывает типы узлов для узлов дерева выражений.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Add">
      <summary>Узел, представляющий арифметическое добавление без проверки переполнения.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.AddChecked">
      <summary>Узел, представляющий арифметическое добавление с проверкой переполнения.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.And">
      <summary>Узел, представляющий побитовую операцию AND.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.AndAlso">
      <summary>Узел, представляющий сокращенную условную операцию AND.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.ArrayLength">
      <summary>Узел, представляющий получение длины одномерного массива.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.ArrayIndex">
      <summary>Узел, представляющий индексирование в одномерный массив.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Call">
      <summary>Узел, представляющий вызов метода.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Coalesce">
      <summary>Узел, представляющий объединяющую операцию, поддерживающую значение NULL.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Conditional">
      <summary>Узел, представляющий условную операцию.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Constant">
      <summary>Узел, представляющий выражение, содержащее постоянное значение.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Convert">
      <summary>Узел, представляющий условную операцию преобразования или приведения. Если операция представляет цифровое преобразование, она тихо переполняется, если преобразованное значение не соответствует целевому типу.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.ConvertChecked">
      <summary>Узел, представляющий условную операцию преобразования или приведения. Если операция представляет цифровое преобразование, исключение возникает, если преобразованное значение не соответствует целевому типу.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Divide">
      <summary>Узел, представляющий арифметическое деление.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Equal">
      <summary>Узел, представляющий сравнение объектов.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.ExclusiveOr">
      <summary>Узел, представляющий побитовую операцию XOR.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.GreaterThan">
      <summary>Узел, представляющий числовое сравнение объектов "больше, чем".</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual">
      <summary>Узел, представляющий числовое сравнение объектов "больше или равно".</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Invoke">
      <summary>Узел, представляющий применение делегата или лямбда-выражения к списку выражений аргумента.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Lambda">
      <summary>Узел, представляющий лямбда-выражение.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.LeftShift">
      <summary>Узел, представляющий побитовую операцию со сдвигом влево.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.LessThan">
      <summary>Узел, представляющий числовое сравнение объектов "меньше, чем".</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual">
      <summary>Узел, представляющий числовое сравнение объектов "меньше или равно".</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.ListInit">
      <summary>Узел, представляющий создание нового объекта <see cref="T:System.Collections.IEnumerable" /> и его инициализацию из списка элементов.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.MemberAccess">
      <summary>Узел, представляющий чтение из поля или свойства.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.MemberInit">
      <summary>Узел, представляющий создание нового объекта и инициализацию одного или нескольких его элементов.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Modulo">
      <summary>Узел, представляющий операцию арифметического остатка.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Multiply">
      <summary>Узел, представляющий арифметическое умножение без проверки переполнения.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.MultiplyChecked">
      <summary>Узел, представляющий арифметическое умножение с проверкой переполнения.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Negate">
      <summary>Узел, представляющий операцию арифметического отрицания.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.UnaryPlus">
      <summary>Узел, представляющий операцию "унарный плюс". Результатом заранее определенной операции "унарный плюс" является просто значение операнда, но определенные пользователем реализации могут иметь нетривиальные результаты.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.NegateChecked">
      <summary>Узел, представляющий операцию арифметического отрицания, содержащую проверку переполнения.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.New">
      <summary>Узел, представляющий вызов конструктора для создания нового объекта.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.NewArrayInit">
      <summary>Узел, представляющий создание нового одномерного массива и его инициализацию из списка элементов.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.NewArrayBounds">
      <summary>Узел, представляющий создание нового массива, где указаны границы всех измерений.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Not">
      <summary>Узел, представляющий побитовую операцию дополнения.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.NotEqual">
      <summary>Узел, представляющий сравнение неравенства объектов.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Or">
      <summary>Узел, представляющий побитовую операцию OR.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.OrElse">
      <summary>Узел, представляющий сокращенную условную операцию OR.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Parameter">
      <summary>Узел, представляющий ссылку на параметр, определенный в контексте выражения.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Power">
      <summary>Узел, представляющий возведение числа в степень.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Quote">
      <summary>Узел, представляющий выражение, содержащее постоянное значение типа <see cref="T:System.Linq.Expressions.Expression" />. Узел <see cref="F:System.Linq.Expressions.ExpressionType.Quote" /> может содержать ссылку на параметры, определенные в контексте представленного выражения.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.RightShift">
      <summary>Узел, представляющий побитовую операцию со сдвигом вправо.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.Subtract">
      <summary>Узел, представляющий арифметическое вычитание без проверки переполнения.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.SubtractChecked">
      <summary>Узел, представляющий арифметическое вычитание с проверкой переполнения.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.TypeAs">
      <summary>Узел, представляющий преобразование явной ссылки или упаковки, где null поддерживается в случае неудачного преобразования.</summary>
    </member>
    <member name="F:System.Linq.Expressions.ExpressionType.TypeIs">
      <summary>Узел, представляющий проверку типа.</summary>
    </member>
    <member name="T:System.Linq.Expressions.InvocationExpression">
      <summary>Представляет выражение, применяющее делегата или лямбда-выражения к списку выражений аргумента.</summary>
    </member>
    <member name="P:System.Linq.Expressions.InvocationExpression.Arguments">
      <summary>Получает аргументы, к которым применяется делегат.</summary>
      <returns>Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Linq.Expressions.Expression" />, представляющих аргументы, к которым применяется делегат.</returns>
    </member>
    <member name="P:System.Linq.Expressions.InvocationExpression.Expression">
      <summary>Получает делегата или лямбда-выражение для применения.</summary>
      <returns>
        <see cref="T:System.Linq.Expressions.Expression" /> представляющий делегата для применения.</returns>
    </member>
    <member name="T:System.Linq.Expressions.LambdaExpression">
      <summary>Описывает лямбда-выражение.</summary>
    </member>
    <member name="P:System.Linq.Expressions.LambdaExpression.Body">
      <summary>Возвращает тело лямбда-выражения.</summary>
      <returns>Объект <see cref="T:System.Linq.Expressions.Expression" />, который предоставляет тело лямбда-выражения.</returns>
    </member>
    <member name="M:System.Linq.Expressions.LambdaExpression.Compile">
      <summary>Производит делегата, который представляет лямбда-выражение.</summary>
      <returns>Делегат <see cref="T:System.Delegate" />, который при выполнении, ведет себя, как описано семантикой <see cref="T:System.Linq.Expressions.LambdaExpression" />.</returns>
    </member>
    <member name="P:System.Linq.Expressions.LambdaExpression.Parameters">
      <summary>Возвращает параметры лямбда-выражения.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Linq.Expressions.ParameterExpression" />, предоставляющих параметры лямбда-выражения.</returns>
    </member>
    <member name="T:System.Linq.Expressions.ListInitExpression">
      <summary>Представляет вызов конструктора, который содержит инициализатор коллекции.</summary>
    </member>
    <member name="P:System.Linq.Expressions.ListInitExpression.Initializers">
      <summary>Получает инициализаторы элементов, которые используются для инициализации коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Linq.Expressions.ElementInit" />, представляющих элементы, которые используются для инициализации коллекции.</returns>
    </member>
    <member name="P:System.Linq.Expressions.ListInitExpression.NewExpression">
      <summary>Возвращает выражение содержащее вызов в конструктор типа коллекции.</summary>
      <returns>
        <see cref="T:System.Linq.Expressions.NewExpression" />, представляющий вызов в конструктор типа коллекции.</returns>
    </member>
    <member name="T:System.Linq.Expressions.MemberAssignment">
      <summary>Предоставляет инициализацию поля или свойства созданного объекта.</summary>
    </member>
    <member name="P:System.Linq.Expressions.MemberAssignment.Expression">
      <summary>Получает выражение для назначения полю или свойству.</summary>
      <returns>Тип <see cref="T:System.Linq.Expressions.Expression" />, представляющий значение для назначения полю или свойству.</returns>
    </member>
    <member name="T:System.Linq.Expressions.MemberBinding">
      <summary>Обеспечивает базовый класс, производными от которого являются классы, представляющие привязки, используемые для инициализации элементов созданных производных объекта.</summary>
    </member>
    <member name="M:System.Linq.Expressions.MemberBinding.#ctor(System.Linq.Expressions.MemberBindingType,System.Reflection.MemberInfo)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Linq.Expressions.MemberBinding" />.</summary>
      <param name="type">Тип <see cref="T:System.Linq.Expressions.MemberBindingType" />, дискриминирующий тип представленной привязки.</param>
      <param name="member">Тип <see cref="T:System.Reflection.MemberInfo" />, представляющие поле или свойство для инициализации.</param>
    </member>
    <member name="P:System.Linq.Expressions.MemberBinding.BindingType">
      <summary>Получает представленный тип привязки.</summary>
      <returns>Одно из значений <see cref="T:System.Linq.Expressions.MemberBindingType" />.</returns>
    </member>
    <member name="P:System.Linq.Expressions.MemberBinding.Member">
      <summary>Получает поле или свойство для инициализации.</summary>
      <returns>Тип <see cref="T:System.Reflection.MemberInfo" />, представляющие поле или свойство для инициализации.</returns>
    </member>
    <member name="M:System.Linq.Expressions.MemberBinding.ToString">
      <summary>Возвращает текстовое представление <see cref="T:System.Linq.Expressions.MemberBinding" />.</summary>
      <returns>Текстовое представление <see cref="T:System.Linq.Expressions.MemberBinding" />.</returns>
    </member>
    <member name="T:System.Linq.Expressions.MemberBindingType">
      <summary>Описывает типы привязки, которые используются в объектах <see cref="T:System.Linq.Expressions.MemberInitExpression" />.</summary>
    </member>
    <member name="F:System.Linq.Expressions.MemberBindingType.Assignment">
      <summary>Привязка, представляющая инициализацию элемента со значением выражения.</summary>
    </member>
    <member name="F:System.Linq.Expressions.MemberBindingType.MemberBinding">
      <summary>Привязка, представляющаяся рекуррентную инициализацию элементов элемента.</summary>
    </member>
    <member name="F:System.Linq.Expressions.MemberBindingType.ListBinding">
      <summary>Привязка, представляющая инициализацию элемента типа <see cref="T:System.Collections.IList" /> or <see cref="T:System.Collections.Generic.ICollection`1" /> из списка элементов.</summary>
    </member>
    <member name="T:System.Linq.Expressions.MemberExpression">
      <summary>Представляет доступ к полю или свойству.</summary>
    </member>
    <member name="P:System.Linq.Expressions.MemberExpression.Expression">
      <summary>Получает содержащийся объект поля или свойства.</summary>
      <returns>
        <see cref="T:System.Linq.Expressions.Expression" />, который представляет содержащийся объект поля или свойства.</returns>
    </member>
    <member name="P:System.Linq.Expressions.MemberExpression.Member">
      <summary>Получает поле или свойство для доступа.</summary>
      <returns>Тип <see cref="T:System.Reflection.MemberInfo" />, представляющие поле или свойство для доступа.</returns>
    </member>
    <member name="T:System.Linq.Expressions.MemberInitExpression">
      <summary>Представляет вызов конструктора и инициализацию одного или нескольких членов нового объекта.</summary>
    </member>
    <member name="P:System.Linq.Expressions.MemberInitExpression.Bindings">
      <summary>Получает привязки, описывающие способы инициализации членов созданного объекта.</summary>
      <returns>Объекты <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Linq.Expressions.MemberBinding" />, описывающие способы инициализации членов.</returns>
    </member>
    <member name="P:System.Linq.Expressions.MemberInitExpression.NewExpression">
      <summary>Возвращает выражение, представляющее вызов конструктора.</summary>
      <returns>
        <see cref="T:System.Linq.Expressions.NewExpression" />, представляющее вызов конструктора.</returns>
    </member>
    <member name="T:System.Linq.Expressions.MemberListBinding">
      <summary>Предоставляет инициализацию элементов коллекции созданного объекта.</summary>
    </member>
    <member name="P:System.Linq.Expressions.MemberListBinding.Initializers">
      <summary>Предоставляет инициализаторы элементов для инициализации коллекции элементов созданного объекта.</summary>
      <returns>Объекты <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Linq.Expressions.ElementInit" /> для инициализации элемента коллекции.</returns>
    </member>
    <member name="T:System.Linq.Expressions.MemberMemberBinding">
      <summary>Предоставляет инициализацию элементов элемента созданного объекта.</summary>
    </member>
    <member name="P:System.Linq.Expressions.MemberMemberBinding.Bindings">
      <summary>Получает привязки, описывающие способы инициализации элементов элемента.</summary>
      <returns>Объекты <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Linq.Expressions.MemberBinding" />, описывающие способы инициализации элементов элемента.</returns>
    </member>
    <member name="T:System.Linq.Expressions.MethodCallExpression">
      <summary>Представляет вызов метода.</summary>
    </member>
    <member name="P:System.Linq.Expressions.MethodCallExpression.Arguments">
      <summary>Получает аргументы для вызванного метода.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Linq.Expressions.Expression" />, представляющих аргументы вызванному методу.</returns>
    </member>
    <member name="P:System.Linq.Expressions.MethodCallExpression.Method">
      <summary>Получает вызванный метод.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" />, представляющий вызванный метод.</returns>
    </member>
    <member name="P:System.Linq.Expressions.MethodCallExpression.Object">
      <summary>Возвращает получающий объект метода.</summary>
      <returns>
        <see cref="T:System.Linq.Expressions.Expression" />, предоставляющий получающий объект метода.</returns>
    </member>
    <member name="T:System.Linq.Expressions.NewArrayExpression">
      <summary>Представляет создание нового массива и возможную инициализацию элемента нового массива.</summary>
    </member>
    <member name="P:System.Linq.Expressions.NewArrayExpression.Expressions">
      <summary>Получает границы массива, если значение свойства <see cref="P:System.Linq.Expressions.Expression.NodeType" /> равно <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> или если значения используются для инициализации элементов нового массива, если значение свойства <see cref="P:System.Linq.Expressions.Expression.NodeType" /> равно <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" />.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Linq.Expressions.Expression" />, представляющих границы массива или значения инициализации.</returns>
    </member>
    <member name="T:System.Linq.Expressions.NewExpression">
      <summary>Представляет вызов конструктора.</summary>
    </member>
    <member name="P:System.Linq.Expressions.NewExpression.Arguments">
      <summary>Получает аргументы для конструктора.</summary>
      <returns>Коллекция объектов <see cref="T:System.Linq.Expressions.Expression" />, представляющих аргументы конструктору.</returns>
    </member>
    <member name="P:System.Linq.Expressions.NewExpression.Constructor">
      <summary>Получает вызванный конструктор.</summary>
      <returns>
        <see cref="T:System.Reflection.ConstructorInfo" />, представляющий вызванный конструктор.</returns>
    </member>
    <member name="P:System.Linq.Expressions.NewExpression.Members">
      <summary>Получает элементы, которые могут извлечь значения полей, инициализированных с помощью аргументов конструктора.</summary>
      <returns>Коллекция объектов <see cref="T:System.Reflection.MemberInfo" />, представляющих элементы, которые могут извлечь значения полей, инициализированных с помощью аргументов конструктора.</returns>
    </member>
    <member name="T:System.Linq.Expressions.ParameterExpression">
      <summary>Представляет именованное выражение параметра.</summary>
    </member>
    <member name="P:System.Linq.Expressions.ParameterExpression.Name">
      <summary>Возвращает имя параметра.</summary>
      <returns>
        <see cref="T:System.String" />, где содержится имя параметра.</returns>
    </member>
    <member name="T:System.Linq.Expressions.TypeBinaryExpression">
      <summary>Представляет операцию между выражением и типом.</summary>
    </member>
    <member name="P:System.Linq.Expressions.TypeBinaryExpression.Expression">
      <summary>Получает операнд выражения операции проверки типа.</summary>
      <returns>Объект <see cref="T:System.Linq.Expressions.Expression" />, который предоставляет операнд выражения операции проверки типа.</returns>
    </member>
    <member name="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand">
      <summary>Получает операнд типа операции проверки типа.</summary>
      <returns>Объект <see cref="T:System.Type" />, который предоставляет операнд типа операции проверки типа.</returns>
    </member>
    <member name="T:System.Linq.Expressions.UnaryExpression">
      <summary>Представляет выражение, содержащее унарный оператор.</summary>
    </member>
    <member name="P:System.Linq.Expressions.UnaryExpression.IsLifted">
      <summary>Возвращает значение, указывающее, представляет ли узел дерева выражения ликвидированный вызов оператора.</summary>
      <returns>true, если узел представляет удаленный вызов; в противном случае — false.</returns>
    </member>
    <member name="P:System.Linq.Expressions.UnaryExpression.IsLiftedToNull">
      <summary>Возвращает значение, указывающее, представляет ли узел дерева выражения ликвидированный вызов оператора, тип возврата которого удален для типа со значением NULL.</summary>
      <returns>true, если тип возврата оператора удален до типа со значением NULL, иначе возвращается значение false.</returns>
    </member>
    <member name="P:System.Linq.Expressions.UnaryExpression.Method">
      <summary>Получает реализацию метода для унарной операции.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" />, представляющий метод реализации.</returns>
    </member>
    <member name="P:System.Linq.Expressions.UnaryExpression.Operand">
      <summary>Получает операнд унарной операции.</summary>
      <returns>Объект <see cref="T:System.Linq.Expressions.Expression" />, который предоставляет операнд унарной операции.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.InstanceNotFoundException">
      <summary>Возникшее исключение означает, что поставщик не вернул ни одного экземпляра.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса InstanceNotFoundException.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса InstanceNotFoundException с указанными сведениями о сериализации и параметрами контекста потока.</summary>
      <param name="info">Класс SerializationInfo содержит все данные, необходимые для сериализации исключения.</param>
      <param name="context">Класс StreamingContext задает источник и назначение потока.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса InstanceNotFoundException с заданной строкой сообщения.</summary>
      <param name="message">Строка, содержащая сообщение об ошибке с объяснением причин исключения.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса InstanceNotFoundException с заданным сообщением об ошибке и внутренним исключением.</summary>
      <param name="message">Строка, содержащая сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Класс Exception, вызвавший текущее исключение.</param>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationBaseException">
      <summary>Представляет базовое исключение поставщика.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.InstrumentationBaseException" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.InstrumentationBaseException" /> с использованием информации о сериализации.</summary>
      <param name="info">Данные, необходимые для выполнения сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.InstrumentationBaseException" /> с использованием сообщения, содержащего описание исключения.</summary>
      <param name="message">Сообщение с описанием исключения.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.InstrumentationBaseException" /> с заданной строкой и исключением.</summary>
      <param name="message">Сообщение с описанием исключения.</param>
      <param name="innerException">Экземпляр класса Exception, вызвавший текущее исключение.</param>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationException">
      <summary>Представляет исключение поставщика.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationException.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.InstrumentationException" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.InstrumentationException" /> с использованием System.Exception, вызвавшего текущее исключение.</summary>
      <param name="innerException">Экземпляр класса Exception, вызвавший текущее исключение.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.InstrumentationException" /> с использованием информации о сериализации.</summary>
      <param name="info">Данные, необходимые для выполнения сериализации или десериализации объекта.</param>
      <param name="context">Описание источника и назначения заданного сериализованного потока.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.InstrumentationException" /> с использованием сообщения, содержащего описание исключения.</summary>
      <param name="message">Сообщение с описанием исключения.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.Instrumentation.InstrumentationException" /> с заданной строкой и исключением.</summary>
      <param name="message">Сообщение с описанием исключения.</param>
      <param name="innerException">Экземпляр класса Exception, вызвавший текущее исключение.</param>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementBindAttribute">
      <summary>Атрибут ManagementBind указывает, что метод используется для возвращения экземпляра класса WMI, который связан с определенным ключевым значением.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementBindAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementBindAttribute" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementBindAttribute.Schema">
      <summary>Возвращает или устанавливает значение, определяющее тип вывода, который возвращает метод, помеченный атрибутом ManagementEnumerator.</summary>
      <returns>Значение <see cref="T:System.Type" /> указывает тип вывода, который возвращает метод, помеченный атрибутом <see cref="ManagementBind" />.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementCommitAttribute">
      <summary>Атрибут ManagementCommit указывает метод, который вызывается для обновления набора свойств чтения и записи в рамках одной атомарной операции.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementCommitAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementCommitAttribute" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementConfigurationAttribute">
      <summary>Атрибут ManagementConfiguration указывает, что свойство или поле представляет свойство WMI, доступное для чтения и записи.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementConfigurationAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementConfigurationAttribute" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Mode">
      <summary>Возвращает или устанавливает режим свойства, который определяет, будут ли изменения свойства применяться немедленно или только при вызове метода Commit.</summary>
      <returns>Возвращает значение <see cref="T:System.Management.Instrumentation.ManagementConfigurationType" />, которое указывает, какой режим использует свойство WMI: <see cref="F:System.Management.Instrumentation.ManagementConfigurationType.Apply" /> или <see cref="F:System.Management.Instrumentation.ManagementConfigurationType.OnCommit" />.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Schema">
      <summary>Возвращает или устанавливает значение, определяющее тип вывода, который возвращает свойство, помеченное атрибутом ManagementConfiguration.</summary>
      <returns>Значение <see cref="T:System.Type" /> представляет собой тип вывода, который возвращает свойство, помеченное атрибутом ManagementConfiguration.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementConfigurationType">
      <summary>Представляет возможное поведение свойства чтения и записи после операции фиксации. Используется как значение параметра для атрибута <see cref="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementConfigurationType.Apply">
      <summary>Установленные значения вступают в силу только после вызова метода Commit.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementConfigurationType.OnCommit">
      <summary>Установленные значения применяются немедленно.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementCreateAttribute">
      <summary>Атрибут ManagementCreateAttribute указывает, что метод создает новый экземпляр управляемой сущности.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementCreateAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementCreateAttribute" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementEntityAttribute">
      <summary>Атрибут ManagementEntity указывает, что класс предоставляет управляющую информацию через поставщик WMI.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementEntityAttribute" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementEntityAttribute.External">
      <summary>Возвращает или устанавливает значение, которое определяет, является ли класс для текущей сборки классом WMI с внешней реализацией в поставщике.</summary>
      <returns>Логическое значение равно "true", если класс представляет внешний класс WMI, и "false" в противном случае.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementEntityAttribute.Name">
      <summary>Возвращает или задает имя класса WMI.</summary>
      <returns>Строка, содержащая имя класса WMI.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton">
      <summary>Указывает, является ли связанный класс Singleton-классом WMI.</summary>
      <returns>Логическое значение равно "true", если класс представляет Singleton-класс WMI, и "false" в противном случае.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementEnumeratorAttribute">
      <summary>Атрибутом ManagementEnumerator помечается метод, возвращающий все экземпляры класса WMI.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementEnumeratorAttribute" />.</summary>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema">
      <summary>Возвращает или устанавливает значение, определяющее тип вывода, который возвращает метод, помеченный атрибутом ManagementEnumerator.</summary>
      <returns>Значение <see cref="T:System.Type" /> указывает тип вывода, который возвращает метод, помеченный атрибутом <see cref="ManagementEnumerator" />.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementHostingModel">
      <summary>Определяет значения для модели размещения поставщика.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementHostingModel.Decoupled">
      <summary>Активирует поставщик как отделенный поставщик.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementHostingModel.NetworkService">
      <summary>Активирует поставщик в процессе размещения поставщика, который выполняется под учетной записью NetworkService.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementHostingModel.LocalService">
      <summary>Активирует поставщик в процессе размещения поставщика, который выполняется под учетной записью LocalService.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementHostingModel.LocalSystem">
      <summary>Активирует поставщик в процессе размещения поставщика, который выполняется под учетной записью LocalSystem.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementKeyAttribute">
      <summary>Атрибут ManagementKey задает ключевые свойства класса WMI.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementKeyAttribute" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementMemberAttribute">
      <summary>Данный класс используется для расширений поставщиков данных WMI .NET Framework. Это базовый класс для всех управляющих атрибутов, которые применяются к элементам.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementMemberAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementMemberAttribute" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementMemberAttribute.Name">
      <summary>Возвращает или задает имя управляющего атрибута.</summary>
      <returns>Возвращает сроку с именем управляющего атрибута.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementNameAttribute">
      <summary>Атрибут ManagementName используется для переопределения имен, предоставляемых посредством класса WMI.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementNameAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.ManagementNameAttribute" /> и задает значение свойства класса <see cref="P:System.Management.ManagementNameAttribute.Name" />.</summary>
      <param name="name">Понятное имя объекта.</param>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementNameAttribute.Name">
      <summary>Возвращает или задает понятное имя объекта. Объектом может выступать параметр или свойство метода с атрибутом ManagementProbe, ManagementKey или ManagementConfiguration.</summary>
      <returns>Значение <see cref="T:System.String" /> указывает, что объект использует понятное имя.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementNewInstanceAttribute">
      <summary>Базовый класс для управляющих атрибутов, которые используются только во время выполнения и не используют представление схемы. Классы атрибутов управления ManagementBindAttribute, ManagementCreateAttribute и ManagementEnumeratorAttribute являются производными данного класса.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementNewInstanceAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementNewInstanceAttribute" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementProbeAttribute">
      <summary>Атрибут ManagementProbe указывает, что свойство или поле представляет собой свойство WMI, доступное только для чтения.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementProbeAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementProbeAttribute" />. Этот конструктор используется по умолчанию для класса.</summary>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementProbeAttribute.Schema">
      <summary>Возвращает или устанавливает значение, определяющее тип вывода, который возвращает свойство, помеченное атрибутом ManagementProbe.</summary>
      <returns>Значение <see cref="T:System.Type" /> указывает тип вывода, который возвращает свойство, помеченное атрибутом ManagementProbe.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementReferenceAttribute">
      <summary>Атрибутом ManagementReferenceAttribute помечается параметр элемента, свойства или метода класса, если этот параметр является ссылкой на другой управляющий объект или класс.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementReferenceAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementReferenceAttribute" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementReferenceAttribute.Type">
      <summary>Возвращает или задает имя типа, на который происходит ссылка.</summary>
      <returns>Строка, содержащая имя типа, на который происходит ссылка.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementRemoveAttribute">
      <summary>Атрибут ManagementRemoveAttribute указывает, что метод очищает экземпляр управляемой сущности.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementRemoveAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementRemoveAttribute" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementRemoveAttribute.Schema">
      <summary>Возвращает или устанавливает значение, определяющее тип вывода, который возвращает объект, помеченный атрибутом ManagementRemove.</summary>
      <returns>Значение <see cref="T:System.Type" /> указывает тип вывода, который возвращает объект, помеченный атрибутом Remove.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementTaskAttribute">
      <summary>Атрибут ManagementTask указывает, что метод целевого объекта реализует метод WMI.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementTaskAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementTaskAttribute" />. Этот конструктор используется по умолчанию.</summary>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementTaskAttribute.Schema">
      <summary>Возвращает или устанавливает значение, определяющее тип вывода, который возвращает метод, помеченный атрибутом ManagementTask.</summary>
      <returns>Значение <see cref="T:System.Type" /> указывает тип вывода, который возвращает метод, помеченный атрибутом ManagementTask.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.WmiConfigurationAttribute">
      <summary>Атрибут WmiConfiguration указывает, что сборка содержит код реализации поставщика WMI с использованием модели расширений поставщиков данных WMI.NET. Данный атрибут принимает параметры для обеспечения конфигурации высокого уровня для реализованного поставщика WMI. </summary>
    </member>
    <member name="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.WmiConfigurationAttribute" />, который задает пространство имен WMI для предоставления классов поставщиком WMI.</summary>
      <param name="scope">Пространство имен WMI, в котором поставщик будет предоставлять классы. Например, "root\MyProviderNamespace".</param>
    </member>
    <member name="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup">
      <summary>Возвращает или устанавливает группу размещения для поставщика WMI.</summary>
      <returns>Значение <see cref="T:System.String" />, указывающее группу размещения для поставщика WMI.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel">
      <summary>Возвращает или устанавливает модель размещения для поставщика WMI.</summary>
      <returns>Значение <see cref="T:System.Management.Instrumentation.ManagementHostingModel" />, указывающее модель размещения для поставщика WMI.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel">
      <summary>Возвращает или устанавливает значение, которое определяет, может ли поставщик WMI олицетворять собственный вызывающий объект. Если значение равно "false", поставщик не может олицетворять вызывающий объект, а если "true", то может.</summary>
      <returns>Логическое значение, которое указывает, может ли поставщик олицетворять собственные вызывающие объекты. Если значение равно "false", поставщик не может олицетворять вызывающий объект, а если "true", то может.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity">
      <summary>Возвращает или устанавливает строку идентификатора безопасности на языке SDDL, которая определяет дескриптор безопасности пространства имен, в котором поставщик предоставляет управляющие объекты.</summary>
      <returns>Строка на языке SDDL, представляющая дескриптор безопасности пространства имен, в котором поставщик предоставляет управляющие объекты.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope">
      <summary>Возвращает или устанавливает пространство имен WMI, в котором поставщик WMI предоставляет классы.</summary>
      <returns>Значение <see cref="T:System.String" />, указывающее пространство имен, в котором поставщик WMI предоставляет классы.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction">
      <summary>Возвращает или устанавливает дескриптор безопасности для поставщика WMI. Дополнительные сведения см. в описании свойства SecurityDescriptor в разделе "__Win32Provider", который находится в библиотеке MSDN в Интернете по адресу: http://www.msdn.com. </summary>
      <returns>Значение <see cref="T:System.String" />, содержащее дескриптор безопасности для поставщика WMI.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.ExecutionScope">
      <summary>Представляет состояние динамически создаваемого метода во время выполнения.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.CompilerServices.ExecutionScope.CreateDelegate(System.Int32,System.Object[])">
      <summary>Создает делегат, который может использоваться для выполнения динамически создаваемого метода.</summary>
      <returns>
        <see cref="T:System.Delegate" />, который может выполнять динамически создаваемый метод.</returns>
      <param name="indexLambda">Индекс объекта, в котором хранится информация о связанном лямбда-выражении динамического метода.</param>
      <param name="locals">Массив, содержащий поднятые локальные переменные из родительского контекста.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.ExecutionScope.CreateHoistedLocals">
      <summary>Создает массив для хранения поднятых локальных переменных.</summary>
      <returns>Массив для хранения поднятых локальных переменных.</returns>
    </member>
    <member name="F:System.Runtime.CompilerServices.ExecutionScope.Globals">
      <summary>Представляет нетривиальные константы и локально выполняемые выражения, на которые ссылается динамически создаваемый метод.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ExecutionScope.IsolateExpression(System.Linq.Expressions.Expression,System.Object[])">
      <summary>Освобождает указанное дерево выражений от ссылок на внешние параметры, заменяя параметр его текущим значением.</summary>
      <returns>Дерево выражений, которое не содержит ссылок на внешние параметры.</returns>
      <param name="expression">Дерево выражений, которое требуется освободить от ссылок на внешние параметры.</param>
      <param name="locals">Массив, содержащий поднятые локальные переменные.</param>
    </member>
    <member name="F:System.Runtime.CompilerServices.ExecutionScope.Locals">
      <summary>Представляет поднятые локальные переменные из родительского контекста.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.ExecutionScope.Parent">
      <summary>Представляет область выполнения вызывающего делегата.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ExtensionAttribute">
      <summary>Указывает, что метод является методом расширения или что класс или сборка содержат методы расширения.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ExtensionAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.ExtensionAttribute" />. </summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.IStrongBox">
      <summary>Определяет свойство для доступа к значению, на которое ссылается объект.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.IStrongBox.Value">
      <summary>Получает или задает значение, на которое ссылается объект.</summary>
      <returns>Значение, на которое ссылается объект.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.StrongBox`1">
      <summary>Содержит ссылку на значение.</summary>
      <typeparam name="T">Тип значения, на которое ссылается <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.CompilerServices.StrongBox`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />, используя указанное значение. </summary>
      <param name="value">Значение, на которое будет ссылаться <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value">
      <summary>Получает или задает значение, на которое ссылается <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</summary>
      <returns>Значение, на которое ссылается <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</returns>
    </member>
    <member name="F:System.Runtime.CompilerServices.StrongBox`1.Value">
      <summary>Представляет значение, на которое ссылается <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</summary>
    </member>
    <member name="T:System.Security.ManifestKinds">
      <summary>Представляет тип манифеста, к которому применяется информация подписи.</summary>
    </member>
    <member name="F:System.Security.ManifestKinds.None">
      <summary>Манифест без конкретного типа. </summary>
    </member>
    <member name="F:System.Security.ManifestKinds.Deployment">
      <summary>Манифест только для развертывания.</summary>
    </member>
    <member name="F:System.Security.ManifestKinds.Application">
      <summary>Манифест для приложения. </summary>
    </member>
    <member name="F:System.Security.ManifestKinds.ApplicationAndDeployment">
      <summary>Манифест для развертывания и приложения. Это значение по умолчанию для проверки подписей. </summary>
    </member>
    <member name="T:System.Security.Cryptography.Aes">
      <summary>Абстрактный базовый класс, от которого должны наследоваться все реализации стандарта AES (Advanced Encryption Standard). </summary>
    </member>
    <member name="M:System.Security.Cryptography.Aes.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Aes" />. </summary>
    </member>
    <member name="M:System.Security.Cryptography.Aes.Create">
      <summary>Создает криптографический объект, используемый для выполнения алгоритма симметричного шифрования.</summary>
      <returns>Криптографический объект, используемый для выполнения алгоритма симметричного шифрования.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Aes.Create(System.String)">
      <summary>Создает криптографический объект, задающий реализацию AES для выполнения симметричного алгоритма.</summary>
      <returns>Криптографический объект, используемый для выполнения алгоритма симметричного шифрования.</returns>
      <param name="algorithmName">Имя конкретной реализации AES, которую требуется использовать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="algorithmName" /> имеет значение null.</exception>
    </member>
    <member name="T:System.Security.Cryptography.AesCryptoServiceProvider">
      <summary>Выполняет симметричное шифрование и дешифрование с помощью реализации CAPI алгоритма симметричного шифрования AES. </summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.AesCryptoServiceProvider" />. </summary>
      <exception cref="T:System.PlatformNotSupportedException">Нет поддерживаемого размера ключа для текущей платформы.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor">
      <summary>Создает объект-дешифратор для алгоритма симметричного шифрования AES, используя текущий ключ и вектор инициализации.</summary>
      <returns>Объект-дешифратор для алгоритма симметричного шифрования AES.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Текущий ключ является недопустимым или отсутствует.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Создает объект-дешифратор для алгоритма симметричного шифрования AES, используя заданный ключ и вектор инициализации.</summary>
      <returns>Объект-дешифратор для алгоритма симметричного шифрования AES.</returns>
      <param name="key">Секретный ключ, используемый в алгоритме симметричного шифрования.</param>
      <param name="iv">Вектор инициализации, используемый в алгоритме симметричного шифрования.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Значение параметра <paramref name="key" /> равно null или является недопустимым.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor">
      <summary>Создает объект-шифратор для алгоритма симметричного шифрования AES, используя текущий ключ и вектор инициализации.</summary>
      <returns>Объект-шифратор для алгоритма симметричного шифрования AES.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Создает объект-шифратор для алгоритма симметричного шифрования, используя заданный ключ и вектор инициализации.</summary>
      <returns>Объект-шифратор для алгоритма симметричного шифрования AES.</returns>
      <param name="key">Секретный ключ, используемый в алгоритме симметричного шифрования.</param>
      <param name="iv">Вектор инициализации, используемый в алгоритме симметричного шифрования.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> или <paramref name="iv" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV">
      <summary>Генерирует случайный вектор инициализации для использования данным алгоритмом.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Невозможно сгенерировать вектор инициализации. </exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey">
      <summary>Генерирует случайный ключ для использования данным алгоритмом. </summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Невозможно сгенерировать ключ.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.Key">
      <summary>Возвращает или задает симметричный ключ, используемый для зашифрования и расшифрования.</summary>
      <returns>Симметричный ключ, используемый для зашифрования и расшифрования.</returns>
      <exception cref="T:System.ArgumentNullException">Значение ключа — null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Недопустимый размер ключа.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.KeySize">
      <summary>Возвращает или задает размер секретного ключа в битах. </summary>
      <returns>Размер ключа в битах.</returns>
    </member>
    <member name="T:System.Security.Cryptography.AesManaged">
      <summary>Предоставляет управляемую реализацию алгоритма симметричного шифрования AES. </summary>
    </member>
    <member name="M:System.Security.Cryptography.AesManaged.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.AesManaged" />. </summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Параметр политики безопасности Windows для FIPS-совместимых алгоритмов включен.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesManaged.CreateDecryptor">
      <summary>Создает объект-дешифратор для алгоритма симметричного шифрования, используя текущий ключ и вектор инициализации.</summary>
      <returns>Объект-дешифратор для алгоритма симметричного шифрования.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Создает объект-дешифратор для алгоритма симметричного шифрования, используя заданный ключ и вектор инициализации.</summary>
      <returns>Объект-дешифратор для алгоритма симметричного шифрования.</returns>
      <param name="key">Секретный ключ, используемый в алгоритме симметричного шифрования.</param>
      <param name="iv">Вектор инициализации, используемый в алгоритме симметричного шифрования.</param>
    </member>
    <member name="M:System.Security.Cryptography.AesManaged.CreateEncryptor">
      <summary>Создает объект-шифратор для алгоритма симметричного шифрования, используя текущий ключ и вектор инициализации.</summary>
      <returns>Объект-шифратор для алгоритма симметричного шифрования.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Создает объект-шифратор для алгоритма симметричного шифрования, используя заданный ключ и вектор инициализации.</summary>
      <returns>Объект-шифратор для алгоритма симметричного шифрования.</returns>
      <param name="key">Секретный ключ, используемый в алгоритме симметричного шифрования.</param>
      <param name="iv">Вектор инициализации, используемый в алгоритме симметричного шифрования.</param>
    </member>
    <member name="P:System.Security.Cryptography.AesManaged.FeedbackSize">
      <summary>Получает или задает число бит для обратной связи. </summary>
      <returns>Размер порции данных обратной связи в битах.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesManaged.GenerateIV">
      <summary>Генерирует случайный вектор инициализации для использования в алгоритме симметричного шифрования.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesManaged.GenerateKey">
      <summary>Генерирует случайный ключ для использования в алгоритме симметричного шифрования. </summary>
    </member>
    <member name="P:System.Security.Cryptography.AesManaged.IV">
      <summary>Получает или задает вектор инициализации для алгоритма симметричного шифрования. </summary>
      <returns>Вектор инициализации, используемый в алгоритме симметричного шифрования.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesManaged.Key">
      <summary>Получает или задает секретный ключ для алгоритма симметричного шифрования.</summary>
      <returns>Секретный ключ для алгоритма симметричного шифрования.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesManaged.KeySize">
      <summary>Получает или задает размер секретного ключа (в битах), используемого алгоритмом симметричного шифрования. </summary>
      <returns>Размер ключа (в битах), используемого алгоритмом симметричного шифрования.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesManaged.Mode">
      <summary>Получает или задает режим работы алгоритма симметричного шифрования.</summary>
      <returns>Одно из значений <see cref="T:System.Security.Cryptography.CipherMode" />. Значение по умолчанию — <see cref="F:System.Security.Cryptography.CipherMode.CBC" />.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
                Для свойства <see cref="P:System.Security.Cryptography.AesManaged.Mode" /> устанавливается значение <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> или <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesManaged.Padding">
      <summary>Получает или задает режим заполнения, используемый в алгоритме симметричного шифрования. </summary>
      <returns>Одно из значений <see cref="T:System.Security.Cryptography.PaddingMode" />. Значение по умолчанию — <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngAlgorithm">
      <summary>Инкапсулирует имя алгоритма шифрования.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</summary>
      <param name="algorithm">Имя алгоритма для инициализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="algorithm" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Длина значения параметра <paramref name="algorithm" /> равна 0.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Algorithm">
      <summary>Получает имя алгоритма, заданного текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</summary>
      <returns>Внедренное имя алгоритма.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм обмена ключами Диффи-Хеллмана на эллиптических кривых (Elliptic Curve Diffie-Hellman, ECDH), в котором используется кривая P-256.</summary>
      <returns>Объект, задающий алгоритм ECDH, в котором используется кривая P-256.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм обмена ключами Диффи-Хеллмана на эллиптических кривых (Elliptic Curve Diffie-Hellman, ECDH), в котором используется кривая P-384.</summary>
      <returns>Объект, задающий алгоритм ECDH, в котором используется кривая P-384.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм обмена ключами Диффи-Хеллмана на эллиптических кривых (Elliptic Curve Diffie-Hellman, ECDH), в котором используется кривая P-521.</summary>
      <returns>Объект, задающий алгоритм ECDH, в котором используется кривая P-521.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP256">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм цифровой подписи DSA на эллиптических кривых (Elliptic Curve Digital Signature Algorithm, ECDSA), в котором используется кривая P-256.</summary>
      <returns>Объект, задающий алгоритм ECDSA, в котором используется кривая P-256.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP384">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм цифровой подписи DSA на эллиптических кривых (Elliptic Curve Digital Signature Algorithm, ECDSA), в котором используется кривая P-384.</summary>
      <returns>Объект, задающий алгоритм ECDSA, в котором используется кривая P-384.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.ECDsaP521">
      <summary>Получает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий алгоритм цифровой подписи DSA на эллиптических кривых (Elliptic Curve Digital Signature Algorithm, ECDSA), в котором используется кривая P-521.</summary>
      <returns>Объект, задающий алгоритм ECDSA, в котором используется кривая P-521.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)">
      <summary>Сравнивает заданный объект с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</summary>
      <returns>
            Значение true, если параметр <paramref name="obj" /> является объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающим тот же самый алгоритм, что и текущий объект; в противном случае — значение false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)">
      <summary>Сравнивает заданный объект <see cref="T:System.Security.Cryptography.CngAlgorithm" /> с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</summary>
      <returns>
            Значение true, если параметр <paramref name="other" /> задает тот же самый алгоритм, что и текущий объект; в противном случае — значение false.</returns>
      <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.GetHashCode">
      <summary>Формирует хэш-значение имени алгоритма, внедренного в текущий объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</summary>
      <returns>Хэш-значение внедренного имени алгоритма.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.MD5">
      <summary>Получает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий хэш-алгоритм MD5.</summary>
      <returns>Объект, задающий алгоритм MD5.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)">
      <summary>Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngAlgorithm" /> один и тот же алгоритм.</summary>
      <returns>
            Значение true, если два объекта задают один и тот же алгоритм, в противном случае — значение false.</returns>
      <param name="left">Объект, задающий имя алгоритма.</param>
      <param name="right">Второй объект, подлежащий сравнению с объектом, идентифицируемым параметром <paramref name="left" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)">
      <summary>Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngAlgorithm" /> разные алгоритмы.</summary>
      <returns>
            Значение true, если два объекта задают разные алгоритмы, в противном случае — значение false.</returns>
      <param name="left">Объект, задающий имя алгоритма.</param>
      <param name="right">Второй объект, подлежащий сравнению с объектом, идентифицируемым параметром <paramref name="left" />.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha1">
      <summary>Получает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий хэш-алгоритм SHA-1.</summary>
      <returns>Объект, задающий алгоритм SHA-1.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha256">
      <summary>Получает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий хэш-алгоритм SHA-256.</summary>
      <returns>Объект, задающий алгоритм SHA-256.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha384">
      <summary>Получает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий хэш-алгоритм SHA-384.</summary>
      <returns>Объект, задающий алгоритм SHA-384.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithm.Sha512">
      <summary>Получает новый объект <see cref="T:System.Security.Cryptography.CngAlgorithm" />, задающий хэш-алгоритм SHA-512.</summary>
      <returns>Объект, задающий алгоритм SHA-512.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithm.ToString">
      <summary>Получает имя алгоритма, заданного текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</summary>
      <returns>Внедренное имя алгоритма.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngAlgorithmGroup">
      <summary>Инкапсулирует имя группы алгоритмов шифрования.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</summary>
      <param name="algorithmGroup">Имя группы алгоритмов для инициализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="algorithmGroup" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Длина значения параметра <paramref name="algorithmGroup" /> равна 0.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup">
      <summary>Получает имя группы алгоритмов, заданной текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</summary>
      <returns>Внедренное имя группы алгоритмов.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />, задающий семейство алгоритмов, основанных на алгоритме Диффи-Хеллмана.</summary>
      <returns>Объект, задающий семейство алгоритмов, основанных на алгоритме Диффи-Хеллмана.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.Dsa">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />, задающий семейство алгоритмов, основанных на алгоритме цифровой подписи DSA.</summary>
      <returns>Объект, задающий семейство алгоритмов, основанных на алгоритме DSA.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />, задающий семейство алгоритмов, основанных на алгоритме Диффи-Хеллмана на эллиптических кривых (Elliptic Curve Diffie-Hellman, ECDH).</summary>
      <returns>Объект, задающий семейство алгоритмов, основанных на алгоритме ECDH.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />, задающий семейство алгоритмов, основанных на алгоритме цифровой подписи DSA на эллиптических кривых (Elliptic Curve Digital Signature Algorithm, ECDSA).</summary>
      <returns>Объект, задающий семейство алгоритмов, основанных на алгоритме ECDSA.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)">
      <summary>Сравнивает заданный объект с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</summary>
      <returns>
            Значение true, если параметр <paramref name="obj" /> является объектом <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />, задающим ту же самую группу алгоритмов, что и текущий объект; в противном случае — значение false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>Сравнивает заданный объект <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</summary>
      <returns>
            Значение true, если параметр <paramref name="other" /> задает ту же самую группу алгоритмов, что и текущий объект; в противном случае — значение false.</returns>
      <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode">
      <summary>Формирует хэш-значение имени группы алгоритмов, внедренного в текущий объект <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</summary>
      <returns>Хэш-значение внедренного имени группы алгоритмов.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> одну и ту же группу алгоритмов.</summary>
      <returns>
            Значение true, если два объекта задают одну и ту же группу алгоритмов, в противном случае — значение false.</returns>
      <param name="left">Объект, задающий группу алгоритмов.</param>
      <param name="right">Второй объект, подлежащий сравнению с объектом, идентифицируемым параметром <paramref name="left" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)">
      <summary>Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> разные группы алгоритмов.</summary>
      <returns>
            Значение true, если два объекта задают разные группы алгоритмов, в противном случае — значение false.</returns>
      <param name="left">Объект, задающий группу алгоритмов.</param>
      <param name="right">Второй объект, подлежащий сравнению с объектом, идентифицируемым параметром <paramref name="left" />.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngAlgorithmGroup.Rsa">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />, задающий семейство алгоритмов, основанных на алгоритме RSA.</summary>
      <returns>Объект, задающий семейство алгоритмов, основанных на алгоритме RSA.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngAlgorithmGroup.ToString">
      <summary>Получает имя группы алгоритмов, заданной текущим объектом <see cref="T:System.Security.Cryptography.CngAlgorithm" />.</summary>
      <returns>Внедренное имя группы алгоритмов.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngExportPolicies">
      <summary>Задает политики экспорта для ключа. </summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.None">
      <summary>Политики экспорта не заданы. Экспорт ключа разрешен без ограничений.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowExport">
      <summary>Закрытый ключ может быть экспортирован несколько раз.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextExport">
      <summary>Закрытый ключ может быть экспортирован несколько раз в виде открытого текста.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowArchiving">
      <summary>Закрытый ключ может быть экспортирован один раз в целях архивирования.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngExportPolicies.AllowPlaintextArchiving">
      <summary>Закрытый ключ может быть экспортирован один раз в виде открытого текста.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKey">
      <summary>Определяет базовую функциональность для ключей, используемых объектами криптографии следующего поколения (CNG).</summary>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Algorithm">
      <summary>Получает алгоритм, используемый ключом.</summary>
      <returns>Объект, определяющий имя алгоритма шифрования.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.AlgorithmGroup">
      <summary>Получает группу алгоритмов, используемую ключом.</summary>
      <returns>Объект, определяющий имя группы алгоритмов шифрования.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)">
      <summary>Создает объект <see cref="T:System.Security.Cryptography.CngKey" />, который может использоваться в заданном алгоритме.</summary>
      <returns>Эфемерный ключ.</returns>
      <param name="algorithm">Алгоритм, в котором будет использоваться ключ.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="algorithm" /> имеет значение null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)">
      <summary>Создает именованный объект <see cref="T:System.Security.Cryptography.CngKey" />, обеспечивающий работу заданного алгоритма.</summary>
      <returns>Постоянный или эфемерный ключ, обеспечивающий работу заданного алгоритма.</returns>
      <param name="algorithm">Алгоритм, в котором будет использоваться ключ.</param>
      <param name="keyName">Имя ключа. Если имя не задано, ключ не будет сохранен.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="algorithm" /> имеет значение null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)">
      <summary>Создает именованный объект <see cref="T:System.Security.Cryptography.CngKey" />, обеспечивающий работу заданного алгоритма, используя предоставленные параметры создания ключа.</summary>
      <returns>Постоянный или эфемерный ключ, обеспечивающий работу заданного алгоритма.</returns>
      <param name="algorithm">Алгоритм, в котором будет использоваться ключ.</param>
      <param name="keyName">Имя ключа. Если имя не задано, ключ не будет сохранен.</param>
      <param name="creationParameters">Объект, задающий дополнительные параметры для данного метода, включая <see cref="T:System.Security.Cryptography.CngProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="algorithm" /> имеет значение null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Delete">
      <summary>Удаляет ключ, связанный с объектом.</summary>
      <exception cref="T:System.ObjectDisposedException">Предпринята попытка доступа к ключу, который был удален.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Security.Cryptography.CngKey" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String)">
      <summary>Проверяет наличие именованного ключа в поставщике хранилища ключей (KSP) по умолчанию.</summary>
      <returns>
            Значение true, если именованный ключ существует в KSP по умолчанию; в противном случае — значение false.</returns>
      <param name="keyName">Имя ключа.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="keyName" /> имеет значение null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)">
      <summary>Проверяет наличие именованного ключа в заданном поставщике хранилища ключей (KSP).</summary>
      <returns>
            Значение true, если именованный ключ существует в заданном поставщике хранилища ключей; в противном случае — значение false.</returns>
      <param name="keyName">Имя ключа.</param>
      <param name="provider">KSP, проверяемый на наличие ключа.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="keyName" /> или <paramref name="provider" /> имеет значение null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>Проверяет наличие именованного ключа в заданном поставщике хранилища ключей (KSP) в соответствии с заданными параметрами.</summary>
      <returns>
            Значение true, если именованный ключ существует в заданном поставщике хранилища ключей; в противном случае — значение false.</returns>
      <param name="keyName">Имя ключа.</param>
      <param name="provider">KSP, проверяемый на наличие ключа.</param>
      <param name="options">Битовая комбинация значений перечисления, определяющих параметры открытия ключа.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="keyName" /> или <paramref name="provider" /> имеет значение null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Экспортирует ключевой материал в большой двоичный объект в заданном формате.</summary>
      <returns>Большой двоичный объект, в котором содержится ключевой материал в заданном формате.</returns>
      <param name="format">Объект, задающий формат большого двоичного объекта ключа.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="format" /> имеет значение null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки. Как правило, <see cref="P:System.Security.Cryptography.CngKey.ExportPolicy" /> не позволяет экспортировать ключ. </exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ExportPolicy">
      <summary>Получает политику экспорта, используемую ключом.</summary>
      <returns>Объект, задающий политику экспорта для ключа.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)">
      <summary>Получает свойство по заданному имени и набору параметров.</summary>
      <returns>Объект, в котором содержится необработанное значение заданного свойства.</returns>
      <param name="name">Имя требуемого свойства.</param>
      <param name="options">Битовая комбинация значений перечисления, определяющих параметры именованного свойства.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="name" /> имеет значение null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Handle">
      <summary>Получает безопасный дескриптор, представляющий собственный ключ (NCRYPT_KEY_HANDLE). </summary>
      <returns>Безопасный дескриптор, представляющий ключ.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)">
      <summary>Проверяет наличие заданного свойства для ключа.</summary>
      <returns>
            Значение true, если заданное свойство найдено; в противном случае — значение false.</returns>
      <param name="name">Имя свойства, наличие которого необходимо проверить.</param>
      <param name="options">Битовая комбинация значений перечисления, определяющих параметры именованного свойства.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Создает новый ключ путем импорта заданного ключевого материала в KSP по умолчанию, используя заданный формат.</summary>
      <returns>Новый ключ.</returns>
      <param name="keyBlob">Массив, в котором содержатся данные ключа.</param>
      <param name="format">Объект, определяющий формат массива <paramref name="keyBlob" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="keyBlob" /> или <paramref name="format" /> имеет значение null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)">
      <summary>Создает новый ключ путем импорта заданного ключевого материала в указанный KSP, используя заданный формат.</summary>
      <returns>Новый ключ.</returns>
      <param name="keyBlob">Массив, в котором содержатся данные ключа.</param>
      <param name="format">Объект, определяющий формат массива <paramref name="keyBlob" />.</param>
      <param name="provider">KSP.</param>
      <exception cref="T:System.ArgumentNullException">
                Значение параметра <paramref name="keyBlob" />, <paramref name="format" /> или <paramref name="provider" /> — null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.IsEphemeral">
      <summary>Получает сведения о постоянстве ключа.</summary>
      <returns>
            Значение true, если ключ является эфемерным; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.IsMachineKey">
      <summary>Получает область видимости ключа (для всех пользователей компьютера или только для текущего пользователя).</summary>
      <returns>
            Значение true, если ключ доступен для всех пользователей компьютера; значение false, если ключ доступен только для текущего пользователя.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeyName">
      <summary>Получает имя ключа.</summary>
      <returns>Имя ключа. Если ключ является эфемерным, параметру присваивается значение null.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeySize">
      <summary>Получает размер ключа в битах.</summary>
      <returns>Размер ключа в битах.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.KeyUsage">
      <summary>Получает криптографические операции, заданные ключом.</summary>
      <returns>Битовая комбинация значений перечисления, определяющих разрешенные варианты использования ключа.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)">
      <summary>Создает экземпляр класса <see cref="T:System.Security.Cryptography.CngKey" />, используя дескриптор существующего ключа.</summary>
      <returns>Существующий ключ.</returns>
      <param name="keyHandle">Дескриптор существующего ключа.</param>
      <param name="keyHandleOpenOptions">Одно из значений перечисления, определяющее, представляет ли <paramref name="keyHandle" /> эфемерный или именованный ключ.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="keyHandle" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyHandle" /> является недопустимым или имеет неверный формат либо уже закрыт. Это исключение также возникает в том случае, если ключ является эфемерным ключом, созданным средой CLR, но не задано значение <see cref="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Security.Cryptography.CngKey" />, который представляет существующий именованный ключ.</summary>
      <returns>Существующий ключ.</returns>
      <param name="keyName">Имя ключа.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="keyName" /> имеет значение null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)">
      <summary>Создает экземпляр класса <see cref="T:System.Security.Cryptography.CngKey" />, который представляет существующий именованный ключ, используя заданного поставщика хранилища ключей (KSP).</summary>
      <returns>Существующий ключ.</returns>
      <param name="keyName">Имя ключа.</param>
      <param name="provider">KSP, в котором содержится ключ.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="keyName" /> или <paramref name="provider" /> имеет значение null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)">
      <summary>Создает экземпляр класса <see cref="T:System.Security.Cryptography.CngKey" />, который представляет существующий именованный ключ, используя заданного поставщика хранилища ключей (KSP) и параметры открытия ключа.</summary>
      <returns>Существующий ключ.</returns>
      <param name="keyName">Имя ключа.</param>
      <param name="provider">KSP, в котором содержится ключ.</param>
      <param name="openOptions">Битовая комбинация значений перечисления, определяющих параметры открытия ключа, такие как место открытия ключа (компьютер или хранилище пользователя) и необходимость подавления запросов пользовательского интерфейса.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="keyName" /> или <paramref name="provider" /> имеет значение null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ParentWindowHandle">
      <summary>Получает или задает дескриптор окна (HWND), который необходимо использовать для запросов пользовательского интерфейса, отображаемых при доступе к ключу.</summary>
      <returns>Дескриптор родительского окна для ключа.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.Provider">
      <summary>Получает поставщика хранилища ключей (KSP), управляющего ключом.</summary>
      <returns>KSP, управляющий ключом.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.ProviderHandle">
      <summary>Получает собственный дескриптор (NCRYPT_PROV_HANDLE) поставщика хранилища ключей (KSP).</summary>
      <returns>Дескриптор KSP.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)">
      <summary>Задает именованное свойство для ключа.</summary>
      <param name="property">Свойство ключа, которое необходимо задать.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.UIPolicy">
      <summary>Получает параметры, управляющие пользовательским интерфейсом для доступа к ключу.  </summary>
      <returns>Объект, в котором содержатся параметры конфигурации для отображения пользовательского интерфейса.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKey.UniqueName">
      <summary>Получает уникальное имя ключа.</summary>
      <returns>Альтернативное имя ключа. Если ключ является эфемерным, параметру присваивается значение null.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyBlobFormat">
      <summary>Задает формат большого двоичного объекта ключа для использования с объектами Microsoft CNG. </summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />, используя заданный формат.</summary>
      <param name="format">Формат большого двоичного объекта ключа, подлежащий инициализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="format" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Длина значения параметра <paramref name="format" /> равна 0.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />, задающий большой двоичный объект закрытого ключа криптосистемы на эллиптических кривых (ECC).</summary>
      <returns>Объект, задающий большой двоичный объект закрытого ключа ECC.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />, задающий большой двоичный объект открытого ключа криптосистемы на эллиптических кривых (ECC).</summary>
      <returns>Объект, задающий большой двоичный объект открытого ключа ECC.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)">
      <summary>Сравнивает заданный объект с текущим объектом <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />.</summary>
      <returns>
            Значение true, если параметр <paramref name="obj" /> представляет объект <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />, который задает тот же самый формат большого двоичного объекта ключа, что и текущий объект; в противном случае — значение false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Сравнивает заданный объект <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> с текущим объектом <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />.</summary>
      <returns>
            Значение true, если параметр <paramref name="other" /> задает тот же самый формат большого двоичного объекта ключа, что и текущий объект; в противном случае — значение false.</returns>
      <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.Format">
      <summary>Получает имя формата большого двоичного объекта ключа, заданного текущим объектом <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />.</summary>
      <returns>Внедренное имя формата большого двоичного объекта ключа.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />, задающий универсальный большой двоичный объект закрытого ключа.</summary>
      <returns>Объект, задающий универсальный большой двоичный объект закрытого ключа.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />, задающий универсальный большой двоичный объект открытого ключа.</summary>
      <returns>Объект, задающий универсальный большой двоичный объект открытого ключа.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.GetHashCode">
      <summary>Формирует хэш-значение имени формата большого двоичного объекта ключа, внедренного в текущий объект <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />.</summary>
      <returns>Хэш-значение внедренного формата большого двоичного объекта ключа. </returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> один и тот же формат большого двоичного объекта ключа.</summary>
      <returns>
            Значение true, если два объекта задают один и тот же формат большого двоичного объекта ключа; в противном случае — значение false.</returns>
      <param name="left">Объект, задающий большой двоичный объект ключа.</param>
      <param name="right">Второй объект, подлежащий сравнению с объектом, идентифицируемым параметром <paramref name="left" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" /> разные форматы большого двоичного объекта ключа.</summary>
      <returns>
            Значение true, если два объекта задают разные форматы большого двоичного объекта ключа; в противном случае — значение false.</returns>
      <param name="left">Объект, задающий большой двоичный объект ключа.</param>
      <param name="right">Второй объект, подлежащий сравнению с объектом, идентифицируемым параметром <paramref name="left" />.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />, задающий большой двоичный объект ключа непрозрачной передачи.</summary>
      <returns>Объект, задающий большой двоичный объект ключа непрозрачной передачи.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />, задающий большой двоичный объект ключа в соответствии со стандартом синтаксиса закрытых ключей (PKCS 8).</summary>
      <returns>Объект, задающий большой двоичный объект закрытого ключа PKCS 8.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyBlobFormat.ToString">
      <summary>Получает имя формата большого двоичного объекта ключа, заданного текущим объектом <see cref="T:System.Security.Cryptography.CngKeyBlobFormat" />.</summary>
      <returns>Внедренное имя формата большого двоичного объекта ключа.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyCreationOptions">
      <summary>Задает параметры создания ключа.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.None">
      <summary>Параметры создания ключа не заданы.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.MachineKey">
      <summary>Создается ключ для всех пользователей компьютера.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyCreationOptions.OverwriteExistingKey">
      <summary>При создании нового ключа существующий ключ перезаписывается.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyCreationParameters">
      <summary>Содержит дополнительные свойства для создания ключа.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngKeyCreationParameters.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngKeyCreationParameters" />.</summary>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.ExportPolicy">
      <summary>Получает или задает политику экспорта ключа.</summary>
      <returns>Объект, задающий политику экспорта ключа. Значение по умолчанию равно null и показывает, что задана политика KSP по умолчанию для экспорта ключа.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.KeyCreationOptions">
      <summary>Получает или задает параметры создания ключа.</summary>
      <returns>Объект, задающий параметры создания ключа. Значение по умолчанию равно null и показывает, что заданы параметры KSP по умолчанию для создания ключа.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.KeyUsage">
      <summary>Получает или задает криптографические операции, применяемые к текущему ключу. </summary>
      <returns>Битовая комбинация значений перечисления, задающих параметры использования ключа. Значение по умолчанию равно null и показывает, что заданы параметры KSP по умолчанию для использования ключа.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.Parameters">
      <summary>Позволяет создать объект <see cref="T:System.Security.Cryptography.CngKey" /> с дополнительными свойствами, которые устанавливаются до окончания создания ключа.</summary>
      <returns>Объект коллекции, содержащий любые дополнительные параметры, которые необходимо задать для объекта <see cref="T:System.Security.Cryptography.CngKey" /> во время создания ключа.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.ParentWindowHandle">
      <summary>Получает или задает дескриптор окна, которое необходимо использовать в качестве родительского окна для диалоговых окон, создаваемых классами CNG.</summary>
      <returns>Дескриптор HWND родительского окна, используемый для диалоговых окон CNG.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.Provider">
      <summary>Получает или задает поставщика хранилища ключей (KSP), в котором необходимо создать ключ.</summary>
      <returns>Объект, задающий поставщика хранилища ключей, в котором будет создан новый ключ.</returns>
      <exception cref="T:System.ArgumentNullException">Для свойства <see cref="P:System.Security.Cryptography.CngKeyCreationParameters.Provider" /> задано значение null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CngKeyCreationParameters.UIPolicy">
      <summary>Получает или задает информацию о пользовательском интерфейсе, отображаемую при создании ключа или доступе к ключу.</summary>
      <returns>Объект, в котором содержатся сведения о пользовательском интерфейсе, отображаемом классами CNG при создании ключа или доступе к ключу. Значение null показывает, что задана политика KSP по умолчанию для пользовательского интерфейса.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyHandleOpenOptions">
      <summary>Задает параметры открытия дескрипторов ключа.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyHandleOpenOptions.None">
      <summary>Открываемый дескриптор ключа не определяет эфемерный ключ.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey">
      <summary>Открываемый дескриптор ключа определяет эфемерный ключ.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyOpenOptions">
      <summary>Задает параметры открытия ключа.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.None">
      <summary>Параметры открытия ключа не заданы.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.UserKey">
      <summary>Если не задано значение <see cref="F:System.Security.Cryptography.CngKeyOpenOptions.MachineKey" />, открывается ключ для текущего пользователя.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.MachineKey">
      <summary>Открывается ключ для всех пользователей компьютера.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyOpenOptions.Silent">
      <summary>Запросы пользовательского интерфейса подавляются.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngKeyUsages">
      <summary>Задает криптографические операции, в которых может использоваться ключ CNG. </summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.None">
      <summary>Ключу не назначены значения использования.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.Decryption">
      <summary>Ключ может использоваться для зашифрования и расшифрования.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.Signing">
      <summary>Ключ может использоваться для создания и проверки подписи.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.KeyAgreement">
      <summary>Ключ может использоваться для формирования секретного соглашения и обмена ключами.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngKeyUsages.AllUsages">
      <summary>Ключ может использоваться в любых операциях.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngProperty">
      <summary>Инкапсулирует свойство ключа или поставщика CNG.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngProperty" />.</summary>
      <param name="name">Имя свойства, которое необходимо инициализировать.</param>
      <param name="value">Значение свойства, которое необходимо инициализировать.</param>
      <param name="options">Битовая комбинация значений перечисления, определяющая способ сохранения свойства.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.Equals(System.Object)">
      <summary>Сравнивает заданный объект с текущим объектом <see cref="T:System.Security.Cryptography.CngProperty" />.</summary>
      <returns>
            Значение true, если параметр <paramref name="obj" /> является объектом <see cref="T:System.Security.Cryptography.CngProperty" />, задающим то же самое свойство, что и текущий объект; в противном случае — значение false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngProperty" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)">
      <summary>Сравнивает заданный объект <see cref="T:System.Security.Cryptography.CngProperty" /> с текущим объектом <see cref="T:System.Security.Cryptography.CngProperty" />.</summary>
      <returns>
            Значение true, если параметр <paramref name="other" /> представляет то же самое свойство, что и текущий объект; в противном случае — значение false.</returns>
      <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngProperty" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.GetHashCode">
      <summary>Формирует хэш-значение для текущего объекта <see cref="T:System.Security.Cryptography.CngProperty" />.</summary>
      <returns>Хэш-значение текущего объекта <see cref="T:System.Security.Cryptography.CngProperty" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.GetValue">
      <summary>Получает значение свойства, заданное текущим объектом <see cref="T:System.Security.Cryptography.CngProperty" />.</summary>
      <returns>Массив, представляющий сохраненное в свойстве значение.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProperty.Name">
      <summary>Получает имя свойства, заданное текущим объектом <see cref="T:System.Security.Cryptography.CngProperty" />.</summary>
      <returns>Имя свойства, заданное в текущем объекте <see cref="T:System.Security.Cryptography.CngProperty" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)">
      <summary>Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngProperty" /> одинаковые имена, значения и параметры свойств.</summary>
      <returns>
            Значение true, если два объекта задают одно и то же свойство, в противном случае — значение false.</returns>
      <param name="left">Объект, задающий свойство ключа или поставщика CNG.</param>
      <param name="right">Второй объект, подлежащий сравнению с объектом, идентифицируемым параметром <paramref name="left" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)">
      <summary>Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngProperty" /> разные имена, значения и параметры свойств.</summary>
      <returns>
            Значение true, если два объекта задают разные свойства; в противном случае — значение false.</returns>
      <param name="left">Объект, задающий свойство ключа или поставщика CNG.</param>
      <param name="right">Второй объект, подлежащий сравнению с объектом, идентифицируемым параметром <paramref name="left" />.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngProperty.Options">
      <summary>Получает параметры свойства, заданные текущим объектом <see cref="T:System.Security.Cryptography.CngProperty" />.</summary>
      <returns>Объект, определяющий параметры, заданные в текущем объекте <see cref="T:System.Security.Cryptography.CngProperty" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngPropertyCollection">
      <summary>Предоставляет строго типизированный набор свойств CNG.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngPropertyCollection.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.Security.Cryptography.CngPropertyCollection" />.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngPropertyOptions">
      <summary>Задает параметры свойств ключа CNG.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.None">
      <summary>Для указанного свойства не заданы параметры.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.CustomProperty">
      <summary>Это свойство не задано в CNG. Используйте этот параметр для предотвращения конфликтов имен свойств CNG в будущем.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngPropertyOptions.Persist">
      <summary>Это свойство должно быть сохранено.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CngProvider">
      <summary>Инкапсулирует имя поставщика хранилища ключей (KSP), используемое с объектами криптографии следующего поколения (CNG).</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngProvider" />.</summary>
      <param name="provider">Имя поставщика хранилища ключей (KSP) для инициализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="provider" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Длина значения параметра <paramref name="provider" /> равна 0.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.Equals(System.Object)">
      <summary>Сравнивает заданный объект с текущим объектом <see cref="T:System.Security.Cryptography.CngProvider" />.</summary>
      <returns>
            Значение true, если параметр <paramref name="obj" /> является объектом <see cref="T:System.Security.Cryptography.CngProvider" />, задающим того же поставщика хранилищ ключей, что и текущий объект; в противном случае — значение false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngProvider" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)">
      <summary>Сравнивает заданный объект <see cref="T:System.Security.Cryptography.CngProvider" /> с текущим объектом <see cref="T:System.Security.Cryptography.CngProvider" />.</summary>
      <returns>
            Значение true, если параметр <paramref name="other" /> задает того же поставщика хранилищ ключей, что и текущий объект; в противном случае — значение false.</returns>
      <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Security.Cryptography.CngProvider" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.GetHashCode">
      <summary>Формирует значение хэша имени поставщика хранилищ ключей, внедренного в текущий объект <see cref="T:System.Security.Cryptography.CngProvider" />.</summary>
      <returns>Значение хэша внедренного имени поставщика хранилища ключей.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngProvider" />, задающий поставщика хранилищ ключей на базе смарт-карт (Microsoft). </summary>
      <returns>Объект, задающий поставщика хранилищ ключей на базе смарт-карт (Microsoft).</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider">
      <summary>Получает объект <see cref="T:System.Security.Cryptography.CngProvider" />, задающий программного поставщика хранилищ ключей (Microsoft).</summary>
      <returns>Объект , задающий программного поставщика хранилищ ключей (Microsoft).</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)">
      <summary>Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngProvider" /> одного и того же поставщика хранилищ ключей.</summary>
      <returns>
            Значение true, если два объекта представляют одинаковых поставщиков хранилищ ключей; в противном случае — значение false.</returns>
      <param name="left">Объект, задающий поставщика хранилищ ключей.</param>
      <param name="right">Второй объект, подлежащий сравнению с объектом, идентифицируемым параметром <paramref name="left" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)">
      <summary>Определяет, задают ли два объекта <see cref="T:System.Security.Cryptography.CngProvider" /> различных поставщиков хранилищ ключей.</summary>
      <returns>
            Значение true, если два объекта представляют различных поставщиков хранилищ ключей; в противном случае — значение false.</returns>
      <param name="left">Объект, задающий поставщика хранилищ ключей.</param>
      <param name="right">Второй объект, подлежащий сравнению с объектом, идентифицируемым параметром <paramref name="left" />.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngProvider.Provider">
      <summary>Получает имя поставщика хранилищ ключей, задаваемого текущим объектом <see cref="T:System.Security.Cryptography.CngProvider" />.</summary>
      <returns>Внедренное имя поставщика хранилищ ключей.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CngProvider.ToString">
      <summary>Получает имя поставщика хранилищ ключей, задаваемого текущим объектом <see cref="T:System.Security.Cryptography.CngProvider" />.</summary>
      <returns>Внедренное имя поставщика хранилищ ключей.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngUIPolicy">
      <summary>Инкапсулирует дополнительные параметры конфигурации для пользовательского интерфейса, отображаемого механизмом CNG при доступе к защищенному ключу.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngUIPolicy" />, используя заданный уровень защиты.</summary>
      <param name="protectionLevel">Битовая комбинация значений перечисления, задающих уровень защиты.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngUIPolicy" />, используя заданный уровень защиты и понятное имя.</summary>
      <param name="protectionLevel">Битовая комбинация значений перечисления, задающих уровень защиты.  </param>
      <param name="friendlyName">Понятное имя ключа, используемое в запросе пользовательского интерфейса. Чтобы использовать имя по умолчанию, укажите строку null.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngUIPolicy" />, используя заданный уровень защиты, понятное имя и описание.</summary>
      <param name="protectionLevel">Битовая комбинация значений перечисления, задающих уровень защиты.  </param>
      <param name="friendlyName">Понятное имя ключа, используемое в запросе пользовательского интерфейса. Чтобы использовать имя по умолчанию, укажите строку null.</param>
      <param name="description">Полнотекстовое описание ключа. Чтобы использовать описание по умолчанию, укажите строку null.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngUIPolicy" />, используя заданный уровень защиты, понятное имя, строку описания и контекст использования.</summary>
      <param name="protectionLevel">Битовая комбинация значений перечисления, задающих уровень защиты.  </param>
      <param name="friendlyName">Понятное имя ключа, используемое в запросе пользовательского интерфейса. Чтобы использовать имя по умолчанию, укажите строку null.</param>
      <param name="description">Полнотекстовое описание ключа. Чтобы использовать описание по умолчанию, укажите строку null.</param>
      <param name="useContext">Описание способа использования ключа. Чтобы использовать описание по умолчанию, укажите строку null.</param>
    </member>
    <member name="M:System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.CngUIPolicy" />, используя заданный уровень защиты, понятное имя, строку описания, контекст использования и заголовок.</summary>
      <param name="protectionLevel">Битовая комбинация значений перечисления, задающих уровень защиты.  </param>
      <param name="friendlyName">Понятное имя ключа, используемое в запросе пользовательского интерфейса. Чтобы использовать имя по умолчанию, укажите строку null.</param>
      <param name="description">Полнотекстовое описание ключа. Чтобы использовать описание по умолчанию, укажите строку null.</param>
      <param name="useContext">Описание способа использования ключа. Чтобы использовать описание по умолчанию, укажите строку null.</param>
      <param name="creationTitle">Заголовок диалогового окна, в котором отображается запрос пользовательского интерфейса. Чтобы использовать заголовок по умолчанию, укажите строку null.</param>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.CreationTitle">
      <summary>Получает заголовок диалогового окна, отображаемого при запросе пользовательского интерфейса.</summary>
      <returns>Заголовок диалогового окна, отображаемого при доступе к ключу.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.Description">
      <summary>Получает строку описания, отображаемую в запросе пользовательского интерфейса.</summary>
      <returns>Текст описания для диалогового окна, отображаемого при доступе к ключу.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.FriendlyName">
      <summary>Получает понятное имя, отображаемое в запросе пользовательского интерфейса.</summary>
      <returns>Понятное имя, которое используется для описания ключа в диалоговом окне, отображаемом при доступе к ключу.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.ProtectionLevel">
      <summary>Получает уровень защиты пользовательского интерфейса для ключа.</summary>
      <returns>Объект, описывающий уровень защиты пользовательского интерфейса, который необходимо применить к ключу.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CngUIPolicy.UseContext">
      <summary>Получает описание способа использования ключа.</summary>
      <returns>Описание способа использования ключа.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CngUIProtectionLevels">
      <summary>Задает уровень защиты ключа в сценариях запроса пользовательского интерфейса.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.None">
      <summary>Запрос пользовательского интерфейса не отображается при доступе к ключу.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.ProtectKey">
      <summary>Запрос пользовательского интерфейса отображается при первом доступе к ключу в процессе.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CngUIProtectionLevels.ForceHighProtection">
      <summary>Запрос пользовательского интерфейса отображается каждый раз при доступе к ключу.</summary>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellman">
      <summary>Предоставляет абстрактный базовый класс, из которого создаются реализации алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH). Этот класс предоставляет базовый набор операций, которые должны поддерживать все реализации алгоритма ECDH.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellman.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDiffieHellman" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellman.Create">
      <summary>Создает новый экземпляр реализации по умолчанию алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH).</summary>
      <returns>Новый экземпляр реализации по умолчанию этого класса.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
      <summary>Создает новый экземпляр заданной реализации по умолчанию алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH).</summary>
      <returns>Новый экземпляр заданной реализации этого класса. Если заданное имя алгоритма не соответствует реализации ECDH, этот метод возвращает значение null.</returns>
      <param name="algorithm">Имя реализации алгоритма ECDH. Все следующие строки относятся к одной и той же реализации, являющейся единственной реализацией, которая в настоящее время поддерживается .NET Framework:"ECDH""ECDiffieHellman""ECDiffieHellmanCng""System.Security.Cryptography.ECDiffieHellmanCng"Пользователь может также предоставить имя собственной реализации алгоритма ECDH.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="algorithm" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <summary>Получает последовательность байтов, которые могут использоваться в качестве ключа при заданном открытом ключе другой стороны.</summary>
      <returns>Ключевой материал, сформированный на основе открытого ключа другой стороны, участвующей в обмене ключами.</returns>
      <param name="otherPartyPublicKey">Открытый ключ другой стороны.</param>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm">
      <summary>Получает имя алгоритма обмена ключами.</summary>
      <returns>Имя алгоритма обмена ключами. </returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellman.PublicKey">
      <summary>Получает открытый ключ, используемый текущим экземпляром ECDH.</summary>
      <returns>Открытая часть пары ключей ECDH, используемая этим экземпляром <see cref="T:System.Security.Cryptography.ECDiffieHellman" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
      <summary>Получает имя алгоритма подписи.</summary>
      <returns>Всегда имеет значение null.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanCng">
      <summary>Предоставляет реализацию CNG алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH). Этот класс используется для выполнения криптографических операций.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> парой случайных ключей.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> парой случайных ключей, используя заданный размер ключа.</summary>
      <param name="keySize">Размер ключа. Допустимые размеры ключа: 256, 384 и 521 бит.</param>
      <exception cref="T:System.ArgumentException">
                Недопустимое значение параметра <paramref name="keySize" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />, используя указанный объект <see cref="T:System.Security.Cryptography.CngKey" />.</summary>
      <param name="key">Ключ, который будет подаваться на вход криптографических операций, выполняемых текущим объектом. </param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="key" /> не указывает группу алгоритмов, основанных на алгоритме Диффи-Хеллмана на эллиптических кривых (ECDH).</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
      <summary>Формирует ключевой материал из секретного соглашения, заключенного между двумя сторонами, используя заданный объект <see cref="T:System.Security.Cryptography.CngKey" />, в котором содержится открытый ключ второй стороны. </summary>
      <returns>Массив байтов, в котором содержится ключевой материал. Эта информация формируется из секретного соглашения, вычисляемого на основе закрытого ключа текущего объекта и указанного открытого ключа.</returns>
      <param name="otherPartyPublicKey">Получает объект, в котором содержится открытая часть ключа алгоритма Диффи-Хеллмана на эллиптических кривых (Elliptic Curve Diffie-Hellman, ECDH), переданная другой стороной в процессе обмена ключами.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="otherPartyPublicKey" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Недопустимое значение параметра <paramref name="otherPartyPublicKey" />. Значение его свойства <see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /> отлично от <see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /> или его размер ключа не соответствует размеру ключа данного экземпляра.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /> данного объекта задает функцию формирования ключа <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />, но значение <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> или <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> равно null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <summary>Формирует ключевой материал из секретного соглашения, заключенного между двумя сторонами, используя заданный объект <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />, в котором содержится открытый ключ второй стороны. </summary>
      <returns>Массив байтов, в котором содержится ключевой материал. Эта информация формируется из секретного соглашения, вычисляемого на основе закрытого ключа текущего объекта и указанного открытого ключа.</returns>
      <param name="otherPartyPublicKey">Открытый ключ другой стороны, участвующей в обмене ключами.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="otherPartyPublicKey" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="otherPartyPublicKey" /> не является ключом <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />. </exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
      <summary>Получает дескриптор секретного соглашения, заключенного между двумя сторонами, используя заданный объект <see cref="T:System.Security.Cryptography.CngKey" />, в котором содержится открытый ключ второй стороны.</summary>
      <returns>Дескриптор секретного соглашения. Эта информация вычисляется на основе закрытого ключа текущего объекта и указанного открытого ключа.</returns>
      <param name="otherPartyPublicKey">Получает объект, в котором содержится открытая часть ключа алгоритма Диффи-Хеллмана на эллиптических кривых (Elliptic Curve Diffie-Hellman, ECDH), переданная другой стороной в процессе обмена ключами.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="otherPartyPublicKey" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="otherPartyPublicKey" /> не является ключом ECDH или имеет неверный размер.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
      <summary>Получает дескриптор секретного соглашения, согласованного между двумя сторонами, используя заданный объект <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />, в котором содержится открытый ключ второй стороны.</summary>
      <returns>Дескриптор секретного соглашения. Эта информация вычисляется на основе закрытого ключа текущего объекта и указанного открытого ключа.</returns>
      <param name="otherPartyPublicKey">Открытый ключ другой стороны, участвующей в обмене ключами.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="otherPartyPublicKey" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Значение параметра <paramref name="otherPartyPublicKey" /> не является ключом <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />. </exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
      <summary>Этот метод не реализован.</summary>
      <param name="xmlString">Данные ключа в формате XML, подлежащие десериализации.</param>
      <exception cref="T:System.NotImplementedException">Этот метод не был переопределен для данного экземпляра.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Выполняет десериализацию данных ключа из XML-строки, используя указанный формат.</summary>
      <param name="xml">Данные ключа в формате XML, подлежащие десериализации.</param>
      <param name="format">Одно из значений перечисления, задающее формат XML-строки. В настоящее время поддерживается только формат <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="xml" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
                Неверный формат параметра <paramref name="xml" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Недопустимое значение параметра <paramref name="format" />. Единственным допустимым значением является <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
      <summary>Получает или задает хэш-алгоритм, используемый при генерации ключевого материала.</summary>
      <returns>Объект, задающий хэш-алгоритм.</returns>
      <exception cref="T:System.ArgumentNullException">Значение равно null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
      <summary>Получает или задает ключ HMAC, используемый при формировании ключевого материала.</summary>
      <returns>Ключ <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Key">
      <summary>Задает объект <see cref="T:System.Security.Cryptography.CngKey" />, который будет использоваться текущим объектом для выполнения криптографических операций.</summary>
      <returns>Пара ключей, используемая текущим объектом для выполнения криптографических операций.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
      <summary>Получает или задает функцию формирования ключа для класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" />: <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />, <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /> или <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />. Значение по умолчанию — <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение перечисления вне диапазона.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
      <summary>Получает или задает значение метки, используемое для формирования ключа.</summary>
      <returns>Значение метки.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey">
      <summary>Получает открытый ключ, который может использоваться другим объектом <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> для генерации секретного соглашения.</summary>
      <returns>Открытый ключ, связанный с этим экземпляром класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
      <summary>Получает или задает значение, добавляемое к концу секретного соглашения при генерации ключевого материала.</summary>
      <returns>Значение, добавляемое к концу секретного соглашения.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
      <summary>Получает или задает значение, добавляемое к началу секретного соглашения при формировании ключевого материала.</summary>
      <returns>Значение, добавляемое к началу секретного соглашения при формировании ключевого материала.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
      <summary>Получает или задает начальное значение, используемое при формировании ключевого материала.</summary>
      <returns>Начальное значение.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
      <summary>Этот метод не реализован.</summary>
      <returns>Не применимо.</returns>
      <param name="includePrivateParameters">
                Значение true для включения параметров с модификатором доступа private; в противном случае — значение false.</param>
      <exception cref="T:System.NotImplementedException">Этот метод не был переопределен для данного экземпляра.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Выполняет сериализацию данных ключа в XML-строку, используя указанный формат.</summary>
      <returns>Объект типа string, в котором содержатся данные ключа, сериализованные в XML-строку в соответствии с требуемым форматом.</returns>
      <param name="format">Одно из значений перечисления, задающее формат XML-строки. В настоящее время поддерживается только формат <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Недопустимое значение параметра <paramref name="format" />. Единственным допустимым значением является <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
      <summary>Получает значение, которое определяет, используется ли секретное соглашение в качестве ключа HMAC для формирования ключевого материала.</summary>
      <returns>
            Значение true, если секретное соглашение используется в качестве ключа HMAC для формирования ключевого материала; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey">
      <summary>Задает открытый ключ алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH) для использования с классом <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />.</summary>
    </member>
    <member name="P:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.BlobFormat">
      <summary>Получает формат большого двоичного объекта ключа для объекта <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</summary>
      <returns>Формат, в котором представляется большой двоичный объект ключа.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromByteArray(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)">
      <summary>Преобразует массив байтов, в котором содержится открытый ключ, в объект <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> в соответствии с заданным форматом.</summary>
      <returns>Объект, в котором содержится открытый ключ ECDH, сериализованный в массив байтов.</returns>
      <param name="publicKeyBlob">Массив байтов, в котором содержится открытый ключ алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH).</param>
      <param name="format">Объект, задающий формат большого двоичного объекта ключа.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="publicKeyBlob" /> или <paramref name="format" />имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Для параметра <paramref name="publicKeyBlob" /> не задан ключ <see cref="T:System.Security.Cryptography.ECDiffieHellman" />. </exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.FromXmlString(System.String)">
      <summary>Преобразует XML-строку в объект <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</summary>
      <returns>Объект, в котором содержится открытый ключ ECDH, заданный указанной XML-строкой.</returns>
      <param name="xml">XML-строка, в которой содержится ключ алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH).</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="xml" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Для параметра <paramref name="xml" /> не задан ключ <see cref="T:System.Security.Cryptography.ECDiffieHellman" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.Import">
      <summary>Преобразует объект <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> в объект <see cref="T:System.Security.Cryptography.CngKey" />.</summary>
      <returns>Объект, в котором содержится ключ, представленный объектом <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanCngPublicKey.ToXmlString">
      <summary>Выполняет сериализацию открытого ключа <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> в XML-строку формата RFC 4050.</summary>
      <returns>XML-строка, в которой содержится сериализованный открытый ключ <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
      <summary>Задает функцию формирования ключа, используемую классом <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> для преобразования секретного соглашения в ключевой материал.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash">
      <summary>Хэш-алгоритм, используемый для формирования ключевого материала. Свойство <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> задает имя алгоритма, который необходимо использовать. Если имя алгоритма не задано, используется алгоритм по умолчанию <see cref="T:System.Security.Cryptography.SHA256" />. </summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac">
      <summary>Для формирования ключевого материала используется алгоритм HMAC. Свойство <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> задает ключ, который необходимо использовать. Необходимо задать это свойство или задать для свойства <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> значение true; в противном случае при использовании <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /> возникнет исключение <see cref="T:System.Security.Cryptography.CryptographicException" />. Если заданы оба свойства, секретное соглашение используется в качестве ключа HMAC. </summary>
    </member>
    <member name="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls">
      <summary>Для формирования ключевого материала используется протокол TLS. Необходимо задать свойства <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> и <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" />; в противном случае при использовании <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /> возникнет исключение <see cref="T:System.Security.Cryptography.CryptographicException" />. </summary>
    </member>
    <member name="T:System.Security.Cryptography.ECDiffieHellmanPublicKey">
      <summary>Абстрактный базовый класс, от которого должны наследоваться все реализации <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" />. </summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />.</summary>
      <param name="keyBlob">Массив байтов, представляющий объект <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="keyBlob" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Security.Cryptography.ECDiffieHellman" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Security.Cryptography.ECDiffieHellman" /> (при необходимости освобождает и управляемые ресурсы).</summary>
      <param name="disposing">
                Значение true позволяет освободить управляемые и неуправляемые ресурсы; значение false позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray">
      <summary>Выполняет сериализацию большого двоичного объекта ключа <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> в массив байтов.</summary>
      <returns>Массив байтов, в котором содержится сериализованный открытый ключ алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH).</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString">
      <summary>Выполняет сериализацию открытого ключа <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> в XML-строку.</summary>
      <returns>XML-строка, в которой содержится сериализованный открытый ключ алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH).</returns>
    </member>
    <member name="T:System.Security.Cryptography.ECDsa">
      <summary>Предоставляет абстрактный базовый класс, инкапсулирующий алгоритм цифровой подписи DSA на эллиптических кривых (Elliptic Curve Digital Signature Algorithm, ECDSA).</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDsa.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsa" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDsa.Create">
      <summary>Создает новый экземпляр реализации по умолчанию алгоритма цифровой подписи DSA на эллиптических кривых (Elliptic Curve Digital Signature Algorithm, ECDSA).</summary>
      <returns>Новый экземпляр реализации по умолчанию (<see cref="T:System.Security.Cryptography.ECDsaCng" />) этого класса.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsa.Create(System.String)">
      <summary>Создает новый экземпляр заданной реализации алгоритма цифровой подписи DSA на эллиптических кривых (Elliptic Curve Digital Signature Algorithm, ECDSA).</summary>
      <returns>Новый экземпляр заданной реализации этого класса. Если заданное имя алгоритма не соответствует реализации ECDSA, этот метод возвращает значение null. </returns>
      <param name="algorithm">Имя реализации ECDSA. Все следующие строки относятся к одной и той же реализации, являющейся единственной реализацией, которая в настоящее время поддерживается .NET Framework:"ECDsa""ECDsaCng""System.Security.Cryptography.ECDsaCng"Также можно предоставить имя пользовательской реализации ECDSA.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="algorithm" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDsa.KeyExchangeAlgorithm">
      <summary>Получает имя алгоритма обмена ключами.</summary>
      <returns>Всегда имеет значение null.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ECDsa.SignatureAlgorithm">
      <summary>Получает имя алгоритма подписи.</summary>
      <returns>Строка "ECDsa".</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsa.SignHash(System.Byte[])">
      <summary>Создает цифровую подпись для заданного хэш-значения. </summary>
      <returns>Цифровая подпись, которая представляет собой заданное хэш-значение, зашифрованное с помощью закрытого ключа.</returns>
      <param name="hash">Хэш-значение подписываемых данных.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="hash" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsa.VerifyHash(System.Byte[],System.Byte[])">
      <summary>Проверяет цифровую подпись по заданному хэш-значению. </summary>
      <returns>
            Значение true, если хэш-значение соответствует расшифрованной подписи; в противном случае — значение false.</returns>
      <param name="hash">Хэш-значение блока данных.</param>
      <param name="signature">Цифровая подпись, подлежащая проверке.</param>
    </member>
    <member name="T:System.Security.Cryptography.ECDsaCng">
      <summary>Обеспечивает реализацию CNG алгоритма цифровой подписи DSA на эллиптических кривых (Elliptic Curve Digital Signature Algorithm, ECDSA). </summary>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaCng" /> парой случайных ключей.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaCng" /> парой случайных ключей, используя заданный размер ключа.</summary>
      <param name="keySize">Размер ключа. Допустимые размеры ключа: 256, 384 и 521 бит.</param>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
                Недопустимое значение параметра <paramref name="keySize" />. </exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.ECDsaCng" />, используя указанный объект <see cref="T:System.Security.Cryptography.CngKey" />.</summary>
      <param name="key">Ключ, который будет подаваться на вход криптографических операций, выполняемых текущим объектом.</param>
      <exception cref="T:System.ArgumentException">
                Параметр <paramref name="key" /> не указывает группу алгоритмов, основанных на алгоритме цифровой подписи DSA на эллиптических кривых (ECDSA).</exception>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Классы криптографии следующего поколения (CNG) не поддерживаются данной системой.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
      <summary>Этот метод не реализован.</summary>
      <param name="xmlString">Данные ключа в формате XML, подлежащие десериализации.</param>
      <exception cref="T:System.NotImplementedException">Этот метод не был переопределен для данного экземпляра. </exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Выполняет десериализацию данных ключа из XML-строки, используя указанный формат.</summary>
      <param name="xml">Данные ключа в формате XML, подлежащие десериализации.</param>
      <param name="format">Одно из значений перечисления, задающее формат XML-строки. В настоящее время поддерживается только формат <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="xml" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Недопустимое значение параметра <paramref name="format" />. Единственным допустимым значением является <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
      <summary>Получает или задает хэш-алгоритм, используемый при подписывании и проверке данных.</summary>
      <returns>Объект, задающий хэш-алгоритм.</returns>
      <exception cref="T:System.ArgumentNullException">Значение равно null.</exception>
    </member>
    <member name="P:System.Security.Cryptography.ECDsaCng.Key">
      <summary>Получает или задает ключ, используемый при подписывании и проверке данных.</summary>
      <returns>Объект, задающий ключ.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
      <summary>Создает подпись для указанных данных.</summary>
      <returns>Цифровая подпись для указанных данных.</returns>
      <param name="data">Сообщение, которое необходимо подписать.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="data" /> имеет значение null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Для данных ключа, связанных с этим экземпляром, не существует закрытого ключа.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
      <summary>Создает цифровую подпись для фрагмента данных указанной длины, начиная с указанной позиции. </summary>
      <returns>Цифровая подпись для указанного фрагмента данных.</returns>
      <param name="data">Сообщение, которое необходимо подписать.</param>
      <param name="offset">Позиция в строке, с которой следует начать подписывание.</param>
      <param name="count">Длина строки в знаках, подлежащая подписыванию и отсчитываемая от позиции <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="data" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Значения параметров <paramref name="count" /> или <paramref name="offset" /> вызвали выход за границы строки данных при чтении. </exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Для данных ключа, связанных с этим экземпляром, не существует закрытого ключа.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
      <summary>Создает подпись для указанного потока данных, перемещая позицию чтения в конец потока.</summary>
      <returns>Цифровая подпись для указанного потока данных.</returns>
      <param name="data">Поток данных, которые необходимо подписать.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="data" /> имеет значение null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Для данных ключа, связанных с этим экземпляром, не существует закрытого ключа.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
      <summary>Создает подпись для указанного значения хэша.</summary>
      <returns>Цифровая подпись для указанного значения хэша.</returns>
      <param name="hash">Значение хэша подписываемых данных.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="hash" /> имеет значение null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Для данных ключа, связанных с этим экземпляром, не существует закрытого ключа.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
      <summary>Этот метод не реализован.</summary>
      <returns>Не применимо.</returns>
      <param name="includePrivateParameters">
                Значение true для включения параметров с модификатором доступа private; в противном случае — значение false.</param>
      <exception cref="T:System.NotImplementedException">Этот метод не реализован.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
      <summary>Выполняет сериализацию данных ключа в XML-строку, используя указанный формат.</summary>
      <returns>Объект типа string, в котором содержатся данные ключа, сериализованные в XML-строку в соответствии с требуемым форматом.</returns>
      <param name="format">Одно из значений перечисления, задающее формат XML-строки. В настоящее время поддерживается только формат <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Недопустимое значение параметра <paramref name="format" />. Единственным допустимым значением является <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Все остальные ошибки.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
      <summary>Проверяет цифровую подпись указанных данных. </summary>
      <returns>
            Значение true, если подпись действительна; в противном случае — значение false.</returns>
      <param name="data">Подписанные данные.</param>
      <param name="signature">Подпись, подлежащая проверке.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="data" /> или <paramref name="signature" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
      <summary>Проверяет подпись для фрагмента данных указанной длины, начиная с указанной позиции.</summary>
      <returns>
            Значение true, если подпись действительна; в противном случае — значение false.</returns>
      <param name="data">Подписанные данные.</param>
      <param name="offset">Позиция, с которой начинаются подписанные данные.</param>
      <param name="count">Длина подписанного фрагмента данных в знаках, отсчитываемая от позиции <paramref name="offset" />.</param>
      <param name="signature">Подпись, подлежащая проверке.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                Значение параметра <paramref name="offset" /> или <paramref name="count" /> меньше нуля. -или-
                Значение параметра <paramref name="offset" /> или <paramref name="count" /> превышает длину массива байтов, задаваемого параметром <paramref name="data" />.</exception>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="data" /> или <paramref name="signature" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
      <summary>Проверяет цифровую подпись для указанного потока данных, перемещая позицию чтения в конец потока.</summary>
      <returns>
            Значение true, если подпись действительна; в противном случае — значение false.</returns>
      <param name="data">Подписанный поток данных.</param>
      <param name="signature">Подпись, подлежащая проверке.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="data" /> или <paramref name="signature" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
      <summary>Проверяет указанную цифровую подпись в соответствии с указанным значением хэша.</summary>
      <returns>
            Значение true, если подпись действительна; в противном случае — значение false.</returns>
      <param name="hash">Значение хэша проверяемых данных.</param>
      <param name="signature">Цифровая подпись данных, проверяемых в соответствии со значением хэша.</param>
      <exception cref="T:System.ArgumentNullException">
                Параметр <paramref name="hash" /> или <paramref name="signature" /> имеет значение null.</exception>
    </member>
    <member name="T:System.Security.Cryptography.ECKeyXmlFormat">
      <summary>Определяет форматы сериализации ключей на эллиптических кривых в XML.</summary>
    </member>
    <member name="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050">
      <summary>Формат сериализации в XML описывается в документе RFC 4050 "Using the Elliptic Curve Signature Algorithm (ECDSA) for XML Digital Signatures" ("Использование алгоритма цифровой подписи DSA на эллиптических кривых [ECDSA] для создания цифровых подписей XML").</summary>
    </member>
    <member name="T:System.Security.Cryptography.ManifestSignatureInformation">
      <summary>Предоставляет информацию о подписи манифеста. </summary>
    </member>
    <member name="P:System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature">
      <summary>Получает сведения о подписи Authenticode для манифеста. </summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" />, в котором содержатся сведения о подписи Authenticode для манифеста, или значение null, если подпись отсутствует.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ManifestSignatureInformation.Manifest">
      <summary>Получает тип манифеста.</summary>
      <returns>Одно из значений <see cref="T:System.Security.ManifestKinds" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature">
      <summary>Получает сведения о подписи строгого имени для манифеста.</summary>
      <returns>Объект <see cref="P:System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature" />, в котором содержится подпись, или значение null, если подпись строгого имени отсутствует.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)">
      <summary>Собирает и проверяет сведения о подписях манифестов, относящихся к заданному контексту активации.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.ManifestSignatureInformationCollection" /> с одним объектом <see cref="T:System.Security.Cryptography.ManifestSignatureInformation" /> для каждого проверяемого манифеста.</returns>
      <param name="application">Контекст активации манифеста. Контексты активации относятся к приложению и содержат несколько манифестов.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="application" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)">
      <summary>Собирает и проверяет сведения о подписях манифестов, относящихся к заданному контексту активации и типу манифеста.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.ManifestSignatureInformationCollection" />.</returns>
      <param name="application">Контекст активации манифеста. Контексты активации относятся к приложению и содержат несколько манифестов.</param>
      <param name="manifests">Тип манифеста. Этот параметр определяет, какие манифесты в контексте активации необходимо проверить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="application" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)">
      <summary>Собирает и проверяет сведения о подписях манифестов, относящихся к заданному контексту активации и типу манифеста, а также разрешает выбор сертификатов для отзыва.</summary>
      <param name="application">Контекст активации манифестов. Контексты активации относятся к приложению и содержат несколько манифестов.</param>
      <param name="manifests">Тип манифеста. Этот параметр определяет, какие манифесты в контексте активации необходимо проверить.</param>
      <param name="revocationFlag">Одно из значений перечисления, указывающее, какие сертификаты в цепочке должны быть проверены на отзыв. Значение по умолчанию — <see cref="F:System.Security.Cryptography.X509Certificates.X509RevocationFlag.ExcludeRoot" />.</param>
      <param name="revocationMode">Определяет, требуется ли при проверке сертификатов X.509 обращение к интерактивным спискам отзыва сертификатов. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="application" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Недопустимое значение параметра <paramref name="revocationFlag" /> или <paramref name="revocationMode" />.</exception>
    </member>
    <member name="T:System.Security.Cryptography.ManifestSignatureInformationCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Security.Cryptography.ManifestSignatureInformation" />, доступную только для чтения.  </summary>
    </member>
    <member name="T:System.Security.Cryptography.MD5Cng">
      <summary>Предоставляет реализацию CNG алгоритма MD5 (Message Digest 5) для формирования 128-разрядных хэш-значений.</summary>
    </member>
    <member name="M:System.Security.Cryptography.MD5Cng.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.MD5Cng" />. </summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Параметр безопасности Windows для FIPS-совместимых алгоритмов включен.</exception>
    </member>
    <member name="M:System.Security.Cryptography.MD5Cng.Initialize">
      <summary>Инициализирует или повторно инициализирует экземпляр хэш-алгоритма. </summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA1Cng">
      <summary>Предоставляет реализацию CNG алгоритма SHA.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA1Cng.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.SHA1Cng" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA1Cng.Initialize">
      <summary>Инициализирует или повторно инициализирует экземпляр хэш-алгоритма.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA256Cng">
      <summary>Предоставляет реализацию CNG алгоритма SHA для формирования 256-разрядных хэш-значений.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256Cng.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.SHA256Cng" />. </summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256Cng.Initialize">
      <summary>Инициализирует или повторно инициализирует экземпляр хэш-алгоритма. </summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA256CryptoServiceProvider">
      <summary>Определяет объект-оболочку для доступа к реализации алгоритма <see cref="T:System.Security.Cryptography.SHA256" />, предоставляемой поставщиком служб шифрования (CSP). </summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256CryptoServiceProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.SHA256CryptoServiceProvider" />. </summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256CryptoServiceProvider.Initialize">
      <summary>Инициализирует или повторно инициализирует экземпляр хэш-алгоритма.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA384Cng">
      <summary>Предоставляет реализацию CNG алгоритма SHA для формирования 384-разрядных хэш-значений.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384Cng.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.SHA384Cng" />. </summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384Cng.Initialize">
      <summary>Инициализирует или повторно инициализирует экземпляр хэш-алгоритма. </summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA384CryptoServiceProvider">
      <summary>Определяет объект-оболочку для доступа к реализации алгоритма <see cref="T:System.Security.Cryptography.SHA384" />, предоставляемой поставщиком служб шифрования (CSP). </summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384CryptoServiceProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.SHA384CryptoServiceProvider" />. </summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384CryptoServiceProvider.Initialize">
      <summary>Инициализирует или повторно инициализирует экземпляр хэш-алгоритма.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA512Cng">
      <summary>Предоставляет реализацию CNG алгоритма SHA для формирования 512-разрядных значений хэша.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512Cng.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.SHA512Cng" />. </summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512Cng.Initialize">
      <summary>Инициализирует или повторно инициализирует экземпляр хэш-алгоритма. </summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA512CryptoServiceProvider">
      <summary>Определяет объект-оболочку для доступа к реализации алгоритма <see cref="T:System.Security.Cryptography.SHA512" />, предоставляемой поставщиком служб шифрования (CSP). </summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512CryptoServiceProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.SHA512CryptoServiceProvider" />. </summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512CryptoServiceProvider.Initialize">
      <summary>Инициализирует или повторно инициализирует экземпляр хэш-алгоритма.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SignatureVerificationResult">
      <summary>Задает большинство кодов результата для проверки подписи. </summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.Valid">
      <summary>Результат проверки: сертификат является действительным.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.AssemblyIdentityMismatch">
      <summary>Идентификационные данные сборки, указанные в узле манифеста /asm:assembly/asm:assemblyIdentity не совпадают с идентификационными данными сборки в подписи Authenticode в узле /asm:assembly/ds:signature/ds:KeyInfo/msrel:RelData/r:license/r:grant/as:ManifestInformation/as:assemblyIdentity.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.ContainingSignatureInvalid">
      <summary>Не удается проверить подпись в объекте <see cref="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation" />. Поскольку подпись строгого имени охватывает подпись Authenticode, злоумышленник может попытаться подменить подпись Authenticode другой подписью по своему выбору. Этот код ошибки возвращается, если не удается проверить подпись строгого имени (подмена части подписи строгого имени делает эту подпись недействительной).</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.PublicKeyTokenMismatch">
      <summary>Маркер открытого ключа из идентификационных данных манифеста в узле /asm:assembly/asm:AssemblyIdentity не соответствует маркеру открытого ключа, используемого для подписи манифеста.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.PublisherMismatch">
      <summary>Имя издателя, указанное в узле /asm:assembly/asmv2:publisherIdentity, не соответствует имени субъекта сертификата подписи или хэш ключа поставщика, указанный в том же узле publisherIdentity, не соответствует хэшу ключа сертификата подписи.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.SystemError">
      <summary>При проверке отношений доверия произошла ошибка.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.InvalidSignerCertificate">
      <summary>Сертификат подписавшего сообщение не найден или является недопустимым.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCountersignature">
      <summary>Одна из подписей второго уровня является недопустимой.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateSignature">
      <summary>Невозможно проверить подпись сертификата.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.InvalidTimestamp">
      <summary>Невозможно проверить отметку времени или сертификат либо отметка времени/сертификат имеет неверный формат.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.BadDigest">
      <summary>Цифровая подпись объекта не проверена.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.BasicConstraintsNotObserved">
      <summary>Расширение основных ограничений сертификата не было просмотрено.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.UnknownTrustProvider">
      <summary>Для сертификата задан неизвестный поставщик доверия.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.UnknownVerificationAction">
      <summary>Для сертификата задана неизвестная операция проверки.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.BadSignatureFormat">
      <summary>Недопустимый формат подписи.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.CertificateNotExplicitlyTrusted">
      <summary>Сертификат явно помечен как ненадежный.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.MissingSignature">
      <summary>Отсутствует подпись.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.CertificateExpired">
      <summary>Срок действия сертификата истек.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.InvalidTimePeriodNesting">
      <summary>Сертификат был выпущен после истечения срока действия сертификата.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateRole">
      <summary>Сертификат имеет недопустимую роль.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.PathLengthConstraintViolated">
      <summary>Нарушено ограничение длины цепочки сертификатов.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.UnknownCriticalExtension">
      <summary>В сертификате содержится неизвестное расширение, помеченное как критическое.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.CertificateUsageNotAllowed">
      <summary>Невозможно использовать данный сертификат для создания и проверки подписи.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.IssuerChainingError">
      <summary>Родительский сертификат данного сертификата не издавал этот дочерний сертификат.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.CertificateMalformed">
      <summary>Сертификат отсутствует, или в нем не задано значение для важного поля, такого как "Имя субъекта" или "Имя поставщика".</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.UntrustedRootCertificate">
      <summary>Нет доверия к корневому сертификату.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.CouldNotBuildChain">
      <summary>Невозможно создать цепочку.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.GenericTrustFailure">
      <summary>Общее недоверие к сертификату.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.CertificateRevoked">
      <summary>Сертификат был отозван.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.UntrustedTestRootCertificate">
      <summary>Нет доверия к тестовому корневому сертификату.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.RevocationCheckFailure">
      <summary>Проверка отзыва закончилась неудачей.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateUsage">
      <summary>Сертификат имеет недопустимое назначение.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.CertificateExplicitlyDistrusted">
      <summary>Сертификат был явно помечен пользователем как ненадежный.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.UntrustedCertificationAuthority">
      <summary>Цепочка сертификатов обработана правильно, но поставщик политики не доверяет одному из сертификатов ЦС.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificatePolicy">
      <summary>Сертификат имеет недопустимую политику.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SignatureVerificationResult.InvalidCertificateName">
      <summary>Сертификат имеет недопустимое имя. Это имя не включено в список разрешенных имен или явно исключено из данного списка.</summary>
    </member>
    <member name="T:System.Security.Cryptography.StrongNameSignatureInformation">
      <summary>Содержит сведения о подписи строгого имени для манифеста.</summary>
    </member>
    <member name="P:System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm">
      <summary>Получает хэш-алгоритм для вычисления подписи строгого имени.</summary>
      <returns>Имя хэш-алгоритма для вычисления подписи строгого имени.</returns>
    </member>
    <member name="P:System.Security.Cryptography.StrongNameSignatureInformation.HResult">
      <summary>Получает значение HRESULT кода результата.</summary>
      <returns>Значение HRESULT кода результата.</returns>
    </member>
    <member name="P:System.Security.Cryptography.StrongNameSignatureInformation.IsValid">
      <summary>Получает значение, определяющее, верна ли подпись строгого имени.</summary>
      <returns>
            Значение true, если подпись строгого имени верна; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Security.Cryptography.StrongNameSignatureInformation.PublicKey">
      <summary>Получает открытый ключ, используемый для проверки подписи.</summary>
      <returns>Открытый ключ, используемый для проверки подписи. </returns>
    </member>
    <member name="P:System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult">
      <summary>Получает результат проверки подписи строгого имени.</summary>
      <returns>Коды результата проверки подписи.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation">
      <summary>Предоставляет информацию о подписи Authenticode для манифеста. </summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.Description">
      <summary>Получает описание сертификата для подписи.</summary>
      <returns>Описание сертификата для подписи.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.DescriptionUrl">
      <summary>Получает URL-адрес сертификата для подписи.</summary>
      <returns>URL-адрес описания сертификата для подписи.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.HashAlgorithm">
      <summary>Получает хэш-алгоритм, который используется для расчета подписи.</summary>
      <returns>Хэш-алгоритм, который используется для расчета подписи.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.HResult">
      <summary>Возвращает значение HRESULT, получаемое в результате проверки подписи.</summary>
      <returns>Значение HRESULT, получаемое в результате проверки подписи.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.SignatureChain">
      <summary>Получает цепочку сертификатов, используемую для проверки подписи Authenticode.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" />, содержащий цепочку сертификатов.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.SigningCertificate">
      <summary>Получает сертификат, подписавший манифест.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, представляющий сертификат.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.Timestamp">
      <summary>Получает отметку времени, которая была применена к подписи Authenticode.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.TimestampInformation" />, содержащий отметку времени подписи.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.TrustStatus">
      <summary>Получает достоверность подписи Authenticode.</summary>
      <returns>Одно из значений <see cref="T:System.Security.Cryptography.X509Certificates.TrustStatus" />. </returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation.VerificationResult">
      <summary>Получает результат проверки подписи Authenticode.</summary>
      <returns>Одно из значений <see cref="T:System.Security.Cryptography.SignatureVerificationResult" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.TimestampInformation">
      <summary>Предоставляет подробные сведения об отметке времени, которая была применена к подписи Authenticode манифеста. </summary>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.TimestampInformation.HashAlgorithm">
      <summary>Получает хэш-алгоритм, который используется для расчета подписи отметки времени.</summary>
      <returns>Хэш-алгоритм, который используется для расчета подписи отметки времени.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.TimestampInformation.HResult">
      <summary>Возвращает значение HRESULT, получаемое проверкой подписи.</summary>
      <returns>Значение HRESULT, получаемое проверкой подписи.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.TimestampInformation.IsValid">
      <summary>Получает значение, определяющее, является ли допустимой отметка о времени.</summary>
      <returns>
            Значение true, если отметка о времени является допустимой; в противном случае — значение false . </returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.TimestampInformation.SignatureChain">
      <summary>Получает цепочку сертификатов, используемую для проверки отметки времени подписи.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Chain" />, представляющий цепочку сертификатов.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.TimestampInformation.SigningCertificate">
      <summary>Получает сертификат, подписавший отметку времени.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, представляющий сертификат.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.TimestampInformation.Timestamp">
      <summary>Получает отметку времени, которая была применена к подписи.</summary>
      <returns>Объект <see cref="T:System.DateTime" />, представляющий отметку времени.</returns>
    </member>
    <member name="P:System.Security.Cryptography.X509Certificates.TimestampInformation.VerificationResult">
      <summary>Получает результат проверки подписи отметки времени.</summary>
      <returns>Одно из значений <see cref="T:System.Security.Cryptography.SignatureVerificationResult" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.TrustStatus">
      <summary>Идентифицирует уровень достоверности, назначенный подписи манифеста.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.TrustStatus.Untrusted">
      <summary>Подпись 
                    создана издателем, не входящим в список надежных.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.TrustStatus.UnknownIdentity">
      <summary>Неизвестная идентификация и недопустимая подпись. Невозможно определить идентификацию, так как отсутствует проверенная подпись.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.TrustStatus.KnownIdentity">
      <summary>Известная идентификация и допустимая подпись. Идентификацию обеспечивает допустимая подпись Authenticode.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.TrustStatus.Trusted">
      <summary>Подпись создана явно доверенным издателем и является допустимой.</summary>
    </member>
    <member name="T:System.Threading.LockRecursionException">
      <summary>Исключение генерируется, когда рекурсивная запись блокировки не совпадает с рекурсивной политикой блокировки.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.LockRecursionException.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Threading.LockRecursionException" /> с системным сообщением, содержащим описание ошибки.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.LockRecursionException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Threading.LockRecursionException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Threading.LockRecursionException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения. Вызывающему объекту этого конструктора необходимо убедиться, что эта строка локализована для текущего языка и региональных параметров системы. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.LockRecursionException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Threading.LockRecursionException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, ставшее причиной данного исключения.</summary>
      <param name="message">Сообщение с описанием исключения. Вызывающему объекту этого конструктора необходимо убедиться, что эта строка локализована для текущего языка и региональных параметров системы. </param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение генерируется в блоке catch, обрабатывающем внутреннее исключение. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Threading.LockRecursionPolicy">
      <summary>Указывает, можно ли несколько раз войти в блокировку из одного и того же потока.</summary>
    </member>
    <member name="F:System.Threading.LockRecursionPolicy.NoRecursion">
      <summary>Если поток пытается войти в блокировку рекурсивно, выдается ошибка. Некоторые классы могут допускать определенные виды рекурсий при активированном параметре. </summary>
    </member>
    <member name="F:System.Threading.LockRecursionPolicy.SupportsRecursion">
      <summary>Допускается рекурсивный вход потока в блокировку. Некоторые классы могут игнорировать эту возможность. </summary>
    </member>
    <member name="T:System.Threading.ReaderWriterLockSlim">
      <summary>
                    Представляет блокировку, используемую для управления доступом к ресурсу, которая позволяет нескольким потокам производить считывание или получать монопольный доступ на запись.
                </summary>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.#ctor">
      <summary>
                    Инициализирует новый экземпляр класса <see cref="T:System.Threading.ReaderWriterLockSlim" />, используя значения свойств по умолчанию.
                </summary>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.#ctor(System.Threading.LockRecursionPolicy)">
      <summary>
                    Инициализирует новый экземпляр класса <see cref="T:System.Threading.ReaderWriterLockSlim" /> с указанием политики рекурсии блокировки.
                </summary>
      <param name="recursionPolicy">
                    Одно из значений перечисления, определяющее политику рекурсии блокировки. 
                </param>
    </member>
    <member name="P:System.Threading.ReaderWriterLockSlim.CurrentReadCount">
      <summary>
                    Возвращает общее количество уникальных потоков, вошедших в блокировку в режиме чтения.
                </summary>
      <returns>
                    Количество уникальных потоков, вошедших в блокировку в режиме чтения.
                </returns>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.Dispose">
      <summary>
                    Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Threading.ReaderWriterLockSlim" />.
                </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.EnterReadLock">
      <summary>
                    Пытается выполнить вход в блокировку в режиме чтения.
                </summary>
      <exception cref="T:System.Threading.LockRecursionException">
                    Свойство <see cref="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" /> имеет значение <see cref="F:System.Threading.LockRecursionPolicy.NoRecursion" />, а текущий поток уже вошел в режим чтения. 
                
                    -или-
                
                    Глубина рекурсии превышает емкость счетчика. Ограничение допускает настолько большое число рекурсивных вхождений, что оно не должно достигаться приложениями на практике.
                </exception>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.EnterUpgradeableReadLock">
      <summary>
                    Пытается выполнить вход в блокировку в обновляемом режиме.
                </summary>
      <exception cref="T:System.Threading.LockRecursionException">
                    Свойство <see cref="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" /> имеет значение <see cref="F:System.Threading.LockRecursionPolicy.NoRecursion" />, а текущий поток уже вошел в блокировку в любом из режимов. 
                
                    -или-
                
                    Текущий поток вошел в режим чтения, поэтому попытка войти в обновляемый режим создаст возможность взаимоблокировки. 
                
                    -или-
                
                    Глубина рекурсии превышает емкость счетчика. Ограничение допускает настолько большое число рекурсивных вхождений, что оно не должно достигаться приложениями на практике.
                </exception>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.EnterWriteLock">
      <summary>
                    Пытается выполнить вход в блокировку в режиме записи.
                </summary>
      <exception cref="T:System.Threading.LockRecursionException">
                    Свойство <see cref="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" /> имеет значение <see cref="F:System.Threading.LockRecursionPolicy.NoRecursion" />, а текущий поток уже вошел в блокировку в любом из режимов. 
                
                    -или-
                
                    Текущий поток вошел в режим чтения, поэтому попытка войти в блокировку в обновляемом режиме создаст риск взаимоблокировки. 
                
                    -или-
                
                    Глубина рекурсии превышает емкость счетчика. Ограничение допускает настолько большое число рекурсивных вхождений, что оно не должно достигаться приложениями на практике.
                </exception>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.ExitReadLock">
      <summary>
                    Уменьшает счетчик глубины рекурсии для режима чтения, и выходит из режима чтения, если значение счетчик принял значение 0 (нуль).
                </summary>
      <exception cref="T:System.Threading.SynchronizationLockException">
                    Текущий поток не вошел в блокировку в режиме чтения.
                </exception>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.ExitUpgradeableReadLock">
      <summary>
                    Уменьшает счетчик глубины рекурсии для обновляемого режима, и выходит из обновляемого режима, если счетчик принял значение 0 (нуль).
                </summary>
      <exception cref="T:System.Threading.SynchronizationLockException">
                    Текущий поток не вошел в блокировку в обновляемом режиме.
                </exception>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.ExitWriteLock">
      <summary>
                    Уменьшает счетчик глубины рекурсии для режима записи, и выходит из режима записи, если счетчик принял значение 0 (нуль).
                </summary>
      <exception cref="T:System.Threading.SynchronizationLockException">
                    Текущий поток не вошел в блокировку в режиме записи.
                </exception>
    </member>
    <member name="P:System.Threading.ReaderWriterLockSlim.IsReadLockHeld">
      <summary>
                    Возвращает значение, указывающее, вошел ли текущий поток в блокировку в режиме чтения.
                </summary>
      <returns>
                    Значение true, если текущий поток вошел в режим чтения, в противном случае – false.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Threading.ReaderWriterLockSlim.IsUpgradeableReadLockHeld">
      <summary>
                    Возвращает значение, указывающее, вошел ли текущий поток в блокировку в обновляемом режиме. 
                </summary>
      <returns>
                    Значение true, если текущий поток вошел в обновляемый режим, противном случае – false.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Threading.ReaderWriterLockSlim.IsWriteLockHeld">
      <summary>
                    Возвращает значение, указывающее, вошел ли текущий поток в блокировку в режиме записи.
                </summary>
      <returns>
                    Значение true, если текущий поток вошел в режим записи, в противном случае – false.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy">
      <summary>
                    Возвращает значение, указывающее политику рекурсии для текущего объекта <see cref="T:System.Threading.ReaderWriterLockSlim" />.
                </summary>
      <returns>
                    Одно из значений перечисления, определяющее политику рекурсии блокировки.
                </returns>
    </member>
    <member name="P:System.Threading.ReaderWriterLockSlim.RecursiveReadCount">
      <summary>
                    Возвращает количество раз, которые текущий поток входил в блокировку в режиме чтения, как показатель рекурсии.
                </summary>
      <returns>
                    0 (нуль), если текущий поток не вошел в режим чтения, 1, если поток вошел в режим чтения, но не вошел в него рекурсивно, или n, если поток вошел в блокировку рекурсивно n - 1 раз.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Threading.ReaderWriterLockSlim.RecursiveUpgradeCount">
      <summary>
                    Возвращает количество раз, которые текущий поток входил в блокировку в обновляемом режиме, как показатель рекурсии.
                </summary>
      <returns>
                    0 (нуль), если текущий поток не вошел в обновляемый режим, 1, если поток вошел в обновляемый режим, но не вошел в него рекурсивно, или n, если поток вошел в обновляемый режим рекурсивно n - 1 раз.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Threading.ReaderWriterLockSlim.RecursiveWriteCount">
      <summary>
                    Возвращает количество раз, которые текущий поток входил в блокировку в режиме записи, как показатель рекурсии.
                </summary>
      <returns>
                    0 (нуль), если текущий поток, не вошел в режим записи, 1, если поток вошел в режим записи, но не вошел в него рекурсивно, или n, если поток вошел в режим записи рекурсивно n - 1 раз.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.Int32)">
      <summary>
                    Пытается войти в блокировку в режиме чтения с необязательным указанием времени ожидания целым числом.
                </summary>
      <returns>
                    Значение true, если вызывающий поток вошел в режим чтения, иначе — false.
                </returns>
      <param name="millisecondsTimeout">
                    Время ожидания в миллисекундах или -1 (<see cref="F:System.Threading.Timeout.Infinite" />) для неограниченного времени ожидания.
                </param>
      <exception cref="T:System.Threading.LockRecursionException">
                    Свойство <see cref="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" /> имеет значение <see cref="F:System.Threading.LockRecursionPolicy.NoRecursion" />, а текущий поток уже вошел в блокировку. 
                
                    -или-
                
                    Глубина рекурсии превышает емкость счетчика. Ограничение допускает настолько большое число рекурсивных вхождений, что оно не должно достигаться приложениями на практике.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="millisecondsTimeout" /> отрицательное, но не равно <see cref="F:System.Threading.Timeout.Infinite" /> (-1), которое является единственным допустимым отрицательным значением. 
                </exception>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.TimeSpan)">
      <summary>
                    Пытается войти в блокировку в режиме чтения с необязательным указанием времени ожидания.
                </summary>
      <returns>
                    Значение true, если вызывающий поток вошел в режим чтения, иначе — false.
                </returns>
      <param name="timeout">
                    Период ожидания или значение -1 миллисекунда для ожидания неограниченное время. 
                </param>
      <exception cref="T:System.Threading.LockRecursionException">
                    Свойство <see cref="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" /> имеет значение <see cref="F:System.Threading.LockRecursionPolicy.NoRecursion" />, а текущий поток уже вошел в блокировку. 
                
                    -или-
                
                    Глубина рекурсии превышает емкость счетчика. Ограничение допускает настолько большое число рекурсивных вхождений, что оно не должно достигаться приложениями на практике.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="timeout" /> отрицательное, но оно не равно -1 миллисекунде, которое является единственным допустимым отрицательным значением.
                
                    -или-
                
                    Значение <paramref name="timeout" /> больше <see cref="F:System.Int32.MaxValue" /> миллисекунд. 
                </exception>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.Int32)">
      <summary>
                    Пытается войти в блокировку в обновляемом режиме с необязательным указанием времени ожидания.
                </summary>
      <returns>
                    Значение true, если вызывающий поток вошел в обновляемый режим, иначе — false.
                </returns>
      <param name="millisecondsTimeout">
                    Время ожидания в миллисекундах или -1 (<see cref="F:System.Threading.Timeout.Infinite" />) для неограниченного времени ожидания.
                </param>
      <exception cref="T:System.Threading.LockRecursionException">
                    Свойство <see cref="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" /> имеет значение <see cref="F:System.Threading.LockRecursionPolicy.NoRecursion" />, а текущий поток уже вошел в блокировку. 
                
                    -или-
                
                    Текущий поток изначально вошел в блокировку в режиме чтения, поэтому попытка войти в обновляемый режим создаст возможность взаимоблокировки. 
                
                    -или-
                
                    Глубина рекурсии превышает емкость счетчика. Ограничение допускает настолько большое число рекурсивных вхождений, что оно не должно достигаться приложениями на практике.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="millisecondsTimeout" /> отрицательное, но не равно <see cref="F:System.Threading.Timeout.Infinite" /> (-1), которое является единственным допустимым отрицательным значением. 
                </exception>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.TimeSpan)">
      <summary>
                    Пытается войти в блокировку в обновляемом режиме с необязательным указанием времени ожидания.
                </summary>
      <returns>
                    Значение true, если вызывающий поток вошел в обновляемый режим, иначе — false.
                </returns>
      <param name="timeout">
                    Период ожидания или значение -1 миллисекунда для ожидания неограниченное время.
                </param>
      <exception cref="T:System.Threading.LockRecursionException">
                    Свойство <see cref="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" /> имеет значение <see cref="F:System.Threading.LockRecursionPolicy.NoRecursion" />, а текущий поток уже вошел в блокировку. 
                
                    -или-
                
                    Текущий поток изначально вошел в блокировку в режиме чтения, поэтому попытка войти в обновляемый режим создаст возможность взаимоблокировки. 
                
                    -или-
                
                    Глубина рекурсии превышает емкость счетчика. Ограничение допускает настолько большое число рекурсивных вхождений, что оно не должно достигаться приложениями на практике.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="timeout" /> отрицательное, но оно не равно -1 миллисекунде, которое является единственным допустимым отрицательным значением.
                
                    -или-
                
                    Значение <paramref name="timeout" /> больше <see cref="F:System.Int32.MaxValue" /> миллисекунд. 
                </exception>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.Int32)">
      <summary>
                    Пытается войти в блокировку в режиме записи с необязательным указанием времени ожидания.
                </summary>
      <returns>
                    Значение true, если вызывающий поток вошел в режим записи, иначе — false.
                </returns>
      <param name="millisecondsTimeout">
                    Время ожидания в миллисекундах или -1 (<see cref="F:System.Threading.Timeout.Infinite" />) для неограниченного времени ожидания.
                </param>
      <exception cref="T:System.Threading.LockRecursionException">
                    Свойство <see cref="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" /> имеет значение <see cref="F:System.Threading.LockRecursionPolicy.NoRecursion" />, а текущий поток уже вошел в блокировку. 
                
                    -или-
                
                    Текущий поток изначально вошел в блокировку в режиме чтения, поэтому попытка войти в режим записи создаст возможность взаимоблокировки. 
                
                    -или-
                
                    Глубина рекурсии превышает емкость счетчика. Ограничение допускает настолько большое число рекурсивных вхождений, что оно не должно достигаться приложениями на практике.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="millisecondsTimeout" /> отрицательное, но не равно <see cref="F:System.Threading.Timeout.Infinite" /> (-1), которое является единственным допустимым отрицательным значением. 
                </exception>
    </member>
    <member name="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.TimeSpan)">
      <summary>
                    Пытается войти в блокировку в режиме записи с необязательным указанием времени ожидания.
                </summary>
      <returns>
                    Значение true, если вызывающий поток вошел в режим записи, иначе — false.
                </returns>
      <param name="timeout">
                    Период ожидания или значение -1 миллисекунда для ожидания неограниченное время.
                </param>
      <exception cref="T:System.Threading.LockRecursionException">
                    Свойство <see cref="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" /> имеет значение <see cref="F:System.Threading.LockRecursionPolicy.NoRecursion" />, а текущий поток уже вошел в блокировку. 
                
                    -или-
                
                    Текущий поток изначально вошел в блокировку в режиме чтения, поэтому попытка войти в режим записи создаст возможность взаимоблокировки. 
                
                    -или-
                
                    Глубина рекурсии превышает емкость счетчика. Ограничение допускает настолько большое число рекурсивных вхождений, что оно не должно достигаться приложениями на практике.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                    Значение параметра <paramref name="timeout" /> отрицательное, но оно не равно -1 миллисекунде, которое является единственным допустимым отрицательным значением.
                
                    -или-
                
                    Значение <paramref name="timeout" /> больше <see cref="F:System.Int32.MaxValue" /> миллисекунд. 
                </exception>
    </member>
    <member name="P:System.Threading.ReaderWriterLockSlim.WaitingReadCount">
      <summary>
                    Возвращает общее количество потоков, ожидающих вхождения в блокировку в режиме чтения.
                </summary>
      <returns>
                    Общее количество потоков, ожидающих вхождения в режим чтения.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Threading.ReaderWriterLockSlim.WaitingUpgradeCount">
      <summary>
                    Возвращает общее количество потоков, ожидающих входа в блокировку в обновляемом режиме.
                </summary>
      <returns>
                    Общее количество потоков, ожидающих входа в обновляемый режим.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Threading.ReaderWriterLockSlim.WaitingWriteCount">
      <summary>
                    Возвращает общее количество потоков, ожидающих входа в блокировку в режиме записи.
                </summary>
      <returns>
                    Общее количество потоков, ожидающих входа в режим записи.
                </returns>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>