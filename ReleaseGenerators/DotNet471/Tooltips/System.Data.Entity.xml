<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Entity</name>
  </assembly>
  <members>
    <member name="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged">
      <summary>
              Происходит, если изменяется связанный элемент.
            </summary>
    </member>
    <member name="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanged">
      <summary>
              Происходит при изменении значения свойства.
            </summary>
    </member>
    <member name="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanging">
      <summary>
              Происходит, если изменение значения свойства находится на этапе выполнения.
            </summary>
    </member>
    <member name="E:System.Data.Objects.ObjectContext.ObjectMaterialized">
      <summary>
              Возникает при создании нового объекта сущности на основании данных в источнике данных в составе операции загрузки или запроса.
            </summary>
    </member>
    <member name="E:System.Data.Objects.ObjectContext.SavingChanges">
      <summary>
              Происходит при сохранении изменений в источник данных.
            </summary>
    </member>
    <member name="E:System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged">
      <summary>
              Событие происходит при добавлении или удалении сущностей из диспетчера состояний.
            </summary>
    </member>
    <member name="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition">
      <summary>
              Значение для передачи GetInformation для получения ConceptualSchemaDefinitionVersion.
            </summary>
    </member>
    <member name="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3">
      <summary>
              Значение для передачи GetInformation для получения ConceptualSchemaDefinitionVersion3.
            </summary>
    </member>
    <member name="F:System.Data.Common.DbProviderManifest.StoreSchemaDefinition">
      <summary>
              Значение для передачи GetInformation для получения StoreSchemaDefinitionVersion.
            </summary>
    </member>
    <member name="F:System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3">
      <summary>
              Значение для передачи GetInformation для получения StoreSchemaDefinitionVersion3.
            </summary>
    </member>
    <member name="F:System.Data.Common.DbProviderManifest.StoreSchemaMapping">
      <summary>
              Значение для передачи GetInformation для получения StoreSchemaMappingVersion.
            </summary>
    </member>
    <member name="F:System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3">
      <summary>
              Значение для передачи GetInformation для получения StoreSchemaMappingVersion3.
            </summary>
    </member>
    <member name="F:System.Data.EntityClient.EntityProviderFactory.Instance">
      <summary>
              Данный экземпляр <see cref="T:System.Data.EntityClient.EntityProviderFactory" />.
            </summary>
    </member>
    <member name="F:System.Data.EntityKey.EntityNotValidKey">
      <summary>
              Простой ключ <see cref="T:System.Data.EntityKey" />, определяющий сущность, полученную после неудачной операции TREAT.
            </summary>
    </member>
    <member name="F:System.Data.EntityKey.NoEntitySetKey">
      <summary>
              Одноэлементный ключ <see cref="T:System.Data.EntityKey" />, по которому определяется сущность, доступная только для чтения.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported">
      <summary>
              Представляет собой наиболее новую версию модели EDM, поддерживаемую платформой времени выполнения Entity Framework.
            </summary>
    </member>
    <member name="F:System.Data.Objects.DataClasses.StructuralObject.EntityKeyPropertyName">
      <summary>
              Константа с этим именем используется для отслеживания.
            </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbAndExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbAndExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbApplyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCaseExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor." />
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCastExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCastExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor." />
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbComparisonExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor." />
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbConstantExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor." />
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor." />
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbDerefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor." />
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbDistinctExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor." />
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbElementExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbElementExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor." />
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbEntityRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor." />
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExceptExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor." />
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <typeparam name="TResultType">
                Тип результата, созданного посетителем.
              </typeparam>
      <returns>
              Тип результата, формируемого <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.Object" /> равен текущему экземпляру DbExpression.
            </summary>
      <param name="obj">
                Объект, сравниваемый с текущим <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
              </param>
      <returns>
              <see langword="True" /> Если указанный <see cref="T:System.Object" /> равен текущему экземпляру DbExpression; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанный двоичного значения, которое может быть null
            </summary>
      <param name="value">
                Двоичное значение, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанный двоичное значение.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий заданное логическое значение (значение NULL).
            </summary>
      <param name="value">
                Логическое значение, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий заданное логическое значение.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий значение указанного байтового (значения null).
            </summary>
      <param name="value">
                Байтовое значение, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий значение заданного типа byte.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющее указанный (пустой) <see cref="T:System.DateTime" /> значение.
            </summary>
      <param name="value">
                Значение типа DateTime, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанное значение даты и времени.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющее указанный (пустой) <see cref="T:System.DateTimeOffset" /> значение.
            </summary>
      <param name="value">
                Значение DateTimeOffset, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанное значение DateTimeOffset.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанного десятичного значения (значение NULL).
            </summary>
      <param name="value">
                Десятичное значение, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанного десятичного значения.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанного (значения null) значения двойной точности.
            </summary>
      <param name="value">
                Значение типа double, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий значение заданного типа double.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющее указанный <see cref="T:System.Data.Spatial.DbGeography" /> значение, которое может принимать значение null.
            </summary>
      <param name="value">
                Значение DbGeography, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий заданное значение DbGeography.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющее указанный <see cref="T:System.Data.Spatial.DbGeometry" /> значение, которое может принимать значение null.
            </summary>
      <param name="value">
                Значение DbGeometry, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий заданное значение DbGeometry.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющее указанный (пустой) <see cref="T:System.Guid" /> значение.
            </summary>
      <param name="value">
                Значение Guid, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанное значение Guid.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий значение Int16 заданного (значения null).
            </summary>
      <param name="value">
                Значение Int16, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанное значение Int16.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанное значение Int32 (допускающие значение NULL).
            </summary>
      <param name="value">
                Значение Int32, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанное значение Int32.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий значение Int64 заданного (значения null).
            </summary>
      <param name="value">
                Значение типа Int64, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанное значение типа Int64.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанное значение одного (значения null).
            </summary>
      <param name="value">
                Одно значение, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий указанный одно значение.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.FromString(System.String)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий заданное строковое значение.
            </summary>
      <param name="value">
                Строковое значение, на котором должно основываться возвращаемое выражение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий заданное строковое значение.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.GetHashCode">
      <summary>
              Служит в качестве хэш-функции для типа.
            </summary>
      <returns>
              Хэш-код для текущего выражения.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует массив 8-разрядное целое число без знака <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
            </summary>
      <param name="value">
                Массив 8-разрядное целое число без знака.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий преобразованный массив 8-разрядное целое число без знака.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует объект DbGeography <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Объект DbGeography.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий преобразованный объект DbGeography.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует объект DbGeometry <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Объект DbGeometry.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий преобразованный объект DbGeography.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует объект Boolean допускает значение NULL для <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Объект Boolean допускает значения NULL.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий преобразованный объект Boolean допускает значения NULL.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует значение NULL 8-разрядное целое число без знака для <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Допускающие значения NULL 8-разрядное целое число без знака.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий преобразованное 8-разрядное целое число без знака.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует допускающее <see cref="T:System.DateTime" /> объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.DateTime" /> объекта.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий <see cref="T:System.DateTime" /> объекта.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует допускающее <see cref="T:System.DateTimeOffset" /> объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.DateTime" /> объекта.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий nullable <see cref="T:System.DateTime" /> объекта.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует допускающее <see cref="T:System.Decimal" /> объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Decimal" /> объекта.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий nullable <see cref="T:System.Decimal" /> объекта.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует допускающее <see cref="T:System.Double" /> объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Double" /> объекта.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий nullable <see cref="T:System.Double" /> объекта.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует допускающее <see cref="T:System.Guid" /> объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Допускающее <see cref="T:System.Guid" /> объекта.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий nullable <see cref="T:System.Guid" /> объекта.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует значение NULL 16-разрядное целое число без знака для <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Допускающие значения NULL 16-разрядное целое число без знака.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий nullable 16-разрядное целое число без знака.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует допускает значения NULL 32-разрядное целое число без знака для <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Допускающие значения NULL 32-разрядное целое число без знака.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий nullable 32-разрядное целое число без знака.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует допускает значения NULL 64-разрядное целое число без знака для <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Допускающие значения NULL 64-разрядное целое число без знака.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий nullable 64-разрядное целое число без знака.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует значение NULL число с плавающей запятой одиночной точности в <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Число с плавающей запятой одиночной точности.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляет число с плавающей запятой одиночной точности.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Упорядоченная коллекция символов Юникода, преобразует <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="value">
                Упорядоченная коллекция символов Юникода.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляет упорядоченную коллекцию символов Юникода.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              В случае переопределения в производном классе обрабатывает все выражения неизвестного типа.
            </summary>
      <param name="expression">
                Обрабатываемое выражение.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />.
            </summary>
      <param name="expression">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />, который был посещен.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />.
            </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              В случае переопределения в производном классе обрабатывает все выражения неизвестного типа.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
      <summary>
              При переопределении в производном классе реализует метод шаблона посетителя для <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
      <summary>
              В случае переопределения в производном классе реализует шаблон «Посетитель» для <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />.
            </summary>
      <param name="expression">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />, посещение которого выполняется.
              </param>
      <returns>
              Результирующее значение определенного типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbFunctionExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIntersectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbIsOfExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbJoinExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с заданной реализацией встроенной лямбда-функции и формальными параметрами.
            </summary>
      <param name="body">
                Выражение, определяющее логику лямбда-функции.
              </param>
      <param name="variables">
                   Коллекция <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />, представляющая формальные параметры для лямбда-функции.
                    Эти переменные можно использовать в выражении body.
              </param>
      <returns>
              Новое выражение DbLambda, описывающее встроенную лямбда-функцию с указанным выражением body и формальными параметрами.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  переменные
                  body
                </exception>
      <exception cref="T:System.ArgumentException">
                  переменные
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с заданной реализацией встроенной лямбда-функции и формальными параметрами.
            </summary>
      <param name="body">
                Выражение, определяющее логику лямбда-функции.
              </param>
      <param name="variables">
                   Коллекция <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />, представляющая формальные параметры для лямбда-функции.
                    Эти переменные можно использовать в выражении body.
              </param>
      <returns>
              Новое выражение DbLambda, описывающее встроенную лямбда-функцию с указанным выражением body и формальными параметрами.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  переменные
                  body
                </exception>
      <exception cref="T:System.ArgumentException">
                  переменные
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="argument6Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM шестого аргумента лямбда-функция
              </param>
      <param name="argument7Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM седьмого аргумента лямбда-функция
              </param>
      <param name="argument8Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип восьмого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument9Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип девятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument10Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип десятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument11Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип одиннадцатого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument12Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип двенадцатого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument13Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип модели EDM тринадцатый аргумент для лямбда-функция
              </param>
      <param name="argument14Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип модели EDM четырнадцатый аргумент для лямбда-функция
              </param>
      <param name="argument15Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятнадцатого аргумента лямбда-функция
              </param>
      <param name="argument16Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип модели EDM шестнадцатый аргумент для лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  argument6Type
                  argument7Type
                  argument8Type
                  argument9Type
                  argument10Type
                  argument11Type
                  argument12Type
                  argument13Type
                  argument14Type
                  argument15Type
                  argument16Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="argument6Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM шестого аргумента лямбда-функция
              </param>
      <param name="argument7Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM седьмого аргумента лямбда-функция
              </param>
      <param name="argument8Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип восьмого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument9Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип девятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument10Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип десятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument11Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип одиннадцатого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument12Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип двенадцатого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument13Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип модели EDM тринадцатый аргумент для лямбда-функция
              </param>
      <param name="argument14Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип модели EDM четырнадцатый аргумент для лямбда-функция
              </param>
      <param name="argument15Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятнадцатого аргумента лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  argument6Type
                  argument7Type
                  argument8Type
                  argument9Type
                  argument10Type
                  argument11Type
                  argument12Type
                  argument13Type
                  argument14Type
                  argument15Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="argument6Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM шестого аргумента лямбда-функция
              </param>
      <param name="argument7Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM седьмого аргумента лямбда-функция
              </param>
      <param name="argument8Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип восьмого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument9Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип девятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument10Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип десятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument11Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип одиннадцатого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument12Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип двенадцатого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument13Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип модели EDM тринадцатый аргумент для лямбда-функция
              </param>
      <param name="argument14Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип модели EDM четырнадцатый аргумент для лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  argument6Type
                  argument7Type
                  argument8Type
                  argument9Type
                  argument10Type
                  argument11Type
                  argument12Type
                  argument13Type
                  argument14Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="argument6Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM шестого аргумента лямбда-функция
              </param>
      <param name="argument7Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM седьмого аргумента лямбда-функция
              </param>
      <param name="argument8Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип восьмого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument9Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип девятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument10Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип десятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument11Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип одиннадцатого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument12Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип двенадцатого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument13Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип модели EDM тринадцатый аргумент для лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  argument6Type
                  argument7Type
                  argument8Type
                  argument9Type
                  argument10Type
                  argument11Type
                  argument12Type
                  argument13Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="argument6Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM шестого аргумента лямбда-функция
              </param>
      <param name="argument7Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM седьмого аргумента лямбда-функция
              </param>
      <param name="argument8Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип восьмого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument9Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип девятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument10Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип десятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument11Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип одиннадцатого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument12Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип двенадцатого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  argument6Type
                  argument7Type
                  argument8Type
                  argument9Type
                  argument10Type
                  argument11Type
                  argument12Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="argument6Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM шестого аргумента лямбда-функция
              </param>
      <param name="argument7Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM седьмого аргумента лямбда-функция
              </param>
      <param name="argument8Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип восьмого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument9Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип девятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument10Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип десятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument11Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип одиннадцатого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  argument6Type
                  argument7Type
                  argument8Type
                  argument9Type
                  argument10Type
                  argument11Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="argument6Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM шестого аргумента лямбда-функция
              </param>
      <param name="argument7Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM седьмого аргумента лямбда-функция
              </param>
      <param name="argument8Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип восьмого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument9Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип девятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument10Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип десятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  argument6Type
                  argument7Type
                  argument8Type
                  argument9Type
                  argument10Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="argument6Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM шестого аргумента лямбда-функция
              </param>
      <param name="argument7Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM седьмого аргумента лямбда-функция
              </param>
      <param name="argument8Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип восьмого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument9Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип девятого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  argument6Type
                  argument7Type
                  argument8Type
                  argument9Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="argument6Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM шестого аргумента лямбда-функция
              </param>
      <param name="argument7Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM седьмого аргумента лямбда-функция
              </param>
      <param name="argument8Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип восьмого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  argument6Type
                  argument7Type
                  argument8Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="argument6Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM шестого аргумента лямбда-функция
              </param>
      <param name="argument7Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM седьмого аргумента лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  argument6Type
                  argument7Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="argument6Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM шестого аргумента лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  argument6Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="argument5Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM пятого аргумента лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  argument5Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="argument4Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM четвертого аргумента лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  argument4Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="argument3Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM третьего аргумента лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  argument3Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с аргументами указанных типов, в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип первого аргумента в модели EDM для лямбда-функция
              </param>
      <param name="argument2Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяет тип модели EDM второго аргумента лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  argument2Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambda.Create(System.Data.Metadata.Edm.TypeUsage,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с одним аргументом указанного типа в соответствии с указанной функции.
            </summary>
      <param name="argument1Type">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> определяющий тип аргумента в модели EDM для лямбда-функция
              </param>
      <param name="lambdaFunction">
                Функция, которая определяет логику как лямбда-функция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и один формальный параметр.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  argument1Type
                  lambdaFunction
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Метод шаблона посетителя для посетителей-выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="visitor" /> имеет значение null
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLambdaExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Метод шаблона посетителя для посетителей-выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного объекта <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> создает результат типа TResultType.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />
              </typeparam>
      <returns>
              Тип результата, формируемого посетитель выражения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="visitor" /> имеет значение null
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNotExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNotExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbOrExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbOrExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbProjectExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.op_Implicit(System.Data.Common.CommandTrees.DbPropertyExpression)~System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}">
      <summary>
              Создает новую пару ключ значение на основе этого выражения свойства.
            </summary>
      <param name="value">
                Это выражение свойства.
              </param>
      <returns>
              Пара ключ значение с ключом и значением производным от <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.ToKeyValuePair">
      <summary>
              Создает новую пару ключ значение на основе этого выражения свойства.
            </summary>
      <returns>
              Пара ключ значение с ключом и значением производным от <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRefExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRefExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRefKeyExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbScanExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbScanExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbSkipExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbSortExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbSortExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbTreatExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbUnionAllExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение.
            </summary>
      <param name="visitor">
                Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
      <summary>
              Реализует шаблон «Посетитель» для выражений, возвращающих результирующее значение определенного типа.
            </summary>
      <param name="visitor">
                Экземпляр типизированного выражения <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, возвращающего результирующее значение определенного типа.
              </param>
      <typeparam name="TResultType">
                Тип результата, формируемого <paramref name="visitor" />.
              </typeparam>
      <returns>
              Результирующее значение определенного типа, возвращаемое выражением <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="visitor" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor" />.
            </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
      <summary>
              Представляет событие при вводе область посетитель выражения с переменными в указанной области.
            </summary>
      <param name="scopeVariables">
                Коллекция переменных области действия.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope">
      <summary>
              Выход из области для выражения посетителя.
            </summary>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Заменяет старое выражение новую посетитель выражения.
            </summary>
      <param name="oldExpression">
                Старое выражение.
              </param>
      <param name="newExpression">
                Новое выражение.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
      <summary>
              Представляет событие, когда повторно привязываются переменной для выражения посетителя.
            </summary>
      <param name="fromVarRef">
                Расположение переменной.
              </param>
      <param name="toVarRef">
                Справочник по переменной, где он rebounded.
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
      <summary>
              Реализует шаблон «Посетитель» для выражения логического и.
            </summary>
      <param name="expression">
                Выражение логического и.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
      <summary>
              Реализует шаблон «Посетитель» для вызова заданной функции для каждого элемента заданного входного набора.
            </summary>
      <param name="expression">
                ПРИМЕНИТЬ выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
      <summary>
              Реализует шаблон «Посетитель» для арифметической операции применяется к двум числовым аргументам.
            </summary>
      <param name="expression">
                Арифметическое выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
      <summary>
              Реализует шаблон «Посетитель» для When, Then и Else предложений.
            </summary>
      <param name="expression">
                Выражение case.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
      <summary>
              Реализует шаблон «Посетитель» для преобразования типа одного аргумента в указанный тип.
            </summary>
      <param name="expression">
                Выражение явного приведения.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
      <summary>
              Реализует шаблон «Посетитель» для операции сравнения применяемую к двум аргументам.
            </summary>
      <param name="expression">
                Выражение явного приведения.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
      <summary>
              Реализует шаблон «Посетитель» для константы различных видов.
            </summary>
      <param name="expression">
                Константное выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
      <summary>
              Реализует шаблон «Посетитель» для безусловную операцию соединения между указанными параметрами коллекции.
            </summary>
      <param name="expression">
                Выражение объединения.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
      <summary>
              Реализует шаблон «Посетитель» для выражения, которое извлекает сущность на основе указанной ссылки.
            </summary>
      <param name="expression">
                DEREF выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
      <summary>
              Реализует шаблон «Посетитель» для удаленных повторяющиеся элементы из набора, заданного аргументом.
            </summary>
      <param name="expression">
                Distinct выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
      <summary>
              Реализует шаблон «Посетитель» для преобразования аргумента указанного набора в одноэлементный преобразование аргумента указанного набора в одноэлементный.
            </summary>
      <param name="expression">
                Выражение элемента.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
      <summary>
              Реализует шаблон «Посетитель» для выражений, которое извлекает ссылку из базового экземпляра сущности.
            </summary>
      <param name="expression">
                Выражение со ссылкой сущности.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
      <summary>
              Реализует шаблон «Посетитель» для операцию вычитания наборов между левым и правым операндами.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Реализует шаблон «Посетитель» для использования основных функций, которые требуются типам выражений.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
      <summary>
              Реализует шаблон «Посетитель» для предикат, применяемый для фильтрации входного набора.
            </summary>
      <param name="expression">
                Выражение фильтра.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
      <summary>
              Реализует шаблон «Посетитель» для вызова функции.
            </summary>
      <param name="expression">
                Выражение функции.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
      <summary>
              Реализует шаблон «Посетитель» для группы операцией.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
      <summary>
              Реализует шаблон «Посетитель» для операцию пересечения наборов между левым и правым операндами.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
      <summary>
              Реализует шаблон «Посетитель» для определения пустого набора, примененное к аргументу одного набора.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
      <summary>
              Реализует шаблон «Посетитель» для определения null применяется к одному аргументу.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
      <summary>
              Реализует шаблон «Посетитель» для сравнение типа единственного аргумента с указанным типом.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
      <summary>
              Реализует посетителя шаблон для внутреннего, левого внешнего или операции полного внешнего соединения между указанными параметрами коллекции при указанном условии соединения.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
      <summary>
              Реализует шаблон «Посетитель» для приложения лямбда-функции аргументы, представленные объектов DbExpression.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
      <summary>
              Реализует шаблон «Посетитель» для сравнение строки с указанным шаблоном с необязательной экранирующей строкой.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
      <summary>
              Реализует шаблон «Посетитель» для ограничения числа элементов в коллекции аргументов, соответствующее указанному значению предела.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
      <summary>
              Реализует шаблон «Посетитель» для создания нового экземпляра определенного типа, включая типы набора и записи.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
      <summary>
              Реализует шаблон «Посетитель» для логического не из одного аргумента типа Boolean.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
      <summary>
              Реализует шаблон «Посетитель» для ссылки на типизированный литерал null.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
      <summary>
              Реализует шаблон «Посетитель» для получения элементов указанного типа из заданного аргумента набора.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
      <summary>
              Реализует шаблон «Посетитель» для логического или с двумя аргументами типа Boolean.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
      <summary>
              Реализует шаблон «Посетитель» для ссылки на параметр объявлен в дерево команд, которое содержит это выражение.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
      <summary>
              Реализует шаблон «Посетитель» для проекцию заданного входного набора на указанное выражение.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
      <summary>
              Реализует шаблон «Посетитель» для получения свойства экземпляра.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
      <summary>
              Реализует шаблон «Посетитель» для операцию с квантором заданного типа над элементами указанного набора входных данных.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
      <summary>
              Реализует шаблон «Посетитель» для строго типизированную ссылку на определенный экземпляр в пределах сущности набора.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
      <summary>
              Реализует шаблон «Посетитель» для получения значения ключа из базового эталонного значения.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
      <summary>
              Реализует шаблон «Посетитель» для навигации связи.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
      <summary>
              Реализует шаблон «Посетитель» для просмотра набора сущностей или отношений набора, как указано в свойстве Target.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
      <summary>
              Реализует шаблон «Посетитель» для выражения skip.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
      <summary>
              Реализует шаблон «Посетитель» для ключа сортировки, который может использоваться как часть порядка сортировки.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
      <summary>
              Реализует шаблон «Посетитель» для операцию преобразования типов, применяемую к полиморфному аргументу.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
      <summary>
              Реализует шаблон «Посетитель» для операцию объединения наборов между левым и правым операндами.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
      <summary>
              Реализует шаблон «Посетитель» для ссылки на переменную, которая в настоящее время находится в области.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Реализовано посетителя.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)">
      <summary>
              Реализует шаблон «Посетитель» для агрегатной функции.
            </summary>
      <param name="aggregate">
                Статистическая функция.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)">
      <summary>
              Реализует шаблон «Посетитель» для объекта набора.
            </summary>
      <param name="entitySet">
                Набор сущностей.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Реализует шаблон «Посетитель» для выражений.
            </summary>
      <param name="expression">
                Выражение.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
      <summary>
              Реализует шаблон «Посетитель» для выражений привязки.
            </summary>
      <param name="binding">
                Привязка выражения.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
      <summary>
              Реализует шаблон «Посетитель» для привязки списка выражений.
            </summary>
      <param name="list">
                Список выражений привязки.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Реализует шаблон «Посетитель» для списка выражений.
            </summary>
      <param name="list">
                Список выражений.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)">
      <summary>
              Реализует шаблон «Посетитель» для функции.
            </summary>
      <param name="functionMetadata">
                Метаданные функции.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)">
      <summary>
              Реализует шаблон «Посетитель» для функция aggregate.
            </summary>
      <param name="aggregate">
                Статистическая функция.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)">
      <summary>
              Реализует шаблон «Посетитель» для агрегата группы.
            </summary>
      <param name="aggregate">
                Статистическая функция.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
      <summary>
              Реализует шаблон «Посетитель» для привязки выражения группы.
            </summary>
      <param name="binding">
                Привязка.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)">
      <summary>
              Реализует шаблон «Посетитель» для лямбда-функции.
            </summary>
      <param name="lambda">
                Лямбда-функции.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)">
      <summary>
              Реализует шаблон «Посетитель» для предложения сортировки.
            </summary>
      <param name="clause">
                Предложение сортировки.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
      <summary>
              Реализует шаблон «Посетитель» для сортировки.
            </summary>
      <param name="sortOrder">
                Порядок сортировки.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)">
      <summary>
              Реализует шаблон «Посетитель» для типа.
            </summary>
      <param name="type">
                Тип.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
      <summary>
              Реализует шаблон «Посетитель» для использования типа.
            </summary>
      <param name="type">
                Тип.
              </param>
      <returns>
              Шаблон посетителя реализовано.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый экземпляр <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.
            </summary>
      <param name="function">
                Функция, определяющая статистическую операцию.
              </param>
      <param name="argument">
                Аргумент, по которому вычисляется статистическая функция.
              </param>
      <returns>
              Новая функция aggregate со ссылкой на данную функцию и аргументов.
               Агрегат функции Distinct свойство будет иметь значение <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="function" /> или <paramref name="argument" /> значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="function" /> не является агрегатной функции или имеет более одного аргумента или тип результата <paramref name="argument" /> не равен или не может быть повышен до типа параметра <paramref name="function" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> применяемый в виде distinct.
            </summary>
      <param name="function">
                Функция, определяющая статистическую операцию.
              </param>
      <param name="argument">
                Аргумент, по которому вычисляется статистическая функция.
              </param>
      <returns>
              Новая функция aggregate со ссылкой на данную функцию и аргументов.
               Агрегат функции Distinct свойство будет иметь значение <see langword="true" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="function" /> или <paramref name="argument" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="function" /> не является агрегатной функции или имеет более одного аргумента или тип результата <paramref name="argument" /> не равен или не может быть повышен до типа параметра <paramref name="function" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> определяет, содержит ли заданный предикат для всех элементов набора входных данных.
            </summary>
      <param name="source">
                Выражение, задающее входной набор.
              </param>
      <param name="predicate">
                Метод, представляющий предикат, который необходимо вычислить для каждого из элементов входного набора.
                    Этот метод должен создавать выражение с результатом логического типа, реализующее логику предиката.
              </param>
      <returns>
              Новый DbQuantifierExpression, представляющий все операции.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" /> или <paramref name="predicate" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="predicate" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" />  не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="Predicate" />  имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> определяет, содержит ли заданный предикат для всех элементов набора входных данных.
            </summary>
      <param name="input">
                Привязка выражения, задающее входной набор.
              </param>
      <param name="predicate">
                Выражение, представляющее предикат, который необходимо вычислить для каждого из элементов входного набора.
              </param>
      <returns>
              Новый DbQuantifierExpression, представляющий все операции.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="input" /> или <paramref name="predicate" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="predicate" />  не имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> выполняет логические и аргументов влево и вправо.
            </summary>
      <param name="left">
                Логическое выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Логическое выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbAndExpression с заданными аргументами.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="left" /> и <paramref name="right" />  имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> определяет, является ли набора, заданного аргументом пустым.
            </summary>
      <param name="source">
                Выражение, задающее входной набор.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> применяется новый <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> с заданным аргументом.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="source" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> определяет, содержит ли заданный предикат для любого элемента входного набора.
            </summary>
      <param name="source">
                Выражение, задающее входной набор.
              </param>
      <param name="predicate">
                Метод, представляющий предикат, который необходимо вычислить для каждого из элементов входного набора.
                 Этот метод должен создавать выражение с результатом логического типа, реализующее логику предиката.
              </param>
      <returns>
              Новый DbQuantifierExpression, представляющий любой операции.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" /> или <paramref name="predicate" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="predicate" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="predicate" /> имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> определяет, содержит ли заданный предикат для любого элемента входного набора.
            </summary>
      <param name="input">
                Привязка выражения, задающее входной набор.
              </param>
      <param name="predicate">
                Выражение, представляющее предикат, который необходимо вычислить для каждого из элементов входного набора.
              </param>
      <returns>
              Новый DbQuantifierExpression, представляющий любой операции.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="input" /> или <paramref name="predicate" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="predicate" /> имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
      <summary>
              Возвращает указанные аргументы как объект пары ключ значение.
            </summary>
      <param name="value">
                Значение в паре «ключ значение».
              </param>
      <param name="alias">
                Ключ в паре «ключ значение».
              </param>
      <returns>
              Объект пары ключ значение.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
      <summary>
              Возвращает указанные аргументы как объект пары ключ значение.
            </summary>
      <param name="value">
                Значение в паре «ключ значение».
              </param>
      <param name="alias">
                Ключ в паре «ключ значение».
              </param>
      <returns>
              Объект пары ключ значение.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> использующего сформированное имя переменной для привязки заданного выражения.
            </summary>
      <param name="input">
                Выражение для привязки.
              </param>
      <returns>
              Создать привязку выражения с указанным выражением и созданное имя переменной.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="input" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="input" /> Отсутствует результирующий набор.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> использует указанное имя переменной для привязки заданного выражения 
            </summary>
      <param name="input">
                Выражение для привязки.
              </param>
      <param name="varName">
                Имя переменной, которое должно использоваться для привязки.
              </param>
      <returns>
              Создать привязку выражения с указанным выражением и имя переменной.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="input" /> или <paramref name="varName" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="input" /> Отсутствует результирующий набор.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый экземпляр <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.
            </summary>
      <param name="whenExpressions">
                Список выражений, предоставляющих условия для каждого случая.
              </param>
      <param name="thenExpressions">
                Список выражений, задающих результатов каждого случая.
              </param>
      <param name="elseExpression">
                Выражение, определяющее результат, когда нет вариантов не подходит.
              </param>
      <returns>
              Новый DbCaseExpression с указанным вариантов и результат по умолчанию.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="whenExpressions" /> или <paramref name="thenExpressions" /> пуст или содержит значение null, или <paramref name="elseExpression" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="whenExpressions" /> или <paramref name="thenExpressions" /> пуст или <paramref name="whenExpressions" /> содержит выражение с типом результатов нелогических или нет общего типа результата существует для всех выражений в <paramref name="thenExpressions" /> и <paramref name="elseExpression" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> применяет операцию приведения к полиморфному аргументу.
            </summary>
      <param name="argument">
                Аргумент, к которому требуется применить приведение.
              </param>
      <param name="toType">
                Метаданные типа, указывающие тип приведения.
              </param>
      <returns>
              Новый DbCastExpression с указанным типом аргумента и целевой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Argument" /> или <paramref name="toType" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Указанное приведение является недопустимым.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> из указанного примитивного типа с заданным значением константы.
            </summary>
      <param name="constantType">
                Тип постоянного значения.
              </param>
      <param name="value">
                Значение константы для представления.
              </param>
      <returns>
              Новый DbConstantExpression заданное значение и тип результата <paramref name="constantType" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="value" /> или <paramref name="constantType" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="value" /> не является экземпляром допустимого типа константы  <paramref name="constantType" /> не представляет тип-примитив или <paramref name="value" /> является другой примитивного типа, представленного <paramref name="constantType" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> с данным константным значением.
            </summary>
      <param name="value">
                Значение константы для представления.
              </param>
      <returns>
              Новый DbConstantExpression с заданным значением.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="value" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="value" /> не является экземпляром допустимого типа константы.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> кодирует ссылку к определенной сущности на основе значений ключа.
            </summary>
      <param name="entitySet">
                Набор сущностей, в которой находится указанный элемент.
              </param>
      <param name="keyValues">
                Коллекция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />которые предоставляют значения ключа.
                 Эти выражения должен соответствовать (количество, тип и порядок) ключевые свойства типа сущности, на которую указывает ссылка.
              </param>
      <returns>
              Новый DbRefExpression, указывающий на элемент с указанными значениями ключа в наборе данной сущности.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="entitySet" /> имеет значение null, или <paramref name="keyValues" /> пуст или содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Количество <paramref name="keyValues" /> не соответствует количеству ключевых элементов, объявленных <paramref name="entitySet" />тип элемента или <paramref name="keyValues" /> содержит выражение с типом результатов, который несовместим с типом соответствующего ключевого элемента.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> кодирует ссылку к определенной сущности на основе значений ключа.
            </summary>
      <param name="entitySet">
                Набор сущностей, в которой находится указанный элемент.
              </param>
      <param name="keyValues">
                Коллекция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />которые предоставляют значения ключа.
                 Эти выражения должен соответствовать (количество, тип и порядок) ключевые свойства типа сущности, на которую указывает ссылка.
              </param>
      <returns>
              Новый DbRefExpression, указывающий на элемент с указанными значениями ключа в наборе данной сущности.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="entitySet" /> имеет значение null, или <paramref name="keyValues" /> пуст или содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Количество <paramref name="keyValues" /> не соответствует количеству ключевых элементов, объявленных <paramref name="entitySet" />тип элемента или <paramref name="keyValues" /> содержит выражение с типом результатов, который несовместим с типом соответствующего ключевого элемента.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> кодирует ссылку к определенной сущности данного типа, на основе значений ключа.
            </summary>
      <param name="entitySet">
                Набор сущностей, в которой находится указанный элемент.
              </param>
      <param name="entityType">
                Конкретный пользовательский тип сущности, на которую указывает ссылка.
                 Это должен быть тип сущности из той же иерархии, что тип элемента набора сущностей.
              </param>
      <param name="keyValues">
                Коллекция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />которые предоставляют значения ключа.
                 Эти выражения должен соответствовать (количество, тип и порядок) ключевые свойства типа сущности, на которую указывает ссылка.
              </param>
      <returns>
              Новый DbRefExpression, указывающий на элемент с указанными значениями ключа в наборе данной сущности.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="entitySet" /> или <paramref name="entityType" /> имеет значение null, или <paramref name="keyValues" /> пуст или содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="entityType" /> не из той же иерархии типов (подтипом, супертип или тот же тип), что <paramref name="entitySet" />в тип элемента.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Количество <paramref name="keyValues" /> не соответствует количеству ключевых элементов, объявленных <paramref name="entitySet" />тип элемента или <paramref name="keyValues" /> содержит выражение с типом результатов, который несовместим с типом соответствующего ключевого элемента.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> кодирует ссылку к определенной сущности данного типа, на основе значений ключа.
            </summary>
      <param name="entitySet">
                Набор сущностей, в которой находится указанный элемент.
              </param>
      <param name="entityType">
                Конкретный пользовательский тип сущности, на которую указывает ссылка.
                 Это должен быть тип сущности из той же иерархии, что тип элемента набора сущностей.
              </param>
      <param name="keyValues">
                Коллекция <see cref="T:System.Data.Common.CommandTrees.DbExpression" />которые предоставляют значения ключа.
                 Эти выражения должен соответствовать (количество, тип и порядок) ключевые свойства типа сущности, на которую указывает ссылка.
              </param>
      <returns>
              Новый DbRefExpression, указывающий на элемент с указанными значениями ключа в наборе данной сущности.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="entitySet" /> или <paramref name="entityType" /> имеет значение null, или <paramref name="keyValues" /> пуст или содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="entityType" /> не из той же иерархии типов (подтипом, супертип или тот же тип), что <paramref name="entitySet" />в тип элемента.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Количество <paramref name="keyValues" /> не соответствует количеству ключевых элементов, объявленных <paramref name="entitySet" />тип элемента или <paramref name="keyValues" /> содержит выражение с типом результатов, который несовместим с типом соответствующего ключевого элемента.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> результат вычисления данного <paramref name="apply" /> выражение один раз для каждого элемента заданного входного набора, создавая набор строк с помощью соответствующего входного и применения столбцов.
               Строки, для которых <paramref name="apply" /> принимает значение пустой набор, не включаются.
            </summary>
      <param name="source">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> задающее входной набор.
              </param>
      <param name="apply">
                Метод, который указывает, которое необходимо вычислить для каждого из элементов входного набора.
              </param>
      <returns>
              Новый DbApplyExpression с указанным входа и применения привязки и <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из CrossApply.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" /> или <paramref name="apply" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Результат <paramref name="apply" /> содержит имя или выражение, которое имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Результат <paramref name="apply" /> содержит имя или выражение, которое не является допустимым в привязке выражения.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> результат вычисления данного <paramref name="apply" /> выражение один раз для каждого элемента заданного входного набора, создавая набор строк с помощью соответствующего входного и применения столбцов.
               Строки, для которых <paramref name="apply" /> принимает значение пустой набор, не включаются.
            </summary>
      <param name="input">
                <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Задающее входной набор.
              </param>
      <param name="apply">
                <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Указывающий, которое необходимо вычислить для каждого из элементов входного набора.
              </param>
      <returns>
              Новый DbApplyExpression с указанным входа и применения привязки и <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из CrossApply.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="input" /> или <paramref name="apply" /> равно null.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> безусловно, который включается наборов, указанные в списке привязки входного выражения.
            </summary>
      <param name="inputs">
                Список привязок выражений, задающий входные наборы.
              </param>
      <returns>
              Новый DbCrossJoinExpression с <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из перекрестного соединения, который представляет безусловный объединение входных наборов.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="inputs" /> имеет значение null или содержит элемент null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="inputs" /> содержит менее 2 выражения привязки.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> получает учитывая выражение со ссылкой на конкретную сущность.
            </summary>
      <param name="argument">
                <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> Предоставляющий ссылку.
                 Это выражение должно иметь тип ссылки.
              </param>
      <returns>
              Новый DbDerefExpression, который получает указанной сущности.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="argument" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не имеет ссылочный тип результата.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> удаляет дубликаты из заданного аргумента набора.
            </summary>
      <param name="argument">
                Выражение, определяющее набор, по которому выполнять различные операции.
              </param>
      <returns>
              Новый DbDistinctExpression, представляющий отдельной операции, примененное к аргументу указанного набора.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="argument" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не имеет тип результатов коллекции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> делит левого аргумента, правый аргумент.
            </summary>
      <param name="left">
                Выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbArithmeticExpression, представляющий операции деления.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Общий числовой результат типа не существует <paramref name="left" /> или <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> преобразующий набор в единственное значение.
            </summary>
      <param name="argument">
                Выражение, задающее входной набор.
              </param>
      <returns>
              DbElementExpression, который представляет преобразование аргумента набора в одноэлементный.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="argument" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не имеет тип результатов коллекции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> сравнивающее левый и правый аргументы для проверки на равенство.
            </summary>
      <param name="left">
                Выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbComparisonExpression, представляющий сравнение на равенство.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Общего результата сравнения равенства типа не существует между <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> вычисляющего вычитания аргумента правильный набор из аргумента набора слева.
            </summary>
      <param name="left">
                Выражение, определяющее левый аргумент набора.
              </param>
      <param name="right">
                Выражение, определяющее правый аргумент набора.
              </param>
      <returns>
              Новый DbExceptExpression, представляющий разность левый аргумент из правого аргумента.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Не общий тип результатов коллекции существует между <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> определяет, является ли набора, заданного аргументом пустым.
            </summary>
      <param name="argument">
                Выражение, задающее входной набор.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> применяется новый <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> с заданным аргументом.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="argument" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не имеет тип результатов коллекции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> фильтрует элементы в данной входной набор с помощью указанным предикатом.
            </summary>
      <param name="input">
                Привязка выражения, задающее входной набор.
              </param>
      <param name="predicate">
                Выражение, представляющее предикат, который необходимо вычислить для каждого из элементов входного набора.
              </param>
      <returns>
              Новый DbFilterExpression, создающий отфильтрованного набора.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="input" /> или <paramref name="predicate" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="predicate" /> не имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает класс <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, соединяющий наборы, задаваемые левым и правым выражениями, в соответствии с заданным условием соединения. При этом FullOuterJoin используется в качестве типа <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.
            </summary>
      <param name="left">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, указывающий аргумент левого набора.
              </param>
      <param name="right">
                Класс <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, указывающий аргумент правого набора.
              </param>
      <param name="joinCondition">
                 Метод, представляющий условие соединения.
                 Он должен создать выражение с результатом логического типа, в котором указана логика условия соединения.
              </param>
      <returns>
              Новый класс DbJoinExpression, в качестве типа <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> которого задан тип FullOuterJoin, представляющий собой операцию полного внешнего соединения, применяемую к левому и правому входным наборам в соответствии с заданным условием соединения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Для параметров <paramref name="left" />, <paramref name="right" /> или <paramref name="joinCondition" /> задано значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="left" /> или <paramref name="right" /> не имеет типа результата коллекции.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Выражение, созданное <paramref name="joinCondition" />, имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Тип результата выражения, созданного <paramref name="joinCondition" />, отличается от логического.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> который включается наборов, задаваемых левое и правое выражения привязки, на указанном условии соединения, с помощью FullOuterJoin как <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.
            </summary>
      <param name="left">
                <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Указывающий на левом аргументе.
              </param>
      <param name="right">
                <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Указывающий правом аргументе.
              </param>
      <param name="joinCondition">
                Выражение, задающее условие объединения.
              </param>
      <returns>
              Новый DbJoinExpression с <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из FullOuterJoin, представляющий полное внешнее соединение операцию, применяемую к левой и правой входных наборов под условия данного соединения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" />,  <paramref name="right" /> или <paramref name="joinCondition" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="joinCondition" /> имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> получает ref указанной сущности в структурной форме.
            </summary>
      <param name="argument">
                Выражение, возвращающее сущность.
                 Это выражение должно иметь тип результата сущности.
              </param>
      <returns>
              Новый DbEntityRefExpression, которое извлекает ссылку на указанную сущность.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="argument" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не поддерживает тип результата сущности.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> извлекает значения ключа ссылки на указанный в структурной форме.
            </summary>
      <param name="argument">
                Выражение, задающее ссылку.
                 Это выражение должно иметь тип с типом элемента сущности ссылки.
              </param>
      <returns>
              Новый DbRefKeyExpression, который извлекает значения ключа указанной ссылки.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="argument" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не имеет ссылочный тип результата.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> определяет, является ли левый аргумент больше правого аргумента.
            </summary>
      <param name="left">
                Выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbComparisonExpression, представляющий больше-сравнение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Нет общего типа результата сравнения по порядку существует <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> определяет, является ли левый аргумент больше или равно правому.
            </summary>
      <param name="left">
                Выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbComparisonExpression, представляющий сравнение больше или равен.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Нет общего типа результата сравнения по порядку существует <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новую привязку выражения группы, созданные переменной и имена переменных группы для привязки заданного выражения.
            </summary>
      <param name="input">
                Выражение для привязки.
              </param>
      <returns>
              Новая привязка выражения группы с указанного выражения, созданного имени переменной и переменной имя группы.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="input" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="input" /> не имеет тип результатов коллекции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> использует указанное имя переменной и имена переменных группы для привязки заданного выражения.
            </summary>
      <param name="input">
                Выражение для привязки.
              </param>
      <param name="varName">
                Имя переменной, которое должно использоваться для привязки.
              </param>
      <param name="groupVarName">
                Имя переменной, которое должно использоваться для ссылки на группу при использовании новой привязки выражения группы в выражение group by.
              </param>
      <returns>
              Новая привязка выражения группы с указанным выражением, имя переменной и переменной имя группы.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="input" />,  <paramref name="varName" /> или <paramref name="groupVarName" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="input" /> не имеет тип результатов коллекции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> группирует элементы входного набора по ключам указанной группы и применяет заданный статистические функции.
            </summary>
      <param name="input">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> задающее входной набор.
              </param>
      <param name="keys">
                Список пар строка выражение, определяющих столбцов группирования.
              </param>
      <param name="aggregates">
                Список выражений, задающих применяемые статистические функции.
              </param>
      <returns>
              Новый DbGroupByExpression с указанного набора входных данных, ключи группирования и агрегатов.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="input" />,  <paramref name="keys" /> или <paramref name="aggregates" /> имеет значение null,  <paramref name="keys" /> содержит ключ null столбца или выражения, или <paramref name="aggregates" /> содержит имя столбца со статистическим выражением значение null или статистической функции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Оба <paramref name="keys" /> и <paramref name="aggregates" /> пуст, либо недопустимое или повторяющееся имя столбца указано.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> который включается наборов, задаваемых левое и правое выражения на указанном условии соединения, с помощью InnerJoin как <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.
            </summary>
      <param name="left">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> указывающий на левом аргументе.
              </param>
      <param name="right">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> указывающий правом аргументе.
              </param>
      <param name="joinCondition">
                Метод, представляющий условие объединения.
                 Этот метод должен создавать выражение с результатом логического типа, который предоставляет логику условия соединения.
              </param>
      <returns>
              Новый DbJoinExpression с <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из InnerJoin, который представляет операцию внутреннего соединения, применяемую к левой и правой входных наборов под условия данного соединения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" />,  <paramref name="right" /> или <paramref name="joinCondition" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="left" /> или <paramref name="right" /> имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="joinCondition" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="joinCondition" /> имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> который включается наборов, задаваемых в левое и правое выражения привязки, указанном условии соединения, с помощью InnerJoin как <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.
            </summary>
      <param name="left">
                <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Указывающий на левом аргументе.
              </param>
      <param name="right">
                <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Указывающий правом аргументе.
              </param>
      <param name="joinCondition">
                Выражение, задающее условие объединения.
              </param>
      <returns>
              Новый DbJoinExpression с <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из InnerJoin, который представляет операцию внутреннего соединения, применяемую к левой и правой входных наборов под условия данного соединения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" />,  <paramref name="right" /> или <paramref name="joinCondition" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="joinCondition" /> не имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> вычисляет пересечение слева и справа задайте аргументы.
            </summary>
      <param name="left">
                Выражение, определяющее левый аргумент набора.
              </param>
      <param name="right">
                Выражение, определяющее правый аргумент набора.
              </param>
      <returns>
              Новый DbIntersectExpression, представляющую собой пересечение левый и правый аргументы.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Не общий тип результатов коллекции существует между <paramref name="left" /> или <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> представляющий приложение указанного лямбда-функции для заданных аргументов.
            </summary>
      <param name="lambda">
                A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> экземпляр, представляющий лямбда-функции для применения.
              </param>
      <param name="arguments">
                Список выражений, задающих аргументы.
              </param>
      <returns>
              Новый DbLambdaExpression, представляющий приложение функции лямбда-выражения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lambda" /> или <paramref name="arguments" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Количество <paramref name="arguments" /> равно числу переменных, объявленных в <paramref name="lambda" />, или <paramref name="arguments" /> содержит выражение, имеющее тип результата, который не равен или не может быть повышен до соответствующего типа переменной.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> представляющий приложение указанного лямбда-функции для заданных аргументов.
            </summary>
      <param name="lambda">
                A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> экземпляр, представляющий лямбда-функции для применения.
              </param>
      <param name="arguments">
                Выражения, задающие аргументы.
              </param>
      <returns>
              Новый DbLambdaExpression, представляющий приложение функции лямбда-выражения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lambda" /> или <paramref name="arguments" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Количество <paramref name="arguments" /> равно числу переменных, объявленных в <paramref name="lambda" />, или <paramref name="arguments" /> содержит выражение, имеющее тип результата, который не равен или не может быть повышен до соответствующего типа переменной.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> представляет вызов указанной функции с заданными аргументами.
            </summary>
      <param name="function">
                Метаданные для вызова функции.
              </param>
      <param name="arguments">
                Список выражений, задающих аргументы для функции.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, представляющий вызов функции.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="function" /> имеет значение null, или <paramref name="arguments" /> пуст или содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Количество <paramref name="arguments" /> равно числу параметров, объявленных в <paramref name="function" />, или <paramref name="arguments" /> содержит выражение, имеющее тип результата, который не равен или не может быть повышен до соответствующего типа параметра функции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
      <summary>
              Создает выражение <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, представляющее вызов заданной функции с определенными аргументами.
            </summary>
      <param name="function">
                Метаданные вызываемой функции.
              </param>
      <param name="arguments">
                Выражения, предоставляющие аргументы функции.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, представляющее вызов функции.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="function" /> имеет значение null, либо параметр <paramref name="arguments" /> имеет или содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Количество параметров <paramref name="arguments" /> не совпадает с количеством параметров, объявленных с помощью <paramref name="function" />, либо параметр <paramref name="arguments" /> содержит выражение, тип результата которого не совпадает с типом параметра соответствующей функции или не позволяет повысить его до этого типа.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> определяет, является ли набора, заданного аргументом пустой набор.
            </summary>
      <param name="argument">
                Выражение, задающее входной набор.
              </param>
      <returns>
              Новый DbIsEmptyExpression с заданным аргументом.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="argument" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не имеет тип результатов коллекции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> определяет, является ли указанный аргумент имеет значение null.
            </summary>
      <param name="argument">
                Выражение, задающее аргумент.
              </param>
      <returns>
              Новый DbIsNullExpression с заданным аргументом.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="argument" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> имеет тип результатов коллекции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> определяет, является ли данный аргумент заданного типа или подтипа.
            </summary>
      <param name="argument">
                Выражение, задающее экземпляр.
              </param>
      <param name="type">
                Метаданные типа, указывающие тип, который нужно сравнить тип результата экземпляра.
              </param>
      <returns>
              Новый DbIsOfExpression с указанного экземпляра и типа и DbExpressionKind IsOf.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="argument" /> или <paramref name="type" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="type" /> не находится в той же иерархии типов, как тип результата <paramref name="argument" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> выражение, определяющее ли данный аргумент имеет указанного типа и только к этому типу (не подтип).
            </summary>
      <param name="argument">
                Выражение, задающее экземпляр.
              </param>
      <param name="type">
                Метаданные типа, указывающие тип, который нужно сравнить тип результата экземпляра.
              </param>
      <returns>
              Новый DbIsOfExpression с указанного экземпляра и типа и DbExpressionKind IsOfOnly.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="argument" /> или <paramref name="type" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="type" /> не находится в той же иерархии типов, как тип результата <paramref name="argument" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый класс <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, который соединяет наборы, заданные внешними и внутренними выражениями при условии равенства между указанными внешними и внутренними ключами, с помощью InnerJoin в качестве <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.
            </summary>
      <param name="outer">
                <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, указывающий аргумент внешнего набора.
              </param>
      <param name="inner">
                <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, указывающий аргумент внутреннего набора.
              </param>
      <param name="outerKey">
                Метод, указывающий способ получения значения внешнего ключа из элемента внешнего набора.
              </param>
      <param name="innerKey">
                Метод, указывающий способ получения значения внутреннего ключа из элемента внутреннего набора.
              </param>
      <returns>
              Выражение DbJoinExpression создается с помощью класса <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> InnerJoin, который представляет операцию внутреннего соединения, применяемую к левому и правому входным наборам в условии соединения, сравнивающего значения внешних и внутренних ключей на равенство.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметры <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKey" /> или <paramref name="innerKey" /> имеют значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="outer" /> или <paramref name="inner" /> не имеет типа результата коллекции.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Выражение, созданное <paramref name="outerKey" /> или <paramref name="innerKey" />, имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Для выражений, созданных <paramref name="outerKey" /> и <paramref name="innerKey" />, равенство не сравнивается.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />, который проецирует указанный селектор на наборы, заданные внешними и внутренними выражениями, соединенными условием равенства между указанными внешними и внутренними ключами, с помощью InnerJoin как <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.
            </summary>
      <param name="outer">
                <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, указывающий аргумент внешнего набора.
              </param>
      <param name="inner">
                <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, указывающий аргумент внутреннего набора.
              </param>
      <param name="outerKey">
                Метод, указывающий способ получения значения внешнего ключа из элемента внешнего набора.
              </param>
      <param name="innerKey">
                Метод, указывающий способ получения значения внутреннего ключа из элемента внутреннего набора.
              </param>
      <param name="selector">
                Метод, указывающий способ получения элемента результирующего набора из элементов внутреннего и внешнего наборов.
                 Этот метод должен создать экземпляр типа, совместимого с Join и с возможностью разрешения в <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
                 Требования к совместимости <paramref name="TSelector" /> приведены в примечаниях.
              </param>
      <typeparam name="TSelector">
                Тип <paramref name="selector" />.
              </typeparam>
      <returns>
              Новое выражение DbProjectExpression с указанным селектором в качестве его проекции и новым выражением DbJoinExpression качестве входных данных.
               Входное выражение DbJoinExpression создается с помощью <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> InnerJoin, который представляет операцию внутреннего соединения, применяемую к левому и правому входным наборам в условии соединения, сравнивающего значения внешних и внутренних ключей на равенство.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKey" />, <paramref name="innerKey" /> или <paramref name="selector" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="outer" /> или <paramref name="inner" /> не имеет типа результата коллекции.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Выражение, созданное <paramref name="outerKey" /> или <paramref name="innerKey" />, имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Результат <paramref name="selector" /> имеет значение NULL после преобразования в DbExpression.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражения, созданные <paramref name="outerKey" /> и <paramref name="innerKey" />, не сравниваются на равенство.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Результат <paramref name="Selector" /> несовместим с SelectMany.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с заданной реализацией встроенной лямбда-функции и формальными параметрами.
            </summary>
      <param name="body">
                Выражение, определяющее логику лямбда-функции.
              </param>
      <param name="variables">
                Коллекция <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />, представляющая формальные параметры для лямбда-функции.
                 Эти переменные можно использовать в <paramref name="body" /> выражение.
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="variables" /> имеет значение null или содержит значение null, или <paramref name="body" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="variables" /> содержит более одного элемента с тем же именем переменной.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> с заданной реализацией встроенной лямбда-функции и формальными параметрами.
            </summary>
      <param name="body">
                Выражение, определяющее логику лямбда-функции.
              </param>
      <param name="variables">
                Коллекция <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />, представляющая формальные параметры для лямбда-функции.
                 Эти переменные можно использовать в <paramref name="body" /> выражение.
              </param>
      <returns>
              Новый DbLambda, описывающее встроенный лямбда-функции с помощью указанного текста и формальных параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="variables" /> имеет значение null или содержит значение null, или <paramref name="body" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="variables" /> содержит более одного элемента с тем же именем переменной.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> который включается наборов, задаваемых левое и правое выражения на указанном условии соединения, с помощью LeftOuterJoin как <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.
            </summary>
      <param name="left">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> указывающий на левом аргументе.
              </param>
      <param name="right">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> указывающий правом аргументе.
              </param>
      <param name="joinCondition">
                Метод, представляющий условие объединения.
                 Этот метод должен создавать выражение с результатом логического типа, который предоставляет логику условия соединения.
              </param>
      <returns>
              Новый DbJoinExpression с <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из LeftOuterJoin, представляющий левое внешнее соединение операцию, применяемую к левой и правой входных наборов условии заданное соединение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" />,  <paramref name="right" /> или <paramref name="joinCondition" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="left" /> или <paramref name="right" /> имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="joinCondition" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="joinCondition" /> имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> который включается наборов, задаваемых в левое и правое выражения привязки, указанном условии соединения, с помощью LeftOuterJoin как <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.
            </summary>
      <param name="left">
                <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Указывающий на левом аргументе.
              </param>
      <param name="right">
                <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Указывающий правом аргументе.
              </param>
      <param name="joinCondition">
                Выражение, задающее условие объединения.
              </param>
      <returns>
              Новый DbJoinExpression с <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из LeftOuterJoin, представляющий левое внешнее соединение операцию, применяемую к левой и правой входных наборов условии заданное соединение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" />,  <paramref name="right" /> или <paramref name="joinCondition" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="joinCondition" /> не имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> определяет, является ли левый аргумент меньше правого аргумента.
            </summary>
      <param name="left">
                Выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbComparisonExpression, представляющий меньше-сравнение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Нет общего типа результата сравнения по порядку существует <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> определяет, является ли левый аргумент меньше или равно правому.
            </summary>
      <param name="left">
                Выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbComparisonExpression, представляющий сравнение менее чем или равен.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Нет общего типа результата, как и порядок равенству существует между <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> сравнивающее указанной входной строке для заданного шаблона.
            </summary>
      <param name="argument">
                Выражение, задающее входной строки.
              </param>
      <param name="pattern">
                Выражение, задающее строку шаблона.
              </param>
      <returns>
              Новый DbLikeExpression с указанным входным данным, шаблон и null escape.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Argument" /> или <paramref name="pattern" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Argument" /> или <paramref name="pattern" /> не имеет строкового типа результата.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> сравнивающее указанной входной строке для заданного шаблона с помощью escape-необязательно.
            </summary>
      <param name="argument">
                Выражение, задающее входной строки.
              </param>
      <param name="pattern">
                Выражение, задающее строку шаблона.
              </param>
      <param name="escape">
                Необязательное выражение, задающее escape-строку.
              </param>
      <returns>
              Новый DbLikeExpression с указанным входным данным, шаблон и escape.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="argument" />,   <paramref name="pattern" /> или <paramref name="escape" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" />,   <paramref name="pattern" /> или <paramref name="escape" /> не имеет строкового типа результата.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> ограничивает количество элементов в коллекции аргументов, заданное число предельного значения.
               Связанные результаты не включаются в выходные данные.
            </summary>
      <param name="argument">
                Выражение, определяющее входную коллекцию.
              </param>
      <param name="count">
                Выражение, задающее значение предела.
              </param>
      <returns>
              Новый DbLimitExpression с указанным аргументом и ограничение числа, которое не содержит связанные результаты.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="argument" /> или <paramref name="count" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не имеет тип результатов коллекции или <paramref name="count" /> имеет тип результата, которое больше или может быть повышен для 64-разрядного целочисленного типа.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> вычитает из левого аргумента правый аргумент.
            </summary>
      <param name="left">
                Выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbArithmeticExpression, представляющий операции вычитания.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Общего числового результата типа не существует между <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> вычисляет остаток от левого аргумента, деленное на правый аргумент.
            </summary>
      <param name="left">
                Выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Выражение, задающее правый аргумент.
              </param>
      <returns>
              Представляет новый DbArithmeticExpression остаток от деления операции.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Общего числового результата типа не существует между <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> умножает левого аргумента, правый аргумент.
            </summary>
      <param name="left">
                Выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbArithmeticExpression, представляющий операцию умножения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Общего числового результата типа не существует между <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> представляющий навигации связи композиции или ассоциации.
            </summary>
      <param name="navigateFrom">
                Выражение, задающее экземпляр, из которого должен происходить переход.
              </param>
      <param name="fromEnd">
                Метаданные для свойства, представляющее конец связи, из которого должен происходить переход.
              </param>
      <param name="toEnd">
                Метаданные для свойства, представляющее конец связи, к которому должен происходить переход.
              </param>
      <returns>
              Новый DbRelationshipNavigationExpression, представляющее переход указанного от и до окончания отношения указанное отношение типа из исходного экземпляра указанной навигации.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="fromEnd" />,  <paramref name="toEnd" /> или <paramref name="navigateFrom" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="fromEnd" /> и <paramref name="toEnd" /> не объявлен в том же типе связи или <paramref name="navigateFrom" /> имеет тип результата, который несовместим с типом свойства <paramref name="fromEnd" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> представляющий навигации связи композиции или ассоциации.
            </summary>
      <param name="type">
                Метаданные для типа отношений, представляющий связь.
              </param>
      <param name="fromEndName">
                Имя свойства типа отношения, которое представляет конец связи, из которого должен происходить переход.
              </param>
      <param name="toEndName">
                Имя свойства типа отношения, которое представляет конец связи, к которому должен происходить переход.
              </param>
      <param name="navigateFrom">
                Выражение указывает экземпляр из какой naviagtion должен происходить.
              </param>
      <returns>
              Новый DbRelationshipNavigationExpression, представляющее переход указанного от и до окончания отношения указанное отношение типа из исходного экземпляра указанной навигации.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="type" />,  <paramref name="fromEndName" />,  <paramref name="toEndName" /> или <paramref name="navigateFrom" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="type" /> не сопоставлена рабочая область метаданных этого дерева команд или <paramref name="navigateFrom" /> связан с другим деревом команд, или <paramref name="type" /> не объявляет свойство окончания отношения с именем <paramref name="toEndName" /> или <paramref name="fromEndName" />, или <paramref name="navigateFrom" /> имеет тип результата, который несовместим с типом свойства свойства окончания связи с именем <paramref name="fromEndName" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> инвертирует значение аргумента.
            </summary>
      <param name="argument">
                Выражение, задающее аргумент.
              </param>
      <returns>
              Новый DbArithmeticExpression, представляющий операцию отрицания.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="argument" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Числовой результат типа не существует для <paramref name="argument" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <summary>
               Создает новый экземпляр <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.
               Если аргумент типа является типом коллекции, аргументы задают элементы коллекции.
               В противном случае аргументы используются как значения свойств или столбцов в новом экземпляре.
            </summary>
      <param name="instanceType">
                Тип нового экземпляра.
              </param>
      <param name="arguments">
                Выражения, определяющие значения новых экземпляров, интерпретируемый в соответствии с типом экземпляра.
              </param>
      <returns>
              Новый DbNewInstanceExpression с указанным типом и аргументы.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="instanceType" /> или <paramref name="arguments" /> имеет значение null, или <paramref name="arguments" /> содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="arguments" /> это пустая или типы результата содержащегося выражения не соответствуют требованиям <paramref name="instanceType" />  (как описано в разделе "Примечания").
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
      <summary>
              Создает новый экземпляр <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.
               Если аргумент типа является типом коллекции, аргументы задают элементы коллекции.
               В противном случае аргументы используются как значения свойств или столбцов в новом экземпляре.
            </summary>
      <param name="instanceType">
                Тип нового экземпляра.
              </param>
      <param name="arguments">
                Выражения, определяющие значения новых экземпляров, интерпретируемый в соответствии с типом экземпляра.
              </param>
      <returns>
              Новый DbNewInstanceExpression с указанным типом и аргументы.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="instanceType" /> или <paramref name="arguments" /> имеет значение null, или <paramref name="arguments" /> содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="arguments" /> это пустая или типы результата содержащегося выражения не соответствуют требованиям <paramref name="instanceType" />  (как описано в разделе "Примечания").
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> создает коллекцию, содержащую указанные элементы.
               Тип коллекции зависит от общего типа элементов.
               Если общего элемента типа не существует, создается исключение.
            </summary>
      <param name="elements">
                Список выражений, предоставляющих элементы коллекции.
              </param>
      <returns>
              Новый DbNewInstanceExpression с указанной коллекции типа и аргументов.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="elements" /> имеет значение null или содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="elements" /> пуст или содержит выражения, для которых общего результата типа не существует.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> создает коллекцию, содержащую указанные элементы.
               Тип коллекции зависит от общего типа элементов.
               Если общего элемента типа не существует, создается исключение.
            </summary>
      <param name="elements">
                Список выражений, предоставляющих элементы коллекции.
              </param>
      <returns>
              Новый DbNewInstanceExpression с указанной коллекции типа и аргументов.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="elements" /> имеет значение null или содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="elements" /> пуст или содержит выражения, для которых общего результата типа не существует.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> создает пустую коллекцию указанный тип коллекции.
            </summary>
      <param name="collectionType">
                Метаданные типа для коллекции, создание
              </param>
      <returns>
              Новый DbNewInstanceExpression тип указанной коллекции и пустой <paramref name="Arguments" /> списка.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="collectionType" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="collectionType" /> не является типом коллекции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> формирующий строки с указанной именованной столбцы и заданного значения, указанные как выражения.
            </summary>
      <param name="columnValues">
                Список пар ключ значение строки DbExpression, определяющий структуру и значения строки.
              </param>
      <returns>
              Новый DbNewInstanceExpression, представляющий построение строки.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="columnValues" /> имеет значение null или содержит элемент с именем null столбца или выражения.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="columnValues" /> является пустым или содержит повторяющиеся или недопустимое имя столбца.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> выполняет логическое отрицание данного аргумента.
            </summary>
      <param name="argument">
                Логическое выражение, задающее аргумент.
              </param>
      <returns>
              Новый DbNotExpression с заданным аргументом.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="argument" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> сравнивающее левый и правый аргументы на неравенство.
            </summary>
      <param name="left">
                Выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbComparisonExpression, представляющий сравнение неравенства.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Общего результата сравнения равенства типа не существует между <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, который представляет типизированное значение null.
            </summary>
      <param name="nullType">
                Тип значения null.
              </param>
      <returns>
              Экземпляр DbNullExpression.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="nullType" /> имеет значение NULL.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> создает набор, состоящий из элементов заданного входного набора, заданного типа.
            </summary>
      <param name="argument">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> задающее входной набор.
              </param>
      <param name="type">
                Метаданные типа для типа, элементы входного набора должны иметь должны быть включены в результирующий набор.
              </param>
      <returns>
              Новый DbOfTypeExpression с набора, заданного аргументом типа и ExpressionKind из <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="argument" /> или <paramref name="type" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не имеет тип результатов коллекции или <paramref name="type" /> не является типом в той же иерархии типов, как тип элемента коллекции результирующего типа <paramref name="argument" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <summary>
               Создает новый <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> создает набор, состоящий из элементов заданного входного набора, которые точно указанного типа.
            </summary>
      <param name="argument">
                <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> Задающее входной набор.
              </param>
      <param name="type">
                Метаданные типа для типа, должны точно совпадать с элементами набора входных данных должны быть включены в результирующий набор.
              </param>
      <returns>
              Новый DbOfTypeExpression с набора, заданного аргументом типа и ExpressionKind из <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="argument" /> или <paramref name="type" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не имеет тип результатов коллекции или <paramref name="type" /> не является типом в той же иерархии типов, как тип элемента коллекции результирующего типа <paramref name="argument" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> выполняет логическое или аргументов слева и справа.
            </summary>
      <param name="left">
                Логическое выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Логическое выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbOrExpression с заданными аргументами.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="left" /> или <paramref name="right" /> имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> сортирует заданного входного набора ключом указанного сортировки с сортировки порядок и по умолчанию параметры сортировки по возрастанию.
            </summary>
      <param name="source">
                Выражение, задающее входной набор.
              </param>
      <param name="sortKey">
                Метод, определяющий процедуру получения выражения ключа сортировки для заданного элемента входного набора.
                 Этот метод должен создавать выражение с типом результата сравнения по порядку, обеспечивает сортировку определение ключа.
              </param>
      <returns>
              Новый DbSortExpression, представляющий операция order by.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" /> или <paramref name="sortKey" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="sortKey" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="sortKey" /> не имеет типа результата сравнения по порядку.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> сортирует заданного входного набора ключом указанного сортировки в возрастающем порядке сортировки, а также указанные параметры сортировки.
            </summary>
      <param name="source">
                Выражение, задающее входной набор.
              </param>
      <param name="sortKey">
                Метод, определяющий процедуру получения выражения ключа сортировки для заданного элемента входного набора.
                 Этот метод должен создавать выражение с типом результата сравнения по порядку, обеспечивает сортировку определение ключа.
              </param>
      <param name="collation">
                Параметры сортировки для сортировки в группе.
              </param>
      <returns>
              Новый DbSortExpression, представляющий операция order by.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" />,  <paramref name="sortKey" /> или <paramref name="collation" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="sortKey" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="sortKey" />  имеет тип результата порядку строк.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="collation" /> является пустым или содержит только пробелы.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> сортирует заданного входного набора ключом указанного сортировки в убывающем порядке и по умолчанию параметры сортировки сортировки.
            </summary>
      <param name="source">
                Выражение, задающее входной набор.
              </param>
      <param name="sortKey">
                Метод, определяющий процедуру получения выражения ключа сортировки для заданного элемента входного набора.
                 Этот метод должен создавать выражение с типом результата сравнения по порядку, обеспечивает сортировку определение ключа.
              </param>
      <returns>
              Новый DbSortExpression, представляющий операция order by.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" /> или <paramref name="sortKey" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="sortKey" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="sortKey" /> не имеет типа результата сравнения по порядку.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> сортирует заданного входного набора ключом указанного сортировки в убывающем порядке сортировки и указанные параметры сортировки.
            </summary>
      <param name="source">
                Выражение, задающее входной набор.
              </param>
      <param name="sortKey">
                Метод, определяющий процедуру получения выражения ключа сортировки для заданного элемента входного набора.
                 Этот метод должен создавать выражение с типом результата сравнения по порядку, обеспечивает сортировку определение ключа.
              </param>
      <param name="collation">
                Параметры сортировки для сортировки в группе.
              </param>
      <returns>
              Новый DbSortExpression, представляющий операция order by.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" />,  <paramref name="sortKey" /> или <paramref name="collation" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="sortKey" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="sortKey" /> имеет тип результата порядку строк.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="collation" /> является пустым или содержит только пробелы.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> результат вычисления данного <paramref name="apply" /> выражение один раз для каждого элемента заданного входного набора, создавая набор строк с помощью соответствующего входного и применения столбцов.
               Строки, для которых <paramref name="apply" /> принимает значение пустой набор иметь значение столбца применить <see langword="null" />.
            </summary>
      <param name="source">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> задающее входной набор.
              </param>
      <param name="apply">
                Метод, который указывает, которое необходимо вычислить для каждого из элементов входного набора.
              </param>
      <returns>
              Новый DbApplyExpression с указанным входа и применения привязки и <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из OuterApply.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" /> или <paramref name="apply" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Результат <paramref name="apply" /> содержит имя или выражение, которое имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Результат <paramref name="apply" /> содержит имя или выражение, которое не является допустимым в привязке выражения.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> результат вычисления данного <paramref name="apply" /> выражение один раз для каждого элемента заданного входного набора, создавая набор строк с помощью соответствующего входного и применения столбцов.
               Строки, для которых <paramref name="apply" /> принимает значение пустой набор иметь значение столбца применить <see langword="null" />.
            </summary>
      <param name="input">
                <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Задающее входной набор.
              </param>
      <param name="apply">
                <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> Указывающий, которое необходимо вычислить для каждого из элементов входного набора.
              </param>
      <returns>
              Новый DbApplyExpression с указанным входа и применения привязки и <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из OuterApply.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="input" /> или <paramref name="apply" /> равно null.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> ссылается на параметр с указанным именем и типом.
            </summary>
      <param name="type">
                Тип упоминаемого параметра.
              </param>
      <param name="name">
                Имя упоминаемого параметра.
              </param>
      <returns>
              DbParameterReferenceExpression, представляющий ссылку на параметр с указанным именем и типом.
               Тип результата выражения будет совпадать с <paramref name="type" />.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> для правого аргумента, добавляющий левый аргумент.
            </summary>
      <param name="left">
                Выражение, задающее левый аргумент.
              </param>
      <param name="right">
                Выражение, задающее правый аргумент.
              </param>
      <returns>
              Новый DbArithmeticExpression, представляющий операцию сложения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Общего числового результата типа не существует между <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> проектов указанного выражения на заданном наборе входных данных.
            </summary>
      <param name="input">
                Привязка выражения, задающее входной набор.
              </param>
      <param name="projection">
                Выражение для проекта в наборе.
              </param>
      <returns>
              Новый DbProjectExpression, представляющий операции проекции.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="input" /> или <paramref name="projection" /> равно null.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> представляющий Получение указанного свойства.
            </summary>
      <param name="instance">
                Экземпляр, из которого необходимо получить свойство.
                 Может принимать значение null, если свойство является статическим.
              </param>
      <param name="propertyMetadata">
                Метаданные извлекаемого свойства.
              </param>
      <returns>
              Новый DbPropertyExpression, представляющий извлечения свойств.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="propertyMetadata" /> имеет значение null или <paramref name="instance" /> имеет значение null и свойство не является статическим.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> представляющий получение указанное свойство навигации.
            </summary>
      <param name="instance">
                Экземпляр, из которого требуется извлечь свойство навигации.
              </param>
      <param name="navigationProperty">
                Метаданные для свойства навигации для извлечения.
              </param>
      <returns>
              Новый DbPropertyExpression, представляющий извлечения свойств навигации.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="navigationProperty" /> или <paramref name="instance" /> равно null.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> представляющий извлечения конечного элемента указанного отношения.
            </summary>
      <param name="instance">
                Экземпляр, из которого требуется извлечь конечный элемент отношения.
              </param>
      <param name="relationshipEnd">
                Метаданные для извлекаемого конечного элемента отношения.
              </param>
      <returns>
              Новый DbPropertyExpression, представляющий извлечения элемента end связи.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="relationshipEnd" /> имеет значение null или <paramref name="instance" /> имеет значение null и свойство не является статическим.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> представляющий получения свойства экземпляра с заданным именем из данного экземпляра.
            </summary>
      <param name="instance">
                Экземпляр, из которого необходимо получить свойство.
              </param>
      <param name="propertyName">
                Имя свойства, которое необходимо извлечь.
              </param>
      <returns>
              Новый DbPropertyExpression, представляющий извлечения свойств.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="propertyName" /> имеет значение null или <paramref name="instance" /> имеет значение null и свойство не является статическим.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Свойство с указанным именем не объявлен тип <paramref name="instance" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> кодирует ссылку к определенной сущности на основе значений ключа.
            </summary>
      <param name="entitySet">
                Набор сущностей, в которой находится указанный элемент.
              </param>
      <param name="keyRow">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> создает запись с столбцы, соответствующие условиям (количество, тип и порядок) свойства ключа ссылочного типа сущности.
              </param>
      <returns>
              Новый DbRefExpression, указывающий на элемент с указанным значением ключа в указанном наборе сущностей.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="entitySet" /> или <paramref name="keyRow" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="keyRow" /> Нет записей результирующий тип, который соответствует ключевые свойства типа сущности набора сущностей, на который указывает ссылка.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> кодирует ссылку к определенной сущности на основе значений ключа.
            </summary>
      <param name="entitySet">
                Набор сущностей, в которой находится указанный элемент.
              </param>
      <param name="keyRow">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> создает запись с столбцы, соответствующие условиям (количество, тип и порядок) свойства ключа ссылочного типа сущности.
              </param>
      <param name="entityType">
                Тип сущности, который должен ссылаться ссылки.
              </param>
      <returns>
              Новый DbRefExpression, указывающий на элемент с указанным значением ключа в указанном наборе сущностей.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="entitySet" />,  <paramref name="keyRow" /> или <paramref name="entityType" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="entityType" /> не находится в той же иерархии типа сущности набора сущностей, типа или <paramref name="keyRow" /> не имеет записей результирующий тип, который соответствует ключевые свойства типа сущности набора сущностей, на который указывает ссылка.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> который ссылается указанный набор сущностей или связей.
            </summary>
      <param name="targetSet">
                Метаданные для набора сущностей или связей для ссылки.
              </param>
      <returns>
              Новый DbScanExpression на основании указанного набора сущностей или связей.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="targetSet" /> имеет значение NULL.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> который выбирает указанного выражения на заданном наборе входных данных.
            </summary>
      <param name="source">
                Выражение, задающее входной набор.
              </param>
      <param name="projection">
                Метод, определяющий процедуру получения проецируемого выражения, заданного элемента входного набора.
                 Этот метод должен создавать экземпляр типа, совместимого с выберите и может быть сведена <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
                 Требования к совместимости <paramref name="TProjection" /> приведены в примечаниях.
              </param>
      <typeparam name="TProjection">
                Тип результата метода <paramref name="projection" />.
              </typeparam>
      <returns>
              Новый DbProjectExpression, представляющий операцию выбора.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" /> или <paramref name="projection" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Результат <paramref name="projection" /> имеет значение null.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> результат вычисления данного <paramref name="apply" /> выражение один раз для каждого элемента заданного входного набора, создавая набор строк с помощью соответствующего входного и применения столбцов.
               Строки, для которых <paramref name="apply" /> принимает значение пустой набор, не включаются.
               Объект <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> создается, выбирает <paramref name="apply" /> столбец из каждой строки, создавая общую коллекцию <paramref name="apply" /> результаты.
            </summary>
      <param name="source">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> задающее входной набор.
              </param>
      <param name="apply">
                Метод, который представляет логику необходимо вычислить для каждого из элементов входного набора.
              </param>
      <returns>
              Новый DbProjectExpression, который выбирает столбец применить из новых DbApplyExpression с помощью заданных привязок ввода и применить и <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из CrossApply.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" /> или <paramref name="apply" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="apply" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" />  не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="apply" /> не относится к типу коллекции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> результат вычисления данного <paramref name="apply" /> выражение один раз для каждого элемента заданного входного набора, создавая набор строк с помощью соответствующего входного и применения столбцов.
               Строки, для которых <paramref name="apply" /> принимает значение пустой набор, не включаются.
               Объект <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> создается, выбирает указанный <paramref name="selector" /> цикле каждую строку, создавая общую коллекцию результатов.
            </summary>
      <param name="source">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> задающее входной набор.
              </param>
      <param name="apply">
                Метод, который представляет логику необходимо вычислить для каждого из элементов входного набора.
              </param>
      <param name="selector">
                Метод, задающий способ получения элемента результирующего набора должны быть получены из входных данных элемента и набора apply.
                 Этот метод должен создать экземпляр типа, совместимого с SelectMany и может быть сведена <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
                 Требования к совместимости <paramref name="TSelector" /> приведены в примечаниях.
              </param>
      <typeparam name="TSelector">
                Тип результата метода <paramref name="selector" />.
              </typeparam>
      <returns>
              Новый DbProjectExpression, который выбирает результат заданного селектора новый DbApplyExpression с указанным входным данным и применить привязки и <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> из CrossApply.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" />,  <paramref name="apply" /> или <paramref name="selector" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="apply" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Результат <paramref name="selector" /> имеет значение null, в преобразование DbExpression.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="apply" /> не относится к типу коллекции.
                   не относится к типу коллекции.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> сортирует заданного входного набора в спецификации сортировки заданной перед пропускает указанное число элементов.
            </summary>
      <param name="input">
                Привязка выражения, задающее входной набор.
              </param>
      <param name="sortOrder">
                Список правил сортировки, определяющих, как должны быть отсортированы элементы входного набора.
              </param>
      <param name="count">
                Выражение указывает количество элементов упорядоченного набора следует пропустить.
              </param>
      <returns>
              Новый DbSkipExpression, представляющий пропустить операцию.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="input" />,  <paramref name="sortOrder" /> или <paramref name="count" /> имеет значение null, или <paramref name="sortOrder" /> содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="sortOrder" /> пустой или <paramref name="count" /> не <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> или <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> или имеет тип результата которого не равно и не может быть повышен до 64-разрядного целочисленного типа.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> пропускает указанное число элементов в заданном наборе отсортированных входных данных.
            </summary>
      <param name="argument">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> задающий наборе отсортированных входных данных.
              </param>
      <param name="count">
                Выражение указывает количество элементов упорядоченного набора следует пропустить.
              </param>
      <returns>
              Новый DbSkipExpression, представляющий пропустить операцию.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="argument" /> или <paramref name="count" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="count" /> не <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> или <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> или имеет тип результата которого не равно и не может быть повышен до 64-разрядного целочисленного типа.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> сортирует заданного входного набора в спецификации указанного сортировки.
            </summary>
      <param name="input">
                Привязка выражения, задающее входной набор.
              </param>
      <param name="sortOrder">
                Список правил сортировки, определяющих, как должны быть отсортированы элементы входного набора.
              </param>
      <returns>
              Новый DbSortExpression, который представляет операцию сортировки.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="input" /> или <paramref name="sortOrder" /> имеет значение null, или <paramref name="sortOrder" /> содержит значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="sortOrder" /> пуст.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> ограничивает количество элементов в коллекции аргументов, заданное число предельного значения.
               Связанные результаты не включаются в выходные данные.
            </summary>
      <param name="argument">
                Выражение, определяющее входную коллекцию.
              </param>
      <param name="count">
                Выражение, задающее значение предела.
              </param>
      <returns>
              Новый DbLimitExpression с указанным аргументом и ограничение числа, которое не содержит связанные результаты.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="argument" /> или <paramref name="count" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="argument" /> не имеет тип результатов коллекции  <paramref name="count" /> имеет тип результата, которое больше или может быть повышен для 64-разрядного целочисленного типа.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> с порядком сортировки, включающий порядок сортировки в определенном порядке входной набор вместе с ключом указанного сортировки по возрастанию и параметры сортировки по умолчанию.
            </summary>
      <param name="source">
                DbSortExpression, определяющий упорядоченный входной набор.
              </param>
      <param name="sortKey">
                Метод, определяющий процедуру получения дополнительного выражения ключа сортировки для элемента входного набора.
                 Этот метод должен создавать выражение с типом результата сравнения по порядку, обеспечивает сортировку определение ключа.
              </param>
      <returns>
              Новый DbSortExpression, представляющий новый общий-операция order by.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" /> или <paramref name="sortKey" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="sortKey" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="sortKey" /> не поддерживает тип результата сравнения по порядку.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> с порядком сортировки, включающий порядок сортировки в определенном порядке входной набор вместе с ключом указанного сортировки по возрастанию и с помощью указанных параметров сортировки.
            </summary>
      <param name="source">
                DbSortExpression, определяющий упорядоченный входной набор.
              </param>
      <param name="sortKey">
                Метод, определяющий процедуру получения дополнительного выражения ключа сортировки для элемента входного набора.
                 Этот метод должен создавать выражение с типом результата сравнения по порядку, обеспечивает сортировку определение ключа.
              </param>
      <param name="collation">
                Параметры сортировки для сортировки в группе.
              </param>
      <returns>
              Новый DbSortExpression, представляющий новый общий-операция order by.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" />,  <paramref name="sortKey" /> или <paramref name="collation" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="sortKey" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="sortKey" /> имеет тип результата порядку строк.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="collation" /> является пустым или содержит только пробелы.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> с порядком сортировки, включающий порядок сортировки в определенном порядке входной набор вместе с ключом сортировки, указанный в порядок сортировки по убыванию и параметры сортировки по умолчанию.
            </summary>
      <param name="source">
                DbSortExpression, определяющий упорядоченный входной набор.
              </param>
      <param name="sortKey">
                Метод, определяющий процедуру получения дополнительного выражения ключа сортировки для элемента входного набора.
                 Этот метод должен создавать выражение с типом результата сравнения по порядку, обеспечивает сортировку определение ключа.
              </param>
      <returns>
              Новый DbSortExpression, представляющий новый общий-операция order by.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" /> или <paramref name="sortKey" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="sortKey" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="sortKey" /> не имеет типа результата сравнения по порядку.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> с порядком сортировки, включающий порядок сортировки в определенном порядке входной набор вместе с ключом сортировки, заданного с помощью указанных параметров сортировки и порядок сортировки по убыванию.
            </summary>
      <param name="source">
                DbSortExpression, определяющий упорядоченный входной набор.
              </param>
      <param name="sortKey">
                Метод, определяющий процедуру получения дополнительного выражения ключа сортировки для элемента входного набора.
                 Этот метод должен создавать выражение с типом результата сравнения по порядку, обеспечивает сортировку определение ключа.
              </param>
      <param name="collation">
                Параметры сортировки для сортировки в группе.
              </param>
      <returns>
              Новый DbSortExpression, представляющий новый общий-операция order by.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" />,  <paramref name="sortKey" /> или <paramref name="collation" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="sortKey" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="source" /> не имеет тип результатов коллекции.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="sortKey" /> имеет тип результата порядку строк.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="collation" /> является пустым или содержит только пробелы.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> с восходящий порядок сортировки, сортировки по умолчанию.
            </summary>
      <param name="key">
                Выражение, определяющее ключ сортировки.
              </param>
      <returns>
              Новое предложение сортировки с ключом сортировки заданной и сортировку по возрастанию.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="key" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="key" /> не поддерживает тип результата сравнения по порядку.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> с сортировку по возрастанию и указанные параметры сортировки.
            </summary>
      <param name="key">
                Выражение, определяющее ключ сортировки.
              </param>
      <param name="collation">
                Параметры сортировки для сортировки в группе.
              </param>
      <returns>
              Новое предложение сортировки с ключом сортировки данного и параметры сортировки и сортировку по возрастанию.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="key" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="collation" /> является пустым или содержит только пробелы.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="key" /> не поддерживает тип результата сравнения по порядку.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> порядке и по умолчанию сортировки Сортировка по убыванию.
            </summary>
      <param name="key">
                Выражение, определяющее ключ сортировки.
              </param>
      <returns>
              Новое предложение сортировки с ключом данной сортировки и порядок сортировки по убыванию.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="key" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="key" /> не поддерживает тип результата сравнения по порядку.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> с Сортировка по убыванию и указанные параметры сортировки.
            </summary>
      <param name="key">
                Выражение, определяющее ключ сортировки.
              </param>
      <param name="collation">
                Параметры сортировки для сортировки в группе.
              </param>
      <returns>
              Новое предложение сортировки с помощью данного ключа и параметров сортировки и порядок сортировки по убыванию.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="key" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="collation" /> является пустым или содержит только пробелы.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="key" /> не поддерживает тип результата сравнения по порядку.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
      <summary>
              Создает новый экземпляр <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.
            </summary>
      <param name="argument">
                Выражение, задающее экземпляр.
              </param>
      <param name="treatType">
                Метаданные для заданного типа-тип.
              </param>
      <returns>
              Новый DbTreatExpression с указанным аргументом и тип.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="argument" /> или <paramref name="treatType" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="treatType" /> не находится в той же иерархии типов, как тип результата <paramref name="argument" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> инвертирует значение аргумента.
            </summary>
      <param name="argument">
                Выражение, задающее аргумент.
              </param>
      <returns>
              Новый DbArithmeticExpression, представляющий операцию отрицания.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="argument" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Числовой результат типа не существует для <paramref name="argument" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> вычисляет объединение слева и справа задайте аргументы с удаленными повторениями.
            </summary>
      <param name="left">
                Выражение, определяющее левый аргумент набора.
              </param>
      <param name="right">
                Выражение, определяющее правый аргумент набора.
              </param>
      <returns>
              Новый DbExpression, вычисляет объединение без дубликатов, из левый и правый аргументы.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Нет общего типа результата коллекции с типом элемента равенству существует между <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> вычисляет объединение левый и правый набор аргументов и не удаляет дубликаты.
            </summary>
      <param name="left">
                Выражение, определяющее левый аргумент набора.
              </param>
      <param name="right">
                Выражение, определяющее правый аргумент набора.
              </param>
      <returns>
              Новый наборами DbUnionAllExpression объединения, включая повторения, из левый и правый аргументы.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="left" /> или <paramref name="right" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Нет общего типа результата коллекции с типом элемента равенству существует между <paramref name="left" /> и <paramref name="right" />.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> ссылается на переменную с указанным именем и типом.
            </summary>
      <param name="type">
                Тип переменной, на которую указывает ссылка.
              </param>
      <param name="name">
                Имя упоминаемой переменной.
              </param>
      <returns>
              DbVariableReferenceExpression, представляющий ссылку на переменную с указанным именем и типом.
               Тип результата выражения будет совпадать с <paramref name="type" />.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> фильтрует элементы в данной входной набор с помощью указанным предикатом.
            </summary>
      <param name="source">
                Выражение, задающее входной набор.
              </param>
      <param name="predicate">
                Метод, представляющий предикат, который необходимо вычислить для каждого из элементов входного набора.
                    Этот метод должен создавать выражение с результатом логического типа, реализующее логику предиката.
              </param>
      <returns>
              Новый DbQuantifierExpression, представляющий любой операции.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="source" /> или <paramref name="predicate" /> равно null.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Созданное выражение <paramref name="predicate" /> имеет значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Созданное выражение <paramref name="predicate" /> имеет логический тип.
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает каноническая функция «Abs» с заданным аргументом, который каждый должен иметь числовой тип результатов.
               Тип результата выражения совпадает с типом результата значение.
            </summary>
      <param name="value">
                Выражение, задающее числовое значение.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает абсолютное значение значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  значение
                </exception>
      <exception cref="T:System.ArgumentException">
                  значение
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «AddDays» с указанными аргументами, которые должны иметь типы результата DateTime или DateTimeOffset и целое число со знаком.
               Тип результата выражения совпадает с типом результата dateValue.
            </summary>
      <param name="dateValue">
                Выражение, задающее значение, которое значение addValueдолжны быть добавлены.
              </param>
      <param name="addValue">
                Выражение, задающее число дней для добавления к dateValue.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который добавляет указанное число дней с значение addValue для значения, указанного в dateValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  dateValue
                  значение addValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  dateValue
                  значение addValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «AddHours» с указанными аргументами, который должен содержать DateTime, DateTimeOffset или времени и целочисленные типы результата.
               Тип результата выражения совпадает с типом результата timeValue.
            </summary>
      <param name="timeValue">
                Выражение, задающее значение, которое значение addValueдолжны быть добавлены.
              </param>
      <param name="addValue">
                Выражение, задающее число часов для добавления к timeValue.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который добавляет указанное число часов по значение addValue для значения, указанного в timeValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  timeValue
                  значение addValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  timeValue
                  значение addValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «AddMicroseconds» с указанными аргументами, который должен содержать DateTime, DateTimeOffset или времени и целочисленные типы результата.
               Тип результата выражения совпадает с типом результата timeValue.
            </summary>
      <param name="timeValue">
                Выражение, задающее значение, которое значение addValueдолжны быть добавлены.
              </param>
      <param name="addValue">
                Выражение, задающее число микросекунд для добавления к timeValue.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который добавляет число микросекунд, определяемое значение addValue для значения, указанного в timeValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  timeValue
                  значение addValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  timeValue
                  значение addValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «AddMilliseconds» с указанными аргументами, который должен содержать DateTime, DateTimeOffset или времени и целочисленные типы результата.
               Тип результата выражения совпадает с типом результата timeValue.
            </summary>
      <param name="timeValue">
                Выражение, задающее значение, которое значение addValueдолжны быть добавлены.
              </param>
      <param name="addValue">
                Выражение, задающее число миллисекунд для добавления к timeValue.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который добавляет указанного числа миллисекунд значение addValue для значения, указанного в timeValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  timeValue
                  значение addValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  timeValue
                  значение addValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «AddMinutes» с указанными аргументами, который должен содержать DateTime, DateTimeOffset или времени и целочисленные типы результата.
               Тип результата выражения совпадает с типом результата timeValue.
            </summary>
      <param name="timeValue">
                Выражение, задающее значение, которое значение addValueдолжны быть добавлены.
              </param>
      <param name="addValue">
                Выражение, задающее количество минут, чтобы добавить timeValue.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который добавляет указанное число минут значение addValue для значения, указанного в timeValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  timeValue
                  значение addValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  timeValue
                  значение addValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «AddMonths» с указанными аргументами, которые должны иметь типы результата DateTime или DateTimeOffset и целое число со знаком.
               Тип результата выражения совпадает с типом результата dateValue.
            </summary>
      <param name="dateValue">
                Выражение, задающее значение, которое значение addValueдолжны быть добавлены.
              </param>
      <param name="addValue">
                Выражение, задающее число месяцев для добавления к dateValue.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который добавляет указанное количество месяцев значение addValue для значения, указанного в dateValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  dateValue
                  значение addValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  dateValue
                  значение addValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «AddNanoseconds» с указанными аргументами, который должен содержать DateTime, DateTimeOffset или времени и целочисленные типы результата.
               Тип результата выражения совпадает с типом результата timeValue.
            </summary>
      <param name="timeValue">
                Выражение, задающее значение, которое значение addValueдолжны быть добавлены.
              </param>
      <param name="addValue">
                Выражение, задающее число наносекунд для добавления к timeValue.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который добавляет число наносекунд, заданные значение addValue для значения, указанного в timeValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  timeValue
                  значение addValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  timeValue
                  значение addValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «AddSeconds» с указанными аргументами, который должен содержать DateTime, DateTimeOffset или времени и целочисленные типы результата.
               Тип результата выражения совпадает с типом результата timeValue.
            </summary>
      <param name="timeValue">
                Выражение, задающее значение, которое значение addValueдолжны быть добавлены.
              </param>
      <param name="addValue">
                Выражение, задающее число секунд для добавления к timeValue.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, добавляющий заданное число секунд с значение addValue для значения, указанного в timeValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  timeValue
                  значение addValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  timeValue
                  значение addValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «AddYears» с указанными аргументами, которые должны иметь типы результата DateTime или DateTimeOffset и целое число со знаком.
               Тип результата выражения совпадает с типом результата dateValue.
            </summary>
      <param name="dateValue">
                Выражение, задающее значение, которое значение addValueдолжны быть добавлены.
              </param>
      <param name="addValue">
                Выражение, задающее число лет для добавления к dateValue.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который добавляет указанное количество лет значение addValue для значения, указанного в dateValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  dateValue
                  значение addValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  dateValue
                  значение addValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Avg" для указанной коллекции.
               Тип результата выражения совпадает с типом элемента коллекции.
            </summary>
      <param name="collection">
                Выражение, задающее коллекцию, для которой должно быть вычислено среднее значение.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, создающее среднее значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  коллекция
                </exception>
      <exception cref="T:System.ArgumentException">
                  коллекция
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «BitwiseAnd» с указанными аргументами, которые должен иметь тот же тип числового результата целое число со знаком.
               Тип результата выражения совпадает с типом аргументов.
            </summary>
      <param name="value1">
                Выражение, задающее первый операнд.
              </param>
      <param name="value2">
                Выражение, задающее второй операнд.
              </param>
      <returns>
              Созданный новый выражении DbFunctionExpression, которая возвращает значение, выполняя побитовое и значение1 и value2.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  value1
                  value2
                </exception>
      <exception cref="T:System.ArgumentException">
                  value1
                  value2
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «BitwiseNot» с заданным аргументом, который должен иметь целочисленный тип числовой результат.
               Тип результата выражения совпадает с типом аргументов.
            </summary>
      <param name="value">
                Выражение, задающее первый операнд.
              </param>
      <returns>
              Созданный новый выражении DbFunctionExpression, которое возвращает значение выполнение побитовой не значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  значение
                </exception>
      <exception cref="T:System.ArgumentException">
                  значение
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «BitwiseOr» с указанными аргументами, которые должен иметь тот же тип числового результата целое число со знаком.
               Тип результата выражения совпадает с типом аргументов.
            </summary>
      <param name="value1">
                Выражение, задающее первый операнд.
              </param>
      <param name="value2">
                Выражение, задающее второй операнд.
              </param>
      <returns>
              Созданный новый выражении DbFunctionExpression, которая возвращает значение, выполняя битовую операцию OR для значение1 и value2.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  value1
                  value2
                </exception>
      <exception cref="T:System.ArgumentException">
                  value1
                  value2
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «BitwiseXor» с указанными аргументами, которые должен иметь тот же тип числового результата целое число со знаком.
               Тип результата выражения совпадает с типом аргументов.
            </summary>
      <param name="value1">
                Выражение, задающее первый операнд.
              </param>
      <param name="value2">
                Выражение, задающее второй операнд.
              </param>
      <returns>
              Созданный новый выражении DbFunctionExpression, которая возвращает значение, выполняя побитовое исключающее или (исключающее или) значение1 и value2.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  value1
                  value2
                </exception>
      <exception cref="T:System.ArgumentException">
                  value1
                  value2
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает каноническая функция «Ceiling» с заданным аргументом, который каждый должен иметь тип результата один, double или decimal.
               Тип результата выражения совпадает с типом результата значение.
            </summary>
      <param name="value">
                Выражение, задающее числовое значение.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает наименьшее целочисленное значение не меньше, чем значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  значение
                </exception>
      <exception cref="T:System.ArgumentException">
                  значение
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает каноническая функция «Concat» с указанными аргументами, которые каждый должен иметь тип строки результата.
               Типом результата выражения является строка.
            </summary>
      <param name="string1">
                Выражение, задающее строку, которая должна отображаться первой в сцепленной результирующей строке.
              </param>
      <param name="string2">
                Выражение, задающее строку, которая должна оказаться второй в сцепленной результирующей строке.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, создающий сцепленную строку.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  string1
                  string2
                </exception>
      <exception cref="T:System.ArgumentException">
                  string1
                  string2
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «Содержит» с указанными аргументами, которые каждый должен иметь тип строки результата.
               Тип результата выражения является логическое значение.
            </summary>
      <param name="searchedString">
                Выражение, задающее строку для поиска любого вхождения searchedForString.
              </param>
      <param name="searchedForString">
                Выражение, задающее строку для поиска в searchedString.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, ли searchedForString внутри searchedString.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  searchedString
                  searchedForString
                </exception>
      <exception cref="T:System.ArgumentException">
                  searchedString
                  searchedForString
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Count" для указанной коллекции.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="collection">
                Выражение, задающее коллекцию, для которой должно быть вычислено значение счетчика.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, создающее значение счетчика.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  коллекция
                </exception>
      <exception cref="T:System.ArgumentException">
                  коллекция
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «CreateDateTime» с указанными аргументами.
              второй должен иметь тип результата EDM.Double, а все остальные аргументы должны иметь тип результата Edm.Int32.
               Тип результата выражения — Edm.DateTime.
            </summary>
      <param name="year">
                Выражение, предоставляющее значение года для нового экземпляра DateTime.
              </param>
      <param name="month">
                Выражение, предоставляющее значение месяца для нового экземпляра DateTime.
              </param>
      <param name="day">
                Выражение, предоставляющее значение дня для нового экземпляра DateTime.
              </param>
      <param name="hour">
                Выражение, предоставляющее значение часа для нового экземпляра DateTime.
              </param>
      <param name="minute">
                Выражение, предоставляющее значение минуты для нового экземпляра DateTime.
              </param>
      <param name="second">
                Выражение, предоставляющее значение секунд для нового экземпляра DateTime.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращает значение новой DateTime на основании указанных значений.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  год
                  месяц
                  день
                  час
                  минуты
                  second
                </exception>
      <exception cref="T:System.ArgumentException">
                  год
                  месяц
                  день
                  час
                  минуты
                  second
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «CreateDateTimeOffset» с указанными аргументами.
              второй должен иметь тип результата EDM.Double, а все остальные аргументы должны иметь тип результата Edm.Int32.
               Тип результата выражения — Edm.DateTimeOffset.
            </summary>
      <param name="year">
                Выражение, предоставляющее значение года для нового экземпляра DateTimeOffset.
              </param>
      <param name="month">
                Выражение, предоставляющее значение месяца для нового экземпляра DateTimeOffset.
              </param>
      <param name="day">
                Выражение, предоставляющее значение дня для нового экземпляра DateTimeOffset.
              </param>
      <param name="hour">
                Выражение, предоставляющее значение часа для нового экземпляра DateTimeOffset.
              </param>
      <param name="minute">
                Выражение, предоставляющее значение минуты для нового экземпляра DateTimeOffset.
              </param>
      <param name="second">
                Выражение, предоставляющее значение секунд для нового экземпляра DateTimeOffset.
              </param>
      <param name="timeZoneOffset">
                Выражение, предоставляющее число минут в значении смещения часового пояса для нового экземпляра DateTimeOffset.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает новый DateTimeOffset на основании указанных значений.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  год
                  месяц
                  день
                  час
                  минуты
                  second
                  Смещение
                </exception>
      <exception cref="T:System.ArgumentException">
                  год
                  месяц
                  день
                  час
                  минуты
                  second
                  Смещение
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «CreateTime» с указанными аргументами.
              второй должен иметь тип результата EDM.Double, а все остальные аргументы должны иметь тип результата Edm.Int32.
               Тип результата выражения — Edm.Time.
            </summary>
      <param name="hour">
                Выражение, предоставляющее значение часа для нового экземпляра DateTime.
              </param>
      <param name="minute">
                Выражение, предоставляющее значение минуты для нового экземпляра DateTime.
              </param>
      <param name="second">
                Выражение, предоставляющее значение секунд для нового экземпляра DateTime.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает новое значение времени на основании указанных значений.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  час
                  минуты
                  second
                </exception>
      <exception cref="T:System.ArgumentException">
                  час
                  минуты
                  second
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «Текущие_тада_и_время».
            </summary>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает текущую дату и время в виде экземпляра Edm.DateTime.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «CurrentDateTimeOffset».
            </summary>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает текущую дату и время в виде экземпляра Edm.DateTimeOffset.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «CurrentUtcDateTime».
            </summary>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает текущую дату в формате UTC и время в виде экземпляра Edm.DateTime.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Day с заданным аргументом, который должен иметь тип результата DateTime или DateTimeOffset.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="dateValue">
                Выражение, задающее значение, из которого требуется извлечь день.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает целочисленное значение дня из dateValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  dateValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  dateValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию DayOfYear с заданным аргументом, который должен иметь тип результата DateTime или DateTimeOffset.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="dateValue">
                Выражение, задающее значение, из которого требуется извлечь день года.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает целочисленное значение дня года из dateValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  dateValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  dateValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «DiffDays» с указанными аргументами, которые должны иметь DateTime или DateTimeOffset результирующего типа.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="dateValue1">
                Выражение, задающее первый аргумент значение даты.
              </param>
      <param name="dateValue2">
                Выражение, задающее второй аргумент значение даты.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает число дней, разница между dateValue1 и dateValue2.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «DiffHours» с указанными аргументами, которые должны иметь DateTime, DateTimeOffset или времени типом результата.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="timeValue1">
                Выражение, задающее первого аргумента значение времени.
              </param>
      <param name="timeValue2">
                Выражение, задающее второго аргумента значение времени.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий число часов, разница между timeValue1 и timeValue2.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «DiffMicroseconds» с указанными аргументами, которые должны иметь DateTime, DateTimeOffset или времени типом результата.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="timeValue1">
                Выражение, задающее первого аргумента значение времени.
              </param>
      <param name="timeValue2">
                Выражение, задающее второго аргумента значение времени.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает число микросекунд, разница между timeValue1 и timeValue2.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «DiffMilliseconds» с указанными аргументами, которые должны иметь DateTime, DateTimeOffset или времени типом результата.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="timeValue1">
                Выражение, задающее первого аргумента значение времени.
              </param>
      <param name="timeValue2">
                Выражение, задающее второго аргумента значение времени.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий число миллисекунд, разница между timeValue1 и timeValue2.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «DiffMinutes» с указанными аргументами, которые должны иметь DateTime, DateTimeOffset или времени типом результата.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="timeValue1">
                Выражение, задающее первого аргумента значение времени.
              </param>
      <param name="timeValue2">
                Выражение, задающее второго аргумента значение времени.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает количество минут, разница между timeValue1 и timeValue2.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «DiffMonths» с указанными аргументами, которые должны иметь DateTime или DateTimeOffset результирующего типа.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="dateValue1">
                Выражение, задающее первый аргумент значение даты.
              </param>
      <param name="dateValue2">
                Выражение, задающее второй аргумент значение даты.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий число месяцев, разница между dateValue1 и dateValue2.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «DiffNanoseconds» с указанными аргументами, которые должны иметь DateTime, DateTimeOffset или времени типом результата.
               Тип результата выражения — Edm.Int32.
            </summary>
      <param name="timeValue1">
                Выражение, задающее первого аргумента значение времени.
              </param>
      <param name="timeValue2">
                Выражение, задающее второго аргумента значение времени.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий число наносекунд, разница между timeValue1 и timeValue2.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «DiffSeconds» с указанными аргументами, которые должны иметь DateTime, DateTimeOffset или времени типом результата.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="timeValue1">
                Выражение, задающее первого аргумента значение времени.
              </param>
      <param name="timeValue2">
                Выражение, задающее второго аргумента значение времени.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает количество секунд, разница между timeValue1 и timeValue2.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «DiffYears» с указанными аргументами, которые должны иметь DateTime или DateTimeOffset результирующего типа.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="dateValue1">
                Выражение, задающее первый аргумент значение даты.
              </param>
      <param name="dateValue2">
                Выражение, задающее второй аргумент значение даты.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий число лет, разница между dateValue1 и dateValue2.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «EndsWith» с указанными аргументами, которые каждый должен иметь тип строки результата.
               Тип результата выражения является логическое значение.
            </summary>
      <param name="stringArgument">
                Выражение, задающее строку, поиск которого выполняется в конце строки суффикс.
              </param>
      <param name="suffix">
                Выражение, задающее целевая строка, поиск в конце stringArgument.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, ли stringArgument заканчивается суффикс.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «Floor» с заданным аргументом, который каждый должен иметь тип результата один, double или decimal.
               Тип результата выражения совпадает с типом результата значение.
            </summary>
      <param name="value">
                Выражение, задающее числовое значение.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает наибольшее целочисленное значение не больше значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  значение
                </exception>
      <exception cref="T:System.ArgumentException">
                  значение
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GetTotalOffsetMinutes» с заданным аргументом, который должен иметь тип результата DateTimeOffset.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="dateTimeOffsetArgument">
                Выражение, задающее значение DateTimeOffset, из которого требуется извлечь смещение от времени по Гринвичу в минутах.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает число минут dateTimeOffsetArgument смещение от времени по Гринвичу.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  dateTimeOffsetArgument
                </exception>
      <exception cref="T:System.ArgumentException">
                  dateTimeOffsetArgument
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Hour с заданным аргументом, который должен иметь тип результата DateTime, DateTimeOffset или Time.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="timeValue">
                Выражение, задающее значение, из которого требуется извлечь час.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает целочисленное значение часа из timeValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  timeValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  timeValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «IndexOf» с указанными аргументами, которые каждый должен иметь тип строки результата.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="searchString">
                Выражение, задающее строку для поиска stringToFind.
              </param>
      <param name="stringToFind">
                Выражение, задающее строку для поиска в searchString должен быть установлен.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает первый индекс stringToFind в searchString.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  searchString
                  stringToFind
                </exception>
      <exception cref="T:System.ArgumentException">
                  searchString
                  stringToFind
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Left с заданным аргументом, который должен иметь строковый и целочисленный тип результата.
               Типом результата выражения является строка.
            </summary>
      <param name="stringArgument">
                Выражение, задающее строку, из которой требуется извлечь крайнюю левую подстроку.
              </param>
      <param name="length">
                Выражение, задающее длину крайней левой подстроки, которую требуется извлечь из stringArgument.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает крайнюю левую подстроку длиной length из stringArgument.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  stringArgument
                  длина
                </exception>
      <exception cref="T:System.ArgumentException">
                  stringArgument
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Length с заданным аргументом, который должен иметь строковой тип результата.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="stringArgument">
                Выражение, задающее строку, для которой должно быть вычислено значение длины.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает длину stringArgument.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  stringArgument
                </exception>
      <exception cref="T:System.ArgumentException">
                  stringArgument
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "BigCount" для указанной коллекции.
               Тип результата выражения — Edm.Int64.
            </summary>
      <param name="collection">
                Выражение, задающее коллекцию, для которой должно быть вычислено значение счетчика.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, создающее значение счетчика.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  коллекция
                </exception>
      <exception cref="T:System.ArgumentException">
                  коллекция
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Max" для указанной коллекции.
               Тип результата выражения совпадает с типом элемента коллекции.
            </summary>
      <param name="collection">
                Выражение, задающее коллекцию, для которой должно быть извлечено максимальное значение.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, создающее максимальное значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  коллекция
                </exception>
      <exception cref="T:System.ArgumentException">
                  коллекция
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Millisecond с заданным аргументом, который должен иметь тип результата DateTime, DateTimeOffset или Time.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="timeValue">
                Выражение, задающее значение, из которого требуется извлечь миллисекунду.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает целочисленное значение миллисекунды из timeValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  timeValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  timeValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Min" для указанной коллекции.
               Тип результата выражения совпадает с типом элемента коллекции.
            </summary>
      <param name="collection">
                Выражение, задающее коллекцию, для которой должно быть извлечено минимальное значение.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, создающее минимальное значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  коллекция
                </exception>
      <exception cref="T:System.ArgumentException">
                  коллекция
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Minute с заданным аргументом, который должен иметь тип результата DateTime, DateTimeOffset или Time.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="timeValue">
                Выражение, задающее значение, из которого требуется извлечь минуту.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает целочисленное значение минуты из timeValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  timeValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  timeValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Month с заданным аргументом, который должен иметь тип результата DateTime или DateTimeOffset.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="dateValue">
                Выражение, задающее значение, из которого требуется извлечь месяц.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает целочисленное значение месяца из dateValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  dateValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  dateValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «NewGuid».
            </summary>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает новое значение GUID.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «Power» с указанными аргументами, которые должны иметь типы числовой результат.
               Тип результата выражения совпадает с типом результата baseArgument.
            </summary>
      <param name="baseArgument">
                Выражение, задающее числовое значение, возведенное в заданную степень.
              </param>
      <param name="exponent">
                Выражение, задающее степень, в которую baseArgument должна возникать.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает значение baseArgument возведенное в степень, заданную экспоненты.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  baseArgument
                  показатель степени
                </exception>
      <exception cref="T:System.ArgumentException">
                  baseArgument
                  показатель степени
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «Replace» с указанными аргументами, которые каждый должен иметь тип строки результата.
               Типом результата выражения также является строка.
            </summary>
      <param name="stringArgument">
                Выражение, задающее строку, в которой для выполнения операции замены.
              </param>
      <param name="toReplace">
                Выражение, задающее строку, которая заменяется.
              </param>
      <param name="replacement">
                Выражение, задающее строку замены.
              </param>
      <returns>
              На основе новых выражении DbFunctionExpression возвращает новую строку stringArgument где каждое вхождение  заменяется замены.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  stringArgument
                  Не
                  Замена
                </exception>
      <exception cref="T:System.ArgumentException">
                  stringArgument
                  Не
                  Замена
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Reverse с заданным аргументом, который должен иметь строковой тип результата.
               Типом результата выражения также является строка.
            </summary>
      <param name="stringArgument">
                Выражение, определяющее строку, порядок элементов которой нужно изменить на обратный.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, создающее обратное значение stringArgument.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  stringArgument
                </exception>
      <exception cref="T:System.ArgumentException">
                  stringArgument
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Right с заданным аргументом, который должен иметь строковой тип результата.
               Типом результата выражения является строка.
            </summary>
      <param name="stringArgument">
                Выражение, задающее строку, из которой требуется извлечь крайнюю правую подстроку.
              </param>
      <param name="length">
                Выражение, задающее длину крайней правой подстроки, которую требуется извлечь из stringArgument.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает крайнюю правую подстроку длиной length из stringArgument.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  stringArgument
                  длина
                </exception>
      <exception cref="T:System.ArgumentException">
                  stringArgument
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «Round» с заданным аргументом, который каждый должен иметь тип результата один, double или decimal.
               Тип результата выражения совпадает с типом результата значение.
            </summary>
      <param name="value">
                Выражение, задающее числовое значение для округления.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, округляется до ближайшего целого значения заданного аргумента.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  значение
                </exception>
      <exception cref="T:System.ArgumentException">
                  значение
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «Round» с заданными аргументами, которые должны иметь один, double или decimal и целочисленные типы результатов.
               Тип результата выражения совпадает с типом результата значение.
            </summary>
      <param name="value">
                Выражение, задающее числовое значение для округления.
              </param>
      <param name="digits">
                Выражение, задающее количество разрядов точности для округления.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, округляется до ближайшего целого значения с точностью в соответствии с указанный аргумент цифры.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  значение
                  digits
                </exception>
      <exception cref="T:System.ArgumentException">
                  значение
                  digits
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Second с заданным аргументом, который должен иметь тип результата DateTime, DateTimeOffset или Time.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="timeValue">
                Выражение, задающее значение, из которого требуется извлечь секунду.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает целочисленное значение секунды из timeValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  timeValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  timeValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «StartsWith» с указанными аргументами, которые каждый должен иметь тип строки результата.
               Тип результата выражения является логическое значение.
            </summary>
      <param name="stringArgument">
                Выражение, которое указывает строку, которая ищется в начале строки префикс.
              </param>
      <param name="prefix">
                Выражение, задающее целевая строка, который ищется в начале stringArgument.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, ли stringArgument начинается с префикс.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "StDev" над не равными NULL членами указанной коллекции.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="collection">
                Выражение, задающее коллекцию, для которой должно быть вычислено значение среднеквадратичного отклонения.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, создающее значение среднеквадратичного отклонения для членов коллекции, отличных от NULL.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  коллекция
                </exception>
      <exception cref="T:System.ArgumentException">
                  коллекция
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "StDevP" над популяцией указанной коллекции.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="collection">
                Выражение, задающее коллекцию, для которой должно быть вычислено значение среднеквадратичного отклонения.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, создающее значение среднеквадратичного отклонения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  коллекция
                </exception>
      <exception cref="T:System.ArgumentException">
                  коллекция
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «Substring» с указанными аргументами, которые должны иметь числовой результат строковые и числовые типы.
               Типом результата выражения является строка.
            </summary>
      <param name="stringArgument">
                Выражение, задающее строку, из которой требуется извлечь подстроку.
              </param>
      <param name="start">
                Выражение, задающее начальный индекс, с которого подстроки.
              </param>
      <param name="length">
                Выражение, задающее длину подстроки.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает подстроку длины Длина из stringArgument начиная с запустить.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  stringArgument
                  начало
                  длина
                </exception>
      <exception cref="T:System.ArgumentException">
                  stringArgument
                  начало
                  длина
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Sum" для указанной коллекции.
               Тип результата выражения совпадает с типом элемента коллекции.
            </summary>
      <param name="collection">
                Выражение, задающее коллекцию, для которой должно быть вычислено значение суммы.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, создающее значение суммы.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  коллекция
                </exception>
      <exception cref="T:System.ArgumentException">
                  коллекция
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию ToLower с заданным аргументом, который должен иметь строковый тип результата.
               Типом результата выражения также является строка.
            </summary>
      <param name="stringArgument">
                Выражение, задающее строку, которая должна быть преобразована в нижний регистр.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает значение stringArgument, преобразованное в нижний регистр.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  stringArgument
                </exception>
      <exception cref="T:System.ArgumentException">
                  stringArgument
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию ToUpper с заданным аргументом, который должен иметь строковой тип результата.
               Типом результата выражения также является строка.
            </summary>
      <param name="stringArgument">
                Выражение, задающее строку, которая должна быть преобразована в верхний регистр.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает значение stringArgument, преобразованное в верхний регистр.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  stringArgument
                </exception>
      <exception cref="T:System.ArgumentException">
                  stringArgument
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Trim с заданным аргументом, который должен иметь строковый тип результата.
               Типом результата выражения также является строка.
            </summary>
      <param name="stringArgument">
                Выражение, задающее строку, из которой должны быть удалены начальный и конечный пробелы.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает значение stringArgument с удаленными начальным и конечным пробелами.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  stringArgument
                </exception>
      <exception cref="T:System.ArgumentException">
                  stringArgument
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию RTrim с заданным аргументом, который должен иметь строковой тип результата.
               Типом результата выражения также является строка.
            </summary>
      <param name="stringArgument">
                Выражение, задающее строку, из которой должен быть удален конечный пробел.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает значение stringArgument с удаленным конечным пробелом.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  stringArgument
                </exception>
      <exception cref="T:System.ArgumentException">
                  stringArgument
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию LTrim с заданным аргументом, который должен иметь строковый тип результата.
               Типом результата выражения также является строка.
            </summary>
      <param name="stringArgument">
                Выражение, задающее строку, из которой должен быть удален начальный пробел.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает значение stringArgument с удаленным начальным пробелом.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  stringArgument
                </exception>
      <exception cref="T:System.ArgumentException">
                  stringArgument
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «Truncate» с заданными аргументами, которые должны иметь один, double или decimal и целочисленные типы результатов.
               Тип результата выражения совпадает с типом результата значение.
            </summary>
      <param name="value">
                Выражение, задающее числовое значение для усечения.
              </param>
      <param name="digits">
                Выражение, задающее количество разрядов точности для усечения.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, усекающей указанный аргумент до ближайшего целого значения с точностью в соответствии с цифры.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  значение
                  digits
                </exception>
      <exception cref="T:System.ArgumentException">
                  значение
                  digits
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию TruncateTime с заданным аргументом, который должен иметь тип результата DateTime или DateTimeOffset.
               Тип результата выражения совпадает с типом результата dateValue.
            </summary>
      <param name="dateValue">
                Выражение, задающее значение, для которого должен быть усечен промежуток времени.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает значение dateValue со временем, равным нулю.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  dateValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  dateValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "Var" над не равными NULL членами указанной коллекции.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="collection">
                Выражение, задающее коллекцию, для которой должно быть вычислено значение статистической дисперсии.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, создающее значение статистической дисперсии для членов коллекции, отличных от NULL.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  коллекция
                </exception>
      <exception cref="T:System.ArgumentException">
                  коллекция
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию "VarP" над популяцией указанной коллекции.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="collection">
                Выражение, задающее коллекцию, для которой должно быть вычислено значение статистической дисперсии.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, создающее значение статистической дисперсии.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  коллекция
                </exception>
      <exception cref="T:System.ArgumentException">
                  коллекция
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
               Создает объект <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, вызывающий каноническую функцию Year с заданным аргументом, который должен иметь тип результата DateTime или DateTimeOffset.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="dateValue">
                Выражение, задающее значение, из которого требуется извлечь год.
              </param>
      <returns>
              Новое выражение DbFunctionExpression, которое возвращает целочисленное значение года из dateValue.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  dateValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  dateValue
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" /> с заданным первого столбца и необязательный столбец последовательные значения.
            </summary>
      <param name="columnValue">
                Пара ключ значение, задающая первый столбец в новом экземпляре строки.
                 (обязательно)
              </param>
      <param name="columnValues">
                Пары ключ значение, которые предоставляют все последующие столбцы в новом экземпляре строки.
                 (необязательно)
              </param>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)~System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Преобразует указанной строки <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
      <param name="row">
                Строка для преобразования.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий преобразованный строку.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> создает новую строку на основе столбцов, содержащихся в этом экземпляре строки.
            </summary>
      <returns>
              Новый DbNewInstanceExpression, которая создает строку с теми же именами столбцов и DbExpression значения данного экземпляра строки.
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает функцию с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry канонические «Область».
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="spatialValue">
                Выражение, задающее пространственное значение поверхности, для которого вычисляется области.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает либо области <paramref name="spatialValue" /> или <see langword="null" /> Если <paramref name="spatialValue" /> не поверхности.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «AsBinary» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата выражения — Edm.Binary.
            </summary>
      <param name="spatialValue">
                Выражение, задающее пространственное значение, из которого должно быть произведено известного двоичное представление.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий известные двоичное представление <paramref name="spatialValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «AsGml» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата выражения — Edm.String.
            </summary>
      <param name="spatialValue">
                Выражение, задающее пространственное значение, из которого должны создаваться представление языка разметки Geography (GML).
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает представление языка разметки Geography (GML) <paramref name="spatialValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «AsText» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата выражения — Edm.String.
            </summary>
      <param name="spatialValue">
                Выражение, задающее пространственное значение, из которого должно быть произведено хорошо известных текстовое представление.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий известные текстовое представление <paramref name="spatialValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «Центроид» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="geometryValue">
                Выражение, задающее значение поверхности geometry, из которого требуется извлечь центроид.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращает либо центроид точку <paramref name="geometryValue" /> (которые могут оказаться на саму область) или <see langword="null" /> Если <paramref name="geometryValue" /> не поверхности.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «CoordinateSystemId» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="spatialValue">
                Выражение, задающее значение, из которого требуется извлечь идентификатор системы координат (SRID).
              </param>
      <returns>
              Значение нового выражении DbFunctionExpression, который возвращает целое число, SRID <paramref name="spatialValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «Расстояние» с указанными аргументами, которые каждый должен иметь тип результата Edm.Geography или Edm.Geometry.
                Тип результата <paramref name="spatialValue1" /> должны совпадать тип результата <paramref name="spatialValue2" />.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="spatialValue1">
                Выражение, задающее значение первого пространственных.
              </param>
      <param name="spatialValue2">
                Выражение, задающее расстояние от пространственных значения, из которого <paramref name="spatialValue1" /> должна измеряться.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает расстояние между ближайшую точку в <paramref name="spatialValue1" /> и <paramref name="spatialValue1" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «Повышение» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="spatialValue">
                Выражение, задающее значение пространственных точки, из которого следует извлечь значения высоты (координата Z).
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает значения высоты для <paramref name="spatialValue" /> или <see langword="null" /> Если <paramref name="spatialValue" /> не является точкой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «EndPoint» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата совпадает с <paramref name="spatialValue" />.
            </summary>
      <param name="spatialValue">
                Выражение, задающее значение пространственных кривой, из которого требуется извлечь конечной точки.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает конечную точку из <paramref name="spatialValue" /> или <see langword="null" /> Если <paramref name="spatialValue" /> не кривой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «ExteriorRing» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает внешнее кольцо многоугольника <paramref name="geometryValue" /> или <see langword="null" /> Если <paramref name="geometryValue" /> не многоугольника.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyCollectionFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyCollectionFromBinary» с указанными аргументами.
              <paramref name="geographyCollectionWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="geographyCollectionWellKnownBinaryValue">
                Выражение, предоставляющее известного двоичное представление значения коллекции geography.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) со значением коллекции географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение коллекции geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyCollectionWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyCollectionWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyCollectionFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyCollectionFromText» с указанными аргументами.
              <paramref name="geographyCollectionWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="geographyCollectionWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения коллекции geography.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) со значением коллекции географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение коллекции geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyCollectionWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyCollectionWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromBinary(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyFromBinary» с заданным аргументом, который должен иметь тип двоичный результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="wellKnownBinaryValue">
                Выражение, предоставляющее хорошо известных двоичное представление значения geography.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение записи geography на основе указанного двоичного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinaryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="wellKnownBinaryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyFromBinary» с указанными аргументами.
              <paramref name="wellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="wellKnownBinaryValue">
                Выражение, предоставляющее хорошо известных двоичное представление значения geography.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее значение географических координат идентификатор системы координат (SRID).
              </param>
      <returns>
              Новый выражении DbFunctionExpression нового значения geography, в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="wellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromGml(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyFromGml» с заданным аргументом, который должен иметь тип строки результата.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="geographyMarkup">
                Выражение, предоставляющее представление значения geography в язык разметки Geography (GML).
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает новое значение geography на основе заданного значения с идентификатор системы координат по умолчанию (SRID) базового поставщика.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyMarkup" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyMarkup" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromGml(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyFromGml» с указанными аргументами.
              <paramref name="geographyMarkup" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="geographyMarkup">
                Выражение, предоставляющее представление значения geography в язык разметки Geography (GML).
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее значение географических координат идентификатор системы координат (SRID).
              </param>
      <returns>
              Новый выражении DbFunctionExpression нового значения geography, в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyMarkup" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyMarkup" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromText(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyFromText» с заданным аргументом, который должен иметь тип строки результата.
               Тип результата выражения — Edm.Geography.
               Его значение имеет идентификатор системы координат (SRID) по умолчанию базового поставщика.
            </summary>
      <param name="wellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения типа geography.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает новое значение geography на основе заданного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="wellKnownText" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyFromText» с указанными аргументами.
              <paramref name="wellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="wellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения типа geography.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее значение географических координат идентификатор системы координат (SRID).
              </param>
      <returns>
              Новый выражении DbFunctionExpression нового значения geography, в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="wellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyLineFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyLineFromBinary» с указанными аргументами.
              <paramref name="lineWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="lineWellKnownBinaryValue">
                Выражение, предоставляющее значение строки geography хорошо известных двоичное представление.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение строки географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение строки geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="lineWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyLineFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyLineFromText» с указанными аргументами.
              <paramref name="lineWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="lineWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения строки geography.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение строки географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение строки geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="lineWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiLineFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyMultiLineFromBinary» с указанными аргументами.
              <paramref name="multiLineWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="multiLineWellKnownBinaryValue">
                Выражение, предоставляющее хорошо известных двоичное представление значения многострочного geography.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение многострочного географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение многострочного geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiLineWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiLineWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiLineFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyMultiLineFromText» с указанными аргументами.
              <paramref name="multiLineWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="multiLineWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения многострочного geography.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение многострочного географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение многострочного geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiLineWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiLineWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPointFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyMultiPointFromBinary» с указанными аргументами.
              <paramref name="multiPointWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="multiPointWellKnownBinaryValue">
                Выражение, предоставляющее хорошо известных двоичное представление значения многоточечного geography.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение многоточечного географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение многоточечного geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiPointWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiPointWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPointFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyMultiPointFromText» с указанными аргументами.
              <paramref name="multiPointWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="multiPointWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения многоточечного geography.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение многоточечного географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение многоточечного geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiPointWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiPointWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPolygonFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyMultiPolygonFromBinary» с указанными аргументами.
              <paramref name="multiPolygonWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="multiPolygonWellKnownBinaryValue">
                Выражение, предоставляющее известного двоичное представление значения нескольких многоугольников geography.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение нескольких многоугольников географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение нескольких многоугольников geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiPolygonWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiPolygonWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPolygonFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyMultiPolygonFromText» с указанными аргументами.
              <paramref name="multiPolygonWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="multiPolygonWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения нескольких многоугольников geography.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение нескольких многоугольников географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение нескольких многоугольников geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiPolygonWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiPolygonWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPointFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyPointFromBinary» с указанными аргументами.
              <paramref name="pointWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="pointWellKnownBinaryValue">
                Выражение, предоставляющее известного двоичное представление географического объекта точки.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) из координат systempointWellKnownBinaryValue значение точки geography.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий новый geography точки значение на основании указанных значений.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pointWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="pointWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPointFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyPointFromText» с указанными аргументами.
            </summary>
      <param name="pointWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление географического объекта точки.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) из координат systempointWellKnownTextValue значение точки geography.
              </param>
      <returns>
              Каноническая функция «GeographyPointFromText».
            </returns>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPolygonFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyPolygonFromBinary» с указанными аргументами.
              <paramref name="polygonWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="polygonWellKnownBinaryValue">
                Выражение, предоставляющее хорошо известных двоичное представление значения geography polygon.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение многоугольника географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение многоугольника geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="polygonWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPolygonFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeographyPolygonFromText» с указанными аргументами.
              <paramref name="polygonWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geography.
            </summary>
      <param name="polygonWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения geography polygon.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение многоугольника географических координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение многоугольника geography в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="polygonWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryCollectionFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryCollectionFromBinary» с указанными аргументами.
              <paramref name="geometryCollectionWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="geometryCollectionWellKnownBinaryValue">
                Выражение, предоставляющее известного двоичное представление значения коллекции geometry.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) со значением коллекции geometry системы координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение коллекции geometry в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryCollectionWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryCollectionWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryCollectionFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryCollectionFromText» с указанными аргументами.
              <paramref name="geometryCollectionWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="geometryCollectionWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения коллекции geometry.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) со значением коллекции geometry системы координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение коллекции geometry в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryCollectionWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryCollectionWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromBinary(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryFromBinary» с заданным аргументом, который должен иметь тип двоичный результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="wellKnownBinaryValue">
                Выражение, предоставляющее хорошо известных двоичное представление значения geometry.
              </param>
      <returns>
              Новый выражении DbFunctionExpression нового значения geometry, на основе указанного двоичного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinaryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="wellKnownBinaryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryFromBinary» с указанными аргументами.
              <paramref name="wellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="wellKnownBinaryValue">
                Выражение, предоставляющее хорошо известных двоичное представление значения geometry.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение geometry системы координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression нового значения geometry, в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="wellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromGml(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryFromGml» с заданным аргументом, который должен иметь тип строки результата.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="geometryMarkup">
                Выражение, предоставляющее представление значения geometry в язык разметки Geography (GML).
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает новое значение геометрического объекта на основе заданного значения с идентификатор системы координат по умолчанию (SRID) базового поставщика.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryMarkup" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryMarkup" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromGml(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryFromGml» с указанными аргументами.
              <paramref name="geometryMarkup" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="geometryMarkup">
                Выражение, предоставляющее представление значения geometry в язык разметки Geography (GML).
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение geometry системы координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression нового значения geometry, в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryMarkup" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryMarkup" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromText(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryFromText» с заданным аргументом, который должен иметь тип строки результата.
               Тип результата выражения — Edm.Geometry.
               Его значение имеет идентификатор системы координат (SRID) по умолчанию базового поставщика.
            </summary>
      <param name="wellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения типа geometry.
              </param>
      <returns>
              Новый выражении DbFunctionExpression нового значения geometry, на основе указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="wellKnownText" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryFromText» с указанными аргументами.
              <paramref name="wellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="wellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения типа geometry.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение geometry системы координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression нового значения geometry, в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="wellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryLineFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryLineFromBinary» с указанными аргументами.
              <paramref name="lineWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="lineWellKnownBinaryValue">
                Выражение, предоставляющее хорошо известных двоичное представление значения строки геометрического объекта.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) системы координат, значение строки геометрического объекта.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение строки geometry в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="lineWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryLineFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryLineFromText» с указанными аргументами.
              <paramref name="lineWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="lineWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения строки геометрического объекта.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) системы координат, значение строки геометрического объекта.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение строки geometry в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="lineWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiLineFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryMultiLineFromBinary» с указанными аргументами.
              <paramref name="multiLineWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="multiLineWellKnownBinaryValue">
                Выражение, предоставляющее хорошо известных двоичное представление значения многострочного geometry.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение многострочного geometry системы координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение многострочного geometry в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiLineWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiLineWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiLineFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryMultiLineFromText» с указанными аргументами.
              <paramref name="multiLineWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="multiLineWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения многострочного geometry.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение многострочного geometry системы координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение многострочного geometry в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiLineWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiLineWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPointFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryMultiPointFromBinary» с указанными аргументами.
              <paramref name="multiPointWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="multiPointWellKnownBinaryValue">
                Выражение, предоставляющее хорошо известных двоичное представление значения многоточечного geometry.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение многоточечного geometry системы координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение многоточечного geometry в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiPointWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiPointWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPointFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryMultiPointFromText» с указанными аргументами.
              <paramref name="multiPointWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="multiPointWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения многоточечного geometry.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение многоточечного geometry системы координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение многоточечного geometry в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiPointWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiPointWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPolygonFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryMultiPolygonFromBinary» с указанными аргументами.
              <paramref name="multiPolygonWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="multiPolygonWellKnownBinaryValue">
                Выражение, предоставляющее известного двоичное представление значения нескольких многоугольников geometry.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение нескольких многоугольников geometry системы координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение нескольких многоугольников geometry в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiPolygonWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiPolygonWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPolygonFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryMultiPolygonFromText» с указанными аргументами.
              <paramref name="multiPolygonWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="multiPolygonWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения нескольких многоугольников geometry.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) значение нескольких многоугольников geometry системы координат.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение нескольких многоугольников geometry в зависимости от указанного значения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="multiPolygonWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="multiPolygonWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPointFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryPointFromBinary» с указанными аргументами.
              <paramref name="pointWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="pointWellKnownBinaryValue">
                Выражение, предоставляющее известного двоичное представление геометрии значение точки.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) геометрии точки система координат этого значения.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает нового объекта geometry точки значение на основании указанных значений.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pointWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="pointWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPointFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryPointFromText» с указанными аргументами.
              <paramref name="pointWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="pointWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление объекта geometry значение точки.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) геометрии точки система координат этого значения.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает нового объекта geometry точки значение на основании указанных значений.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pointWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="pointWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPolygonFromBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryPolygonFromBinary» с указанными аргументами.
              <paramref name="polygonWellKnownBinaryValue" /> должен иметь тип двоичный результат, пока <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="polygonWellKnownBinaryValue">
                Выражение, предоставляющее хорошо известных двоичное представление значения polygon геометрического объекта.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) системы координат значение polygon геометрического объекта.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение polygon геометрического объекта на основе указанного значений.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="polygonWellKnownBinaryValue" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPolygonFromText(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «GeometryPolygonFromText» с указанными аргументами.
              <paramref name="polygonWellKnownText" /> необходимо иметь строковый тип результата, хотя <paramref name="coordinateSystemId" /> должен иметь целочисленный тип числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="polygonWellKnownText">
                Выражение, предоставляющее хорошо известных текстовое представление значения polygon геометрического объекта.
              </param>
      <param name="coordinateSystemId">
                Выражение, предоставляющее идентификатор системы координат (SRID) системы координат значение polygon геометрического объекта.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающее значение polygon геометрического объекта на основе указанного значений.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="polygonWellKnownText" />
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «InteriorRingAt» с указанными аргументами.
               Первый аргумент должен иметь тип результата Edm.Geometry.
               Второй аргумент должен иметь целочисленные типы числовой результат.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <param name="indexValue">
                Выражение, задающее позицию внутреннее кольцо должно быть извлечено из внутри многоугольника.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает внутреннее кольцо позиции <paramref name="indexValue" /> в <paramref name="geometryValue" /> или <see langword="null" /> Если <paramref name="geometryValue" /> не многоугольника.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="indexValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="indexValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «InteriorRingCount» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращает номер внутреннюю кольцами в многоугольник <paramref name="geometryValue" /> или <see langword="null" /> Если <paramref name="geometryValue" /> не многоугольника.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «IsClosedSpatial» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата — Edm.Boolean.
            </summary>
      <param name="spatialValue">
                Выражение, задающее значение пространственных кривой, из которого требуется извлечь значение IsClosedSpatial.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает либо логическое значение, указывающее ли <paramref name="spatialValue" /> закрыта, или <see langword="null" /> Если <paramref name="spatialValue" /> не кривой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «IsEmptySpatial» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="spatialValue">
                Выражение, задающее пространственное значение, из которого требуется извлечь значение IsEmptySptiaal.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, является ли <paramref name="spatialValue" /> пуст.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «IsRing» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Тип результата — Edm.Boolean.
            </summary>
      <param name="geometryValue">
                Выражение, задающее значение кривой geometry, из которого требуется извлечь значение IsRing.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает либо логическое значение, указывающее ли <paramref name="geometryValue" /> является кольцом (закрытых и простой), или <see langword="null" /> Если <paramref name="geometryValue" /> не кривой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «IsSimpleGeometry» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, является ли <paramref name="geometryValue" /> является простой геометрический.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «IsValidGeometry» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="geometryValue">
                Выражение, задающее geometry значение, которое должно тестироваться пространственных допустимости.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, является ли <paramref name="geometryValue" /> является допустимым.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «Latitude» с заданным аргументом, который должен иметь тип результата Edm.Geography.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="geographyValue">
                Выражение, задающее geography указывать значение, из которого требуется извлечь значение широты.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает значение широты для <paramref name="geographyValue" /> или <see langword="null" /> Если <paramref name="geographyValue" /> не является точкой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «Долготы» с заданным аргументом, который должен иметь тип результата Edm.Geography.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="geographyValue">
                Выражение, задающее geography указывать значение, из которого требуется извлечь значение долготы.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает значение долготы для <paramref name="geographyValue" /> или <see langword="null" /> Если <paramref name="geographyValue" /> не является точкой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «Измерения» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="spatialValue">
                Выражение, задающее значение пространственных точки, из которого требуется извлечь значение автоматизированы мер (M).
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает меру из <paramref name="spatialValue" /> или <see langword="null" /> Если <paramref name="spatialValue" /> не является точкой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «PointAt» с указанными аргументами.
               Первый аргумент должен иметь тип результата Edm.Geography или Edm.Geometry.
               Второй аргумент должен иметь целочисленный тип числовой результат.
               Тип результата выражения совпадает с <paramref name="spatialValue" />.
            </summary>
      <param name="spatialValue">
                Выражение, задающее пространственных строки строковое значение.
              </param>
      <param name="indexValue">
                Выражение, задающее позицию точки должно быть извлечено из внутри строки.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает точку в позиции <paramref name="indexValue" /> в <paramref name="spatialValue" /> или <see langword="null" /> Если <paramref name="spatialValue" /> не строки.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="indexValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                  <paramref name="indexValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «PointCount» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="spatialValue">
                Выражение, задающее пространственных строки строковое значение, из которого требуется извлечь количество точек.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает число точек <paramref name="spatialValue" /> или <see langword="null" /> Если <paramref name="spatialValue" /> не строки.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «PointOnSurface» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="geometryValue">
                Выражение, задающее значение поверхности geometry, из которого требуется извлечь точку.
              </param>
      <returns>
              Гарантируется новый выражении DbFunctionExpression, возвращающий любую точку на поверхности <paramref name="geometryValue" /> или <see langword="null" /> Если <paramref name="geometryValue" /> не поверхности.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialBoundary» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="geometryValue">
                Выражение, задающее значение geometry, из которого требуется извлечь значение SpatialBoundary.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает границы <paramref name="geometryValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialBuffer» с указанными аргументами, которые должны иметь Edm.Geography или Edm.Geometry и Edm.Double приводить типы.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="spatialValue">
                Выражение, задающее пространственное значение.
              </param>
      <param name="distance">
                Выражение, задающее расстояние буфера.
              </param>
      <returns>
              Указывает новый выражении DbFunctionExpression, возвращающее значение geometry, представляющий все меньше или равно <paramref name="distance" /> из <paramref name="spatialValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                  <paramref name="distance" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                  <paramref name="distance" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialContains» с указанными аргументами, которые должны иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="geometryValue1">
                Выражение, задающее значение первого geometry.
              </param>
      <param name="geometryValue2">
                Выражение, указывающее geometry, который следует сравнивать с <paramref name="geometryValue1" />.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, является ли <paramref name="geometryValue1" /> содержит <paramref name="geometryValue2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialConvexHull» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="geometryValue">
                Выражение, задающее значение geometry, из которого требуется извлечь значение выпуклая оболочка.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает выпуклая оболочка для <paramref name="geometryValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialCrosses» с указанными аргументами, которые должны иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="geometryValue1">
                Выражение, задающее значение первого geometry.
              </param>
      <param name="geometryValue2">
                Выражение, указывающее geometry, который следует сравнивать с <paramref name="geometryValue1" />.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, является ли <paramref name="geometryValue1" /> пересекает <paramref name="geometryValue2" /> intersect.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialDifference» с указанными аргументами, которые каждый должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата <paramref name="spatialValue1" /> должны совпадать тип результата <paramref name="spatialValue2" />.
               Тип результата выражения совпадает с типом <paramref name="spatialValue1" /> и <paramref name="spatialValue2" />.
            </summary>
      <param name="spatialValue1">
                Выражение, задающее значение первого пространственных.
              </param>
      <param name="spatialValue2">
                Выражение, задающее пространственное значение для которого разница с <paramref name="spatialValue1" /> должно быть вычислено.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий значение geometry, представляющий разность <paramref name="spatialValue2" /> с <paramref name="spatialValue1" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialDimension» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="spatialValue">
                Выражение, задающее значение, из которого требуется извлечь значение измерения.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий значение измерения из <paramref name="spatialValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialDisjoint» с указанными аргументами, которые каждый должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата <paramref name="spatialValue1" /> должны совпадать тип результата <paramref name="spatialValue2" />.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="spatialValue1">
                Выражение, задающее значение первого пространственных.
              </param>
      <param name="spatialValue2">
                Выражение, задающее пространственной значение следует сравнивать с <paramref name="spatialValue1" /> для disjointness.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, является ли <paramref name="spatialValue1" /> и <paramref name="spatialValue2" /> пространственного перекрытия между ними.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialElementAt» с указанными аргументами.
               Первый аргумент должен иметь тип результата Edm.Geography или Edm.Geometry.
               Второй аргумент должен иметь целочисленный тип числовой результат.
               Тип результата выражения совпадает с <paramref name="spatialValue" />.
            </summary>
      <param name="spatialValue">
                Выражение, задающее значение коллекции geography и geometry.
              </param>
      <param name="indexValue">
                Выражение, задающее позицию элемента, извлекаемого из коллекции геометрического или географического типа.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает элемент коллекции на позиции <paramref name="indexValue" /> в <paramref name="spatialValue" /> или <see langword="null" /> Если <paramref name="spatialValue" /> не является коллекцией.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="indexValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                  <paramref name="indexValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialElementCount» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Типом результата выражения является Edm.Int32.
            </summary>
      <param name="spatialValue">
                Выражение, задающее geography или geometry значение коллекции, из которого требуется извлечь число элементов.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которое возвращает количество элементов <paramref name="spatialValue" /> или <see langword="null" /> Если <paramref name="spatialValue" /> не является коллекцией.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialEnvelope» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Geometry.
            </summary>
      <param name="geometryValue">
                Выражение, задающее значение, из которого требуется извлечь значение конверта.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает минимального ограничивающего прямоугольника для <paramref name="geometryValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialEquals» с указанными аргументами, которые каждый должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата <paramref name="spatialValue1" /> должны совпадать тип результата <paramref name="spatialValue2" />.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="spatialValue1">
                Выражение, задающее значение первого пространственных.
              </param>
      <param name="spatialValue2">
                Выражение, задающее пространственной значение следует сравнивать с <paramref name="spatialValue1" /> на равенство.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, является ли <paramref name="spatialValue1" /> и <paramref name="spatialValue2" /> равны.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialIntersection» с указанными аргументами, которые каждый должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата <paramref name="spatialValue1" /> должны совпадать тип результата <paramref name="spatialValue2" />.
               Тип результата выражения совпадает с типом <paramref name="spatialValue1" /> и <paramref name="spatialValue2" />.
            </summary>
      <param name="spatialValue1">
                Выражение, задающее значение первого пространственных.
              </param>
      <param name="spatialValue2">
                Выражение, задающее пространственное значение для которого пересечение с <paramref name="spatialValue1" /> должно быть вычислено.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает Пространственные значение, представляющее собой пересечение <paramref name="spatialValue1" /> и <paramref name="spatialValue2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialIntersects» с указанными аргументами, которые каждый должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата <paramref name="spatialValue1" /> должны совпадать тип результата <paramref name="spatialValue2" />.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="spatialValue1">
                Выражение, задающее значение первого пространственных.
              </param>
      <param name="spatialValue2">
                Выражение, задающее пространственной значение следует сравнивать с <paramref name="spatialValue1" /> для пересечения.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, является ли <paramref name="spatialValue1" /> и <paramref name="spatialValue2" /> intersect.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialLength» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="spatialValue">
                Выражение, задающее значение пространственных кривой, из которого требуется извлечь длину.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает либо длину данного <paramref name="spatialValue" /> или <see langword="null" /> Если <paramref name="spatialValue" /> не кривой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialOverlaps» с указанными аргументами, которые должны иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="geometryValue1">
                Выражение, задающее значение первого geometry.
              </param>
      <param name="geometryValue2">
                Выражение, указывающее geometry, который следует сравнивать с <paramref name="geometryValue1" />.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, является ли <paramref name="geometryValue1" /> пространственно перекрывается <paramref name="geometryValue2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialRelate» с указанными аргументами, которые должны иметь Edm.Geometry и строковые типы результата.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="geometryValue1">
                Выражение, задающее значение первого geometry.
              </param>
      <param name="geometryValue2">
                Выражение, указывающее geometry, который следует сравнивать с <paramref name="geometryValue1" />.
              </param>
      <param name="intersectionPatternMatrix">
                Выражение, задающее текстовое представление шаблон пересечения модели "девять пересечение многомерно расширенных" (DE-9IM), используемый для сравнения <paramref name="geometryValue1" /> и <paramref name="geometryValue2" />.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, ли <paramref name="geometryValue1" /> пространственно связана с <paramref name="geometryValue2" /> согласно пространственного отношения, обозначенный <paramref name="intersectionPatternMatrix" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                  <paramref name="intersectionPatternMatrix" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                  <paramref name="intersectionPatternMatrix" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialSymmetricDifference» с указанными аргументами, которые каждый должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата <paramref name="spatialValue1" /> должны совпадать тип результата <paramref name="spatialValue2" />.
               Тип результата выражения совпадает с типом <paramref name="spatialValue1" /> и <paramref name="spatialValue2" />.
            </summary>
      <param name="spatialValue1">
                Выражение, задающее значение первого пространственных.
              </param>
      <param name="spatialValue2">
                Выражение, задающее пространственное значение для которого симметричной разницы с <paramref name="spatialValue1" /> должно быть вычислено.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий значение geometry, представляющий симметричной разницы <paramref name="spatialValue2" /> с <paramref name="spatialValue1" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialTouches» с указанными аргументами, которые должны иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="geometryValue1">
                Выражение, задающее значение первого geometry.
              </param>
      <param name="geometryValue2">
                Выражение, указывающее geometry, который следует сравнивать с <paramref name="geometryValue1" />.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, является ли <paramref name="geometryValue1" /> касается <paramref name="geometryValue2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialTypeName» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата выражения — Edm.String.
            </summary>
      <param name="spatialValue">
                Выражение, задающее значение, из которого требуется извлечь имя типа Geometry.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий имя типа Geometry строки из <paramref name="spatialValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialUnion» с указанными аргументами, которые каждый должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата <paramref name="spatialValue1" /> должны совпадать тип результата <paramref name="spatialValue2" />.
               Тип результата выражения совпадает с типом <paramref name="spatialValue1" /> и <paramref name="spatialValue2" />.
            </summary>
      <param name="spatialValue1">
                Выражение, задающее значение первого пространственных.
              </param>
      <param name="spatialValue2">
                Выражение, задающее пространственное значение для которого объединение <paramref name="spatialValue1" /> должно быть вычислено.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий Пространственные значение, представляющее объединение <paramref name="spatialValue1" /> и <paramref name="spatialValue2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue1" />
                  <paramref name="spatialValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «SpatialWithin» с указанными аргументами, которые должны иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Boolean.
            </summary>
      <param name="geometryValue1">
                Выражение, задающее значение первого geometry.
              </param>
      <param name="geometryValue2">
                Выражение, указывающее geometry, который следует сравнивать с <paramref name="geometryValue1" />.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, которая возвращает логическое значение, указывающее, является ли <paramref name="geometryValue1" /> — пространственно в <paramref name="geometryValue2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue1" />
                  <paramref name="geometryValue2" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> вызывает каноническую функцию «StartPoint» с заданным аргументом, который должен иметь тип результата Edm.Geography или Edm.Geometry.
               Тип результата совпадает с <paramref name="spatialValue" />.
            </summary>
      <param name="spatialValue">
                Выражение, задающее значение пространственных кривой, из которого точки начала должно быть получено.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, который возвращает начальную точку для <paramref name="spatialValue" /> или <see langword="null" /> Если <paramref name="spatialValue" /> не кривой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="spatialValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «XCoordinate» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="geometryValue">
                Выражение, задающее значение точки геометрического объекта, из которого требуется извлечь значение Координата по оси X.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий автоматизированы значение X объекта <paramref name="geometryValue" /> или <see langword="null" /> Если <paramref name="geometryValue" /> не является точкой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> который вызывает канонической функции «YCoordinate» с заданным аргументом, который должен иметь тип результата Edm.Geometry.
               Тип результата выражения — Edm.Double.
            </summary>
      <param name="geometryValue">
                Выражение, задающее значение точки геометрического объекта, из которого требуется извлечь значение Координата по оси Y.
              </param>
      <returns>
              Новый выражении DbFunctionExpression, возвращающий автоматизированы значение Y объекта <paramref name="geometryValue" /> или <see langword="null" /> Если <paramref name="geometryValue" /> не является точкой.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Common.DataRecordInfo.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember})">
      <summary>
              Инициализирует новый объект <see cref="T:System.Data.Common.DbDataRecord" /> для конкретного типа с перечислимой коллекцией полей данных.
            </summary>
      <param name="metadata">
                Метаданные для типа, представленного этим объектом, заданные <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
              </param>
      <param name="memberInfo">
                Перечисляемая коллекция <see cref="T:System.Data.Metadata.Edm.EdmMember" /> объекты, представляющие сведения о столбце.
              </param>
    </member>
    <member name="M:System.Data.Common.DbCommandDefinition.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbCommandDefinition" />.
            </summary>
    </member>
    <member name="M:System.Data.Common.DbCommandDefinition.#ctor(System.Data.Common.DbCommand)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.Common.DbCommandDefinition" /> класса с помощью предоставленного <see cref="T:System.Data.Common.DbCommand" />.
            </summary>
      <param name="prototype">
                Указанный объект <see cref="T:System.Data.Common.DbCommand" />.
              </param>
    </member>
    <member name="M:System.Data.Common.DbCommandDefinition.CreateCommand">
      <summary>
              Создает и возвращает выполняемый объект <see cref="T:System.Data.Common.DbCommand" />.
            </summary>
      <returns>
              Команда для базы данных.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbProviderManifest" />.
            </summary>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)">
      <summary>
              Разработчики поставщиков должны переопределять этот метод для возвращения аргумента с подстановочными знаками и преобразованным escape-символом.
               Этот метод используется только в том случае, если SupportsEscapingLikeArgument возвращает значение true.
            </summary>
      <param name="argument">
                Аргумент в escape.
              </param>
      <returns>
              Аргумент с подстановочными знаками и escape-символ в escape-последовательность.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetDbInformation(System.String)">
      <summary>
              При переопределении в производном классе этот метод возвращает сведения о поставщике.
            </summary>
      <param name="informationType">
                Тип возвращаемых данных.
              </param>
      <returns>
              Объект XmlReader, представляющий сопоставление с данным каталогом хранилища.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
      <summary>
              При переопределении в производном классе этот метод сопоставляет указанный тип хранилища и набор аспектов этого типа с типом модели EDM.
            </summary>
      <param name="storeType">
                Экземпляр TypeUsage, описывающий тип хранилища и набор аспектов для этого типа для сопоставления типа модели EDM.
              </param>
      <returns>
              <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> Описывающий тип модели EDM и набор аспектов для этого типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
      <summary>
              Возвращает объекты FacetDescription для определенного типа.
            </summary>
      <param name="edmType">
                Описание аспектов возвращаемый тип модели EDM.
              </param>
      <returns>
              Объекты FacetDescription для заданного типа модели EDM.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetInformation(System.String)">
      <summary>
              Получает данные от поставщика.
            </summary>
      <param name="informationType">
                Тип возвращаемых данных.
              </param>
      <returns>
              Сведения о поставщике.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetStoreFunctions">
      <summary>
              При переопределении в производном классе возвращает коллекцию функций EDM, поддерживаемых манифестом поставщика.
            </summary>
      <returns>
              Коллекция функций EDM.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
      <summary>
              При переопределении в производном классе этот метод сопоставляет указанный тип модели EDM и набор аспектов этого типа с типом хранилища.
            </summary>
      <param name="edmType">
                Экземпляр TypeUsage, описывающий тип модели EDM и набор аспектов для этого типа для сопоставления типа хранения.
              </param>
      <returns>
              Экземпляр TypeUsage, описывающий тип хранилища и набор аспектов для этого типа.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.GetStoreTypes">
      <summary>
              При переопределении в производном классе возвращает набор типов-примитивов поддерживается источником данных.
            </summary>
      <returns>
              Набор типов, поддерживаемых источником данных.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)">
      <summary>
              Указывает, поддерживает ли поставщик escape-преобразование строк, используемых в качестве шаблонов в выражении Like.
            </summary>
      <param name="escapeCharacter">
                Если поставщик поддерживает escape-преобразование, символ, который будет использоваться в качестве escape-символа.
              </param>
      <returns>
              <see langword="True" /> Если этот поставщик поддерживает escape-преобразование строк, используемых в качестве шаблонов в выражении Like; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbProviderServices" />.
            </summary>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)">
      <summary>
              Создает определения команды из дерева команд.
            </summary>
      <param name="commandTree">
                Дерево команд.
              </param>
      <returns>
              Определение созданной команды.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)">
      <summary>
              Создает определение команды, которое использует указанную команду.
            </summary>
      <param name="prototype">
                Команда, используемая для создания определения команды.
              </param>
      <returns>
              Определение созданной команды, которое использует указанную команду.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
      <summary>
              Создает определения команды из дерева andcommand указанного манифеста.
            </summary>
      <param name="providerManifest">
                Манифест.
              </param>
      <param name="commandTree">
                Дерево команд.
              </param>
      <returns>
              Определение созданной команды.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>
              Создает базу данных, указанную в подключении и объекты схемы.
            </summary>
      <param name="connection">
                Подключение к несуществующей базе данных, которую необходимо создать и заполнить объектами хранилища, указанном параметром storeItemCollection.
              </param>
      <param name="commandTimeout">
                Время ожидания выполнения любых команд, необходимых для создания базы данных.
              </param>
      <param name="storeItemCollection">
                Коллекция всех хранения элементов на основании которой необходимо создать скрипт.
              </param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>
              Создает язык определения данных (DDL сценарий, который создает объекты схемы (таблицы, первичные ключи, внешние ключи) на основе содержимого параметра StoreItemCollection и предназначенные для версии базы данных, соответствующий маркер манифеста поставщика.
            </summary>
      <param name="providerManifestToken">
                Маркер манифеста поставщика, определяющий целевую версию.
              </param>
      <param name="storeItemCollection">
                Структура базы данных.
              </param>
      <returns>
              Скрипт DDL, который создает объекты схемы на основе содержимого параметра StoreItemCollection и предназначенные для версии базы данных, соответствующий маркер манифеста поставщика.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
      <summary>
              Создает объект определения команд для указанного манифеста поставщика и дерева команд.
            </summary>
      <param name="providerManifest">
                Манифест поставщика, ранее извлеченный из поставщика хранилищ.
              </param>
      <param name="commandTree">
                Дерево команд для инструкции.
              </param>
      <returns>
              Объект определения исполняемой команды.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>
              Возвращает значение, указывающее, существует ли данной базы данных на сервере и были ли созданы объекты схемы, содержащиеся в коллекции storeItemCollection.
            </summary>
      <param name="connection">
                Подключение к базе данных, наличие которого проверяется этим методом.
              </param>
      <param name="commandTimeout">
                Время ожидания выполнения любых команд, необходимых для определения существования этой базы данных.
              </param>
      <param name="storeItemCollection">
                Коллекция всех хранения элементов, содержащихся в базе данных, существование которой определяется этим методом.
              </param>
      <returns>
              Значение true, если поставщик может вывести базу данных только на основе подключения.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>
              Создает базу данных, указанную в подключении и объекты схемы (таблицы, первичные ключи, внешние ключи) на основе содержимого коллекции storeItemCollection.
            </summary>
      <param name="connection">
                Подключение к несуществующей базе данных, которую необходимо создать и заполнить объектами хранилища, указанном параметром storeItemCollection.
              </param>
      <param name="commandTimeout">
                Время ожидания выполнения любых команд, необходимых для создания базы данных.
              </param>
      <param name="storeItemCollection">
                Коллекция всех хранения элементов на основании которой необходимо создать скрипт.
              </param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>
              Создает язык определения данных (DDL сценарий, который создает объекты схемы (таблицы, первичные ключи, внешние ключи) на основе содержимого параметра StoreItemCollection и предназначенные для версии базы данных, соответствующий маркер манифеста поставщика.
            </summary>
      <param name="providerManifestToken">
                Маркер манифеста поставщика, определяющий целевую версию.
              </param>
      <param name="storeItemCollection">
                Структура базы данных.
              </param>
      <returns>
              Скрипт DDL, который создает объекты схемы на основе содержимого параметра StoreItemCollection и предназначенные для версии базы данных, соответствующий маркер манифеста поставщика.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>
              Возвращает значение, указывающее, существует ли данной базы данных на сервере и были ли созданы объекты схемы, содержащиеся в коллекции storeItemCollection.
            </summary>
      <param name="connection">
                Подключение к базе данных, наличие которого проверяется этим методом.
              </param>
      <param name="commandTimeout">
                Время ожидания выполнения любых команд, необходимых для определения существования этой базы данных.
              </param>
      <param name="storeItemCollection">
                Структура базы данных, наличие которого определяется с помощью данного метода.
              </param>
      <returns>
              <see langword="True" /> Если существует соединение, и параметр storeItemCollection базы данных; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>
              Удаляет все объекты хранилища, заданные в коллекции элементов хранилища, из базы данных и саму базу данных.
            </summary>
      <param name="connection">
                Подключение к существующей базе данных, который необходимо удалить.
              </param>
      <param name="commandTimeout">
                Время ожидания выполнения любых команд, необходимых для удаления базы данных.
              </param>
      <param name="storeItemCollection">
                Структура базы данных удаляются.
              </param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DbGetSpatialServices(System.String)">
      <summary>
              Возвращает пространственных служб для <see cref="T:System.Data.Common.DbProviderServices" />.
            </summary>
      <param name="manifestToken">
                Токен сведения, связанные с манифестом поставщика.
              </param>
      <returns>
              Пространственные службы.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
      <summary>
              Удаляет все объекты хранилища, заданные в коллекции элементов хранилища, из базы данных и саму базу данных.
            </summary>
      <param name="connection">
                Подключение к существующей базе данных, который необходимо удалить.
              </param>
      <param name="commandTimeout">
                Время ожидания выполнения любых команд, необходимых для удаления базы данных.
              </param>
      <param name="storeItemCollection">
                Структура базы данных удаляются.
              </param>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)">
      <summary>
              При переопределении в производном классе, возвращает экземпляр класса, производного от DbProviderManifest.
            </summary>
      <param name="manifestToken">
                Токен сведения, связанные с манифестом поставщика.
              </param>
      <returns>
              Объект DbProviderManifest, представляющий манифест поставщика.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)">
      <summary>
              Возвращает токен манифеста поставщика с подключением.
            </summary>
      <param name="connection">
                Подключение к поставщику.
              </param>
      <returns>
              Маркер манифеста поставщика для указанного соединения.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetDbSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
      <summary>
              Возвращает модуль чтения пространственных данных для <see cref="T:System.Data.Common.DbProviderServices" />.
            </summary>
      <param name="fromReader">
                Средство чтения, откуда пространственных данных.
              </param>
      <param name="manifestToken">
                Токен сведения, связанные с манифестом поставщика.
              </param>
      <returns>
              Модуль чтения пространственных данных.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)">
      <summary>
              Получает DbProviderFactory, в зависимости от указанного DbConnection.
            </summary>
      <param name="connection">
                Используемое соединение.
              </param>
      <returns>
              Полученный DbProviderFactory.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetProviderManifest(System.String)">
      <summary>
              Возвращает манифест поставщика с помощью заданных сведений о версии.
            </summary>
      <param name="manifestToken">
                Токен сведения, связанные с манифестом поставщика.
              </param>
      <returns>
              Манифест поставщика с помощью заданных сведений о версии.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)">
      <summary>
              Возвращает токен манифеста поставщика.
            </summary>
      <param name="connection">
                Подключение к поставщику.
              </param>
      <returns>
              Маркер манифеста поставщика.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)">
      <summary>
              Возвращает поставщиков с подключением.
            </summary>
      <param name="connection">
                Подключение к поставщику.
              </param>
      <returns>
              <see cref="T:System.Data.Common.DbProviderServices" /> Создается на основе указанного соединения.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetSpatialDataReader(System.Data.Common.DbDataReader,System.String)">
      <summary>
              Возвращает модуль чтения пространственных данных для <see cref="T:System.Data.Common.DbProviderServices" />.
            </summary>
      <param name="fromReader">
                Средство чтения, откуда пространственных данных.
              </param>
      <param name="manifestToken">
                Токен сведения, связанные с манифестом поставщика.
              </param>
      <returns>
              Модуль чтения пространственных данных.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.GetSpatialServices(System.String)">
      <summary>
              Возвращает пространственных служб для <see cref="T:System.Data.Common.DbProviderServices" />.
            </summary>
      <param name="manifestToken">
                Токен сведения, связанные с манифестом поставщика.
              </param>
      <returns>
              Пространственные службы.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)">
      <summary>
              Задает значения параметров для <see cref="T:System.Data.Common.DbProviderServices" />.
            </summary>
      <param name="parameter">
                Параметр.
              </param>
      <param name="parameterType">
                Тип параметра.
              </param>
      <param name="value">
                Значение параметра.
              </param>
    </member>
    <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" />.
            </summary>
      <param name="reader">
                Объект <see cref="T:System.Xml.XmlReader" /> предоставляет доступ к XML-данным в файле манифеста поставщика.
              </param>
    </member>
    <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
      <summary>
              Возвращает список описаний аспектов для заданного типа модели EDM.
            </summary>
      <param name="type">
                <see cref="T:System.Data.Metadata.Edm.EdmType" />, для которого нужно получить описания аспектов.
              </param>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая список описаний аспектов для заданного типа модели EDM.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions">
      <summary>
              Возвращает список функций, поддерживаемых поставщиком.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая список функций, поддерживаемых поставщиком.
            </returns>
    </member>
    <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes">
      <summary>
              Возвращает список типов-примитивов, поддерживаемых поставщиком хранения.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая список типов-примитивов, поддерживаемых поставщиком хранения.
            </returns>
    </member>
    <member name="M:System.Data.Common.EntityRecordInfo.#ctor(System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.Common.EntityRecordInfo" /> класс объекта определенного типа сущности с помощью перечислимой коллекции полей данных и с указанным ключом и сведениями о наборе сущностей.
            </summary>
      <param name="metadata">
                <see cref="T:System.Data.Metadata.Edm.EntityType" /> Сущности, представленной <see cref="T:System.Data.Common.DbDataRecord" /> описанные в этой <see cref="T:System.Data.Common.EntityRecordInfo" /> объекта.
              </param>
      <param name="memberInfo">
                Перечисляемая коллекция <see cref="T:System.Data.Metadata.Edm.EdmMember" /> объекты, представляющие сведения о столбце.
              </param>
      <param name="entityKey">
                Ключ сущности.
              </param>
      <param name="entitySet">
                Набор сущностей, к которому принадлежит объект.
              </param>
    </member>
    <member name="M:System.Data.Common.EntitySql.EntitySqlParser.Parse(System.String,System.Data.Common.CommandTrees.DbParameterReferenceExpression[])">
      <summary>
              Синтаксический анализ указанного <paramref name="query" /> с указанным <paramref name="parameters" />.
            </summary>
      <param name="query">
                Язык EntitySQL запрос для синтаксического анализа.
              </param>
      <param name="parameters">
                Параметры запроса необязательно.
              </param>
      <returns>
              <see cref="T:System.Data.Common.EntitySql.ParseResult" /> Содержащий <see cref="T:System.Data.Common.CommandTrees.DbCommandTree" /> и сведения, описывающие определения встроенных функций, если таковые имеются.
            </returns>
    </member>
    <member name="M:System.Data.Common.EntitySql.EntitySqlParser.ParseLambda(System.String,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
      <summary>
              Синтаксический анализ определенного <paramref name="query" /> с определенным набором <paramref name="variables" /> и создания <see cref="T:System.Data.Common.CommandTrees.DbLambda" />.
            </summary>
      <param name="query">
                Запрос для синтаксического анализа.
              </param>
      <param name="variables">
                Переменные запроса необязательно.
              </param>
      <returns>
              <see cref="T:System.Data.Common.EntitySql.ParseResult" /> Содержащий <see cref="T:System.Data.Common.CommandTrees.DbCommandTree" /> и сведения, описывающие определения встроенных функций, если таковые имеются.
            </returns>
    </member>
    <member name="M:System.Data.Common.FieldMetadata.#ctor(System.Int32,System.Data.Metadata.Edm.EdmMember)">
      <summary>
              Инициализирует новый объект <see cref="T:System.Data.Common.FieldMetadata" /> указанным значением порядкового номера и типом поля.
            </summary>
      <param name="ordinal">
                Целое число, указывающее расположение метаданных.
              </param>
      <param name="fieldType">
                Тип поля.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityClient.EntityCommand" /> с использованием указанных значений.
            </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityClient.EntityCommand" /> класса с указанной инструкции.
            </summary>
      <param name="statement">
                Текст команды.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.#ctor(System.String,System.Data.EntityClient.EntityConnection)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityClient.EntityCommand" /> с указанной инструкции и соединения.
            </summary>
      <param name="statement">
                Текст команды.
              </param>
      <param name="connection">
                Подключение к источнику данных.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.#ctor(System.String,System.Data.EntityClient.EntityConnection,System.Data.EntityClient.EntityTransaction)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityClient.EntityCommand" /> с указанной инструкции, соединений и транзакций.
            </summary>
      <param name="statement">
                Текст команды.
              </param>
      <param name="connection">
                Подключение к источнику данных.
              </param>
      <param name="transaction">
                Транзакция, в которой выполняется команда.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.Cancel">
      <summary>
              Отменяет выполнение <see cref="T:System.Data.EntityClient.EntityCommand" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.CreateParameter">
      <summary>
              Создает новый экземпляр <see cref="T:System.Data.EntityClient.EntityParameter" /> объекта.
            </summary>
      <returns>
              Новый экземпляр <see cref="T:System.Data.EntityClient.EntityParameter" /> объекта.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.ExecuteNonQuery">
      <summary>
              Выполняет текущую команду.
            </summary>
      <returns>
              Число обработанных строк.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.ExecuteReader">
      <summary>
              Выполняет команду и возвращает модуль чтения данных.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.EntityClient.EntityDataReader" />, содержащий результаты.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
              Компилирует <see cref="P:System.Data.EntityClient.EntityCommand.CommandText" /> в дерево команд и передает его базовым поставщиком хранилища для выполнения, затем создает <see cref="T:System.Data.EntityClient.EntityDataReader" /> из полученного результирующего набора, используя указанное <see cref="T:System.Data.CommandBehavior" />.
            </summary>
      <param name="behavior">
                Одно из значений <see cref="T:System.Data.CommandBehavior" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.EntityClient.EntityDataReader" />, содержащий результаты.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.ExecuteScalar">
      <summary>
              Выполняет команду и возвращает первый столбец первой строки из результирующего набора.
               Дополнительные столбцы или строки не обрабатываются.
            </summary>
      <returns>
              Первый столбец первой строки в результирующем наборе, или пустая ссылка (Nothing в Visual Basic), если результирующий набор пуст.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.Prepare">
      <summary>
              Компилирует команду уровня сущности и создает подготовленную версию команды.
            </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityCommand.ToTraceString">
      <summary>
              Компилирует команду уровня сущности и возвращает текст команды хранилища.
            </summary>
      <returns>
              Текст команды хранилища.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityClient.EntityConnection" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityClient.EntityConnection" /> с заданными объектами <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> и <see cref="T:System.Data.Common.DbConnection" />.
            </summary>
      <param name="workspace">
                Объект <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> сопоставляемое с этим <see cref="T:System.Data.EntityClient.EntityConnection" />.
              </param>
      <param name="connection">
                Соединения для этого источника данных <see cref="T:System.Data.EntityClient.EntityConnection" /> объекта.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Значение параметра <paramref name="workspace" /> или параметра <paramref name="connection" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  В рабочей области отсутствует концептуальная модель.
                
                  -или-
                
                  В рабочей области отсутствует файл сопоставления.
                
                  -или-
                
                  В рабочей области отсутствует модель хранения.
                
                  -или-
                
                  <paramref name="connection" /> Не находится в закрытом состоянии.
                </exception>
      <exception cref="T:System.Data.ProviderIncompatibleException">
                  <paramref name="connection" /> Не от поставщика совместимые с ADO.NET Entity Framework.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityClient.EntityConnection" /> класс, на основе строки подключения.
            </summary>
      <param name="connectionString">
                Строка соединения этого поставщика.
              </param>
      <exception cref="T:System.ArgumentException">
                  Имеется ключевое слово строки соединения недопустим или не указано ключевое слово строки подключения требуется.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
      <summary>
              Начинает транзакцию с помощью базового поставщика.
            </summary>
      <returns>
              Новый объект <see cref="T:System.Data.EntityClient.EntityTransaction" />.
               Возвращаемый <see cref="T:System.Data.EntityClient.EntityTransaction" /> экземпляр позже может быть связан с <see cref="T:System.Data.EntityClient.EntityCommand" /> для выполнения команд в рамках этой транзакции.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Базовый поставщик неизвестен.
                
                  -или-
                
                  Вызов <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> был произведен <see cref="T:System.Data.EntityClient.EntityConnection" /> с текущей транзакции.
                
                  -или-
                
                  Состояние <see cref="T:System.Data.EntityClient.EntityConnection" /> не <see cref="F:System.Data.ConnectionState.Open" />.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>
              Начинает транзакцию с указанным уровнем изоляции с помощью базового поставщика.
            </summary>
      <param name="isolationLevel">
                Уровень изоляции транзакции.
              </param>
      <returns>
              Новый объект <see cref="T:System.Data.EntityClient.EntityTransaction" />.
               Возвращаемый <see cref="T:System.Data.EntityClient.EntityTransaction" /> экземпляр позже может быть связан с <see cref="T:System.Data.EntityClient.EntityCommand" /> для выполнения команд в рамках этой транзакции.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Базовый поставщик неизвестен.
                
                  -или-
                
                  Вызов <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> был произведен <see cref="T:System.Data.EntityClient.EntityConnection" /> с текущей транзакции.
                
                  -или-
                
                  Состояние <see cref="T:System.Data.EntityClient.EntityConnection" /> не <see cref="F:System.Data.ConnectionState.Open" />.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)">
      <summary>
              Не поддерживается.
            </summary>
      <param name="databaseName">
                Не поддерживается.
              </param>
      <exception cref="T:System.NotSupportedException">
                  При вызове метода.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.Close">
      <summary>
              Закрывает соединение с базой данных.
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  Произошла ошибка при закрытии соединения.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.CreateCommand">
      <summary>
              Создает новый экземпляр <see cref="T:System.Data.EntityClient.EntityCommand" />, свойство <see cref="P:System.Data.EntityClient.EntityCommand.Connection" /> которого установлено в значение <see cref="T:System.Data.EntityClient.EntityConnection" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.EntityClient.EntityCommand" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Имя базового поставщика данных неизвестно.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>
              Прикрепляет этот <see cref="T:System.Data.EntityClient.EntityConnection" /> указанную транзакцию.
            </summary>
      <param name="transaction">
                Объект транзакции, предназначенный для прикрепления.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Состояние <see cref="T:System.Data.EntityClient.EntityConnection" /> не <see cref="F:System.Data.ConnectionState.Open" />.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
      <summary>
              Возвращает рабочую область метаданных <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />, связанную с соединением <see cref="T:System.Data.EntityClient.EntityConnection" />.
            </summary>
      <returns>
              Рабочая область метаданных <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />, связанная с этим соединением <see cref="T:System.Data.EntityClient.EntityConnection" />.
            </returns>
      <exception cref="T:System.Data.MetadataException">
                  Встроенная строка подключения содержит недопустимое <see langword="Metadata" /> значение ключевого слова.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnection.Open">
      <summary>
              Устанавливает подключение к источнику данных путем вызова базового поставщика данных<see langword=" Open" /> метод.
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  Произошла ошибка при открытии соединения или имя базового поставщика данных неизвестно.
                </exception>
      <exception cref="T:System.Data.MetadataException">
                  Встроенная строка подключения содержит недопустимое <see langword="Metadata" /> значение ключевого слова.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> с помощью указанной строки соединения.
            </summary>
      <param name="connectionString">
                Строка подключения поставщика к базовому источнику данных.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.Clear">
      <summary>
              Удаляет содержимое экземпляра <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)">
      <summary>
              Определяет, содержит ли объект <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> указанный ключ.
            </summary>
      <param name="keyword">
                Ключ, который требуется найти в <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.
              </param>
      <returns>
              Возвращает <see langword="true" /> Если <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> содержит элемент с указанным ключом; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)">
      <summary>
              Удаляет из экземпляра <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> запись с указанным ключом.
            </summary>
      <param name="keyword">
                Ключ из пары «ключ-значение», которая будет удалена из строки соединения данного объекта <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.
              </param>
      <returns>
              Возвращает <see langword="true" /> если ключ существовал в строке подключения и был удален; <see langword="false" /> Если ключ не существовал.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="keyword" /> имеет значение null (<see langword="Nothing" /> в Visual Basic)
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>
              Получает значение, соответствующее заданному ключу, из данного объекта <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.
            </summary>
      <param name="keyword">
                Ключ искомого элемента.
              </param>
      <param name="value">
                Значение, соответствующее <paramref name="keyword." />
              </param>
      <returns>
              Возвращает <see langword="true" /> Если <paramref name="keyword" /> было найдено в строке подключения; в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="keyword" /> содержит значение NULL (<see langword="Nothing" /> в Visual Basic).
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.Close">
      <summary>
              Закрывает объект <see cref="T:System.Data.EntityClient.EntityDataReader" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.Dispose(System.Boolean)">
      <summary>
              Освобождает ресурсы, используемые этим модулем <see cref="T:System.Data.EntityClient.EntityDataReader" />, и вызывает метод <see cref="M:System.Data.EntityClient.EntityDataReader.Close" />.
            </summary>
      <param name="disposing">
                Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetBoolean(System.Int32)">
      <summary>
              Возвращает значение указанного столбца в виде логического значения.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetByte(System.Int32)">
      <summary>
              Возвращает значение указанного столбца в виде байта.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
              Считывает поток байтов из указанного столбца, начиная с местоположения, указанного параметром <paramref name="dataIndex" />, в буфер, начиная с местоположения, указанного параметром <paramref name="bufferIndex" />.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <param name="dataOffset">
                Индекс в строке, с которого необходимо начать считывание.
              </param>
      <param name="buffer">
                Буфер, в который копируются данные.
              </param>
      <param name="bufferOffset">
                Индекс в буфере, куда будут копироваться данные.
              </param>
      <param name="length">
                Максимальное число считываемых символов.
              </param>
      <returns>
              Число фактически считанных байтов.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetChar(System.Int32)">
      <summary>
              Возвращает значение указанного столбца в виде одного символа.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
              Считывает поток символов из заданного столбца, начиная с местоположения, указанного параметром <paramref name="dataIndex" />, в буфер, начиная с местоположения, указанного параметром <paramref name="bufferIndex" />.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <param name="dataOffset">
                Индекс в строке, с которого необходимо начать считывание.
              </param>
      <param name="buffer">
                Буфер, в который копируются данные.
              </param>
      <param name="bufferOffset">
                Индекс в буфере, куда будут копироваться данные.
              </param>
      <param name="length">
                Максимальное число считываемых символов.
              </param>
      <returns>
              Число фактически считанных символов.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDataReader(System.Int32)">
      <summary>
              Возвращает вложенные модули чтения данных в виде объектов <see cref="T:System.Data.Common.DbDataReader" />.
            </summary>
      <param name="i">
                Порядковый номер столбца.
              </param>
      <returns>
              Вложенные модули чтения как <see cref="T:System.Data.Common.DbDataReader" /> объектов.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDataRecord(System.Int32)">
      <summary>
              Возвращает вложенную запись <see cref="T:System.Data.Common.DbDataRecord" />.
            </summary>
      <param name="i">
                Количество <see langword="DbDataRecord" /> для возврата.
              </param>
      <returns>
              Запись вложенные данные.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDataTypeName(System.Int32)">
      <summary>
              Возвращает имя типа данных заданного столбца.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Имя типа данных.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDateTime(System.Int32)">
      <summary>
              Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDbDataReader(System.Int32)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Common.DbDataReader" /> для запрошенного порядкового номера столбца, который можно переопределить реализацией, зависящей от поставщика.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Модуль чтения данных.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDecimal(System.Int32)">
      <summary>
              Возвращает значение указанного столбца в виде объекта <see cref="T:System.Decimal" />.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetDouble(System.Int32)">
      <summary>
              Возвращает значение заданного столбца в виде числа с плавающей запятой двойной точности.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetEnumerator">
      <summary>
              Возвращает перечислитель <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра строк в модуле чтения данных.
            </summary>
      <returns>
              Перечислитель <see cref="T:System.Collections.IEnumerator" />, который может использоваться для просмотра строк в модуле чтения данных.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetFieldType(System.Int32)">
      <summary>
              Возвращает тип данных заданного столбца.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Тип данных заданного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetFloat(System.Int32)">
      <summary>
              Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetGuid(System.Int32)">
      <summary>
              Возвращает значение заданного столбца в виде глобально-уникального идентификатора GUID.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetInt16(System.Int32)">
      <summary>
              Возвращает значение указанного столбца в виде 16-разрядное целое число со знаком.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetInt32(System.Int32)">
      <summary>
              Возвращает значение указанного столбца в виде 32-разрядное целое число со знаком.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetInt64(System.Int32)">
      <summary>
              Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetName(System.Int32)">
      <summary>
              Возвращает имя столбца, если известен его порядковый номер (от нуля).
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Имя заданного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetOrdinal(System.String)">
      <summary>
              Возвращает порядковый номер столбца, если известно его имя.
            </summary>
      <param name="name">
                Имя столбца.
              </param>
      <returns>
              Порядковый номер столбца (от нуля).
            </returns>
      <exception cref="T:System.IndexOutOfRangeException">
                  Заданное имя недопустимо для имени столбца.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>
              Возвращает тип поля заданного столбца, зависящий от поставщика.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Объект <see cref="T:System.Type" />, описывающий тип данных указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>
              Возвращает значение указанного столбца как экземпляр <see cref="T:System.Object" />.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>
              Возвращает из коллекции все столбцы атрибутов, зависящие от поставщика, для текущей строки.
            </summary>
      <param name="values">
                Массив объектов <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.
              </param>
      <returns>
              Число экземпляров <see cref="T:System.Object" /> в массиве.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetSchemaTable">
      <summary>
              Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.Common.DbDataReader" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetString(System.Int32)">
      <summary>
              Возвращает значение указанного столбца как экземпляр <see cref="T:System.String" />.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetValue(System.Int32)">
      <summary>
              Возвращает значение указанного столбца как экземпляр <see cref="T:System.Object" />.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.GetValues(System.Object[])">
      <summary>
              Заполняет массив объектов значениями столбцов текущей строки.
            </summary>
      <param name="values">
                Массив объектов <see cref="T:System.Object" />, в который необходимо скопировать столбцы атрибутов.
              </param>
      <returns>
              Число экземпляров <see cref="T:System.Object" /> в массиве.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.IsDBNull(System.Int32)">
      <summary>
              Возвращает значение, указывающее, содержатся ли в столбце несуществующие или отсутствующие значения.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              <see langword="true" /> Если указанный столбец эквивалентен <see cref="T:System.DBNull" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.NextResult">
      <summary>
              Перемещает модуль чтения данных к следующему результату при чтении результатов из пакета инструкций.
            </summary>
      <returns>
              <see langword="true" /> Если имеются дополнительные результирующие наборы. в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityDataReader.Read">
      <summary>
              Перемещает модуль чтения к следующей записи в результирующем наборе.
            </summary>
      <returns>
              <see langword="true" /> Если имеются другие строки; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityClient.EntityParameter" /> класса, используя значения по умолчанию.
            </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityClient.EntityParameter" /> с использованием указанного параметра имя и тип данных.
            </summary>
      <param name="parameterName">
                Имя параметра.
              </param>
      <param name="dbType">
                Одно из значений <see cref="T:System.Data.DbType" />.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType,System.Int32)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityClient.EntityParameter" /> класса, используя указанное имя параметра, тип данных и размер.
            </summary>
      <param name="parameterName">
                Имя параметра.
              </param>
      <param name="dbType">
                Одно из значений <see cref="T:System.Data.DbType" />.
              </param>
      <param name="size">
                Размер параметра.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityClient.EntityParameter" /> с использованием указанных свойств.
            </summary>
      <param name="parameterName">
                Имя параметра.
              </param>
      <param name="dbType">
                Одно из значений <see cref="T:System.Data.DbType" />.
              </param>
      <param name="size">
                Размер параметра.
              </param>
      <param name="direction">
                Одно из значений <see cref="T:System.Data.ParameterDirection" />.
              </param>
      <param name="isNullable">
                <see langword="true" /> Чтобы указать, что параметр допускает значения null; в противном случае — <see langword="false" />.
              </param>
      <param name="precision">
                Количество разрядов, используемых для представления значения.
              </param>
      <param name="scale">
                Число десятичных разрядов, до которых разрешается значение.
              </param>
      <param name="sourceColumn">
                Имя исходного столбца.
              </param>
      <param name="sourceVersion">
                Одно из значений <see cref="T:System.Data.DataRowVersion" />.
              </param>
      <param name="value">
                Значение параметра.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.#ctor(System.String,System.Data.DbType,System.Int32,System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityClient.EntityParameter" /> с использованием указанных свойств.
            </summary>
      <param name="parameterName">
                Имя параметра.
              </param>
      <param name="dbType">
                Одно из значений <see cref="T:System.Data.DbType" />.
              </param>
      <param name="size">
                Размер параметра.
              </param>
      <param name="sourceColumn">
                Имя исходного столбца.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.ResetDbType">
      <summary>
              Сбрасывает тип, связанный с <see cref="T:System.Data.EntityClient.EntityParameter" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameter.ToString">
      <summary>
              Возвращает строковое представление параметра.
            </summary>
      <returns>
              Строковое представление параметра.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Add(System.Data.EntityClient.EntityParameter)">
      <summary>
              Добавляет указанный объект <see cref="T:System.Data.EntityClient.EntityParameter" /> в коллекцию <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <param name="value">
                Параметр <see cref="T:System.Data.EntityClient.EntityParameter" /> для добавления в коллекцию.
              </param>
      <returns>
              Новый объект <see cref="T:System.Data.EntityClient.EntityParameter" />.
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="T:System.Data.EntityClient.EntityParameter" /> Указано в <paramref name="value" /> уже добавлен в эту или другую <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
                </exception>
      <exception cref="T:System.InvalidCastException">
                  Передан параметр, отличный от объекта <see cref="T:System.Data.EntityClient.EntityParameter" />.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="value" /> Параметр имеет значение null.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Add(System.Object)">
      <summary>
              Добавляет указанный объект в коллекцию <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <param name="value">
                Объект <see cref="T:System.Object" />.
              </param>
      <returns>
              Индекс нового объекта <see cref="T:System.Data.EntityClient.EntityParameter" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Add(System.String,System.Data.DbType)">
      <summary>
              Добавляет объект <see cref="T:System.Data.EntityClient.EntityParameter" /> в коллекцию <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> в соответствии с заданным именем и типом данных параметра.
            </summary>
      <param name="parameterName">
                Имя параметра.
              </param>
      <param name="dbType">
                Одно из значений <see cref="T:System.Data.DbType" />.
              </param>
      <returns>
              Новый объект <see cref="T:System.Data.EntityClient.EntityParameter" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Add(System.String,System.Data.DbType,System.Int32)">
      <summary>
              Добавляет объект <see cref="T:System.Data.EntityClient.EntityParameter" /> в коллекцию <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> в соответствии с заданным именем параметра, типом данных и длиной столбца.
            </summary>
      <param name="parameterName">
                Имя параметра.
              </param>
      <param name="dbType">
                Одно из значений <see cref="T:System.Data.DbType" />.
              </param>
      <param name="size">
                Длина столбца.
              </param>
      <returns>
              Новый объект <see cref="T:System.Data.EntityClient.EntityParameter" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.AddRange(System.Array)">
      <summary>
              Добавляет массив значений в конец коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <param name="values">
                Добавляемые значения <see cref="T:System.Array" />.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.AddRange(System.Data.EntityClient.EntityParameter[])">
      <summary>
              Добавляет массив значений <see cref="T:System.Data.EntityClient.EntityParameter" /> в конец коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <param name="values">
                Добавляемые значения <see cref="T:System.Data.EntityClient.EntityParameter" />.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>
              Добавляет значение в конец коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <param name="parameterName">
                Имя параметра.
              </param>
      <param name="value">
                Добавляемое значение.
              </param>
      <returns>
              Объект <see cref="T:System.Data.EntityClient.EntityParameter" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Clear">
      <summary>
              Удаляет все объекты <see cref="T:System.Data.EntityClient.EntityParameter" /> из коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Contains(System.Object)">
      <summary>
              Определяет, находится ли заданный объект <see cref="T:System.Object" /> в этой коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Object" />.
              </param>
      <returns>
              <see langword="true" /> Если <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> содержит значение; в противном случае <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Contains(System.String)">
      <summary>
              Определяет, находится ли заданный объект <see cref="T:System.Data.EntityClient.EntityParameter" /> в этой коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <param name="parameterName">
                Значение <see cref="T:System.Data.EntityClient.EntityParameter" />.
              </param>
      <returns>
              <see langword="true" /> Если <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> содержит значение; в противном случае <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>
              Копирует все элементы текущей коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> в указанный одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса в массиве <see cref="T:System.Array" />.
            </summary>
      <param name="array">
                Одномерный массив <see cref="T:System.Array" /> — назначение для элементов, копируемых из текущей коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
              </param>
      <param name="index">
                32-разрядное целое число, представляющее индекс в коллекции <see cref="T:System.Array" />, с которого начинается копирование.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.CopyTo(System.Data.EntityClient.EntityParameter[],System.Int32)">
      <summary>
              Копирует все элементы текущей коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> в указанную коллекцию <see cref="T:System.Data.EntityClient.EntityParameterCollection" />, начиная с указанного индекса в коллекции назначения.
            </summary>
      <param name="array">
                Коллекция <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> — назначение для элементов, копируемых из текущей коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
              </param>
      <param name="index">
                32-разрядное целое число, представляющее индекс в коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />, с которого начинается копирование.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.GetEnumerator">
      <summary>
              Возвращает перечислитель, осуществляющий перебор элементов списка <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <returns>
              Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.IndexOf(System.Data.EntityClient.EntityParameter)">
      <summary>
              Возвращает положение заданного объекта <see cref="T:System.Data.EntityClient.EntityParameter" /> в коллекции.
            </summary>
      <param name="value">
                Искомый объект <see cref="T:System.Data.EntityClient.EntityParameter" />.
              </param>
      <returns>
              Положение (отсчет с нуля) заданного объекта <see cref="T:System.Data.EntityClient.EntityParameter" />, который является объектом <see cref="T:System.Data.EntityClient.EntityParameter" /> в коллекции.
               Возвращает значение -1, если объект не существует в коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.IndexOf(System.Object)">
      <summary>
              Возвращает положение заданного объекта <see cref="T:System.Object" /> в коллекции.
            </summary>
      <param name="value">
                Искомый объект <see cref="T:System.Object" />.
              </param>
      <returns>
              Положение (отсчет с нуля) заданного объекта <see cref="T:System.Object" />, который является объектом <see cref="T:System.Data.EntityClient.EntityParameter" /> в коллекции.
               Возвращает значение -1, если объект не существует в коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.IndexOf(System.String)">
      <summary>
              Возвращает положение заданного объекта <see cref="T:System.Data.EntityClient.EntityParameter" /> с указанным именем.
            </summary>
      <param name="parameterName">
                Имя искомого объекта <see cref="T:System.Data.EntityClient.EntityParameter" /> с учетом регистра.
              </param>
      <returns>
              Положение (отсчет с нуля) указанного объекта <see cref="T:System.Data.EntityClient.EntityParameter" /> с заданным именем с учетом регистра.
               Возвращает значение -1, если объект не существует в коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Insert(System.Int32,System.Data.EntityClient.EntityParameter)">
      <summary>
              Вставляет объект <see cref="T:System.Data.EntityClient.EntityParameter" /> в коллекцию <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> по указанному индексу.
            </summary>
      <param name="index">
                Индекс (отсчет с нуля), по которому необходимо вставить значение.
              </param>
      <param name="value">
                Объект <see cref="T:System.Data.EntityClient.EntityParameter" />, вставляемый в коллекцию <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Insert(System.Int32,System.Object)">
      <summary>
              Вставляет объект <see cref="T:System.Object" /> в коллекцию <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> по указанному индексу.
            </summary>
      <param name="index">
                Индекс (отсчет с нуля), по которому необходимо вставить значение.
              </param>
      <param name="value">
                Объект <see cref="T:System.Object" />, вставляемый в коллекцию <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Remove(System.Data.EntityClient.EntityParameter)">
      <summary>
              Удаляет указанный объект <see cref="T:System.Data.EntityClient.EntityParameter" /> из коллекции.
            </summary>
      <param name="value">
                Объект <see cref="T:System.Data.EntityClient.EntityParameter" />, который должен быть удален из коллекции.
              </param>
      <exception cref="T:System.InvalidCastException">
                  Параметр не является объектом <see cref="T:System.Data.EntityClient.EntityParameter" />.
                </exception>
      <exception cref="T:System.SystemException">
                  Параметр отсутствует в коллекции.
                </exception>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.Remove(System.Object)">
      <summary>
              Удаляет указанный параметр из коллекции.
            </summary>
      <param name="value">
                Объект <see cref="T:System.Object" />, который должен быть удален из коллекции.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.RemoveAt(System.Int32)">
      <summary>
              Удаляет объект <see cref="T:System.Data.EntityClient.EntityParameter" /> с указанным индексом из коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <param name="index">
                Индекс (отсчет с нуля) удаляемого объекта <see cref="T:System.Data.EntityClient.EntityParameter" />.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityParameterCollection.RemoveAt(System.String)">
      <summary>
              Удаляет объект <see cref="T:System.Data.EntityClient.EntityParameter" /> с указанным именем из коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <param name="parameterName">
                Имя удаляемого объекта <see cref="T:System.Data.EntityClient.EntityParameter" />.
              </param>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateCommand">
      <summary>
              Возвращает новый экземпляр класса поставщика, который реализует класс <see cref="T:System.Data.EntityClient.EntityCommand" />.
            </summary>
      <returns>
              Новый экземпляр класса <see cref="T:System.Data.EntityClient.EntityCommand" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateCommandBuilder">
      <summary>
              Создает исключение <see cref="T:System.NotSupportedException" />.
               В настоящее время этот метод не поддерживается.
            </summary>
      <returns>
              В настоящее время этот метод не поддерживается.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateConnection">
      <summary>
              Возвращает новый экземпляр класса поставщика, который реализует класс <see cref="T:System.Data.EntityClient.EntityConnection" />.
            </summary>
      <returns>
              Новый экземпляр класса <see cref="T:System.Data.EntityClient.EntityConnection" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateConnectionStringBuilder">
      <summary>
              Возвращает новый экземпляр класса поставщика, который реализует класс <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.
            </summary>
      <returns>
              Новый экземпляр класса <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateDataAdapter">
      <summary>
              Метод <see cref="M:System.Data.EntityClient.EntityProviderFactory.CreateDataAdapter" /> не поддерживается в этой версии .NET Framework.
            </summary>
      <returns>
              Объект <see cref="T:System.NotSupportedException" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateParameter">
      <summary>
              Возвращает новый экземпляр класса поставщика, который реализует класс <see cref="T:System.Data.EntityClient.EntityParameter" />.
            </summary>
      <returns>
              Новый экземпляр класса <see cref="T:System.Data.EntityClient.EntityParameter" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>
              Возвращает новый экземпляр класса поставщика, который реализует версию класса <see cref="T:System.Security.CodeAccessPermission" /> данного поставщика.
            </summary>
      <param name="state">
                Одно из значений <see cref="T:System.Security.Permissions.PermissionState" />.
              </param>
      <returns>
              Объект <see cref="T:System.Security.CodeAccessPermission" /> для указанного значения <see cref="T:System.Security.Permissions.PermissionState" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityProviderFactory.System#IServiceProvider#GetService(System.Type)">
      <summary>
              Возвращает запрошенный класс <see cref="T:System.IServiceProvider" />.
            </summary>
      <param name="serviceType">
                 Возвращаемое значение <see cref="T:System.Type" />.
              </param>
      <returns>
              Новый экземпляр класса <see cref="T:System.IServiceProvider" />.
               Поддерживаемые типы данных: <see cref="T:System.Data.Common.DbProviderServices" />, <see cref="T:System.Data.Common.DbCommandDefinitionBuilder" /> и <see cref="T:System.Data.IEntityAdapter" />.
               Возвращает значение null (или <see langword="Nothing" /> в Visual Basic) для всех остальных типов. </returns>
    </member>
    <member name="M:System.Data.EntityClient.EntityTransaction.Commit">
      <summary>
              Фиксирует базовую транзакцию.
            </summary>
    </member>
    <member name="M:System.Data.EntityClient.EntityTransaction.Rollback">
      <summary>
              Откатывает базовую транзакцию.
            </summary>
    </member>
    <member name="M:System.Data.EntityCommandCompilationException.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityCommandCompilationException" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityCommandCompilationException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityCommandCompilationException" />.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
    </member>
    <member name="M:System.Data.EntityCommandCompilationException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityCommandCompilationException" />.
            </summary>
      <param name="message">
                Сообщение об ошибке, указывающее причину создания исключения.
              </param>
      <param name="innerException">
                Исключение, вызвавшее текущее исключение, или <see langword="null" /> ссылку (<see langword="Nothing" /> в Visual Basic), если не внутреннее исключение не задано.
              </param>
    </member>
    <member name="M:System.Data.EntityCommandExecutionException.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityCommandExecutionException" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityCommandExecutionException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityCommandExecutionException" />.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
    </member>
    <member name="M:System.Data.EntityCommandExecutionException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntityCommandExecutionException" />.
            </summary>
      <param name="message">
                Сообщение об ошибке, указывающее причину создания исключения.
              </param>
      <param name="innerException">
                Исключение, вызвавшее текущее исключение, или <see langword="null" /> ссылку (<see langword="Nothing" /> в Visual Basic), если не внутреннее исключение не задано.
              </param>
    </member>
    <member name="M:System.Data.EntityException.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityException" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityException" />.
            </summary>
      <param name="info">
                Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные объекта о созданном исключении.
              </param>
      <param name="context">
                Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.
              </param>
    </member>
    <member name="M:System.Data.EntityException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityException" />.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
    </member>
    <member name="M:System.Data.EntityException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityException" />.
            </summary>
      <param name="message">
                Сообщение об ошибке, указывающее причину создания исключения.
              </param>
      <param name="innerException">
                Исключение, вызвавшее текущее исключение, или <see langword="null" /> ссылку (<see langword="Nothing" /> в Visual Basic), если не внутреннее исключение не задано.
              </param>
    </member>
    <member name="M:System.Data.EntityKey.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityKey" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityKey" /> с именем набора сущностей и общей коллекцией <see cref="T:System.Collections.Generic.KeyValuePair" />.
            </summary>
      <param name="qualifiedEntitySetName">
                Объект <see cref="T:System.String" />, представляющий имя набора сущностей, сопровождаемое именем контейнера сущностей.
              </param>
      <param name="entityKeyValues">
                Общая коллекция <see cref="T:System.Collections.Generic.KeyValuePair" />.
              
                Каждая пара «ключ-значение» имеет имя свойства, выступающее в качестве ключа, и значение этого свойства, выступающее в качестве значения.
                 Для каждого свойства, являющегося частью ключа <see cref="T:System.Data.EntityKey" />, должна существовать одна такая пара.
                 Порядок пар «ключ-значение» не играет роли, однако должно быть включено каждое ключевое свойство.
                 Имена свойств представляют собой простые имена, которые не дополняются именем типа сущности или именем схемы.
              </param>
    </member>
    <member name="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityKey" /> именем набора сущностей и коллекцией <see cref="T:System.Collections.Generic.IEnumerable`1" /> объектов <see cref="T:System.Data.EntityKeyMember" />.
            </summary>
      <param name="qualifiedEntitySetName">
                Объект <see cref="T:System.String" />, представляющий имя набора сущностей, сопровождаемое именем контейнера сущностей.
              </param>
      <param name="entityKeyValues">
                Коллекция <see cref="T:System.Collections.Generic.IEnumerable`1" /> объектов <see cref="T:System.Data.EntityKeyMember" />, которыми следует инициализировать ключ.
              </param>
    </member>
    <member name="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityKey" /> именем набора сущностей и конкретной парой ключей сущности.
            </summary>
      <param name="qualifiedEntitySetName">
                Объект <see cref="T:System.String" />, представляющий имя набора сущностей, сопровождаемое именем контейнера сущностей.
              </param>
      <param name="keyName">
                Объект <see cref="T:System.String" />, который является именем ключа.
              </param>
      <param name="keyValue">
                Объект <see cref="T:System.Object" />, представляющий значение ключа.
              </param>
    </member>
    <member name="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
      <summary>
              Возвращает значение, указывающее, равен ли экземпляр заданному ключу <see cref="T:System.Data.EntityKey" />.
            </summary>
      <param name="other">
                Ключ <see cref="T:System.Data.EntityKey" />, с которым сравнивается этот экземпляр.
              </param>
      <returns>
              <see langword="true" /> Если этот экземпляр и <paramref name="other" /> имеют одинаковые значения; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityKey.Equals(System.Object)">
      <summary>
              Возвращает значение, показывающее, равен ли экземпляр указанному объекту.
            </summary>
      <param name="obj">
                Объект <see cref="T:System.Object" />, с которым сравнивается этот экземпляр.
              </param>
      <returns>
              <see langword="true" /> Если этот экземпляр и <paramref name="obj" /> имеют одинаковые значения; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)">
      <summary>
              Возвращает набор сущностей для этого ключа сущности из определенной рабочей области метаданных.
            </summary>
      <param name="metadataWorkspace">
                Рабочая область метаданных, содержащая сущность.
              </param>
      <returns>
              Набор сущностей <see cref="T:System.Data.Metadata.Edm.EntitySet" /> для ключа сущности.
            </returns>
      <exception cref="T:System.ArgumentException">
                  Не удалось найти набор сущностей в заданной рабочей области метаданных.
                </exception>
    </member>
    <member name="M:System.Data.EntityKey.GetHashCode">
      <summary>
              Служит хэш-функцией текущего <see cref="T:System.Data.EntityKey" /> объекта.
              <see cref="M:System.Data.EntityKey.GetHashCode" /> подходит для алгоритмов хэширования и структур данных, например в хэш-таблице.
            </summary>
      <returns>
              Хэш-код для текущего объекта <see cref="T:System.Data.EntityKey" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
              Вспомогательный метод, используемый для десериализации ключа <see cref="T:System.Data.EntityKey" />.
            </summary>
      <param name="context">
                Описывает источник и назначение заданного потока сериализации и обеспечивает дополнительный контекст, определяемый вызывающим объектом.
              </param>
    </member>
    <member name="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
      <summary>
              Вспомогательный метод, используемый для десериализации ключа <see cref="T:System.Data.EntityKey" />.
            </summary>
      <param name="context">
                Описывает источник и назначение заданного потока сериализации и обеспечивает дополнительный контекст, определяемый вызывающим объектом.
              </param>
    </member>
    <member name="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
      <summary>
              Сравнивает два объекта <see cref="T:System.Data.EntityKey" />.
            </summary>
      <param name="key1">
                Ключ <see cref="T:System.Data.EntityKey" /> для сравнения.
              </param>
      <param name="key2">
                Ключ <see cref="T:System.Data.EntityKey" /> для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="key1" /> и <paramref name="key2" /> значения равны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
      <summary>
              Сравнивает два объекта <see cref="T:System.Data.EntityKey" />.
            </summary>
      <param name="key1">
                Ключ <see cref="T:System.Data.EntityKey" /> для сравнения.
              </param>
      <param name="key2">
                Ключ <see cref="T:System.Data.EntityKey" /> для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="key1" /> и <paramref name="key2" /> значения не равны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.EntityKeyMember.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityKeyMember" />.
            </summary>
    </member>
    <member name="M:System.Data.EntityKeyMember.#ctor(System.String,System.Object)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntityKeyMember" /> с указанной парой ключа сущности.
            </summary>
      <param name="keyName">
                Имя ключа.
              </param>
      <param name="keyValue">
                Значение ключа.
              </param>
    </member>
    <member name="M:System.Data.EntityKeyMember.ToString">
      <summary>
              Возвращает строковое представление ключа сущности.
            </summary>
      <returns>
              Строковое представление ключа сущности.
            </returns>
    </member>
    <member name="M:System.Data.EntitySqlException.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.EntitySqlException" />.
            </summary>
    </member>
    <member name="M:System.Data.EntitySqlException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntitySqlException" />, содержащий специальное сообщение об ошибке.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
    </member>
    <member name="M:System.Data.EntitySqlException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.EntitySqlException" />, содержащий указанное сообщение об ошибке и ссылку на внутреннее исключение, вызвавшее это исключение.
            </summary>
      <param name="message">
                Сообщение об ошибке, указывающее причину создания исключения.
              </param>
      <param name="innerException">
                Исключение, вызвавшее текущее исключение, или <see langword="null" /> ссылку (<see langword="Nothing" /> в Visual Basic), если не внутреннее исключение не задано.
              </param>
    </member>
    <member name="M:System.Data.EntitySqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> сведениями об исключении.
            </summary>
      <param name="info">
                Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные объекта о созданном исключении.
              </param>
      <param name="context">
                Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="info" /> Параметр <see langword="null" /> ссылку (<see langword="Nothing" /> в Visual Basic).
                </exception>
    </member>
    <member name="M:System.Data.IExtendedDataRecord.GetDataReader(System.Int32)">
      <summary>
              Возвращает вложенные модули чтения данных в виде объектов <see cref="T:System.Data.Common.DbDataReader" />.
            </summary>
      <param name="i">
                Порядковый номер столбца.
              </param>
      <returns>
              Вложенные модули чтения данных в виде объектов <see cref="T:System.Data.Common.DbDataReader" />.
            </returns>
    </member>
    <member name="M:System.Data.IExtendedDataRecord.GetDataRecord(System.Int32)">
      <summary>
              Получает объект <see cref="T:System.Data.Common.DbDataRecord" /> с заданным индексом.
            </summary>
      <param name="i">
                Индекс строки.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Common.DbDataRecord" />.
            </returns>
    </member>
    <member name="M:System.Data.InvalidCommandTreeException.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.InvalidCommandTreeException" /> класса сообщение по умолчанию.
            </summary>
    </member>
    <member name="M:System.Data.InvalidCommandTreeException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.InvalidCommandTreeException" /> указанным сообщением.
            </summary>
      <param name="message">
                Сообщение об исключении.
              </param>
    </member>
    <member name="M:System.Data.InvalidCommandTreeException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.InvalidCommandTreeException" /> класса с заданным сообщением и внутренним исключением.
            </summary>
      <param name="message">
                Сообщение об исключении.
              </param>
      <param name="innerException">
                Исключение, вызвавшее данное исключение <see cref="T:System.Data.InvalidCommandTreeException" />.
              </param>
    </member>
    <member name="M:System.Data.Mapping.EntityViewContainer.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see langword="EntityViewContainer" />.
            </summary>
    </member>
    <member name="M:System.Data.Mapping.EntityViewContainer.GetViewAt(System.Int32)">
      <summary>
              Возвращает пару ключ значение по указанному индексу, которая содержит представление и его ключ.
            </summary>
      <param name="index">
                Индекс представления.
              </param>
      <returns>
              Пара ключ значение в <paramref name="index" />, которая содержит представление и его ключ.
            </returns>
    </member>
    <member name="M:System.Data.Mapping.EntityViewGenerationAttribute.#ctor(System.Type)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Mapping.EntityViewGenerationAttribute" />.
            </summary>
      <param name="viewGenerationType">
                Тип представления.
              </param>
    </member>
    <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> класса, используя указанный <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" />, <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> и средства чтения XML.
            </summary>
      <param name="edmCollection">
                Коллекция <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" />, которая должна использоваться этим сопоставлением.
              </param>
      <param name="storeCollection">
                Коллекция <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />, которая должна использоваться этим сопоставлением.
              </param>
      <param name="xmlReaders">
                Средства чтения XML, которые будет использовать это сопоставление.
              </param>
    </member>
    <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.String[])">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> класса, используя указанный <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" />, <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> и коллекцию строка, указывающая пути к файлам метаданных.
            </summary>
      <param name="edmCollection">
                Коллекция <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" />, которая должна использоваться этим сопоставлением.
              </param>
      <param name="storeCollection">
                Коллекция <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />, которая должна использоваться этим сопоставлением.
              </param>
      <param name="filePaths">
                Пути к файлам, которые будет использовать это сопоставление.
              </param>
    </member>
    <member name="M:System.Data.MappingException.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.MappingException" />.
            </summary>
    </member>
    <member name="M:System.Data.MappingException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.MappingException" />, содержащий специальное сообщение об ошибке.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
    </member>
    <member name="M:System.Data.MappingException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.MappingException" />, использующий указанное сообщение об ошибке и ссылку на внутреннее исключение.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
      <param name="innerException">
                Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.AssociationSetEnd.ToString">
      <summary>
              Возвращает имя <see langword="End" /> роль для этого <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.
            </summary>
      <returns>
              Имя <see langword="End" /> роль для этого <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.Documentation.ToString">
      <summary>
              Возвращает сводку для документации <see cref="T:System.Data.Metadata.Edm.Documentation" />.
            </summary>
      <returns>
              Сводка для документации <see cref="T:System.Data.Metadata.Edm.Documentation" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmItemCollection.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> класса с помощью коллекции объектов XMLReader, где существуют файлы языка CSDL определения концептуальной схемы.
            </summary>
      <param name="xmlReaders">
                Коллекция объектов XMLReader, где существуют файлы языка CSDL определения концептуальной схемы.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmItemCollection.#ctor(System.String[])">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" />, используя пути, по которым расположены CSDL-файлы.
            </summary>
      <param name="filePaths">
                Пути, по которым расположены CSDL-файлы.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmItemCollection.GetPrimitiveTypes">
      <summary>
              Возвращает коллекцию объектов <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </summary>
      <returns>
              Объект ReadOnlyCollection, который представляет коллекцию <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> объектов.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmItemCollection.GetPrimitiveTypes(System.Double)">
      <summary>
              Возвращает коллекцию <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> объектов с версией указанной концептуальной модели.
            </summary>
      <param name="edmVersion">
                Версия концептуальной модели.
              </param>
      <returns>
              Объект ReadOnlyCollection, который представляет коллекцию <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> объектов.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmMember.ToString">
      <summary>
              Возвращает имя данного элемента.
            </summary>
      <returns>
              Имя данного элемента.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmSchemaError.ToString">
      <summary>
              Возвращает сообщение ошибки.
            </summary>
      <returns>
              Сообщение об ошибке.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmType.GetCollectionType">
      <summary>
              Возвращает экземпляр <see cref="T:System.Data.Metadata.Edm.CollectionType" />, элементы которого имеют этот тип.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.CollectionType" />, элементы которого имеют этот тип.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EdmType.ToString">
      <summary>
              Возвращает полное имя этого типа.
            </summary>
      <returns>
              Полное имя этого типа.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityContainer.GetEntitySetByName(System.String,System.Boolean)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntitySet" /> с использованием заданного имени для набора сущностей.
            </summary>
      <param name="name">
                Имя искомого набора сущностей.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EntitySet" />, представляющий набор сущностей с указанным именем.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityContainer.GetRelationshipSetByName(System.String,System.Boolean)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> с использованием заданного имени для набора связей.
            </summary>
      <param name="name">
                Имя искомого набора связей.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.RelationshipSet" />, представляющий набор связей с указанным именем.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityContainer.ToString">
      <summary>
              Возвращает имя этого аспекта <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
            </summary>
      <returns>
              Имя этого аспекта <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityContainer.TryGetEntitySetByName(System.String,System.Boolean,System.Data.Metadata.Edm.EntitySet@)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntitySet" /> с использованием заданного имени для набора сущностей.
            </summary>
      <param name="name">
                Имя искомого набора сущностей.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="entitySet">
                Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.EntitySet" />.
                 Если набор сущностей отсутствует, этот выходной параметр содержит значение NULL.
              </param>
      <returns>
              <see langword="true" /> Если набор сущностей, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityContainer.TryGetRelationshipSetByName(System.String,System.Boolean,System.Data.Metadata.Edm.RelationshipSet@)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> с использованием заданного имени для набора связей.
            </summary>
      <param name="name">
                Имя искомого набора связей.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="relationshipSet">
                Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.RelationshipSet" />.
              </param>
      <returns>
              <see langword="true" /> Если существует набор отношений, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntitySetBase.ToString">
      <summary>
              Возвращает имя текущей сущности или набора связей.
            </summary>
      <returns>
              Имя текущей сущности или набора связей.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EntityType.GetReferenceType">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.RefType" />, ссылающийся на этот тип <see cref="T:System.Data.Metadata.Edm.EntityType" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.RefType" />, ссылающийся на этот тип <see cref="T:System.Data.Metadata.Edm.EntityType" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.EnumMember.ToString">
      <summary>
               Переопределяя метод System.Object.ToString для предоставления более строковое представление для этого типа.
            </summary>
    </member>
    <member name="M:System.Data.Metadata.Edm.Facet.ToString">
      <summary>
              Возвращает имя этого аспекта <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </summary>
      <returns>
              Имя этого аспекта <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.FacetDescription.ToString">
      <summary>
              Возвращает имя этого аспекта.
            </summary>
      <returns>
              Имя этого аспекта.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.FunctionParameter.ToString">
      <summary>
              Возвращает имя этого аспекта <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.
            </summary>
      <returns>
              Имя этого аспекта <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей.
            </summary>
      <param name="name">
                Имя контейнера сущностей.
              </param>
      <returns>
              Если контейнер сущностей отсутствует, этот метод возвращает значение NULL. В противном случае он возвращает первый контейнер сущностей.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей.
            </summary>
      <param name="name">
                Имя контейнера сущностей.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <returns>
              Если контейнер сущностей отсутствует, этот метод возвращает значение NULL. В противном случае он возвращает первый контейнер сущностей.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)">
      <summary>
              Возвращает все случаи перегрузки функций с использованием указанного имени из этой коллекции элементов.
            </summary>
      <param name="functionCollection">
                Словарь функций.
              </param>
      <param name="functionName">
                Полное имя функции.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <returns>
              Коллекция типа ReadOnlyCollection, содержащая все функции с заданным именем.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)">
      <summary>
              Возвращает все случаи перегрузки функций с использованием указанного имени из этой коллекции элементов.
            </summary>
      <param name="functionName">
                Полное имя функции.
              </param>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все функции с заданным именем.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)">
      <summary>
              Возвращает все случаи перегрузки функций с использованием указанного имени из этой коллекции элементов.
            </summary>
      <param name="functionName">
                Полное имя функции.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все функции с заданным именем.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)">
      <summary>
              Возвращает строго типизированный объект <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> по указанному идентификатору.
            </summary>
      <param name="identity">
                Идентификатор элемента.
              </param>
      <typeparam name="T">
                Тип, возвращаемый методом.
              </typeparam>
      <returns>
              Элемент, определяемый идентификатором.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)">
      <summary>
              Возвращает строго типизированный объект <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> по указанному идентификатору. Возможен поиск с учетом регистра или без учета регистра.
            </summary>
      <param name="identity">
                Идентификатор элемента.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <typeparam name="T">
                Тип, возвращаемый методом.
              </typeparam>
      <returns>
              Элемент, определяемый идентификатором.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetItems``1">
      <summary>
              Возвращает все элементы указанного типа из этой коллекции элементов.
            </summary>
      <typeparam name="T">
                Тип, возвращаемый методом.
              </typeparam>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все элементы указанного типа.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданного имени типа и имени пространства имен в этой коллекции элементов.
            </summary>
      <param name="name">
                Имя типа.
              </param>
      <param name="namespaceName">
                Пространство имен типа.
              </param>
      <returns>
              <see cref="T:System.Data.Metadata.Edm.EdmType" /> Объект, представляющий тип, который соответствует указанным именем типа и имени пространства имен в этой коллекции элементов.
               Если нет соответствующих типов, этот метод возвращает значение NULL.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданного имени типа и имени пространства имен из этой коллекции элементов.
            </summary>
      <param name="name">
                Имя типа.
              </param>
      <param name="namespaceName">
                Пространство имен типа.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <returns>
              <see cref="T:System.Data.Metadata.Edm.EdmType" /> Объект, представляющий тип, который соответствует указанным именем типа и имени пространства имен в этой коллекции элементов.
               Если нет соответствующих типов, этот метод возвращает значение NULL.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей.
               Если контейнер сущностей отсутствует, этот выходной параметр содержит значение NULL. В противном случае он содержит первый контейнер сущностей.
            </summary>
      <param name="name">
                Имя контейнера сущностей.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="entityContainer">
                Если этот метод возвращает значение, он содержит объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
                 Если контейнер сущностей отсутствует, этот выходной параметр содержит значение NULL. В противном случае он содержит первый контейнер сущностей.
              </param>
      <returns>
              <see langword="true" /> Если контейнер сущностей, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей.
               Если контейнер сущностей отсутствует, выходной параметр содержит значение NULL. В противном случае он содержит первый контейнер сущностей.
            </summary>
      <param name="name">
                Имя контейнера сущностей.
              </param>
      <param name="entityContainer">
                Если этот метод возвращает значение, он содержит объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
                 Если контейнер сущностей отсутствует, этот выходной параметр содержит значение NULL. В противном случае он содержит первый контейнер сущностей.
              </param>
      <returns>
              <see langword="true" /> Если контейнер сущностей, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)">
      <summary>
              Возвращает строго типизированный объект <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> с использованием указанного идентификатора из этой коллекции элементов.
            </summary>
      <param name="identity">
                Идентификатор элемента.
              </param>
      <param name="item">
                Если этот метод возвращает значение, выходной параметр содержит объект <see cref="T:System.Data.Metadata.Edm.GlobalItem" />.
                 В случае глобального элемента с заданным идентификатором в коллекции элементов этот выходной параметр содержит значение null.
              </param>
      <typeparam name="T">
                Тип, возвращаемый методом.
              </typeparam>
      <returns>
              <see langword="true" /> Если есть элемент, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)">
      <summary>
              Возвращает строго типизированный объект <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> с использованием указанного идентификатора из этой коллекции элементов.
            </summary>
      <param name="identity">
                Идентификатор элемента.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="item">
                Если этот метод возвращает значение, выходной параметр содержит объект <see cref="T:System.Data.Metadata.Edm.GlobalItem" />.
                 В случае глобального элемента с заданным идентификатором в коллекции элементов этот выходной параметр содержит значение null.
              </param>
      <typeparam name="T">
                Тип, возвращаемый методом.
              </typeparam>
      <returns>
              <see langword="true" /> Если есть элемент, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданного имени типа и имени пространства имен из этой коллекции элементов.
            </summary>
      <param name="name">
                Имя типа.
              </param>
      <param name="namespaceName">
                Пространство имен типа.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="type">
                Если этот метод возвращает значение, данный выходной параметр содержит объект <see cref="T:System.Data.Metadata.Edm.EdmType" />.
                 Если отсутствует тип с заданным именем и именем пространства имен в этой коллекции элементов, этот выходной параметр содержит значение null.
              </param>
      <returns>
              <see langword="true" /> Если тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданного имени типа и имени пространства имен из этой коллекции элементов.
            </summary>
      <param name="name">
                Имя типа.
              </param>
      <param name="namespaceName">
                Пространство имен типа.
              </param>
      <param name="type">
                Если этот метод возвращает значение, данный выходной параметр содержит объект <see cref="T:System.Data.Metadata.Edm.EdmType" />.
                 Если отсутствует тип с заданным именем и именем пространства имен в этой коллекции элементов, этот выходной параметр содержит значение null.
              </param>
      <returns>
              <see langword="true" /> Если тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataItem.GetBuiltInType(System.Data.Metadata.Edm.BuiltInTypeKind)">
      <summary>
              Возвращает встроенный тип, соответствующий одному из концептуальной модели <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> значения.
            </summary>
      <param name="builtInTypeKind">
                Одно из значений <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EdmType" />, представляющий встроенный тип в модели EDM.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataItem.GetGeneralFacetDescriptions">
      <summary>
              Возвращает список общих описаний аспектов для указанного типа.
            </summary>
      <returns>
              Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, представляющий список общих описаний аспектов для указанного типа.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.
            </summary>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> с использованием указанных путей и сборки.
            </summary>
      <param name="paths">
                Пути к рабочей области метаданных.
              </param>
      <param name="assembliesToConsider">
                Имена сборок, используемых для создания рабочей области.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.ClearCache">
      <summary>
              Удаляет все записи из кэша метаданных.
            </summary>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser">
      <summary>
              Создает <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> настроен для использования <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" /> пространства данных.
            </summary>
      <returns>
              Объект, созданный синтаксического анализа.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)">
      <summary>
              Создает новый <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> привязан к этой рабочей области метаданных, на основе выражения указанного запроса.
            </summary>
      <param name="query">
                Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> определяющий запрос.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> с указанным выражением является <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" /> Свойства.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="query" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="query" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="query" />
                </exception>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)">
      <summary>
              Возвращает <see cref="T:System.Data.Metadata.Edm.StructuralType" /> представляющий <see cref="T:System.Data.Metadata.Edm.EdmType" /> соответствующий типу, заданному в параметре <paramref name="objectSpaceType" />.
            </summary>
      <param name="objectSpaceType">
                Объект <see cref="T:System.Data.Metadata.Edm.EnumlType" />, представляющий тип в пространстве объектов.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.
               Если нет соответствующих типов, этот метод возвращает значение NULL.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)">
      <summary>
              Возвращает <see cref="T:System.Data.Metadata.Edm.StructuralType" /> представляющий <see cref="T:System.Data.Metadata.Edm.EdmType" /> соответствующий типу, заданному в параметре <paramref name="objectSpaceType" />.
            </summary>
      <param name="objectSpaceType">
                Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип в пространстве объектов.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.
               Если нет соответствующих типов, этот метод возвращает значение NULL.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей и модели данных.
            </summary>
      <param name="name">
                Имя контейнера сущностей.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="dataSpace">
                Концептуальная модель, по которой ищется контейнер сущностей.
              </param>
      <returns>
              Если контейнер сущностей отсутствует, этот метод возвращает значение NULL. В противном случае он возвращает первый контейнер сущностей.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей и модели данных.
            </summary>
      <param name="name">
                Имя контейнера сущностей.
              </param>
      <param name="dataSpace">
                Концептуальная модель, по которой ищется контейнер сущностей.
              </param>
      <returns>
              Если контейнер сущностей отсутствует, этот метод возвращает значение NULL. В противном случае он возвращает первый контейнер сущностей.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)">
      <summary>
              Возвращает все случаи перегрузки функций с использованием указанного имени, имени пространства имен и модели данных.
            </summary>
      <param name="name">
                Имя функции.
              </param>
      <param name="namespaceName">
                Пространство имен функции.
              </param>
      <param name="dataSpace">
                Концептуальная модель, в которой ищутся функции.
              </param>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все функции с заданным именем из указанного пространства имен и модели данных.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)">
      <summary>
              Возвращает все случаи перегрузки функций с использованием указанного имени, имени пространства имен и модели данных.
            </summary>
      <param name="name">
                Имя функции.
              </param>
      <param name="namespaceName">
                Пространство имен функции.
              </param>
      <param name="dataSpace">
                Концептуальная модель, в которой ищутся функции.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все функции с заданным именем из указанного пространства имен и модели данных.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)">
      <summary>
              Возвращает элемент с использованием заданного идентификатора и модели данных.
            </summary>
      <param name="identity">
                Идентификатор элемента.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="dataSpace">
                Концептуальная модель, по которой ищется элемент.
              </param>
      <typeparam name="T">
                Тип, возвращаемый методом.
              </typeparam>
      <returns>
              Элемент, соответствующий указанному идентификатору в заданной модели данных.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)">
      <summary>
              Возвращает элемент с использованием заданного идентификатора и модели данных.
            </summary>
      <param name="identity">
                Идентификатор элемента.
              </param>
      <param name="dataSpace">
                Концептуальная модель, в которой ищется элемент.
              </param>
      <typeparam name="T">
                Тип, возвращаемый методом.
              </typeparam>
      <returns>
              Элемент, соответствующий указанному идентификатору в заданной модели данных.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)">
      <summary>
              Возвращает <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> элементов.
            </summary>
      <param name="dataSpace">
                <see cref="T:System.Data.Metadata.Edm.DataSpace" /> Из которого извлекаются элементы.
              </param>
      <returns>
              <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> Элементы.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)">
      <summary>
              Возвращает все элементы в заданной модели данных.
            </summary>
      <param name="dataSpace">
                Концептуальная модель, для которой необходим список элементов.
              </param>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все элементы в заданной модели данных.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)">
      <summary>
              Возвращает все элементы в заданной модели данных.
            </summary>
      <param name="dataSpace">
                Концептуальная модель, для которой необходим список элементов.
              </param>
      <typeparam name="T">
                Тип, возвращаемый методом.
              </typeparam>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все элементы в заданной модели данных.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)">
      <summary>
              Возвращает <see cref="T:System.Data.Metadata.Edm.StructuralType" /> представляющий тип пространства объектов, который соответствует типу, заданному параметром <paramref name="edmSpaceType" />.
            </summary>
      <param name="edmSpaceType">
                Объект <see cref="T:System.Data.Metadata.Edm.EnumType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип пространства объектов.
               Если нет соответствующих типов, этот метод возвращает значение NULL.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)">
      <summary>
              Возвращает <see cref="T:System.Data.Metadata.Edm.StructuralType" /> представляющий тип пространства объектов, который соответствует типу, заданному параметром <paramref name="edmSpaceType" />.
            </summary>
      <param name="edmSpaceType">
                Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип пространства объектов.
               Если нет соответствующих типов, этот метод возвращает значение NULL.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)">
      <summary>
              Возвращает список типов-примитивов в указанной модели данных.
            </summary>
      <param name="dataSpace">
                Модель данных, для которой необходим список типов-примитивов.
              </param>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая все типы-примитивы в заданной модели данных.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)">
      <summary>
               Возвращает члены данной <see cref="T:System.Data.Metadata.Edm.EntitySet" />или<see cref="T:System.Data.Metadata.Edm.EntityType" /> для исходного значения, которые необходимы при изменении сущности.
            </summary>
      <param name="entitySet">
                <see cref="T:System.Data.Metadata.Edm.EntitySet" /> Принадлежащих C-Space.
              </param>
      <param name="entityType">
                <see cref="T:System.Data.Metadata.Edm.EntityType" /> Участвующий в данной <see cref="T:System.Data.Metadata.Edm.EntitySet" />.
              </param>
      <param name="partialUpdateSupported">
                <see langword="true" /> Если сущности могут быть обновлены частично; в противном случае — <see langword="false" />.
              </param>
      <returns>
              <see cref="T:System.Data.Metadata.Edm.EdmMember" />S, для которого необходим исходное значение.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)">
      <summary>
              Возвращает элементы исходных значений из набора сущностей и типа сущности.
            </summary>
      <param name="entitySet">
                Набор сущностей, из которого извлекаются исходные значения.
              </param>
      <param name="entityType">
                Тип сущности, из которого извлекаются исходные значения.
              </param>
      <returns>
              Введите элементы исходных значений из набора сущностей и сущностей.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданных имени типа, имени пространства имен и модели данных.
            </summary>
      <param name="name">
                Имя типа.
              </param>
      <param name="namespaceName">
                Пространство имен типа.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="dataSpace">
                Концептуальная модель, по которой ищется тип.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EdmType" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданных имени типа, имени пространства имен и модели данных.
            </summary>
      <param name="name">
                Имя типа.
              </param>
      <param name="namespaceName">
                Пространство имен типа.
              </param>
      <param name="dataSpace">
                Концептуальная модель, по которой ищется тип.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EdmType" />, представляющий тип, который соответствует заданному имени типа и имени пространства имен в этой модели данных.
               Если нет соответствующих типов, этот метод возвращает значение NULL.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)">
      <summary>
              Загружает метаданные из заданной сборки.
            </summary>
      <param name="assembly">
                Сборка, из которой будут загружаться метаданные.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})">
      <summary>
              Загружает метаданные из заданной сборки.
            </summary>
      <param name="assembly">
                Сборка, из которой будут загружаться метаданные.
              </param>
      <param name="logLoadMessage">
                Делегат для ведения журнала сообщений о загрузке.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)">
      <summary>
              Регистрирует коллекцию элементов в каждой связанной с ней модели данных.
            </summary>
      <param name="collection">
                Коллекция выходных параметров, которую нужно заполнить.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)">
      <summary>
              Возвращает <see cref="T:System.Data.Metadata.Edm.EnumType" /> объект через выходной параметр <paramref name="edmSpaceType" /> представляющий <see cref="T:System.Data.Metadata.Edm.EdmType" /> соответствующий типу, заданному в параметре <paramref name="objectSpaceType" />.
            </summary>
      <param name="objectSpaceType">
                Объект <see cref="T:System.Data.Metadata.Edm.EnumType" />, представляющий тип пространства объектов.
              </param>
      <param name="edmSpaceType">
                При возвращении данного метода содержит <see cref="T:System.Data.Metadata.Edm.EnumType" /> представляющий <see cref="T:System.Data.Metadata.Edm.EdmType" />.
                 Этот параметр передается неинициализированным.
              </param>
      <returns>
              <see langword="true" /> в случае успешного выполнения <see langword="false" /> в случае сбоя.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)">
      <summary>
              Возвращает <see cref="T:System.Data.Metadata.Edm.StructuralType" /> объект через выходной параметр <paramref name="edmSpaceType" /> представляющий <see cref="T:System.Data.Metadata.Edm.EdmType" /> соответствующий типу, заданному в параметре <paramref name="objectSpaceType" />.
            </summary>
      <param name="objectSpaceType">
                Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип пространства объектов.
              </param>
      <param name="edmSpaceType">
                При возвращении данного метода содержит <see cref="T:System.Data.Metadata.Edm.StructuralType" /> представляющий <see cref="T:System.Data.Metadata.Edm.EdmType" />.
                 Этот параметр передается неинициализированным.
              </param>
      <returns>
              <see langword="true" /> Если тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей и модели данных.
            </summary>
      <param name="name">
                Имя контейнера сущностей.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="dataSpace">
                Концептуальная модель, по которой ищется контейнер сущностей.
              </param>
      <param name="entityContainer">
                Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
                 Если контейнер сущностей отсутствует, этот выходной параметр содержит значение NULL. В противном случае он возвращает первый контейнер сущностей.
                 Этот параметр передается неинициализированным.
              </param>
      <returns>
              <see langword="true" /> Если контейнер сущностей, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> с использованием заданного имени для контейнера сущностей и модели данных.
            </summary>
      <param name="name">
                Имя контейнера сущностей.
              </param>
      <param name="dataSpace">
                Концептуальная модель, по которой ищется контейнер сущностей.
              </param>
      <param name="entityContainer">
                Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
                 Если контейнер сущностей отсутствует, этот выходной параметр содержит значение NULL. В противном случае он возвращает первый контейнер сущностей.
                 Этот параметр передается неинициализированным.
              </param>
      <returns>
              <see langword="true" /> Если контейнер сущностей, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)">
      <summary>
              Возвращает элемент с использованием заданного идентификатора и модели данных.
            </summary>
      <param name="identity">
                Концептуальная модель, по которой ищется элемент.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="dataSpace">
                Концептуальная модель, по которой ищется элемент.
              </param>
      <param name="item">
                Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.GlobalIem" />.
                 Этот параметр передается неинициализированным.
              </param>
      <typeparam name="T">
                Тип, возвращаемый методом.
              </typeparam>
      <returns>
              <see langword="true" /> Если есть элемент, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)">
      <summary>
              Возвращает элемент с использованием заданного идентификатора и модели данных.
            </summary>
      <param name="identity">
                Концептуальная модель, по которой ищется элемент.
              </param>
      <param name="space">
                Концептуальная модель, по которой ищется элемент.
              </param>
      <param name="item">
                Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.GlobalIem" />.
                 Этот параметр передается неинициализированным.
              </param>
      <typeparam name="T">
                Тип, возвращаемый методом.
              </typeparam>
      <returns>
              <see langword="true" /> Если есть элемент, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)">
      <summary>
              Проверяет, получение <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.
            </summary>
      <param name="dataSpace">
                <see cref="T:System.Data.Metadata.Edm.DataSpace" /> Из которой предпринимается попытка извлечения <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.
              </param>
      <param name="collection">
                При возвращении данного метода содержит коллекцию элементов.
                 Этот параметр передается неинициализированным.
              </param>
      <returns>
              <see langword="true" /> Если извлечение проведено успешно; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)">
      <summary>
              Возвращает <see cref="T:System.Data.Metadata.Edm.EnumType" /> объект через выходной параметр <paramref name="objectSpaceType" /> представляющий тип, который соответствует <see cref="T:System.Data.Metadata.Edm.EdmType" /> заданному параметром <paramref name="edmSpaceType" />.
            </summary>
      <param name="edmSpaceType">
                Объект <see cref="T:System.Data.Metadata.Edm.EnumType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.
              </param>
      <param name="objectSpaceType">
                При возвращении данного метода содержит <see cref="T:System.Data.Metadata.Edm.EnumType" /> представляющий тип пространства объектов.
                 Этот параметр передается неинициализированным.
              </param>
      <returns>
              <see langword="true" /> Если тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)">
      <summary>
              Возвращает <see cref="T:System.Data.Metadata.Edm.StructuralType" /> объект через выходной параметр <paramref name="objectSpaceType" /> представляющий тип, который соответствует <see cref="T:System.Data.Metadata.Edm.EdmType" /> заданному параметром <paramref name="edmSpaceType" />.
            </summary>
      <param name="edmSpaceType">
                Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, который представляет тип <see cref="T:System.Data.Metadata.Edm.EdmType" />.
              </param>
      <param name="objectSpaceType">
                При возвращении данного метода содержит <see cref="T:System.Data.Metadata.Edm.StructuralType" /> представляющий тип пространства объектов.
                 Этот параметр передается неинициализированным.
              </param>
      <returns>
              <see langword="true" /> Если тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданных имени типа, имени пространства имен и модели данных.
            </summary>
      <param name="name">
                Имя типа.
              </param>
      <param name="namespaceName">
                Пространство имен типа.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="dataSpace">
                Концептуальная модель, по которой ищется тип.
              </param>
      <param name="type">
                Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.EdmType" />.
                 Этот параметр передается неинициализированным.
              </param>
      <returns>
              <see langword="true" /> Если тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmType" /> с использованием заданных имени типа, имени пространства имен и модели данных.
            </summary>
      <param name="name">
                Имя типа.
              </param>
      <param name="namespaceName">
                Пространство имен типа.
              </param>
      <param name="dataSpace">
                Концептуальная модель, по которой ищется тип.
              </param>
      <param name="type">
                Если метод возвращает значение, этот параметр содержит объект <see cref="T:System.Data.Metadata.Edm.EdmType" />.
                 Этот параметр передается неинициализированным.
              </param>
      <returns>
              <see langword="true" /> Если тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.NavigationProperty.GetDependentProperties">
      <summary>
              Получает свойства внешнего ключа для свойства навигации, в зависимом элементе справочного ограничения.
            </summary>
      <returns>
              Коллекция свойств внешнего ключа.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Metadata.Edm.ObjectItemCollection" />.
            </summary>
    </member>
    <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetClrType(System.Data.Metadata.Edm.EnumType)">
      <summary>
               Метод возвращает базовый тип CLR для указанного аргумента типа OSpace.
               Если пространство данных параметра не OSpace, исключение ArgumentException.
            </summary>
      <param name="objectSpaceType">
                Искомый тип OSpace.
              </param>
      <returns>
              Тип CLR OSpace аргумента.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetClrType(System.Data.Metadata.Edm.StructuralType)">
      <summary>
              Возвращает тип CLR, соответствующий <see cref="T:System.Data.Metadata.Edm.StructuralType" /> заданному параметром objectSpaceType.
            </summary>
      <param name="objectSpaceType">
                Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип пространства объектов.
              </param>
      <returns>
              Тип CLR OSpace аргумента.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetItems``1">
      <summary>
              Возвращает все элементы указанного типа из этой коллекции элементов.
            </summary>
      <typeparam name="T">
                Тип, возвращаемый методом.
              </typeparam>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> содержащий все элементы указанного типа.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetPrimitiveTypes">
      <summary>
              Возвращает коллекцию объектов типа-примитива.
            </summary>
      <returns>
              Коллекция объектов типа-примитива.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadFromAssembly(System.Reflection.Assembly)">
      <summary>
              Загружает метаданные из заданной сборки.
            </summary>
      <param name="assembly">
                Сборка, из которой будут загружаться метаданные.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadFromAssembly(System.Reflection.Assembly,System.Data.Metadata.Edm.EdmItemCollection)">
      <summary>
              Загружает метаданные из указанной сборки.
            </summary>
      <param name="assembly">
                Сборка, из которой будут загружаться метаданные.
              </param>
      <param name="edmItemCollection">
                Источник метаданных модели EDM для метаданных объектного пространства.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadFromAssembly(System.Reflection.Assembly,System.Data.Metadata.Edm.EdmItemCollection,System.Action{System.String})">
      <summary>
              Загружает метаданные из заданной сборки.
            </summary>
      <param name="assembly">
                Сборка, из которой будут загружаться метаданные.
              </param>
      <param name="edmItemCollection">
                Источник метаданных модели EDM для метаданных объектного пространства.
              </param>
      <param name="logLoadMessage">
                Делегат, журнал, в который отправляются сообщения.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.TryGetClrType(System.Data.Metadata.Edm.EnumType,System.Type@)">
      <summary>
              Возвращает базовый тип CLR для указанного аргумента типа enum OSpace.
               Если пространство данных параметра не OSpace, метод возвращает значение false и задает выходному параметру значение null.
            </summary>
      <param name="objectSpaceType">
                Тип перечисления OSpace для поиска
              </param>
      <param name="clrType">
                Тип перечисления CLR аргумента OSpace
              </param>
      <returns>
              значение true, если операция выполнена успешно; значение false в случае сбоя
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.TryGetClrType(System.Data.Metadata.Edm.StructuralType,System.Type@)">
      <summary>
              Возвращает тип CLR, соответствующий <see cref="T:System.Data.Metadata.Edm.StructuralType" /> заданному параметром objectSpaceType.
            </summary>
      <param name="objectSpaceType">
                Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип пространства объектов.
              </param>
      <param name="clrType">
                Тип CLR.
              </param>
      <returns>
              <see langword="true" /> Если тип, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.PrimitiveType.GetEdmPrimitiveType">
      <summary>
              Возвращает эквивалент <see cref="T:System.Data.Metadata.Edm.EdmType" /> типа <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EdmType" />, который является эквивалентом типа <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.PrimitiveType.GetEdmPrimitiveType(System.Data.Metadata.Edm.PrimitiveTypeKind)">
      <summary>
              Возвращает эквивалент <see cref="T:System.Data.Metadata.Edm.EdmType" /> из <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </summary>
      <param name="primitiveTypeKind">
                Значение типа <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
              </param>
      <returns>
              <see cref="T:System.Data.Metadata.Edm.EdmType" /> Объект, который является эквивалентом указанного <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.PrimitiveType.GetEdmPrimitiveTypes">
      <summary>
              Возвращает список типов-примитивов.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая список типов-примитивов.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)">
      <summary>
              Определяет, содержит ли коллекция элемент с указанным идентификатором.
            </summary>
      <param name="identity">
                Идентификатор элемента.
              </param>
      <returns>
              <see langword="true" /> Если коллекция содержит элемент для поиска; в противном случае — <see langword="false" />.
               Значение по умолчанию – false.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Dispose">
      <summary>
              Освобождает этот перечислитель.
            </summary>
    </member>
    <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.MoveNext">
      <summary>
              Переходит к следующему элементу в коллекции с типом <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator" />.
            </summary>
      <returns>
              <see langword="true" /> Если перечислитель перемещается в коллекции с типом <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.EnumeratortaCollection" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Reset">
      <summary>
              Помещает перечислитель перед первой позицией в коллекции с типом <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />.
            </summary>
    </member>
    <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator">
      <summary>
              Возвращает перечислитель для просмотра этой коллекции.
            </summary>
      <returns>
              Перечислитель <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator" />, который предназначен для просмотра этой коллекции <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)">
      <summary>
              Получает элемент из этой коллекции с использованием заданного идентификатора.
            </summary>
      <param name="identity">
                Идентификатор искомого элемента.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <returns>
              Элемент из этой коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)">
      <summary>
              Возвращает индекс указанного значения в этой коллекции.
            </summary>
      <param name="value">
                Искомое значение.
              </param>
      <returns>
              Индекс указанного значения в этой коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)">
      <summary>
              Получает элемент из этой коллекции с использованием заданного идентификатора.
            </summary>
      <param name="identity">
                Идентификатор искомого элемента.
              </param>
      <param name="ignoreCase">
                <see langword="true" /> для выполнения поиска без учета регистра; в противном случае — <see langword="false" />.
              </param>
      <param name="item">
                Если этот метод возвращает значение, данный выходной параметр содержит элемент из коллекции.
                 Если искомый элемент отсутствует, этот выходной параметр содержит значение NULL.
              </param>
      <returns>
              <see langword="true" /> Если есть элемент, соответствующий критериям поиска; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.ReferentialConstraint.ToString">
      <summary>
              Возвращает сочетание имен <see cref="P:System.Data.Metadata.Edm.ReferentialConstraint.FromRole" /> и <see cref="P:System.Data.Metadata.Edm.ReferentialConstraint.ToRole" />.
            </summary>
      <returns>
              Сочетание имен <see cref="P:System.Data.Metadata.Edm.ReferentialConstraint.FromRole" /> и <see cref="P:System.Data.Metadata.Edm.ReferentialConstraint.ToRole" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.RelationshipEndMember.GetEntityType">
      <summary>
              Доступ к EntityType EndMember в ассоциации.
            </summary>
      <returns>
              EntityType EndMember в ассоциации.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.StoreItemCollection.#ctor(System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> класса, используя указанное средство чтения XML.
            </summary>
      <param name="xmlReaders">
                XMLReader, использованного для создания метаданных.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.StoreItemCollection.#ctor(System.String[])">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> класса с помощью указанного пути.
            </summary>
      <param name="filePaths">
                Пути к файлам, использованное для создания метаданных.
              </param>
    </member>
    <member name="M:System.Data.Metadata.Edm.StoreItemCollection.GetPrimitiveTypes">
      <summary>
              Возвращает коллекцию объектов <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объект, представляющий коллекцию <see cref="T:System.Data.Metadata.Edm.PrimitiveType" /> объектов.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean)">
      <summary>
              Создает объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> для описания двоичного типа с помощью указанных значений аспектов.
            </summary>
      <param name="primitiveType">
                Тип <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />, для которого создается объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
              </param>
      <param name="isFixedLength">
                <see langword="true" />для задания длины двоичный тип фиксированной; в противном случае <see langword="false" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, описывающий двоичный тип с помощью указанных значений аспектов.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Int32)">
      <summary>
              Создает объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> для описания двоичного типа с помощью указанных значений аспектов.
            </summary>
      <param name="primitiveType">
                Тип <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />, для которого создается объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
              </param>
      <param name="isFixedLength">
                <see langword="true" /> Чтобы задать длину двоичного типа для основных; в противном случае — <see langword="false" />.
              </param>
      <param name="maxLength">
                Максимальная длина двоичного типа.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, описывающий двоичный тип с помощью указанных значений аспектов.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDateTimeOffsetTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
      <summary>
              Создает <see cref="T:System.Data.Metadata.Edm.DateTimeOffsetTypeUsage" /> объект типа, которые описывают параметры.
            </summary>
      <param name="primitiveType">
                Простой тип, определяющий единицы измерения смещения.
              </param>
      <param name="precision">
                Степень гранулярности <see cref="T:System." />DateTimeOffset в долях секунды, в зависимости от числа десятичных знаков поддерживается.
                 Например, точность 3 означает гранулярности поддерживается — миллисекунд.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.DateTimeOffsetTypeUsage" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDateTimeTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
      <summary>
              Создает <see cref="T:System.Data.Metadata.Edm.DateTimeTypeUsage" /> объект типа, которые описывают параметры.
            </summary>
      <param name="primitiveType">
                Простой тип, который определяет единицы измерения <see cref="T:System." />объекта DateTime.
              </param>
      <param name="precision">
                Степень гранулярности <see cref="T:System." />DateTimeOffset в долях секунды, в зависимости от числа десятичных знаков поддерживается.
                 Например, точность 3 означает гранулярности поддерживается — миллисекунд.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.DateTimeTypeUsage" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Metadata.Edm.PrimitiveType)">
      <summary>
              Создает объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> для описания десятичного типа с неограниченными значениями аспектов точности и масштаба.
            </summary>
      <param name="primitiveType">
                Тип <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />, для которого создается объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> для описания десятичного типа с неограниченными значениями аспектов точности и масштаба.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Byte,System.Byte)">
      <summary>
              Создает объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> для описания десятичного типа с помощью указанных значений аспектов.
            </summary>
      <param name="primitiveType">
                Тип <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />, для которого создается объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
              </param>
      <param name="precision">
                Точность десятичного типа как тип <see cref="T:System.Byte" />.
              </param>
      <param name="scale">
                Масштаб десятичного типа как тип <see cref="T:System.Byte" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, описывающий десятичный тип с помощью указанных значений аспектов.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDefaultTypeUsage(System.Data.Metadata.Edm.EdmType)">
      <summary>
              Создает <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> объект с типом указанного концептуальной модели.
            </summary>
      <param name="edmType">
                Тип <see cref="T:System.Data.Metadata.Edm.EdmType" />, для которого создается объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> со значениями аспектов по умолчанию для указанного типа <see cref="T:System.Data.Metadata.Edm.EdmType" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean)">
      <summary>
              Создает <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> объект для описания строкового типа с помощью указанных значений аспектов и неограниченного параметра <see langword="MaxLength" />.
            </summary>
      <param name="primitiveType">
                Тип <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />, для которого создается объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
              </param>
      <param name="isUnicode">
                <see langword="true" /> Чтобы задать кодировку стандартных типа строки в Юникоде. в противном случае — <see langword="false" />.
              </param>
      <param name="isFixedLength">
                <see langword="true" /> Чтобы задать длину строкового типа исправленной; в противном случае — <see langword="false" />
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> объект, описывающий строковый тип с помощью указанных значений аспектов и неограниченного параметра <see langword="MaxLength" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean,System.Int32)">
      <summary>
              Создает объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> для описания строкового типа с помощью указанных значений аспектов.
            </summary>
      <param name="primitiveType">
                Тип <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />, для которого создается объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
              </param>
      <param name="isUnicode">
                <see langword="true" /> Чтобы задать кодировку стандартных типа строки в Юникоде. в противном случае — <see langword="false" />.
              </param>
      <param name="isFixedLength">
                <see langword="true" /> Чтобы задать кодировку стандартных типа строки в Юникоде. в противном случае — <see langword="false" />.
              </param>
      <param name="maxLength">
                <see langword="true" /> Чтобы задать длину строкового типа исправленной; в противном случае — <see langword="false" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, описывающий строковый тип с помощью указанных значений аспектов.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateTimeTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
      <summary>
              Создает <see cref="T:System.Data.Metadata.Edm.TimeTypeUsage" /> объект типа, которые описывают параметры.
            </summary>
      <param name="primitiveType">
                Простой тип, который определяет единицы измерения <see cref="T:System." />объекта DateTime.
              </param>
      <param name="precision">
                Степень гранулярности <see cref="T:System." />DateTimeOffset в долях секунды, в зависимости от числа десятичных знаков поддерживается.
                 Например, точность 3 означает гранулярности поддерживается — миллисекунд.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.TimeTypeUsage" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.IsSubtypeOf(System.Data.Metadata.Edm.TypeUsage)">
      <summary>
              Проверяет, является ли этот объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> подтипом указанного типа <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
            </summary>
      <param name="typeUsage">
                Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> для проверки.
              </param>
      <returns>
              <see langword="true" /> Если этот <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> является подтипом указанного <see cref="T:System.Data.Metadata.Edm.TypeUsage" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Metadata.Edm.TypeUsage.ToString">
      <summary>
              Возвращает полное имя типа, описанного в этой сущности <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
            </summary>
      <returns>
              Полное имя типа, описанного в этом <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> как строка.
            </returns>
    </member>
    <member name="M:System.Data.MetadataException.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.MetadataException" /> сообщением по умолчанию.
            </summary>
    </member>
    <member name="M:System.Data.MetadataException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.MetadataException" /> указанным сообщением.
            </summary>
      <param name="message">
                Сообщение об исключении.
              </param>
    </member>
    <member name="M:System.Data.MetadataException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.MetadataException" /> указанным сообщением и внутренним исключением.
            </summary>
      <param name="message">
                Сообщение об исключении.
              </param>
      <param name="innerException">
                Исключение, вызвавшее данное исключение <see cref="T:System.Data.MetadataException" />.
              </param>
    </member>
    <member name="M:System.Data.ObjectNotFoundException.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.ObjectNotFoundException" />.
            </summary>
    </member>
    <member name="M:System.Data.ObjectNotFoundException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.ObjectNotFoundException" />, содержащий специальное сообщение об ошибке.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
    </member>
    <member name="M:System.Data.ObjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.ObjectNotFoundException" />, использующий указанное сообщение об ошибке и ссылку на внутреннее исключение.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
      <param name="innerException">
                Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.
              </param>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg5">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg5 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg6">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg6 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg7">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg7 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg8">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg8 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`10" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg5">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg5 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg6">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg6 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg7">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg7 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg8">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg8 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg9">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg9 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`11" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg5">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg5 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg6">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg6 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg7">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg7 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg8">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg8 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg9">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg9 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg10">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg10 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`12" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg5">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg5 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg6">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg6 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg7">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg7 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg8">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg8 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg9">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg9 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg10">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg10 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg11">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg11 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`13" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg5">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg5 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg6">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg6 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg7">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg7 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg8">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg8 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg9">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg9 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg10">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg10 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg11">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg11 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg12">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg12 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`14" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg5">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg5 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg6">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg6 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg7">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg7 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg8">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg8 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg9">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg9 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg10">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg10 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg11">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg11 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg12">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg12 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg13">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg13 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`15" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg5">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg5 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg6">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg6 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg7">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg7 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg8">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg8 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg9">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg9 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg10">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg10 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg11">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg11 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg12">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg12 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg13">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg13 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg14">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg14 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`16" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg5">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg5 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg6">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg6 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg7">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg7 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg8">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg8 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg9">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg9 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg10">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg10 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg11">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg11 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg12">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg12 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg13">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg13 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg14">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg14 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg15">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg15 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`17" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`2" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1" />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`3" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`4" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />  метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`5" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`6" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg5">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg5 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`7" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg5">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg5 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg6">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg6 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`8" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})">
      <summary>
              Создает новый делегат, представляющий скомпилированный запрос LINQ to Entities.
            </summary>
      <param name="query">
                Лямбда-выражение для компиляции.
              </param>
      <typeparam name="TArg0">
                Тип, производный от <see cref="T:System.Data.Objects.ObjectContext" />.
              </typeparam>
      <typeparam name="TArg1">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg1 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg2">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg2 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg3">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg3 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg4">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg4 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg5">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg5 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg6">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg6 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TArg7">
                Представляет тип параметра, который необходимо передать во время выполнения делегата, возвращенного этим методом.
                <paramref name="TArg7 " />должен быть типом-примитивом.
              </typeparam>
      <typeparam name="TResult">
                Тип <paramref name="T" /> результатов запроса, возвращенными в результате выполнения делегата, возвращаемого методом <see cref="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" /> метод.
              </typeparam>
      <returns>
              <see cref="T:System.Func`9" />, универсальный делегат, представляющий скомпилированный запрос LINQ to Entities.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.ComplexObject.#ctor">
      <summary>
              Создает экземпляр класса <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)">
      <summary>
              Уведомляет объект отслеживания изменений об изменении свойства сложного объекта.
            </summary>
      <param name="property">
                Имя измененного свойства.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="property" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)">
      <summary>
              Уведомляет объект отслеживания изменений, что ожидается изменение свойства сложного объекта.
            </summary>
      <param name="property">
                Имя изменяемого свойства.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="property" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute.#ctor">
      <summary>
              Создает новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EdmComplexTypeAttribute.#ctor">
      <summary>
              Создает новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EdmEntityTypeAttribute.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EdmEnumTypeAttribute.#ctor">
      <summary>
               Инициализирует новый экземпляр класса EdmEnumTypeAttribute.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EdmFunctionAttribute.#ctor(System.String,System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EdmFunctionAttribute" />.
            </summary>
      <param name="namespaceName">
                Пространство имен сопоставляемой функции.
              </param>
      <param name="functionName">
                Имя сопоставляемой функции.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)">
      <summary>
              Создает экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" />.
            </summary>
      <param name="relationshipNamespaceName">
                Имя пространства имен для ассоциации, в которой участвует эта сущность.
              </param>
      <param name="relationshipName">
                Возвращает имя связи, в которой участвует данная сущность.
              </param>
      <param name="role1Name">
                Имя роли для типа одного из элементов ассоциации.
              </param>
      <param name="role1Multiplicity">
                Значение параметра <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" />, указывающее кратность одного из элементов ассоциации, например «один» или «много».
              </param>
      <param name="role1Type">
                Тип сущности, представляющей собой один из элементов ассоциации.
              </param>
      <param name="role2Name">
                Имя роли для типа другого элемента ассоциации.
              </param>
      <param name="role2Multiplicity">
                Значение параметра <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" />, указывающее кратность второго элемента ассоциации, например «один» или «много».
              </param>
      <param name="role2Type">
                Тип сущности, представляющей собой другой элемент ассоциации.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" />.
            </summary>
      <param name="relationshipNamespaceName">
                Имя пространства имен для ассоциации, в которой участвует эта сущность.
              </param>
      <param name="relationshipName">
                Возвращает имя связи, в которой участвует данная сущность.
              </param>
      <param name="role1Name">
                Имя роли для типа одного из элементов ассоциации.
              </param>
      <param name="role1Multiplicity">
                Значение параметра <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" />, указывающее кратность одного из элементов ассоциации, например «один» или «много».
              </param>
      <param name="role1Type">
                Тип сущности, представляющей собой один из элементов ассоциации.
              </param>
      <param name="role2Name">
                Имя роли для типа другого элемента ассоциации.
              </param>
      <param name="role2Multiplicity">
                Значение параметра <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" />, указывающее кратность второго элемента ассоциации, например «один» или «много».
              </param>
      <param name="role2Type">
                Тип сущности, представляющей собой другой элемент ассоциации.
              </param>
      <param name="isForeignKey">
                Значение, указывающее, основан ли связь на значение внешнего ключа.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" />.
            </summary>
      <param name="relationshipNamespaceName">
                Имя пространства имен свойства связи.
              </param>
      <param name="relationshipName">
                Имя связи.
                 В имени связи не указано пространство имен.
              </param>
      <param name="targetRoleName">
                Имя роли на другом конце связи.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EdmSchemaAttribute" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EdmSchemaAttribute" /> с уникальным значением для каждой модели, упоминаемой в сборке.
            </summary>
      <param name="assemblyGuid">
                Строка, являющаяся уникальным значением идентификатора GUID для модели в сборке.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
      <summary>
              Добавляет объект в коллекцию.
            </summary>
      <param name="entity">
                Объект для добавления в коллекцию.
                <paramref name="entity" /> необходимо реализовать <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="entity " />— <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
      <summary>
              Определяет связь между двумя присоединенными объектами в контексте объекта.
            </summary>
      <param name="entity">
                Присоединяемый объект.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Если <paramref name="entity" /> является <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Если <paramref name="entity" /> не может быть связан с исходным объектом.
                   Это может происходить, если ассоциация в концептуальной схеме не поддерживает наличие связи между двумя типами.
                
                  -или-
                
                  Если объект имеет <see langword="null" /> или не находится в <see cref="F:System.Data.EntityState.Unchanged" /> или <see cref="F:System.Data.EntityState.Modified" /> состояния.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
      <summary>
              Определяет связи между объектом и коллекцией связанных объектов в контексте объекта.
            </summary>
      <param name="entities">
                Коллекция объектов в контексте объекта, которые связаны с исходным объектом.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="entities" /> Коллекция <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Исходный объект или объект в <paramref name="entities" /> Коллекция <see langword="null" /> или не находится в <see cref="F:System.Data.EntityState.Unchanged" /> или <see cref="F:System.Data.EntityState.Modified" /> состояния.
                
                  -или-
                
                  Не удается определить связь на основании метаданных модели EDM.
                   Это может происходить, если ассоциация в концептуальной схеме не поддерживает наличие связи между двумя типами.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
      <summary>
              Удаляет все сущности из коллекции.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
      <summary>
              Определяет, существует ли в коллекции указанный объект.
            </summary>
      <param name="entity">
                Объект для поиска в <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.
              </param>
      <returns>
              Значение <see langword="true" />, если объект найден в коллекции <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)">
      <summary>
              Копирует все содержимое коллекции в массив, начиная с указанного индекса в массиве назначения.
            </summary>
      <param name="array">
                Массив для копирования данных.
              </param>
      <param name="arrayIndex">
                Индекс (отсчет с нуля) в массиве, с которого начинается копирование.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
      <summary>
              Возвращает запрос объектов, в результате выполнения которого возвращается набор объектов, существующих в текущей коллекции.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Objects.ObjectQuery`1" />, представляющий коллекцию сущностей.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Если объект находится в состоянии <see cref="F:System.Data.EntityState.Added" />.
                
                  -или-
                
                  Если объект находится в состоянии <see cref="F:System.Data.EntityState.Detached" /> с параметром <see cref="T:System.Data.Objects.MergeOption" />, отличным от <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator">
      <summary>
              Возвращает перечислитель, используемый для прохода по объектам в коллекции.
            </summary>
      <returns>
              Интерфейс <see cref="T:System.Collections.IEnumerator" />, проходящий по набору значений, помещенных в кэш коллекцией <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
      <summary>
              Загружает связанные объекты в коллекцию, используя заданный параметр слияния.
            </summary>
      <param name="mergeOption">
                Задает порядок слияния объектов в этой коллекции с объектами, которые могли быть возвращены предыдущими запросами того же контекста <see cref="T:System.Data.Objects.ObjectContext" />.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
              Используется внутренне для десериализации объектов сущности.
            </summary>
      <param name="context">
                Контекст потоковой передачи.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)">
      <summary>
              Используется внутренне для сериализации объектов сущности.
            </summary>
      <param name="context">
                Контекст потоковой передачи.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
      <summary>
              Удаляет объект из коллекции и помечает связь к удалению.
            </summary>
      <param name="entity">
                Объект, который должен быть удален из коллекции.
              </param>
      <returns>
              <see langword="true" /> Если элемент был успешно удален; в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Объект <paramref name="entity" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name=" entity " />Объект не присоединен к тому же контексту объекта.
                
                  -или-
                
                  <paramref name="entity " />Объект имеет допустимый диспетчер связей.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              Возвращает перечислитель, который используется для прохода по набору значений, помещенных в кэш коллекцией <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.
            </summary>
      <returns>
              Интерфейс <see cref="T:System.Collections.IEnumerator" />, проходящий по набору значений, помещенных в кэш коллекцией <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
      <summary>
              Возвращает коллекцию в виде интерфейса <see cref="T:System.Collections.IList" />, используемого для привязки данных.
            </summary>
      <returns>
              Интерфейс <see cref="T:System.Collections.IList" /> объектов сущностей.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityObject.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.EntityObject" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanged(System.String)">
      <summary>
              Уведомляет объект отслеживания изменений об изменении свойства.
            </summary>
      <param name="property">
                Имя измененного свойства.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="property" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanging(System.String)">
      <summary>
              Уведомляет объект отслеживания изменений об отложенном изменении свойства.
            </summary>
      <param name="property">
                Имя изменяемого свойства.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="property" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithChangeTracker#SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)">
      <summary>
              Указывает экземпляр <see cref="T:System.Data.Objects.DataClasses.IEntityChangeTracker" />, который используется, чтобы сообщать об изменениях свойств.
            </summary>
      <param name="changeTracker">
                Ссылка на объект отслеживания изменений, который используется, чтобы сообщать об изменениях свойств.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor">
      <summary>
              Создает новый экземпляр <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityReference`1.Attach(`0)">
      <summary>
              Создает связь «многие к одному» или «один к одному» между двумя объектами в контексте объекта.
            </summary>
      <param name="entity">
                Присоединяемый объект.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Если <paramref name="entity" /> является <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Если <paramref name="entity" /> не может быть связан с текущим связанным элементом.
                   Это может происходить, если ассоциация в концептуальной схеме не поддерживает наличие связи между двумя типами.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery">
      <summary>
              Создает эквивалентный запрос объектов, возвращающий связанный объект.
            </summary>
      <returns>
              Запрос <see cref="T:System.Data.Objects.ObjectQuery`1" />, возвращающий связанный объект.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Если объект находится в состоянии <see cref="F:System.Data.EntityState.Added" />.
                
                  -или-
                
                  Если объект находится в состоянии <see cref="F:System.Data.EntityState.Detached" /> с параметром <see cref="P:System.Data.Objects.ObjectQuery.MergeOption" />, отличным от <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)">
      <summary>
              Загружает связанный объект для этого объекта <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> с указанным параметром слияния.
            </summary>
      <param name="mergeOption">
                Определяет, как должен происходит возврат объекта, если он уже существует в контексте объекта <see cref="T:System.Data.Objects.ObjectContext" />.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Источник <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> — <see langword="null" />.
                
                  -или-
                
                  Запрос возвращает больше одного связанного элемента.
                
                  -или-
                
                  Запрос возвращает нулевое количество связанных элементов, хотя ожидался возврат одного связанного элемента.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityReference`1.OnRefDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
              Этот метод используется внутренне для сериализации связанных объектов сущности.
            </summary>
      <param name="context">
                Сериализованный поток.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.EntityReference`1.OnSerializing(System.Runtime.Serialization.StreamingContext)">
      <summary>
              Этот метод используется внутренне для сериализации связанных объектов сущности.
            </summary>
      <param name="context">
                Сериализованный поток.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged(System.String,System.Object,System.String)">
      <summary>
              Уведомляет объект отслеживания изменений об изменении свойства сложного типа.
            </summary>
      <param name="entityMemberName">
                Имя сложного свойства типа сущности, которая была изменена.
              </param>
      <param name="complexObject">
                Сложный тип, содержащий измененное свойство.
              </param>
      <param name="complexObjectMemberName">
                Имя измененного свойства сложного типа.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging(System.String,System.Object,System.String)">
      <summary>
              Уведомляет объект отслеживания изменений об отложенном изменении сложного свойства.
            </summary>
      <param name="entityMemberName">
                Имя изменяемого свойства сущности верхнего уровня.
              </param>
      <param name="complexObject">
                Сложный тип, содержащий изменяемого свойства.
              </param>
      <param name="complexObjectMemberName">
                Имя свойства, которое меняется на сложный тип.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanged(System.String)">
      <summary>
              Уведомляет объект отслеживания изменений об изменении свойства типа сущности.
            </summary>
      <param name="entityMemberName">
                Имя измененного свойства.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanging(System.String)">
      <summary>
              Уведомляет объект отслеживания изменений об отложенном изменении свойства типа сущности.
            </summary>
      <param name="entityMemberName">
                Имя изменяемого свойства.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)">
      <summary>
              Возвращает или задает интерфейс <see cref="T:System.Data.Objects.DataClasses.IEntityChangeTracker" />, используемый для формирования сообщений об изменениях.
            </summary>
      <param name="changeTracker">
                Интерфейс <see cref="T:System.Data.Objects.DataClasses.IEntityChangeTracker" />, используемый для формирования сообщений об изменениях.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <summary>
              Добавляет объект в связанный элемент.
            </summary>
      <param name="entity">
                Объект для добавления в коллекцию.
                <paramref name="entity" />необходимо реализовать <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)">
      <summary>
              Добавляет объект в связанный элемент.
            </summary>
      <param name="entity">
                Объект для добавления в коллекцию.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <summary>
              Определяет связь между двумя присоединенными объектами.
            </summary>
      <param name="entity">
                Присоединяемый объект.
                <paramref name="entity" /> необходимо реализовать <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)">
      <summary>
              Определяет связь между двумя присоединенными объектами.
            </summary>
      <param name="entity">
                Присоединяемый объект.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery">
      <summary>
              Возвращает интерфейс <see cref="T:System.Collections.IEnumerable" />, который представляет объекты, принадлежащие к связанному элементу.
            </summary>
      <returns>
              Интерфейс <see cref="T:System.Collections.IEnumerable" />, который представляет объекты, принадлежащие связанному элементу.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator">
      <summary>
              Возвращает интерфейс <see cref="T:System.Collections.IEnumerator" />, проходящий по коллекции связанных объектов.
            </summary>
      <returns>
              <see cref="T:System.Collections.IEnumerator" /> Который осуществляет перебор коллекции связанных объектов.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IRelatedEnd.Load">
      <summary>
              Загружает связанный объект или объекты в этот связанный элемент с параметром слияния по умолчанию.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)">
      <summary>
              Загружает связанный объект или объекты в связанный элемент с указанным параметром слияния.
            </summary>
      <param name="mergeOption">
                Параметр <see cref="T:System.Data.Objects.MergeOption" />, используемый для слияния объектов в существующую коллекцию <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <summary>
              Удаляет объект из коллекции объектов связанного элемента.
            </summary>
      <param name="entity">
                Объект, который должен быть удален из коллекции.
                <paramref name="entity" /> необходимо реализовать <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="entity" /> был успешно удален, <see langword="false" /> Если <paramref name="entity" /> был не являются частью <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)">
      <summary>
              Удаляет объект из коллекции объектов связанного элемента.
            </summary>
      <param name="entity">
                Объект, который должен быть удален из коллекции.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="entity" /> был успешно удален; <see langword="false" /> Если <paramref name="entity" /> был не являются частью <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator">
      <summary>
              Возвращает интерфейс <see cref="T:System.Collections.IEnumerator" />, проходящий по коллекции связанных объектов.
            </summary>
      <returns>
              <see cref="T:System.Collections.IEnumerator" /> Который осуществляет перебор коллекции связанных объектов.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Load">
      <summary>
              В случае переопределения в производном классе загружает связанный объект или объекты в связанный элемент с параметром слияния по умолчанию.
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  Если исходный объект был получен с помощью запроса <see cref="F:System.Data.Objects.MergeOption.NoTracking" />, а параметр <see cref="T:System.Data.Objects.MergeOption" /> отличен от <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> или связанные объекты уже загружены.
                
                  -или-
                
                  Если исходный объект не присоединен к <see cref="T:System.Data.Objects.ObjectContext" />.
                
                  -или-
                
                  Если исходный объект отслеживается, но находится в состоянии <see cref="F:System.Data.EntityState.Added" /> или <see cref="F:System.Data.EntityState.Deleted" />, либо параметр <see cref="T:System.Data.Objects.MergeOption" />, используемый для <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />, имеет значение <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)">
      <summary>
              Этот метод, переопределенный в производном классе, загружает объекты из связанного элемента с заданным параметром слияния.
            </summary>
      <param name="mergeOption">
                Параметр <see cref="T:System.Data.Objects.MergeOption" />, используемый для слияния объектов в существующую коллекцию <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Если исходный объект был получен с помощью запроса <see cref="F:System.Data.Objects.MergeOption.NoTracking" />, а параметр <see cref="T:System.Data.Objects.MergeOption" /> отличен от <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> или связанные объекты уже загружены.
                
                  -или-
                
                  Если исходный объект не присоединен к <see cref="T:System.Data.Objects.ObjectContext" />.
                
                  -или-
                
                  Если исходный объект отслеживается, но находится в состоянии <see cref="F:System.Data.EntityState.Added" /> или <see cref="F:System.Data.EntityState.Deleted" />, либо параметр <see cref="T:System.Data.Objects.MergeOption" />, используемый для <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />, имеет значение <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
              Используется внутренне для десериализации объектов сущности вместе с <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> экземпляров.
            </summary>
      <param name="context">
                Сериализованный поток.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <summary>
              Добавляет объект в связанный элемент.
            </summary>
      <param name="entity">
                Объект для добавления в коллекцию.
                 В этом объекте должен реализовываться интерфейс <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)">
      <summary>
              Добавляет объект в связанный элемент.
            </summary>
      <param name="entity">
                Экземпляр сущности для добавления к связанному элементу.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <summary>
              Присоединяет объект к связанному элементу.
            </summary>
      <param name="entity">
                Присоединяемый объект.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)">
      <summary>
              Присоединяет объект к связанному элементу.
            </summary>
      <param name="entity">
                Экземпляр сущности для присоединения к связанному элементу.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery">
      <summary>
              Возвращает интерфейс <see cref="T:System.Collections.IEnumerable" />, который представляет объекты, принадлежащие к связанному элементу.
            </summary>
      <returns>
              Интерфейс <see cref="T:System.Collections.IEnumerable" />, который представляет объекты, принадлежащие связанному элементу.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <summary>
              Удаляет объект из связанного элемента коллекции.
            </summary>
      <param name="entity">
                Экземпляр сущности для удаления из коллекции.
              </param>
      <returns>
              Значение, указывающее, был ли удален объект.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)">
      <summary>
              Удаляет объект из связанного элемента, если объект является частью связанного элемента.
            </summary>
      <param name="entity">
                Экземпляр сущности для удаления из связанного элемента.
              </param>
      <returns>
              <see langword="true" /> Если сущность успешно удалена; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <summary>
              Создает новый объект <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.
            </summary>
      <param name="owner">
                Ссылка на сущность, вызывающую этот метод.
              </param>
      <returns>
              Запрошенный <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds">
      <summary>
              Возвращает перечисление всех связанных элементов, управляемых диспетчером связей.
            </summary>
      <returns>
              <see cref="T:System.Collections.Generic.IEnumerable`1" /> Объектов, реализующих <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />.
               Возвращается пустое перечисление, если связи еще не заполнены.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)">
      <summary>
              Возвращает коллекцию <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> связанных объектов с заданными именем связи и целевой роли.
            </summary>
      <param name="relationshipName">
                Имя связи для навигации.
                 В имени связи не указано пространство имен.
              </param>
      <param name="targetRoleName">
                Имя целевой роли для навигации.
                 Показывает направление перемещения по связи.
              </param>
      <typeparam name="TTargetEntity">
                Тип возвращаемого <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.
              </typeparam>
      <returns>
              Коллекция <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> связанных объектов.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Указанная роль вернула ссылку <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> вместо коллекции <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)">
      <summary>
              Возвращает коллекцию <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> или <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> правильного типа для указанной целевой роли в связи.
            </summary>
      <param name="relationshipName">
                Имя связи, в которой <paramref name="targetRoleName" /> определен.
                 В имени связи не указано пространство имен.
              </param>
      <param name="targetRoleName">
                Целевая роль для получения другой конец <paramref name="relationshipName" />.
              </param>
      <returns>
              <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />, представляющий полученную <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> или <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="relationshipName" /> или <paramref name="targetRoleName" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Исходный тип не соответствует типу владельца.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="targetRoleName" /> недопустим.
                
                  -или-
                
                  не удалось найти тип связи в метаданных.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)">
      <summary>
              Возвращает ссылку <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> для связанного объекта, используя заданное сочетание имени связи и целевой роли.
            </summary>
      <param name="relationshipName">
                Имя связи для навигации.
                 В имени связи не указано пространство имен.
              </param>
      <param name="targetRoleName">
                Имя целевой роли для навигации.
                 Показывает направление перемещения по связи.
              </param>
      <typeparam name="TTargetEntity">
                Тип возвращаемого <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.
              </typeparam>
      <returns>
              Ссылка <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> связанного объекта.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Указанная роль вернула ссылку <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> вместо коллекции <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection``1(System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0})">
      <summary>
              Инициализирует существующий объект <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />, который был создан конструктором по умолчанию.
            </summary>
      <param name="relationshipName">
                Имя связи.
              </param>
      <param name="targetRoleName">
                Имя роли связанного элемента.
              </param>
      <param name="entityCollection">
                Объект <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> для инициализации.
              </param>
      <typeparam name="TTargetEntity">
                Тип <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> выполняется инициализация.
              </typeparam>
      <exception cref="T:System.InvalidOperationException">
                  Если переданный объект <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> уже инициализирован.
                
                  -или-
                
                  Если диспетчер связей уже присоединен к контексту <see cref="T:System.Data.Objects.ObjectContext" />.
                
                  -или-
                
                  Если диспетчер связей уже содержит связь с таким именем и целевой ролью.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference``1(System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0})">
      <summary>
              Инициализирует существующий объект <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />, который был создан конструктором по умолчанию.
            </summary>
      <param name="relationshipName">
                Имя связи.
              </param>
      <param name="targetRoleName">
                Имя роли связанного элемента.
              </param>
      <param name="entityReference">
                Объект <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> для инициализации.
              </param>
      <typeparam name="TTargetEntity">
                Тип <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> выполняется инициализация.
              </typeparam>
      <exception cref="T:System.InvalidOperationException">
                  Если переданный объект <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> уже инициализирован.
                
                  -или-
                
                  Если диспетчер связей уже присоединен к контексту <see cref="T:System.Data.Objects.ObjectContext" />.
                
                  -или-
                
                  Если диспетчер связей уже содержит связь с таким именем и целевой ролью.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelationshipManager.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <summary>
              Используется внутренне для десериализации объектов сущности вместе с <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> экземпляров.
            </summary>
      <param name="context">
                Сериализованный поток.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.RelationshipManager.OnSerializing(System.Runtime.Serialization.StreamingContext)">
      <summary>
              Вызывается службами объектов для подготовки <see cref="T:System.Data.EntityKey" /> к двоичной сериализации с сериализованной связью.
            </summary>
      <param name="context">
                Описывает источник и назначение заданного потока сериализации и обеспечивает дополнительный контекст, определяемый вызывающим объектом.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.DataClasses.StructuralObject" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.BinaryEquals(System.Byte[],System.Byte[])">
      <summary>
              Определяет, является ли указанный байтовые массивы содержат одинаковые значения.
            </summary>
      <param name="first">
                Первое значение массива байтов для сравнения.
              </param>
      <param name="second">
                Второй массив байтов для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если оба массива имеют одинаковую длину и содержат одинаковые байтовые значения, или если оба массива имеют <see langword="null" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.DefaultDateTimeValue">
      <summary>
              Возвращает минимальное значение даты и времени поддерживается источником данных.
            </summary>
      <returns>
              A <see cref="T:System.DateTime" /> значение, представляющее минимальное даты и времени, поддерживаемых источником данных.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue(System.Byte[])">
      <summary>
              Возвращает копию значения текущего байта.
            </summary>
      <param name="currentValue">
                Текущее значение массива байт.
              </param>
      <returns>
              Копия текущего <see cref="T:System.Byte" /> значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)">
      <summary>
              Возвращает сложный тип для указанного свойства.
            </summary>
      <param name="currentValue">
                Сложный объект, который наследует от сложного объекта.
              </param>
      <param name="property">
                Имя сложного свойства, представляющего собой сложный объект.
              </param>
      <param name="isNullable">
                Указывает, допускает ли тип значения NULL.
              </param>
      <param name="isInitialized">
                Указывает, является ли тип инициализированным.
              </param>
      <typeparam name="T">
                Тип запрашиваемого сложного объекта.
              </typeparam>
      <returns>
              Объект сложного типа для свойства.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanged(System.String)">
      <summary>
              Вызывает событие <see cref="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanged" />.
            </summary>
      <param name="property">
                Имя измененного свойства.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanging(System.String)">
      <summary>
              Вызывает событие <see cref="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanging" />.
            </summary>
      <param name="property">
                Имя изменяемого свойства.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanged(System.String)">
      <summary>
              Создает событие, которое используется для отчетов, что произошло изменение свойства.
            </summary>
      <param name="property">
                Имя измененного свойства.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanging(System.String)">
      <summary>
              Создает событие, которое используется для отчетов, что ожидается изменение свойства.
            </summary>
      <param name="property">
                Имя изменяемого свойства.
              </param>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean)">
      <summary>
              Обеспечивает <see cref="T:System.Boolean" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Логическое значение.
              </param>
      <returns>
              <see cref="T:System.Boolean" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Boolean" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Логическое значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Boolean" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte)">
      <summary>
              Обеспечивает <see cref="T:System.Byte" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Byte" /> Превышает заданное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Byte" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Byte" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Объект <see cref="T:System.Byte" /> имеет значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean)">
      <summary>
              Обеспечивает <see cref="T:System.Byte[]" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Задаваемое значение.
              </param>
      <param name="isNullable">
                Указывает, является ли свойство допускающим значение NULL.
              </param>
      <returns>
              A <see cref="T:System.Byte" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Byte[]" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение, передаваемое в метод задания свойства.
              </param>
      <param name="isNullable">
                Флаг, указывающий, если это свойство может иметь значение null.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Byte" /> Проверяемое значение.
            </returns>
      <exception cref="T:System.Data.ConstraintException">
                  Если значение равно null для значения, не допускающие значения NULL.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeography,System.Boolean)">
      <summary>
              Проверяет, что свойство не равно null и создает исключение, если это.
            </summary>
      <param name="value">
                <see cref="T:System.Data.Spatial.DbGeography" /> значение для проверки.
              </param>
      <param name="isNullable">
                Флаг, указывающий, если это свойство может иметь значение null.
              </param>
      <returns>
              <see cref="T:System.Data.Spatial.DbGeography" /> Задаваемое значение.
            </returns>
      <exception cref="T:System.Data.ConstraintException">
                  Значение равно null для свойства, не допускающие значения NULL.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeography,System.Boolean,System.String)">
      <summary>
              Проверяет, что свойство не равно null и создает исключение, если это.
            </summary>
      <param name="value">
                <see cref="T:System.Data.Spatial.DbGeography" /> Проверку значения.
              </param>
      <param name="isNullable">
                Флаг, указывающий, если это свойство может иметь значение null.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Data.Spatial.DbGeography" /> Задаваемое значение.
            </returns>
      <exception cref="T:System.Data.ConstraintException">
                  Значение равно null для свойства, не допускающие значения NULL.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeometry,System.Boolean)">
      <summary>
              Проверяет, что свойство не равно null и создает исключение, если это.
            </summary>
      <param name="value">
                <see cref="T:System.Data.Spatial.DbGeometry" /> Проверку значения.
              </param>
      <param name="isNullable">
                Флаг, указывающий, если это свойство может иметь значение null.
              </param>
      <returns>
              <see cref="T:System.Data.Spatial.DbGeometry" /> Задаваемое значение.
            </returns>
      <exception cref="T:System.Data.ConstraintException">
                  Значение равно null для свойства, не допускающие значения NULL.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeometry,System.Boolean,System.String)">
      <summary>
              Проверяет, что свойство не равно null и создает исключение, если это.
            </summary>
      <param name="value">
                <see cref="T:System.Data.Spatial.DbGeometry" /> значение для проверки.
              </param>
      <param name="isNullable">
                Флаг, указывающий, если это свойство может иметь значение null.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Data.Spatial.DbGeometry" /> Задаваемое значение.
            </returns>
      <exception cref="T:System.Data.ConstraintException">
                  Значение равно null для свойства, не допускающие значения NULL.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime)">
      <summary>
              Обеспечивает <see cref="T:System.DateTime" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.DateTime" />.
              </param>
      <returns>
              <see cref="T:System.DateTime" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.DateTime" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.DateTime" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.DateTime" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset)">
      <summary>
              Обеспечивает <see cref="T:System.DateTimeOffset" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.DateTimeOffset" />.
              </param>
      <returns>
              A <see cref="T:System.DateTimeOffset" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.DateTimeOffset" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.DateTimeOffset" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.DateTimeOffset" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal)">
      <summary>
              Обеспечивает <see cref="T:System.Decimal" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Decimal" />.
              </param>
      <returns>
              <see cref="T:System.Decimal" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Decimal" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Decimal" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Decimal" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Double)">
      <summary>
              Обеспечивает <see cref="T:System.Double" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Double" />.
              </param>
      <returns>
              <see cref="T:System.Double" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Double,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Double" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Double" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Double" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid)">
      <summary>
              Обеспечивает <see cref="T:System.Guid" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Guid" />.
              </param>
      <returns>
              <see cref="T:System.Guid" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Guid" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Guid" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Guid" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16)">
      <summary>
              Обеспечивает <see cref="T:System.Int16" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Int16" />.
              </param>
      <returns>
              <see cref="T:System.Int16" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Int16" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Int16" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Int16" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32)">
      <summary>
              Обеспечивает <see cref="T:System.Int32" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Int32" />.
              </param>
      <returns>
              <see cref="T:System.Int32" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Int32" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Int32" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Int32" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64)">
      <summary>
              Обеспечивает <see cref="T:System.Int64" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Int64" />.
              </param>
      <returns>
              <see cref="T:System.Int64" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Int64" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Int64" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Int64" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean})">
      <summary>
              Обеспечивает <see cref="T:System.Boolean" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Boolean" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Boolean" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Boolean" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Boolean" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Boolean" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte})">
      <summary>
              Обеспечивает <see cref="T:System.Byte" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Byte" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Byte" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Byte" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Byte" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Byte" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime})">
      <summary>
              Обеспечивает <see cref="T:System.DateTime" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.DateTime" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.DateTime" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.DateTime" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.DateTime" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.DateTime" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset})">
      <summary>
              Обеспечивает <see cref="T:System.DateTimeOffset" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.DateTimeOffset" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.DateTimeOffset" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.DateTimeOffset" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.DateTimeOffset" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.DateTimeOffset" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal})">
      <summary>
              Обеспечивает <see cref="T:System.Decimal" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Decimal" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Decimal" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Decimal" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Decimal" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Decimal" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double})">
      <summary>
              Обеспечивает <see cref="T:System.Double" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Double" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Double" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Double" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Double" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Double" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid})">
      <summary>
              Обеспечивает <see cref="T:System.Guid" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Guid" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Guid" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Guid" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Guid" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Guid" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16})">
      <summary>
              Обеспечивает <see cref="T:System.Int16" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Int16" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Int16" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Int16" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Int16" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Int16" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32})">
      <summary>
              Обеспечивает <see cref="T:System.Int32" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Int32" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Int32" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Int32" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Int32" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Int32" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64})">
      <summary>
              Обеспечивает <see cref="T:System.Int64" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Int64" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Int64" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Int64" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Int64" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Int64" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte})">
      <summary>
              Обеспечивает <see cref="T:System.SByte" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.SByte" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.SByte" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.SByte" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.SByte" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.SByte" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single})">
      <summary>
              Обеспечивает <see cref="T:System.Single" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Single" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Single" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.Single" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.Single" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.Single" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan})">
      <summary>
              Обеспечивает <see cref="T:System.TimeSpan" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.TimeSpan" /> значение.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.TimeSpan" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.TimeSpan" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Допускающие значения NULL <see cref="T:System.TimeSpan" /> значение.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Допускающие значения NULL <see cref="T:System.TimeSpan" /> задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16})">
      <summary>
              Гарантирует, что допустимо, задаваемое для свойства значение UInt16.
            </summary>
      <param name="value">
                Значение необязательной определенности UInt16.
              </param>
      <returns>
              Задаваемое значение NULL значение UInt16.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16},System.String)">
      <summary>
              Гарантирует, что допустимо, задаваемое для свойства значение UInt16.
            </summary>
      <param name="value">
                Значение необязательной определенности UInt16.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Задаваемое значение NULL значение UInt16.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32})">
      <summary>
              Гарантирует, что допустимо значение UInt32, задаваемое для свойства.
            </summary>
      <param name="value">
                Значение UInt32, допускает значение NULL.
              </param>
      <returns>
              Задаваемое значение NULL значение UInt32.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32},System.String)">
      <summary>
              Гарантирует, что допустимо значение UInt32, задаваемое для свойства.
            </summary>
      <param name="value">
                Значение UInt32, допускает значение NULL.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Задаваемое значение NULL значение UInt32.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64})">
      <summary>
              Обеспечивает <see cref="T:System.UInt64" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение UInt64 допускает значения NULL.
              </param>
      <returns>
              Задаваемое значение NULL UInt64 значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64},System.String)">
      <summary>
              Обеспечивает <see cref="T:System.UInt64" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение UInt64 допускает значения NULL.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Задаваемое значение NULL UInt64 значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte)">
      <summary>
              Обеспечивает <see cref="T:System.SByte" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.SByte" />.
              </param>
      <returns>
              <see cref="T:System.SByte" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.SByte" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.SByte" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.SByte" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Single)">
      <summary>
              Гарантирует, что допустимо одно значение, задаваемое для свойства.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Single" />.
              </param>
      <returns>
              <see cref="T:System.Single" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Single,System.String)">
      <summary>
              Гарантирует, что допустимо одно значение, задаваемое для свойства.
            </summary>
      <param name="value">
                Значение <see cref="T:System.Single" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.Single" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean)">
      <summary>
              Проверяет, что свойство не равно null и создает исключение, если это.
            </summary>
      <param name="value">
                Строковое значение для проверки.
              </param>
      <param name="isNullable">
                Флаг, указывающий, если это свойство может иметь значение null.
              </param>
      <returns>
              Проверенная <see cref="T:System.String" /> значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean,System.String)">
      <summary>
              Проверяет, что свойство не равно null и создает исключение, если это.
            </summary>
      <param name="value">
                Строковое значение для проверки.
              </param>
      <param name="isNullable">
                Флаг, указывающий, если это свойство может иметь значение null.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              Проверяемое свойство.
            </returns>
      <exception cref="T:System.Data.ConstraintException">
                  Строковое значение null для строки, не допускающие значения NULL.
                </exception>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan)">
      <summary>
              Обеспечивает <see cref="T:System.TimeSpan" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.TimeSpan" />.
              </param>
      <returns>
              <see cref="T:System.TimeSpan" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.TimeSpan" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.TimeSpan" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.TimeSpan" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16)">
      <summary>
              Обеспечивает <see cref="T:System.UInt16" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.UInt16" />.
              </param>
      <returns>
              <see cref="T:System.UInt16" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.UInt16" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.UInt16" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.UInt16" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32)">
      <summary>
              Обеспечивает <see cref="T:System.UInt32" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.UInt32" />.
              </param>
      <returns>
              <see cref="T:System.UInt32" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.UInt32" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.UInt32" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.UInt32" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64)">
      <summary>
              Обеспечивает <see cref="T:System.UInt64" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.UInt64" />.
              </param>
      <returns>
              <see cref="T:System.UInt64" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64,System.String)">
      <summary>
              Обеспечивает <see cref="T:System.UInt64" /> значение для свойства является допустимым.
            </summary>
      <param name="value">
                Значение <see cref="T:System.UInt64" />.
              </param>
      <param name="propertyName">
                Имя свойства, которое проверяется.
              </param>
      <returns>
              <see cref="T:System.UInt64" /> Задаваемое значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)">
      <summary>
              Задает сложный объект для указанного свойства.
            </summary>
      <param name="oldValue">
                Первоначальный сложный объект для свойства, если таковые имеются.
              </param>
      <param name="newValue">
                Задается сложного объекта.
              </param>
      <param name="property">
                Сложное свойство, которое задается для сложного объекта.
              </param>
      <typeparam name="T">
                Тип заменяемого объекта.
              </typeparam>
      <returns>
              Сложный тип, который является производным от сложного объекта.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DataClasses.StructuralObject.VerifyComplexObjectIsNotNull``1(``0,System.String)">
      <summary>
              Проверяет, является ли сложный объект не <see langword="null" />.
            </summary>
      <param name="complexObject">
                Сложный объект, подлежащий проверке.
              </param>
      <param name="propertyName">
                Сложное свойство родительского объекта, связанного с <paramref name="complexObject" />.
              </param>
      <typeparam name="TComplex">
                Тип сложного объекта.
              </typeparam>
      <returns>
              Проверяемый сложный объект.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetBoolean(System.Int32)">
      <summary>
              Получает значение поля типа Boolean.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля типа Boolean.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetByte(System.Int32)">
      <summary>
              Получает значение поля как тип <see langword="byte" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля как тип <see langword="byte" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
              Получает значение поля как <see langword="byte" /> массива.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="dataIndex">
                Индекс, с которого начинается копирование данных.
              </param>
      <param name="buffer">
                Буфер назначения, куда копируются данные.
              </param>
      <param name="bufferIndex">
                Индекс в буфере назначения, с которого начинается копирование.
              </param>
      <param name="length">
                Число байт для копирования.
              </param>
      <returns>
              Скопированное число байт.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetChar(System.Int32)">
      <summary>
              Получает значение поля как тип <see langword="char" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля как тип <see langword="char" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
              Получает значение поля как <see langword="char" /> массива.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="dataIndex">
                Индекс, с которого начинается копирование данных.
              </param>
      <param name="buffer">
                Буфер назначения, куда копируются данные.
              </param>
      <param name="bufferIndex">
                Индекс в буфере назначения, с которого начинается копирование.
              </param>
      <param name="length">
                Число символов для копирования.
              </param>
      <returns>
              Число скопированных символов.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetDataReader(System.Int32)">
      <summary>
              Получает значение поля как тип <see cref="T:System.Common.DbDataReader" />.
            </summary>
      <param name="i">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля как тип <see cref="T:System.Data.Common.DbDataReader" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetDataRecord(System.Int32)">
      <summary>
              Получает значение поля в виде <see cref="T:System.Data.Common.DbDataRecord" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля в виде <see cref="T:System.Data.Common.DbDataRecord" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetDataTypeName(System.Int32)">
      <summary>
              Получает имя типа данных поля.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Имя типа данных поля.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetDateTime(System.Int32)">
      <summary>
              Получает значение поля как тип <see cref="T:System.DateTime" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля как тип <see cref="T:System.DateTime" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetDbDataReader(System.Int32)">
      <summary>
              Получает значение поля как <see cref="T:System.Common.DbDataReader" />
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля как тип <see cref="T:System.Data.Common.DbDataReader" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetDecimal(System.Int32)">
      <summary>
              Получает значение поля как тип <see langword="decimal" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля как тип <see langword="decimal" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetDouble(System.Int32)">
      <summary>
              Получает значение поля как тип <see langword="double" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля как тип <see langword="double" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetFieldType(System.Int32)">
      <summary>
              Получает тип поля.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Тип поля.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetFloat(System.Int32)">
      <summary>
              Получает значение поля как тип <see langword="float" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля как тип <see langword="float" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetGuid(System.Int32)">
      <summary>
              Получает значение поля как тип <see cref="T:System.Guid" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля как тип <see cref="T:System.Guid" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetInt16(System.Int32)">
      <summary>
              Получает значение поля как тип <see cref="T:System.Int16" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля типа <see cref="T:System.Int16" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetInt32(System.Int32)">
      <summary>
              Получает значение поля как тип <see cref="T:System.Int32" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля типа <see cref="T:System.Int32" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetInt64(System.Int32)">
      <summary>
              Получает значение поля как тип <see cref="T:System.Int64" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля типа <see cref="T:System.Int64" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetName(System.Int32)">
      <summary>
              Получает имя поля.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Имя поля.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetOrdinal(System.String)">
      <summary>
              Возвращает порядковый номер поля с использованием имени поля.
            </summary>
      <param name="name">
                Имя поля.
              </param>
      <returns>
              Порядковый номер поля.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetRecordValue(System.Int32)">
      <summary>
              Возвращает значение поля.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetString(System.Int32)">
      <summary>
              Получает значение поля типа string.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetValue(System.Int32)">
      <summary>
              Возвращает значение поля.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetValues(System.Object[])">
      <summary>
              Заполняет массив объектов значениями полей текущей записи.
            </summary>
      <param name="values">
                Массив объектов для хранения значений полей.
              </param>
      <returns>
              Число возвращенных значений полей.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.IsDBNull(System.Int32)">
      <summary>
              Возвращает ли указанное поле имеет значение <see cref="T:System.DBNull" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              <see langword="true" /> Если поле имеет значение <see cref="T:System.DBNull" />; в противном случае <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetBoolean(System.Int32,System.Boolean)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetByte(System.Int32,System.Byte)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetChar(System.Int32,System.Char)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetDataRecord(System.Int32,System.Data.IDataRecord)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetDateTime(System.Int32,System.DateTime)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetDBNull(System.Int32)">
      <summary>
              Задает для поля значение <see cref="T:System.DBNull" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetDecimal(System.Int32,System.Decimal)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetDouble(System.Int32,System.Double)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetFloat(System.Int32,System.Single)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetGuid(System.Int32,System.Guid)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetInt16(System.Int32,System.Int16)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetInt32(System.Int32,System.Int32)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetInt64(System.Int32,System.Int64)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetRecordValue(System.Int32,System.Object)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetString(System.Int32,System.String)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetValue(System.Int32,System.Object)">
      <summary>
              Задает значение поля в записи.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <param name="value">
                Значение поля.
              </param>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetValues(System.Object[])">
      <summary>
              Задает значения полей в записи.
            </summary>
      <param name="values">
                Значения поля.
              </param>
      <returns>
              Число полей, которые были установлены.
            </returns>
    </member>
    <member name="M:System.Data.Objects.DbUpdatableDataRecord.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>
              Получает значение поля как тип <see cref="T:System.Data.IDataReader" />.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение поля типа <see cref="T:System.Data.IDataReader" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddDays(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddDays" /> функции.
               Дополнительные сведения о канонических <see langword="AddDays" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue">
                Недопустимая дата.
              </param>
      <param name="addValue">
                Число дней для добавления к <paramref name="dateValue" />.
              </param>
      <returns>
              <paramref name="dateValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddDays(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddDays" /> функции.
               Дополнительные сведения о канонических <see langword="AddDays" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue">
                Смещение даты и времени.
              </param>
      <param name="addValue">
                Число дней для добавления к <paramref name="dateValue" />.
              </param>
      <returns>
              <paramref name="dateValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddHours(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddHours" /> функции.
               Дополнительные сведения о канонических <see langword="AddHours" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Недопустимая дата.
              </param>
      <param name="addValue">
                Количество часов, чтобы добавить <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddHours(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddHours" /> функции.
               Дополнительные сведения о канонических <see langword="AddHours" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Смещение даты и времени.
              </param>
      <param name="addValue">
                Количество часов, чтобы добавить <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddHours(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddHours" /> функции.
               Дополнительные сведения о канонических <see langword="AddHours" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Допустимый интервал времени.
              </param>
      <param name="addValue">
                Количество часов, чтобы добавить <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddMicroseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddMicroseconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddMicroseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Недопустимая дата.
              </param>
      <param name="addValue">
                Число микросекунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddMicroseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddMicroseconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddMicroseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Смещение даты и времени.
              </param>
      <param name="addValue">
                Число микросекунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddMicroseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddMicroseconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddMicroseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Допустимый интервал времени.
              </param>
      <param name="addValue">
                Число микросекунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddMilliseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddMilliseconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddMilliseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Недопустимая дата.
              </param>
      <param name="addValue">
                Количество миллисекунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddMilliseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddMilliseconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddMilliseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Смещение даты и времени.
              </param>
      <param name="addValue">
                Количество миллисекунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddMilliseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddMilliseconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddMilliseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Допустимый интервал времени.
              </param>
      <param name="addValue">
                Количество миллисекунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddMinutes(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddMinutes" /> функции.
               Дополнительные сведения о канонических <see langword="AddMinutes" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Недопустимая дата.
              </param>
      <param name="addValue">
                Число минут для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddMinutes(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>
              Вызывает каноническую <see langword="AddMinutes" /> функции.
               Сведения о канонических <see langword="AddMinutes" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Смещение времени допустимой датой.
              </param>
      <param name="addValue">
                Количество минут, чтобы добавить <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddMinutes(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddMinutes" /> функции.
               Дополнительные сведения о канонических <see langword="AddMinutes" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Допустимый интервал времени.
              </param>
      <param name="addValue">
                Число минут для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddMonths(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddMonths" /> функции.
               Дополнительные сведения о канонических <see langword="AddMonths" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue">
                Недопустимая дата.
              </param>
      <param name="addValue">
                Число месяцев для добавления к <paramref name="dateValue" />.
              </param>
      <returns>
              <paramref name="dateValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddMonths(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddMonths" /> функции.
               Дополнительные сведения о канонических <see langword="AddMonths" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue">
                Смещение даты и времени.
              </param>
      <param name="addValue">
                Число месяцев для добавления к <paramref name="dateValue" />.
              </param>
      <returns>
              <paramref name="dateValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddNanoseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddNanoseconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddNanoseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Недопустимая дата.
              </param>
      <param name="addValue">
                Число наносекунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddNanoseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddNanoseconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddNanoseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Смещение даты и времени.
              </param>
      <param name="addValue">
                Число наносекунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddNanoseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddNanoseconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddNanoseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Допустимый интервал времени.
              </param>
      <param name="addValue">
                Число наносекунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddSeconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddSeconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddSeconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Недопустимая дата.
              </param>
      <param name="addValue">
                Число секунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddSeconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddSeconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddSeconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Смещение даты и времени.
              </param>
      <param name="addValue">
                Число секунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddSeconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddSeconds" /> функции.
               Дополнительные сведения о канонических <see langword="AddSeconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue">
                Допустимый интервал времени.
              </param>
      <param name="addValue">
                Число секунд для добавления к <paramref name="timeValue" />.
              </param>
      <returns>
              <paramref name="timeValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddYears(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddYears" /> функции.
               Дополнительные сведения о канонических <see langword="AddYears" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue">
                Недопустимая дата.
              </param>
      <param name="addValue">
                Число лет для добавления к <paramref name="dateValue" />.
              </param>
      <returns>
              <paramref name="dateValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AddYears(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="AddYears" /> функции.
               Дополнительные сведения о канонических <see langword="AddYears" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue">
                Смещение даты и времени.
              </param>
      <param name="addValue">
                Число лет для добавления к <paramref name="dateValue" />.
              </param>
      <returns>
              <paramref name="dateValue" /> Добавлением <paramref name="addValue" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AsNonUnicode(System.String)">
      <summary>
              Оператор LINQ to Entities, обрабатывает входную строку в виде строки не в Юникоде.
               Этот метод применяется к LINQ для запросов сущностей.
            </summary>
      <param name="value">
                Входная строка.
              </param>
      <returns>
              Строка не в Юникоде.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.AsUnicode(System.String)">
      <summary>
              Оператор LINQ to Entities, обеспечивающий входная строка рассматривается как строка Юникода.
               Этот метод применяется к LINQ для запросов сущностей.
            </summary>
      <param name="value">
                Входная строка.
              </param>
      <returns>
              Строка Юникода.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.CreateDateTime(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double})">
      <summary>
              Вызывает канонические <see langword="CreateDateTime" /> функции.
               Дополнительные сведения о канонических <see langword="CreateDateTime" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="year">
                Часть года новую дату.
              </param>
      <param name="month">
                Компонент месяца новую дату.
              </param>
      <param name="day">
                Значение дня новую дату.
              </param>
      <param name="hour">
                Часть новой даты час.
              </param>
      <param name="minute">
                Компонент минут новую дату.
              </param>
      <param name="second">
                Часть секунд новую дату.
                 Обратите внимание, что с помощью этого параметра можно указать доли секунды.
              </param>
      <returns>
              Новая дата.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.CreateDateTimeOffset(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="CreateDateTimeOffset" /> функции.
               Дополнительные сведения о канонических <see langword="CreateDateTimeOffset" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="year">
                Часть года новую дату.
              </param>
      <param name="month">
                Компонент месяца новую дату.
              </param>
      <param name="day">
                Значение дня новую дату.
              </param>
      <param name="hour">
                Часть новой даты час.
              </param>
      <param name="minute">
                Минуты часть новой даты.
              </param>
      <param name="second">
                Часть секунд новую дату.
                 Обратите внимание, что с помощью этого параметра можно указать доли секунды.
              </param>
      <param name="timeZoneOffset">
                Новая дата смещения часового пояса.
              </param>
      <returns>
              Новая дата.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.CreateTime(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double})">
      <summary>
              Вызывает канонические <see langword="CreateTime" /> функции.
               Дополнительные сведения о канонических <see langword="CreateTime" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="hour">
                Компонент часов новое время диапазона.
              </param>
      <param name="minute">
                Компонент минут новое время диапазона.
              </param>
      <param name="second">
                Компонент секунд новое время диапазона.
                 Обратите внимание, что с помощью этого параметра можно указать доли секунды.
              </param>
      <returns>
              Новый интервал времени.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffDays(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Вызывает канонические <see langword="DiffDays" /> функции.
               Дополнительные сведения о канонических <see langword="DiffDays" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue1">
                Недопустимая дата.
              </param>
      <param name="dateValue2">
                Недопустимая дата.
              </param>
      <returns>
              Число дней между <paramref name="dateValue1" /> и <paramref name="dateValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffDays(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Вызывает канонические <see langword="DiffDays" /> функции.
               Дополнительные сведения о канонических <see langword="DiffDays" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue1">
                Смещение даты и времени.
              </param>
      <param name="dateValue2">
                Смещение даты и времени.
              </param>
      <returns>
              Число дней между <paramref name="dateValue1" /> и <paramref name="dateValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffHours(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Вызывает канонические <see langword="DiffHours" /> функции.
               Дополнительные сведения о канонических <see langword="DiffHours" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Недопустимая дата.
              </param>
      <param name="timeValue2">
                Недопустимая дата.
              </param>
      <returns>
              Количество часов между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffHours(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Вызывает канонические <see langword="DiffHours" /> функции.
               Дополнительные сведения о канонических <see langword="DiffHours" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Смещение даты и времени.
              </param>
      <param name="timeValue2">
                Смещение даты и времени.
              </param>
      <returns>
              Количество часов между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffHours(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>
              Вызывает канонические <see langword="DiffHours" /> функции.
               Дополнительные сведения о канонических <see langword="DiffHours" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Допустимый интервал времени.
              </param>
      <param name="timeValue2">
                Допустимый интервал времени.
              </param>
      <returns>
              Количество часов между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffMicroseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Вызывает канонические <see langword="DiffMicroseconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffMicroseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Недопустимая дата.
              </param>
      <param name="timeValue2">
                Недопустимая дата.
              </param>
      <returns>
              Число микросекунд, соответствующих между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffMicroseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Вызывает канонические <see langword="DiffMicroseconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffMicroseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Смещение даты и времени.
              </param>
      <param name="timeValue2">
                Смещение даты и времени.
              </param>
      <returns>
              Число микросекунд, соответствующих между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffMicroseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>
              Вызывает канонические <see langword="DiffMicroseconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffMicroseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Допустимый интервал времени.
              </param>
      <param name="timeValue2">
                Допустимый интервал времени.
              </param>
      <returns>
              Число микросекунд, соответствующих между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffMilliseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Вызывает канонические <see langword="DiffMilliseconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffMilliseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Недопустимая дата.
              </param>
      <param name="timeValue2">
                Недопустимая дата.
              </param>
      <returns>
              Количество миллисекунд, истекших с <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffMilliseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Вызывает канонические <see langword="DiffMilliseconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffMilliseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Смещение даты и времени.
              </param>
      <param name="timeValue2">
                Смещение даты и времени.
              </param>
      <returns>
              Количество миллисекунд, истекших с <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffMilliseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>
              Вызывает канонические <see langword="DiffMilliseconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffMilliseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Допустимый интервал времени.
              </param>
      <param name="timeValue2">
                Допустимый интервал времени.
              </param>
      <returns>
              Количество миллисекунд, истекших с <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffMinutes(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Вызывает канонические <see langword="DiffMinutes" /> функции.
               Дополнительные сведения о канонических <see langword="DiffMinutes" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Недопустимая дата.
              </param>
      <param name="timeValue2">
                Недопустимая дата.
              </param>
      <returns>
              Количество минут между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffMinutes(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Вызывает канонические <see langword="DiffMinutes" /> функции.
               Дополнительные сведения о канонических <see langword="DiffMinutes" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Смещение даты и времени.
              </param>
      <param name="timeValue2">
                Смещение даты и времени.
              </param>
      <returns>
              Количество минут между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffMinutes(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>
              Вызывает канонические <see langword="DiffMinutes" /> функции.
               Дополнительные сведения о канонических <see langword="DiffMinutes" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Допустимый интервал времени.
              </param>
      <param name="timeValue2">
                Допустимый интервал времени.
              </param>
      <returns>
              Количество минут между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffMonths(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Вызывает канонические <see langword="DiffMonths" /> функции.
               Дополнительные сведения о канонических <see langword="DiffMonths" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue1">
                Недопустимая дата.
              </param>
      <param name="dateValue2">
                Недопустимая дата.
              </param>
      <returns>
              Число месяцев между <paramref name="dateValue1" /> и <paramref name="dateValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffMonths(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Вызывает канонические <see langword="DiffMonths" /> функции.
               Дополнительные сведения о канонических <see langword="DiffMonths" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue1">
                Смещение даты и времени.
              </param>
      <param name="dateValue2">
                Смещение даты и времени.
              </param>
      <returns>
              Число месяцев между <paramref name="dateValue1" /> и <paramref name="dateValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffNanoseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Вызывает канонические <see langword="DiffNanoseconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffNanoseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Недопустимая дата.
              </param>
      <param name="timeValue2">
                Недопустимая дата.
              </param>
      <returns>
              Число наносекунд между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffNanoseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Вызывает канонические <see langword="DiffNanoseconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffNanoseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Смещение даты и времени.
              </param>
      <param name="timeValue2">
                Смещение даты и времени.
              </param>
      <returns>
              Число наносекунд между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffNanoseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>
              Вызывает канонические <see langword="DiffNanoseconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffNanoseconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Недопустимая дата.
              </param>
      <param name="timeValue2">
                Недопустимая дата.
              </param>
      <returns>
              Число наносекунд между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffSeconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Вызывает канонические <see langword="DiffSeconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffSeconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Недопустимая дата.
              </param>
      <param name="timeValue2">
                Недопустимая дата.
              </param>
      <returns>
              Число секунд между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffSeconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Вызывает канонические <see langword="DiffSeconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffSeconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Смещение даты и времени.
              </param>
      <param name="timeValue2">
                Смещение даты и времени.
              </param>
      <returns>
              Число секунд между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffSeconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>
              Вызывает канонические <see langword="DiffSeconds" /> функции.
               Дополнительные сведения о канонических <see langword="DiffSeconds" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="timeValue1">
                Допустимый интервал времени.
              </param>
      <param name="timeValue2">
                Допустимый интервал времени.
              </param>
      <returns>
              Число секунд между <paramref name="timeValue1" /> и <paramref name="timeValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffYears(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Вызывает канонические <see langword="DiffYears" /> функции.
               Дополнительные сведения о канонических <see langword="DiffYears" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue1">
                Недопустимая дата.
              </param>
      <param name="dateValue2">
                Недопустимая дата.
              </param>
      <returns>
              Число лет между <paramref name="dateValue1" /> и <paramref name="dateValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.DiffYears(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Вызывает канонические <see langword="DiffYears" /> функции.
               Дополнительные сведения о канонических <see langword="DiffYears" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue1">
                Смещение даты и времени.
              </param>
      <param name="dateValue2">
                Смещение даты и времени.
              </param>
      <returns>
              Число лет между <paramref name="dateValue1" /> и <paramref name="dateValue2" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.GetTotalOffsetMinutes(System.Nullable{System.DateTimeOffset})">
      <summary>
              Вызывает канонические <see langword="GetTotalOffsetMinutes" /> функции.
               Дополнительные сведения о канонических <see langword="GetTotalOffsetMinutes" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateTimeOffsetArgument">
                Смещение даты и времени.
              </param>
      <returns>
              Количество минут, <paramref name="dateTimeOffsetArgument" /> смещение от времени по Гринвичу.
               Обычно это значение находится в диапазоне от +780 до -780 (плюс-минус 13 ч).
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Left(System.String,System.Nullable{System.Int64})">
      <summary>
              Вызывает канонические <see langword="Left" /> функции.
               Дополнительные сведения о канонических <see langword="Left" /> см. в разделе Строковые канонические функции.
            </summary>
      <param name="stringArgument">
                Допустимое строковое выражение.
              </param>
      <param name="length">
                Число возвращаемых символов.
              </param>
      <returns>
              Самое левое <paramref name="length" /> число символов <paramref name="stringArgument" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Reverse(System.String)">
      <summary>
              Вызывает канонические <see langword="Reverse" /> функции.
               Дополнительные сведения о канонических <see langword="Reverse" /> см. в разделе Строковые канонические функции.
            </summary>
      <param name="stringArgument">
                Допустимое строковое выражение.
              </param>
      <returns>
              Входной строки с порядком символов в обратном порядке.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Right(System.String,System.Nullable{System.Int64})">
      <summary>
              Вызывает канонические <see langword="Right" /> функции.
               Дополнительные сведения о канонических <see langword="Right" /> см. в разделе Строковые канонические функции.
            </summary>
      <param name="stringArgument">
                Допустимое строковое выражение.
              </param>
      <param name="length">
                Число возвращаемых символов.
              </param>
      <returns>
              Самым правым <paramref name="length" /> число символов <paramref name="stringArgument" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>
              Вызывает канонические <see langword="StDev" /> функции.
               Дополнительные сведения о канонических <see langword="StDev" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
              Вызывает канонические <see langword="StDev" /> функции.
               Дополнительные сведения о канонических <see langword="StDev" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="StDev" /> функции.
               Дополнительные сведения о канонических <see langword="StDev" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>
              Вызывает канонические <see langword="StDev" /> функции.
               Дополнительные сведения о канонических <see langword="StDev" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>
              Вызывает канонические <see langword="StDev" /> функции.
               Дополнительные сведения о канонических <see langword="StDev" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>
              Вызывает канонические <see langword="StDev" /> функции.
               Дополнительные сведения о канонических <see langword="StDev" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>
              Вызывает канонические <see langword="StDev" /> функции.
               Дополнительные сведения о канонических <see langword="StDev" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>
              Вызывает канонические <see langword="StDev" /> функции.
               Дополнительные сведения о канонических <see langword="StDev" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>
              Вызывает канонические <see langword="StDevP" /> функции.
               Дополнительные сведения о канонических <see langword="StDevP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение заполнения входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
              Вызывает канонические <see langword="StDevP" /> функции.
               Дополнительные сведения о канонических <see langword="StDevP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение заполнения входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="StDevP" /> функции.
               Дополнительные сведения о канонических <see langword="StDevP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение заполнения входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>
              Вызывает канонические <see langword="StDevP" /> функции.
               Дополнительные сведения о канонических <see langword="StDevP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение заполнения входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>
              Вызывает канонические <see langword="StDevP" /> функции.
               Дополнительные сведения о канонических <see langword="StDevP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение заполнения входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>
              Вызывает канонические <see langword="StDevP" /> функции.
               Дополнительные сведения о канонических <see langword="StDevP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение заполнения входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>
              Вызывает канонические <see langword="StDevP" /> функции.
               Дополнительные сведения о канонических <see langword="StDevP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение заполнения входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>
              Вызывает канонические <see langword="StDevP" /> функции.
               Дополнительные сведения о канонических <see langword="StDevP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор числовых значений.
              </param>
      <returns>
              Статистическое стандартное отклонение заполнения входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Truncate(System.Nullable{System.Decimal},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="Truncate" /> функции.
               Дополнительные сведения о канонических <see langword="Truncate" /> см. в разделеМатематические канонические функции.
            </summary>
      <param name="value">
                Усекаемое число.
              </param>
      <param name="digits">
                Длина или точность усечения.
              </param>
      <returns>
              <paramref name="value" /> усечен до длины или точности, заданной параметром <paramref name="digits" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Truncate(System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="Truncate" /> функции.
               Дополнительные сведения о канонических <see langword="Truncate" /> см. в разделеМатематические канонические функции.
            </summary>
      <param name="value">
                Усекаемое число.
              </param>
      <param name="digits">
                Длина или точность усечения.
              </param>
      <returns>
              <paramref name="value" /> усечен до длины или точности, заданной параметром <paramref name="digits" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.TruncateTime(System.Nullable{System.DateTime})">
      <summary>
              Вызывает канонические <see langword="TruncateTime" /> функции.
               Дополнительные сведения о канонических <see langword="TruncateTime" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue">
                Дата для усечения.
              </param>
      <returns>
              Входная Дата без части времени очистки.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.TruncateTime(System.Nullable{System.DateTimeOffset})">
      <summary>
              Вызывает канонические <see langword="TruncateTime" /> функции.
               Дополнительные сведения о канонических <see langword="TruncateTime" /> см. в разделе Канонические функции даты и времени.
            </summary>
      <param name="dateValue">
                Смещение даты и времени для усечения.
              </param>
      <returns>
              Входная Дата без части времени очистки.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>
              Вызывает канонические <see langword="Var" /> функции.
               Дополнительные сведения о канонических <see langword="Var" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия для всех значений в указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
              Вызывает канонические <see langword="Var" /> функции.
               Дополнительные сведения о канонических <see langword="Var" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия для всех значений в указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="Var" /> функции.
               Дополнительные сведения о канонических <see langword="Var" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия для всех значений в указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>
              Вызывает канонические <see langword="Var" /> функции.
               Дополнительные сведения о канонических <see langword="Var" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия для всех значений в указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>
              Вызывает канонические <see langword="Var" /> функции.
               Дополнительные сведения о канонических <see langword="Var" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия для всех значений в указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>
              Вызывает канонические <see langword="Var" /> функции.
               Дополнительные сведения о канонических <see langword="Var" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия для всех значений в указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>
              Вызывает канонические <see langword="Var" /> функции.
               Дополнительные сведения о канонических <see langword="Var" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия для всех значений в указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>
              Вызывает канонические <see langword="Var" /> функции.
               Дополнительные сведения о канонических <see langword="Var" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия для всех значений в указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Decimal})">
      <summary>
              Вызывает канонические <see langword="VarP" /> функции.
               Дополнительные сведения о канонических <see langword="VarP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия заполнения указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>
              Вызывает канонические <see langword="VarP" /> функции.
               Дополнительные сведения о канонических <see langword="VarP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия заполнения указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
              Вызывает канонические <see langword="VarP" /> функции.
               Дополнительные сведения о канонических <see langword="VarP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия заполнения указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>
              Вызывает канонические <see langword="VarP" /> функции.
               Дополнительные сведения о канонических <see langword="VarP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия заполнения указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
      <summary>
              Вызывает канонические <see langword="VarP" /> функции.
               Дополнительные сведения о канонических <see langword="VarP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия заполнения указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
      <summary>
              Вызывает канонические <see langword="VarP" /> функции.
               Дополнительные сведения о канонических <see langword="VarP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия заполнения указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>
              Вызывает канонические <see langword="VarP" /> функции.
               Дополнительные сведения о канонических <see langword="VarP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия заполнения указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
      <summary>
              Вызывает канонические <see langword="VarP" /> функции.
               Дополнительные сведения о канонических <see langword="VarP" /> см. в разделе Канонические функции.
            </summary>
      <param name="collection">
                Набор значений, для которых будет вычисляться дисперсию.
              </param>
      <returns>
              Статистическая дисперсия заполнения указанной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.IObjectSet`1.AddObject(`0)">
      <summary>
              Уведомляет набор, что необходимо добавить объект, представляющий новую сущность в набор.
            </summary>
      <param name="entity">
                Новый объект для добавления в набор.
              </param>
    </member>
    <member name="M:System.Data.Objects.IObjectSet`1.Attach(`0)">
      <summary>
              Уведомляет набор, что объект, представляющий имеющуюся сущность необходимо добавить в набор.
            </summary>
      <param name="entity">
                Существующий объект для добавления в набор.
              </param>
    </member>
    <member name="M:System.Data.Objects.IObjectSet`1.DeleteObject(`0)">
      <summary>
              Уведомляет набор о том, что объект, представляющий сущности должны быть удалены из набора.
            </summary>
      <param name="entity">
                Существующий объект для удаления из набора.
              </param>
    </member>
    <member name="M:System.Data.Objects.IObjectSet`1.Detach(`0)">
      <summary>
              Уведомляет набор о том, что из набора нужно отсоединить объект, представляющий имеющуюся сущность.
            </summary>
      <param name="entity">
                Объект, чтобы отсоединить от набора.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.ObjectContext" /> с данным соединением.
               Во время построения рабочая область метаданных извлекается из объекта <see cref="T:System.Data.EntityClient.EntityConnection" />.
            </summary>
      <param name="connection">
                <see cref="T:System.Data.EntityClient.EntityConnection" /> Содержащий ссылки на модель и подключение к источнику данных.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Значение параметра <paramref name="connection" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connection" /> Является недопустимым.
                
                  -или-
                
                  Недопустимая рабочая область метаданных.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection,System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.ObjectContext" /> с данным соединением и именем контейнера сущностей.
            </summary>
      <param name="connection">
                <see cref="T:System.Data.EntityClient.EntityConnection" /> Содержащий ссылки на модель и подключение к источнику данных.
              </param>
      <param name="defaultContainerName">
                Имя контейнера сущностей по умолчанию.
                 Когда <paramref name="defaultContainerName" /> устанавливается посредством этого метода, свойство становится доступным только для чтения.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Значение параметра <paramref name="connection" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connection" />, <paramref name="defaultContainerName" />, Или недопустимая рабочая область метаданных.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.ObjectContext" /> с данной строкой соединения и именем контейнера сущностей.
            </summary>
      <param name="connectionString">
                Строка соединения, которая также предоставляет доступ к метаданным.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Значение параметра <paramref name="connectionString" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connectionString" /> Является недопустимым.
                
                  -или-
                
                  Недопустимая рабочая область метаданных.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.#ctor(System.String,System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.ObjectContext" /> с данной строкой соединения и именем контейнера сущностей.
            </summary>
      <param name="connectionString">
                Строка соединения, которая также предоставляет доступ к метаданным.
              </param>
      <param name="defaultContainerName">
                Имя контейнера сущностей по умолчанию.
                 Когда <paramref name="defaultContainerName" /> устанавливается посредством этого метода, свойство становится доступным только для чтения.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Значение параметра <paramref name="connectionString" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connectionString" />, <paramref name="defaultContainerName" />, Или недопустимая рабочая область метаданных.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.AcceptAllChanges">
      <summary>
              Принимает все изменения, внесенные в объекты в данном контексте объекта.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)">
      <summary>
              Добавляет объект в контекст объекта.
            </summary>
      <param name="entitySetName">
                Представляет имя набора сущностей, которое можно уточнить именем контейнера сущностей (необязательно).
              </param>
      <param name="entity">
                Добавляемый объект <see cref="T:System.Object" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="entity" /> имеет значение <see langword="null" />.
                
                  -или-
                
                  <paramref name="entitySetName" /> Не определен.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.ApplyCurrentValues``1(System.String,``0)">
      <summary>
              Копирует скалярные значения из указанного объекта в объект в контексте <see cref="T:System.Data.Objects.ObjectContext" />, содержащем тот же ключ.
            </summary>
      <param name="entitySetName">
                Имя набора сущностей, к которому принадлежит объект.
              </param>
      <param name="currentEntity">
                Отсоединенный объект имеет обновления свойств, которые нужно применить к исходному объекту.
                 Ключ сущности <paramref name="currentEntity" /> должен соответствовать <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> Свойства записи в <see cref="T:System.Data.Objects.ObjectContext" />.
              </param>
      <typeparam name="TEntity">
                Тип сущности объекта.
              </typeparam>
      <returns>
              Обновленный объект.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="entitySetName" /> или <paramref name="current" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="T:System.Data.Metadata.Edm.EntitySet" /> Из <paramref name="entitySetName" /> не соответствует <see cref="T:System.Data.Metadata.Edm.EntitySet" /> объекта <see cref="T:System.Data.EntityKey" />.
                
                  -или-
                
                  Объект не находится в <see cref="T:System.Data.Objects.ObjectStateManager" /> или в <see cref="F:System.Data.EntityState.Detached" /> состояние.
                
                  -или- 
                
                  Ключ сущности предоставленного объекта является недопустимым.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="entitySetName" /> равен пустой строке.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.ApplyOriginalValues``1(System.String,``0)">
      <summary>
              Копирует скалярные значения из переданного объекта в набор исходных значений для объекта в <see cref="T:System.Data.Objects.ObjectContext" />, имеющего тот же ключ.
            </summary>
      <param name="entitySetName">
                Имя набора сущностей, к которому принадлежит объект.
              </param>
      <param name="originalEntity">
                Отсоединенный объект, имеющий исходные значения, чтобы применить к объекту.
                 Ключ сущности <paramref name="originalEntity" /> должен соответствовать <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> Свойства записи в <see cref="T:System.Data.Objects.ObjectContext" />.
              </param>
      <typeparam name="TEntity">
                Тип объекта сущности.
              </typeparam>
      <returns>
              Обновленный объект.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="entitySetName" /> или <paramref name="original" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="T:System.Data.Metadata.Edm.EntitySet" /> Из <paramref name="entitySetName" /> не соответствует <see cref="T:System.Data.Metadata.Edm.EntitySet" /> объекта <see cref="T:System.Data.EntityKey" />.
                
                  -или-
                
                  <see cref="T:System.Data.Objects.ObjectStateEntry" /> Для объекта не найден в <see cref="T:System.Data.Objects.ObjectStateManager" />.
                   -или-
                
                  Объект находится в <see cref="F:System.Data.EntityState.Added" /> или <see cref="F:System.Data.EntityState.Detached" /> состояния.
                
                  -или- 
                
                  Ключ сущности предоставленного объекта является недопустимым или имеет измененные свойства.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="entitySetName" /> равен пустой строке.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.ApplyPropertyChanges(System.String,System.Object)">
      <summary>
              Применяет изменения свойств из отсоединенного объекта к объекту, который уже присоединен к контексту объекта.
            </summary>
      <param name="entitySetName">
                Имя набора сущностей, к которому принадлежит объект.
              </param>
      <param name="changed">
                Отсоединенный объект имеет обновления свойств, которые нужно применить к исходному объекту.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Если <paramref name="entitySetName" /> является <see langword="null" /> или пустая строка.
                
                  -или-
                
                  Если <paramref name="changed" /> является <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  При <see cref="T:System.Data.Metadata.Edm.EntitySet" /> от <paramref name="entitySetName" /> не соответствует <see cref="T:System.Data.Metadata.Edm.EntitySet" /> объекта <see cref="T:System.Data.EntityKey" />.
                
                  -или-
                
                  Сущность находится в состоянии, отличном от <see cref="F:System.Data.EntityState.Modified" /> или <see cref="F:System.Data.EntityState.Unchanged" />.
                
                  -или- 
                
                  Исходный объект не присоединен к контексту.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Если тип <paramref name="changed" /> объект не тот же тип, что и исходный объект.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.Attach(System.Data.Objects.DataClasses.IEntityWithKey)">
      <summary>
              Присоединяет объект или граф объектов к контексту объекта, если объект имеет ключ сущности.
            </summary>
      <param name="entity">
                Присоединяемый объект.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Значение параметра <paramref name="entity" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Недопустимый ключ сущности.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.AttachTo(System.String,System.Object)">
      <summary>
              Присоединяет объект или граф объектов к контексту объекта в конкретном наборе сущностей.
            </summary>
      <param name="entitySetName">
                Представляет имя набора сущностей, которое можно уточнить именем контейнера сущностей (необязательно).
              </param>
      <param name="entity">
                Присоединяемый объект <see cref="T:System.Object" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Значение параметра <paramref name="entity" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Недопустимый набор сущностей.
                
                  -или-
                
                  Объект имеет временный ключ.
                
                  -или-
                
                  Объект имеет ключ <see cref="T:System.Data.EntityKey" />, а набор <see cref="T:System.Data.Metadata.Edm.EntitySet" /> не соответствует набору сущностей, переданному в качества параметра метода.
                
                  -или-
                
                  Объект не имеет ключа <see cref="T:System.Data.EntityKey" />, и не предоставлено ни одного набора сущностей.
                
                  -или-
                
                  Объект из графа объектов имеет временный ключ <see cref="T:System.Data.EntityKey" />.
                
                  -или-
                
                  Объект из графа объектов имеет недопустимый ключ <see cref="T:System.Data.EntityKey" /> (например, значения в ключе не совпадают со значениями в объекте).
                
                  -или-
                
                  Не удалось найти набор сущностей из заданного <paramref name="entitySetName" /> имени и имени контейнера сущностей.
                
                  -или-
                
                  Объект из графа объектов уже существует в другом диспетчере состояния.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.CreateDatabase">
      <summary>
              Создает базу данных с использованием текущего соединения с источником данных и метаданных в <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.CreateDatabaseScript">
      <summary>
              Формирует скрипт языка DDL определения данных, который создает объекты схемы (таблицы, первичные ключи, внешние ключи) для метаданных в <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.
               Класс <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> загружает метаданные из SSDL-файлов.
            </summary>
      <returns>
              Скрипт DDL, который создает объекты схемы метаданных в <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.CreateEntityKey(System.String,System.Object)">
      <summary>
              Создает ключ сущности для определенного объекта или возвращает ключ сущности, если он уже существует.
            </summary>
      <param name="entitySetName">
                Полное имя набора сущностей, к которому принадлежит объект сущности.
              </param>
      <param name="entity">
                Объект, для которого получается ключ сущности.
              </param>
      <returns>
              Ключ сущности <see cref="T:System.Data.EntityKey" /> объекта.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Один из параметров имеет <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Если <paramref name="entitySetName" /> пуст.
                
                  -или- 
                
                  Если тип <paramref name="entity" /> объект не существует в наборе сущностей.
                
                  -или-
                
                  Если <paramref name="entitySetName" /> не является полной.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Ключ сущности невозможно построить на основе предоставленных параметров.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.CreateObject``1">
      <summary>
              Создает и возвращает экземпляр запрашиваемого типа.
            </summary>
      <typeparam name="T">
                Тип возвращаемого объекта.
              </typeparam>
      <returns>
              Экземпляр запрашиваемого типа <paramref name="T" />, или экземпляром производного типа, который позволяет <paramref name="T" /> для использования с платформой Entity Framework.
               Возвращаемый объект является экземпляр запрошенного типа или экземпляра производного типа, который позволяет использовать запрашиваемый тип для использования с платформой Entity Framework.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.CreateObjectSet``1">
      <summary>
              Создает новый <see cref="T:System.Data.Objects.ObjectSet`1" /> экземпляр, который используется для запроса, добавления, изменения и удаления объектов указанного типа сущности.
            </summary>
      <typeparam name="TEntity">
                Запрошенный тип сущности <see cref="T:System.Data.Objects.ObjectSet`1" />.
              </typeparam>
      <returns>
              Новый экземпляр <see cref="T:System.Data.Objects.ObjectSet`1" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> Не установлено свойство <see cref="T:System.Data.Objects.ObjectContext" />.
                
                  -или-
                
                  Заданный тип относится к более чем одному набору сущностей.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.CreateObjectSet``1(System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Objects.ObjectSet`1" /> экземпляр, используемый для запроса, добавления, изменения и удаления объектов указанного типа и имя набора указанной сущности.
            </summary>
      <param name="entitySetName">
                Имя набора сущностей, для возвращаемого <see cref="T:System.Data.Objects.ObjectSet`1" />.
                 Строки должно быть дополнено именем контейнера по умолчанию если <see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> не установлено свойство <see cref="T:System.Data.Objects.ObjectContext" />.
              </param>
      <typeparam name="TEntity">
                Запрошенный тип сущности <see cref="T:System.Data.Objects.ObjectSet`1" />.
              </typeparam>
      <returns>
              Новый экземпляр <see cref="T:System.Data.Objects.ObjectSet`1" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="T:System.Data.Metadata.Edm.EntitySet" /> Из <paramref name="entitySetName" /> не соответствует <see cref="T:System.Data.Metadata.Edm.EntitySet" /> объекта <see cref="T:System.Data.EntityKey" />.
                
                  -или-
                
                  <see cref="P:System.Data.Objects.ObjectContext.DefaultContainerName" /> Не установлено свойство <see cref="T:System.Data.Objects.ObjectContext" /> и имя не определено как часть <paramref name="entitySetName" /> параметр.
                
                  -или-
                
                  Заданный тип относится к более чем одному набору сущностей.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.CreateProxyTypes(System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
              Создает эквивалентный тип, который можно использовать с платформой Entity Framework для каждого типа в предоставленном перечислении.
            </summary>
      <param name="types">
                Перечисление <see cref="T:System.Type" /> объектов, представляющих пользовательские классы данных, сопоставление с концептуальной моделью.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.CreateQuery``1(System.String,System.Data.Objects.ObjectParameter[])">
      <summary>
              Создает объект <see cref="T:System.Data.Objects.ObjectQuery`1" /> в контексте текущего объекта с помощью указанной строки запроса.
            </summary>
      <param name="queryString">
                Выполняемая строка запроса.
              </param>
      <param name="parameters">
                Параметры для передачи запросу.
              </param>
      <typeparam name="T">
                Тип сущности, возвращаемого <see cref="T:System.Data.Objects.ObjectQuery`1" />.
              </typeparam>
      <returns>
              Объект <see cref="T:System.Data.Objects.ObjectQuery`1" /> указанного типа.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Значение параметра <paramref name="queryString" /> или параметра <paramref name="parameters" /> — <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.DatabaseExists">
      <summary>
              Проверяет, существует ли база данных, заданном в качестве базы данных в текущем соединении источника данных в источнике данных.
            </summary>
      <returns>
              <see langword="true" /> Если база данных существует.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.DeleteDatabase">
      <summary>
              Удаляет базу данных, которые указаны в качестве базы данных в текущее соединение с источником данных.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.DeleteObject(System.Object)">
      <summary>
              Помечает объект для удаления.
            </summary>
      <param name="entity">
                Объект, указывающий удаляемую сущность.
                 Объект может находиться в любом состоянии, кроме <see cref="F:System.Data.EntityState.Detached" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="entity" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="entity" /> — не существует.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.Detach(System.Object)">
      <summary>
              Удаляет объект из контекста объекта.
            </summary>
      <param name="entity">
                Отсоединяемый объект.
                 Только <paramref name="entity" /> удалена, если все связанные объекты, которые отслеживаются одним и тем же <see cref="T:System.Data.Objects.ObjectStateManager" />, их не отсоединяются автоматически.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Значение параметра <paramref name="entity" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="entity" /> Не связан с этим <see cref="T:System.Data.Objects.ObjectContext" /> (например, созданных и не ассоциирована с каким-либо контекстом, или была получена через какой-либо другой контекст или уже была отсоединена).
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.DetectChanges">
      <summary>
              Гарантирует, что <see cref="T:System.Data.Objects.ObjectStateEntry" /> изменения синхронизируются с изменения во всех объектах, которые отслеживаются по <see cref="T:System.Data.Objects.ObjectStateManager" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.Dispose">
      <summary>
              Освобождает ресурсы, используемые контекстом объекта.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.Dispose(System.Boolean)">
      <summary>
              Освобождает ресурсы, используемые контекстом объекта.
            </summary>
      <param name="disposing">
                Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.ExecuteFunction(System.String,System.Data.Objects.ObjectParameter[])">
      <summary>
              Выполняет хранимую процедуру или функцию, определенную в источнике данных и выраженную в концептуальной модели. Отменяет любые результаты, возвращенные функцией; и возвращает количество строк, обработанных при выполнении команды.
            </summary>
      <param name="functionName">
                Имя хранимой процедуры или функции.
                 Имя может содержать имя контейнера &lt;Container Name&gt;.&lt;Function Name&gt;.
                 Если имя контейнера по умолчанию известно, требуется только имя функции.
              </param>
      <param name="parameters">
                Массив объектов <see cref="T:System.Data.Objects.ObjectParameter" />.
              </param>
      <returns>
              Число обработанных строк.
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="function" /> равно null или пусто 
                
                  -или-
                
                  <paramref name="function" /> не найден.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Средство чтения сущностей не поддерживает эту <paramref name="function" />.
                
                  -или-
                
                  Существует несоответствие типов для средства чтения и <paramref name="function" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectParameter[])">
      <summary>
              Выполняет данную хранимую процедуру или функцию, определенную в источнике данных и выраженную в концептуальной модели с указанными параметрами и параметром слияния.
               Возвращает объект с типом <see cref="T:System.Data.Objects.ObjectResult`1" />.
            </summary>
      <param name="functionName">
                Имя хранимой процедуры или функции.
                 Имя может содержать имя контейнера &lt;Container Name&gt;.&lt;Function Name&gt;.
                 Если имя контейнера по умолчанию известно, требуется только имя функции.
              </param>
      <param name="mergeOption">
                Параметр <see cref="T:System.Data.Objects.MergeOption" /> для использования при выполнении запроса.
              </param>
      <param name="parameters">
                Массив объектов <see cref="T:System.Data.Objects.ObjectParameter" />.
              </param>
      <typeparam name="TElement">
                Тип сущности <see cref="T:System.Data.Objects.ObjectResult`1" /> возвращается, если функция выполняется в источнике данных.
                 Этот тип должен реализовать <see cref="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />.
              </typeparam>
      <returns>
              <see cref="T:System.Data.Objects.ObjectResult`1" /> Для данных, возвращаемых хранимой процедурой.
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="function" /> равно null или пусто 
                
                  -или-
                
                  <paramref name="function" /> не найден.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Средство чтения сущностей не поддерживает эту <paramref name="function" />.
                
                  -или-
                
                  Существует несоответствие типов для средства чтения и <paramref name="function" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.ObjectParameter[])">
      <summary>
              Выполняет хранимую процедуру или функцию, определенную в источнике данных и сопоставления в концептуальной модели с указанными параметрами.
               Возвращает объект с типом <see cref="T:System.Data.Objects.ObjectResult`1" />.
            </summary>
      <param name="functionName">
                Имя хранимой процедуры или функции.
                 Имя может содержать имя контейнера &lt;Container Name&gt;.&lt;Function Name&gt;.
                 Если имя контейнера по умолчанию известно, требуется только имя функции.
              </param>
      <param name="parameters">
                Массив объектов <see cref="T:System.Data.Objects.ObjectParameter" />.
              </param>
      <typeparam name="TElement">
                Тип сущности <see cref="T:System.Data.Objects.ObjectResult`1" /> возвращается, если функция выполняется в источнике данных.
                 Этот тип должен реализовать <see cref="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />.
              </typeparam>
      <returns>
              <see cref="T:System.Data.Objects.ObjectResult`1" /> Для данных, возвращаемых хранимой процедурой.
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="function" /> равно null или пусто 
                
                  -или-
                
                  <paramref name="function" /> не найден.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Средство чтения сущностей не поддерживает эту <paramref name="function" />.
                
                  -или-
                
                  Существует несоответствие типов для средства чтения и <paramref name="function" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.ExecuteStoreCommand(System.String,System.Object[])">
      <summary>
              Выполняет произвольную команду непосредственно в отношении источника данных, используя существующее соединение.
            </summary>
      <param name="commandText">
                Команда для выполнения на собственном языке источника данных.
              </param>
      <param name="parameters">
                Массив параметров для передачи в команду.
              </param>
      <returns>
              Число обработанных строк.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.Object[])">
      <summary>
              Выполняет запрос непосредственно в отношении источника данных, которая возвращает последовательность типизированных результатов.
            </summary>
      <param name="commandText">
                Команда для выполнения на собственном языке источника данных.
              </param>
      <param name="parameters">
                Массив параметров для передачи в команду.
              </param>
      <typeparam name="TResult">
                Тип возвращаемых данных.
              </typeparam>
      <returns>
              Перечисление объектов типа <paramref name="TResult" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.String,System.Data.Objects.MergeOption,System.Object[])">
      <summary>
              Выполняет запрос непосредственно в отношении источника данных и возвращает последовательность типизированных результатов.
               Укажите набор сущностей и параметр слияния, чтобы результаты запроса можно отслеживать в качестве сущностей.
            </summary>
      <param name="commandText">
                Команда для выполнения на собственном языке источника данных.
              </param>
      <param name="entitySetName">
                Набор сущностей <paramref name="TResult" /> типа.
                 Если не указано имя набора сущностей, результаты не будут отслеживаться.
              </param>
      <param name="mergeOption">
                Параметр <see cref="T:System.Data.Objects.MergeOption" /> для использования при выполнении запроса.
                 Значение по умолчанию — <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.
              </param>
      <param name="parameters">
                Массив параметров для передачи в команду.
              </param>
      <typeparam name="TResult">
                Тип сущности, возвращаемых данных.
              </typeparam>
      <returns>
              Перечисление объектов типа <paramref name="TResult" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.GetKnownProxyTypes">
      <summary>
              Возвращает все существующие типы прокси-сервера.
            </summary>
      <returns>
              <see cref="T:System.Collections.Generic.IEnumerable`1" /> Всех существующих типов прокси-сервера.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.GetObjectByKey(System.Data.EntityKey)">
      <summary>
              Возвращает объект, имеющий указанный ключ сущности.
            </summary>
      <param name="key">
                Ключ искомого объекта.
              </param>
      <returns>
              Объект <see cref="T:System.Object" />, который является экземпляром типа сущности.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="key" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.Data.ObjectNotFoundException">
                  Объект не найден в любой <see cref="T:System.Data.Objects.ObjectStateManager" /> или источника данных.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.GetObjectType(System.Type)">
      <summary>
              Возвращает тип сущности POCO, связанной с прокси-объект указанного типа сущности.
            </summary>
      <param name="type">
                <see cref="T:System.Type" /> Прокси-объекта.
              </param>
      <returns>
              <see cref="T:System.Type" /> Связанные сущности POCO.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String)">
      <summary>
              Явным образом загружает объект, связанный с предоставленным объектом указанное свойство навигации и параметра слияния по умолчанию.
            </summary>
      <param name="entity">
                Сущность, для которого могут быть загружены связанных объектов.
              </param>
      <param name="navigationProperty">
                Имя свойства навигации, возвращающего связанные объекты для загрузки.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="entity" /> В <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added," /> или <see cref="F:System.Data.EntityState.Deleted" /> состоянии,
                
                  -или-
                
                  <paramref name="entity" /> Подключен к другой экземпляр <see cref="T:System.Data.Objects.ObjectContext" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.LoadProperty(System.Object,System.String,System.Data.Objects.MergeOption)">
      <summary>
              Явным образом загружает объект, связанный с предоставленным объектом посредством заданного свойства навигации и с помощью указанного параметра слияния.
            </summary>
      <param name="entity">
                Сущность, для которого могут быть загружены связанных объектов.
              </param>
      <param name="navigationProperty">
                Имя свойства навигации, возвращающего связанные объекты для загрузки.
              </param>
      <param name="mergeOption">
                <see cref="T:System.Data.Objects.MergeOption" /> Значение, используемое при загрузке связанных объектов.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="entity" /> В <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added," /> или <see cref="F:System.Data.EntityState.Deleted" /> состоянии,
                
                  -или-
                
                  <paramref name="entity" /> Подключен к другой экземпляр <see cref="T:System.Data.Objects.ObjectContext" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
      <summary>
              Явным образом загружает объект, связанный с предоставленным объектом, посредством заданного запроса LINQ и параметра слияния по умолчанию.
            </summary>
      <param name="entity">
                Исходный объект, для которого могут быть загружены связанных объектов.
              </param>
      <param name="selector">
                Выражение LINQ, определяющее связанные объекты для загрузки.
              </param>
      <typeparam name="T">
                Тип предоставленного объекта.
              </typeparam>
      <exception cref="T:System.ArgumentException">
                  <paramref name="selector" /> не поддерживает допустимый входной параметр.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="selector" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="entity" /> В <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added," /> или <see cref="F:System.Data.EntityState.Deleted" /> состоянии,
                
                  -или-
                
                  <paramref name="entity" /> Подключен к другой экземпляр <see cref="T:System.Data.Objects.ObjectContext" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Objects.MergeOption)">
      <summary>
              Явным образом загружает объект, связанный с предоставленным объектом, посредством заданного запроса LINQ и, используя заданный параметр слияния.
            </summary>
      <param name="entity">
                Исходный объект, для которого могут быть загружены связанных объектов.
              </param>
      <param name="selector">
                Выражение LINQ, определяющее связанные объекты для загрузки.
              </param>
      <param name="mergeOption">
                <see cref="T:System.Data.Objects.MergeOption" /> Значение, используемое при загрузке связанных объектов.
              </param>
      <typeparam name="T">
                Тип предоставленного объекта.
              </typeparam>
      <exception cref="T:System.ArgumentException">
                  <paramref name="selector" /> не поддерживает допустимый входной параметр.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="selector" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="entity" /> В <see cref="F:System.Data.EntityState.Detached" />, <see cref="F:System.Data.EntityState.Added," /> или <see cref="F:System.Data.EntityState.Deleted" /> состоянии,
                
                  -или-
                
                  <paramref name="entity" /> Подключен к другой экземпляр <see cref="T:System.Data.Objects.ObjectContext" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Collections.IEnumerable)">
      <summary>
              Обновляет коллекцию объектов в контексте объекта данными из источника данных.
            </summary>
      <param name="refreshMode">
                A <see cref="T:System.Data.Objects.RefreshMode" /> значение, указывающее, является ли изменения свойств в контексте объекта, перезаписываются значениями свойств из источника данных.
              </param>
      <param name="collection">
                Обновляемая коллекция объектов <see cref="T:System.Collections.IEnumerable" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="collection" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Недопустимый параметр <paramref name="refreshMode" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="collection" /> пуст.
                
                  -или- 
                
                  Объект не присоединен к контексту.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Object)">
      <summary>
              Обновляет объект в контексте объекта данными из источника данных.
            </summary>
      <param name="refreshMode">
                Одно из значений <see cref="T:System.Data.Objects.RefreshMode" />, которое указывает, какой режим использовать для обновления диспетчера <see cref="T:System.Data.Objects.ObjectStateManager" />.
              </param>
      <param name="entity">
                Обновляемый объект.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="collection" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Недопустимый параметр <paramref name="refreshMode" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="collection" /> пуст.
                
                  -или- 
                
                  Объект не присоединен к контексту.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.SaveChanges">
      <summary>
              Сохраняет все обновления в источнике данных и сбрасывает отслеживание изменений в контексте объекта.
            </summary>
      <returns>
              Число объектов в состоянии <see cref="F:System.Data.EntityState.Added" />, <see cref="F:System.Data.EntityState.Modified" /> или <see cref="F:System.Data.EntityState.Deleted" /> на момент вызова метода <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" />.
            </returns>
      <exception cref="T:System.Data.OptimisticConcurrencyException">
                  В источнике данных произошло нарушение оптимистичного параллелизма.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)">
      <summary>
              Сохраняет все обновления в источнике данных, и при необходимости сбрасывает отслеживание изменений в контексте объекта.
            </summary>
      <param name="acceptChangesDuringSave">
                Этот параметр необходим для поддержки транзакций на стороне клиента.
                 Если <see langword="true" />, отслеживание изменений по всем объектам сбрасывается после <see cref="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" /> завершения.
                 Если <see langword="false" />, необходимо вызвать метод <see cref="M:System.Data.Objects.ObjectContext.AcceptAllChanges" /> метод после <see cref="M:System.Data.Objects.ObjectContext.SaveChanges(System.Boolean)" />.
              </param>
      <returns>
              Число объектов в состоянии <see cref="F:System.Data.EntityState.Added" />, <see cref="F:System.Data.EntityState.Modified" /> или <see cref="F:System.Data.EntityState.Deleted" /> на момент вызова метода <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" />.
            </returns>
      <exception cref="T:System.Data.OptimisticConcurrencyException">
                  Произошло нарушение оптимистичного параллелизма.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.SaveChanges(System.Data.Objects.SaveOptions)">
      <summary>
              Сохраняет все обновления в источнике данных с указанным <see cref="T:System.Data.Objects.SaveOptions" />.
            </summary>
      <param name="options">
                A <see cref="T:System.Data.Objects.SaveOptions" /> значение, которое определяет поведение операции.
              </param>
      <returns>
              Число объектов в состоянии <see cref="F:System.Data.EntityState.Added" />, <see cref="F:System.Data.EntityState.Modified" /> или <see cref="F:System.Data.EntityState.Deleted" /> на момент вызова метода <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" />.
            </returns>
      <exception cref="T:System.Data.OptimisticConcurrencyException">
                  Произошло нарушение оптимистичного параллелизма.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader)">
      <summary>
              Преобразует <see cref="T:System.Data.Common.DbDataReader" /> содержащий строки данных сущности, в объекты запрошенного типа сущности.
            </summary>
      <param name="reader">
                <see cref="T:System.Data.Common.DbDataReader" /> Содержащий данные сущности для преобразования в объекты сущностей.
              </param>
      <typeparam name="TResult">
                Тип сущности данных в <see cref="T:System.Data.Common.DbDataReader" />.
              </typeparam>
      <returns>
              Перечисление объектов типа <paramref name="TResult" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Если <paramref name="reader" /> является <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader,System.String,System.Data.Objects.MergeOption)">
      <summary>
              Преобразует <see cref="T:System.Data.Common.DbDataReader" /> содержащий строки данных сущности, в объекты запрошенного типа сущности, в определенном наборе сущностей и с указанным параметром слияния.
            </summary>
      <param name="reader">
                <see cref="T:System.Data.Common.DbDataReader" /> Содержащий данные сущности для преобразования в объекты сущностей.
              </param>
      <param name="entitySetName">
                Набор сущностей <paramref name="TResult" /> типа.
              </param>
      <param name="mergeOption">
                <see cref="T:System.Data.Objects.MergeOption" /> Для использования при преобразовании объекты добавляются к контексту объекта.
                 Значение по умолчанию — <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.
              </param>
      <typeparam name="TResult">
                Тип сущности данных в <see cref="T:System.Data.Common.DbDataReader" />.
              </typeparam>
      <returns>
              Перечисление объектов типа <paramref name="TResult" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Если <paramref name="reader" /> является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Если предоставленный <paramref name="mergeOption" /> не является допустимым <see cref="T:System.Data.Objects.MergeOption" /> значение.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Если предоставленный <paramref name="entitySetName" /> допустимый объект задается для <paramref name="TResult" /> типа.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectContext.TryGetObjectByKey(System.Data.EntityKey,System.Object@)">
      <summary>
              Возвращает объект, имеющий указанный ключ сущности.
            </summary>
      <param name="key">
                Ключ искомого объекта.
              </param>
      <param name="value">
                Если этот метод возвращает значение, содержит объект.
              </param>
      <returns>
              <see langword="true" /> Если объект был успешно извлечен.
              <see langword="false" /> Если <paramref name="key" /> является временным, соединение является <see langword="null" />, или <paramref name="value" /> — <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentException">
                  Несовместимые метаданные для <paramref name="key" />.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="key" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.ObjectParameter" /> указанным именем и значением.
            </summary>
      <param name="name">
                Имя параметра.
                 Это имя не должно содержать маркер параметра «@», используемый для инструкций Entity SQL, а только фактическое имя.
                 Выражение должно начинаться с буквы.
                 Все последующие символы должны быть буквами, цифрами или символами подчеркивания (_).
              </param>
      <param name="value">
                Начальное значение (следовательно, и тип) параметра.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Если один из аргументов имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Если имя аргумента недопустимо.
                   Имена параметров должны начинаться с буквы и могут содержать только буквы, цифры и символы подчеркивания.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.ObjectParameter" /> указанным именем и типом.
            </summary>
      <param name="name">
                Имя параметра.
                 Это имя не должно содержать маркер параметра «@», используемый для инструкций Entity SQL, а только фактическое имя.
                 Выражение должно начинаться с буквы.
                 Все последующие символы должны быть буквами, цифрами или символами подчеркивания (_).
              </param>
      <param name="type">
                Тип параметра среды CLR.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Если один из аргументов имеет значение NULL.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Если имя аргумента недопустимо.
                   Имена параметров должны начинаться с буквы и могут содержать только буквы, цифры и символы подчеркивания.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)">
      <summary>
              Добавляет указанный параметр <see cref="T:System.Data.Objects.ObjectParameter" /> в коллекцию.
            </summary>
      <param name="parameter">
                Параметр для добавления в коллекцию.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name=" parameter" /> Аргумент <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="parameter" /> Аргумент уже существует в коллекции.
                   Это условие отличается от большинства коллекций, в которых допускаются повторяющиеся записи.
                
                  -или-
                
                  Другой параметр, имеющий то же имя, что <paramref name="parameter" /> аргумент уже существует в коллекции.
                   Учтите, что в поиске не учитывается регистр.
                   Это условие отличается от большинства коллекции и близко к правилам словаря <see cref="T:System.Collections.Generic.Dictionary" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Тип <paramref name="parameter" /> является недопустимым.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectParameterCollection.Clear">
      <summary>
              Удаляет все экземпляры <see cref="T:System.Data.Objects.ObjectParameter" /> из коллекции.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)">
      <summary>
              Проверяет наличие указанного параметра <see cref="T:System.Data.Objects.ObjectParameter" /> в коллекции по ссылке.
            </summary>
      <param name="parameter">
                Параметр <see cref="T:System.Data.Objects.ObjectParameter" /> для поиска в коллекции.
              </param>
      <returns>
              Возвращает <see langword="true" /> если объект параметра был найден в коллекции; в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Аргумент <paramref name="parameter" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectParameterCollection.Contains(System.String)">
      <summary>
              Определяет, присутствует ли в коллекции объект <see cref="T:System.Data.Objects.ObjectParameter" /> с указанным именем.
            </summary>
      <param name="name">
                Имя параметра, который необходимо найти в коллекции.
                 Это имя не должно содержать маркер параметра «@», используемый для инструкций Entity SQL, а только фактическое имя.
              </param>
      <returns>
              Возвращает <see langword="true" /> Если параметр с указанным именем был найден в коллекции; в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="name" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)">
      <summary>
              Позволяет копировать параметры коллекции в указанный массив, начиная с объекта по указанному индексу.
            </summary>
      <param name="array">
                Массив, в который копируются параметры.
              </param>
      <param name="index">
                Индекс в массиве, с которого начинается копирование параметров.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)">
      <summary>
              Удаляет экземпляр <see cref="T:System.Data.Objects.ObjectParameter" /> из коллекции по ссылке, если он существует в этой коллекции.
            </summary>
      <param name="parameter">
                Объект, который должен быть удален из коллекции.
              </param>
      <returns>
              Возвращает <see langword="true" /> если объект параметра был найден и удален из коллекции; в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Аргумент <paramref name="parameter" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable{System#Data#Objects#ObjectParameter}#GetEnumerator">
      <summary>
              Возвращает типизированный перечислитель по коллекции.
            </summary>
      <returns>
              Интерфейс <see cref="T:System.Collections.Generic.IEnumerator`1" /> типа <see cref="T:System.Data.Objects.ObjectParameter" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              Возвращает нетипизированный перечислитель по коллекции.
            </summary>
      <returns>
              Экземпляр <see cref="T:System.Collections.IEnumerator" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)">
      <summary>
              Выполняет нетипизированный запрос объектов с указанным параметром слияния.
            </summary>
      <param name="mergeOption">
                Параметр <see cref="T:System.Data.Objects.MergeOption" /> для использования при выполнении запроса.
                 Значение по умолчанию — <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Objects.ObjectResult`1" />, который содержит коллекцию объектов сущности, возвращенных запросом.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery.GetResultType">
      <summary>
              Возвращает сведения о результирующем типе запроса.
            </summary>
      <returns>
              Значение <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, которое содержит сведения об результирующем типе запроса.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              Возвращает перечислитель, который осуществляет итерацию по коллекции.
            </summary>
      <returns>
              Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList">
      <summary>
              Возвращает коллекцию в виде интерфейса <see cref="T:System.Collections.IList" />, используемого для привязки данных.
            </summary>
      <returns>
              Интерфейс <see cref="T:System.Collections.IList" /> объектов сущностей.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery.ToTraceString">
      <summary>
              Возвращает команды для выполнения в источнике данных.
            </summary>
      <returns>
              Объект <see langword="string" /> представляющий команды, которые запрос выполняет относительно источника данных.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)">
      <summary>
              Создает новый экземпляр <see cref="T:System.Data.Objects.ObjectQuery`1" /> с помощью указанной команды языка Entity SQL в качестве начального запроса.
            </summary>
      <param name="commandText">
                Запрос Entity SQL.
              </param>
      <param name="context">
                Контекст <see cref="T:System.Data.Objects.ObjectContext" />, в котором выполняется запрос.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)">
      <summary>
              Создает новый экземпляр <see cref="T:System.Data.Objects.ObjectQuery`1" />, используя указанную команду языка Entity SQL в качестве начального запроса, а также указанные параметры слияния.
            </summary>
      <param name="commandText">
                Запрос Entity SQL.
              </param>
      <param name="context">
                Контекст <see cref="T:System.Data.Objects.ObjectContext" />, в котором выполняется запрос.
              </param>
      <param name="mergeOption">
                Указывает, каким образом сущности, получаемые этим запросом, должны сливаться с сущностями, возвращенными в результате предыдущих запросов к тому же контексту <see cref="T:System.Data.Objects.ObjectContext" />.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.Distinct">
      <summary>
              Ограничивает запрос для выдачи результатов без повторов.
            </summary>
      <returns>
              Новый экземпляр запроса <see cref="T:System.Data.Objects.ObjectQuery`1" />, эквивалентный первоначальному экземпляру с примененным к нему предложением SELECT DISTINCT.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})">
      <summary>
              Ограничивает результаты запроса, исключая принадлежащие к результатам другого запроса объектов.
            </summary>
      <param name="query">
                Объект <see cref="T:System.Data.Objects.ObjectQuery`1" /> представляющий результаты, исключаемые из запроса.
              </param>
      <returns>
              Новый экземпляр <see cref="T:System.Data.Objects.ObjectQuery`1" />, эквивалентный первоначальному экземпляру с примененным к нему предложением EXCEPT, основанном на указанном элементе <paramref name="query" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="query" /> имеет значение <see langword="null" /> или является пустой строкой.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)">
      <summary>
              Выполняет запрос объектов с указанным параметром слияния.
            </summary>
      <param name="mergeOption">
                Параметр <see cref="T:System.Data.Objects.MergeOption" /> для использования при выполнении запроса.
                 Значение по умолчанию — <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Objects.ObjectResult`1" />, который содержит коллекцию объектов сущности, возвращенных запросом.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])">
      <summary>
              Группирует результаты запроса по заданному критерию.
            </summary>
      <param name="keys">
                Ключевые столбцы, по которым группируются результаты.
              </param>
      <param name="projection">
                Список выбранных свойств, определяющий проекцию.
              </param>
      <param name="parameters">
                Параметры (ноль или более), используемые в этом методе.
              </param>
      <returns>
              Новый экземпляр запроса <see cref="T:System.Data.Objects.ObjectQuery`1" /> типа <see cref="T:System.Data.Common.DbDataRecord" />, эквивалентный первоначальному экземпляру с примененным к нему предложением GROUP BY. 
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="query" /> имеет значение <see langword="null" /> или является пустой строкой.
                
                  -или-
                
                  Параметр <paramref name="projection" /> имеет значение <see langword="null" /> или является пустой строкой.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.Include(System.String)">
      <summary>
              Задает связанные объекты, включаемые в результаты запроса.
            </summary>
      <param name="path">
                Разделенный точками список связанных объектов, включаемых в результаты запроса.
              </param>
      <returns>
              Новый запрос <see cref="T:System.Data.Objects.ObjectQuery`1" /> с определенным путем запроса.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="path" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Свойство <paramref name="path" /> имеет значение <see langword="empty" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})">
      <summary>
              Ограничивает результаты запроса, включая только те, которые вошли в результаты другого запроса объектов.
            </summary>
      <param name="query">
                Объект <see cref="T:System.Data.Objects.ObjectQuery`1" />, представляющий результаты, включаемые в запрос.
              </param>
      <returns>
              Новый экземпляр <see cref="T:System.Data.Objects.ObjectQuery`1" />, эквивалентный первоначальному экземпляру с примененным к нему предложением INTERSECT, основанном на указанном элементе <paramref name="query" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="query" /> имеет значение <see langword="null" /> или является пустой строкой.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.OfType``1">
      <summary>
              Запрос ограничивается результатами определенного типа.
            </summary>
      <typeparam name="TResultType">
                Тип <see cref="T:System.Data.Objects.ObjectResult`1" /> возвращается, если запрос выполняется с применением фильтра.
              </typeparam>
      <returns>
              Новый экземпляр запроса <see cref="T:System.Data.Objects.ObjectQuery`1" />, эквивалентный первоначальному, с примененным к нему предложением OFTYPE.
            </returns>
      <exception cref="T:System.Data.EntitySqlException">
                  Указан недопустимый тип.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])">
      <summary>
              Сортирует результаты запроса по заданному критерию.
            </summary>
      <param name="keys">
                Ключевые столбцы, по которым упорядочиваются результаты.
              </param>
      <param name="parameters">
                Параметры (ноль или более), используемые в этом методе.
              </param>
      <returns>
              Новый экземпляр запроса <see cref="T:System.Data.Objects.ObjectQuery`1" />, эквивалентный первоначальному экземпляру с примененным к нему предложением ORDER BY.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Значение параметра <paramref name="keys" /> или параметра <paramref name="parameters" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="key" /> является пустой строкой.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])">
      <summary>
              Ограничивает результаты запроса только теми свойствами, которые определены в заданной проекции.
            </summary>
      <param name="projection">
                Список выбранных свойств, определяющий проекцию.
              </param>
      <param name="parameters">
                Параметры (ноль или более), используемые в этом методе.
              </param>
      <returns>
              Новый экземпляр запроса <see cref="T:System.Data.Objects.ObjectQuery`1" /> типа <see cref="T:System.Data.Common.DbDataRecord" />, эквивалентный первоначальному экземпляру с примененным к нему предложением SELECT. 
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="projection" /> имеет значение <see langword="null" />.
                
                  -или-
                
                  Свойство <paramref name="parameters" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="projection" /> является пустой строкой.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])">
      <summary>
              Ограничивает результаты запроса только свойствами, заданными в данной проекции.
            </summary>
      <param name="projection">
                Список проекций.
              </param>
      <param name="parameters">
                Дополнительный набор параметров запроса, которые должны находиться в области действия во время синтаксического анализа.
              </param>
      <typeparam name="TResultType">
                Тип элемента <see cref="T:System.Data.Objects.ObjectQuery`1" />, возвращаемого методом <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" />.
              </typeparam>
      <returns>
              Новый экземпляр <see cref="T:System.Data.Objects.ObjectQuery`1" /> типа, совместимого с конкретной проекцией.
               Возвращаемый запрос <see cref="T:System.Data.Objects.ObjectQuery`1" /> эквивалентен первоначальному с примененным к нему предложением SELECT VALUE.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="projection" /> имеет значение <see langword="null" />.
                
                  -или-
                
                  Свойство <paramref name="parameters" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="projection" /> является пустой строкой.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])">
      <summary>
              Упорядочивает результаты запроса по заданному критерию и пропускает указанное число результатов.
            </summary>
      <param name="keys">
                Ключевые столбцы, по которым упорядочиваются результаты.
              </param>
      <param name="count">
                Число результатов, которые нужно пропустить.
                 Может быть константой или ссылкой на параметр.
              </param>
      <param name="parameters">
                Дополнительный набор параметров запроса, которые должны находиться в области действия во время синтаксического анализа.
              </param>
      <returns>
              Новый экземпляр запроса <see cref="T:System.Data.Objects.ObjectQuery`1" />, эквивалентный первоначальному экземпляру с примененными к нему предложениями ORDER BY и SKIP.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Любой аргумент равен <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="keys" /> равен пустой строке.
                
                  -или-
                
                  Параметр <paramref name="count" /> равен пустой строке.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>
              Возвращает перечислитель для прохода по результатам запроса.
            </summary>
      <returns>
              Объект <see cref="T:System.Collections.Generic.IEnumerator`1" /> для последовательного просмотра результатов.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])">
      <summary>
              Результаты запроса ограничиваются определенным числом элементов.
            </summary>
      <param name="count">
                Количество элементов в результирующем наборе в виде строки.
              </param>
      <param name="parameters">
                Дополнительный набор параметров запроса, которые должны находиться в области действия во время синтаксического анализа.
              </param>
      <returns>
              Новый экземпляр запроса <see cref="T:System.Data.Objects.ObjectQuery`1" />, эквивалентный первоначальному экземпляру с примененным к нему предложением TOP.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="count" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="count" /> равен пустой строке.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})">
      <summary>
              Сочетает результаты запроса с результатами другого запроса объектов и исключает повторы.
            </summary>
      <param name="query">
                Объект <see cref="T:System.Data.Objects.ObjectQuery`1" />, представляющий добавляемые результаты.
              </param>
      <returns>
              Новый экземпляр запроса <see cref="T:System.Data.Objects.ObjectQuery`1" />, эквивалентный первоначальному экземпляру с примененным предложением UNION для добавления результатов указанного элемента <paramref name="query" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="query" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})">
      <summary>
              Сочетает результаты запроса с результатами другого запроса объектов и исключает повторы.
            </summary>
      <param name="query">
                Объект <see cref="T:System.Data.Objects.ObjectQuery`1" />, представляющий добавляемые результаты.
              </param>
      <returns>
              Новый экземпляр запроса <see cref="T:System.Data.Objects.ObjectQuery`1" />, эквивалентный первоначальному экземпляру с примененным к нему предложением UNION ALL для добавления результатов указанного запроса <paramref name="query" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="query" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])">
      <summary>
              Ограничивает запрос результатами, соответствующими определенному критерию фильтрации.
            </summary>
      <param name="predicate">
                Предикат фильтра.
              </param>
      <param name="parameters">
                Параметры (ноль или более), используемые в этом методе.
              </param>
      <returns>
              Новый экземпляр запроса <see cref="T:System.Data.Objects.ObjectQuery`1" />, эквивалентный первоначальному экземпляру с примененным к нему предложением WHERE.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="predicate" /> имеет значение <see langword="null" />.
                
                  -или-
                
                  Свойство <paramref name="parameters" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="predicate" /> является пустой строкой.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectResult.Dispose">
      <summary>
              Выполняет задачи, связанные с освобождением или сбросом ресурсов.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ObjectResult.GetNextResult``1">
      <summary>
              Возвращает следующий набор результатов хранимой процедуры.
            </summary>
      <typeparam name="TElement">
                Тип элемента.
              </typeparam>
      <returns>
              Задайте ObjectResult, который перечисляет значения следующий результат.
               Значение NULL, если больше нет или ObjectResult не является результатом вызова хранимой процедуры.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectResult.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              Возвращает перечислитель для перебора результатов запроса.
            </summary>
      <returns>
              Перечислитель, проходящий по результатам запроса.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectResult.System#ComponentModel#IListSource#GetList">
      <summary>
              Возвращает результаты в формате, применимом для привязки данных.
            </summary>
      <returns>
              Интерфейс <see cref="T:System.Collections.IList" /> объектов сущностей.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectResult`1.Dispose">
      <summary>
              Выполняет задачи, связанные с освобождением или сбросом ресурсов.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ObjectResult`1.GetEnumerator">
      <summary>
              Возвращает перечислитель для перебора результатов запроса.
            </summary>
      <returns>
              Перечислитель, проходящий по результатам запроса.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectSet`1.AddObject(`0)">
      <summary>
              Добавляет объект к контексту объекта в текущем наборе сущностей.
            </summary>
      <param name="entity">
                Добавляемый объект.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)">
      <summary>
              Копирует скалярные значения из указанного объекта в объект в контексте <see cref="T:System.Data.Objects.ObjectContext" />, содержащем тот же ключ.
            </summary>
      <param name="currentEntity">
                Отсоединенный объект имеет обновления свойств, которые нужно применить к исходному объекту.
                 Ключ сущности <paramref name="currentEntity" /> должен соответствовать <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> Свойства записи в <see cref="T:System.Data.Objects.ObjectContext" />.
              </param>
      <returns>
              Обновленный объект.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)">
      <summary>
              Задает <see cref="P:System.Data.Objects.ObjectStateEntry.OriginalValues" /> Свойства <see cref="T:System.Data.Objects.ObjectStateEntry" /> в соответствии со значениями свойств предоставленного объекта.
            </summary>
      <param name="originalEntity">
                Отсоединенный объект имеет обновления свойств, которые нужно применить к исходному объекту.
                 Ключ сущности <paramref name="originalEntity" /> должен соответствовать <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> Свойства записи в <see cref="T:System.Data.Objects.ObjectContext" />.
              </param>
      <returns>
              Обновленный объект.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectSet`1.Attach(`0)">
      <summary>
              Присоединяет объект или граф объектов к контексту объекта в текущем наборе сущностей.
            </summary>
      <param name="entity">
                Присоединяемый объект.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectSet`1.CreateObject">
      <summary>
              Создает новый объект типа сущности.
            </summary>
      <returns>
              Новый объект типа сущности или экземпляр прокси-типа, соответствующий типу сущности.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectSet`1.CreateObject``1">
      <summary>
              Создает экземпляр заданного типа.
            </summary>
      <typeparam name="T">
                Тип возвращаемого объекта.
              </typeparam>
      <returns>
              Экземпляр запрашиваемого типа <paramref name="T" />, или экземпляр прокси-типа, соответствующий типу <paramref name="T" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectSet`1.DeleteObject(`0)">
      <summary>
              Помечает объект для удаления.
            </summary>
      <param name="entity">
                Объект, представляющий удаляемую сущность.
                 Объект может находиться в любом состоянии, кроме <see cref="F:System.Data.EntityState.Detached" />.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectSet`1.Detach(`0)">
      <summary>
              Удаляет объект из контекста объекта.
            </summary>
      <param name="entity">
                Отсоединяемый объект.
                 Только <paramref name="entity" /> удалена, если все связанные объекты, которые отслеживаются одним и тем же <see cref="T:System.Data.Objects.ObjectStateManager" />, их не отсоединяются автоматически.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.AcceptChanges">
      <summary>
              Принимает текущие значения как исходные.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.ApplyCurrentValues(System.Object)">
      <summary>
              Задает текущие значения записи, совпадающие со значениями свойств предоставленного объекта.
            </summary>
      <param name="currentEntity">
                Отсоединенный объект с обновленными значениями, чтобы применить к объекту.
                <paramref name="currentEntity" /> также может быть ключом сущности объекта.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.ApplyOriginalValues(System.Object)">
      <summary>
              Задает исходные значения записи, совпадающие со значениями свойств предоставленного объекта.
            </summary>
      <param name="originalEntity">
                Отсоединенный объект, имеющий исходные значения, чтобы применить к объекту.
                <paramref name="originalEntity" /> также может быть ключом сущности объекта.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.ChangeState(System.Data.EntityState)">
      <summary>
              Изменяет состояние записи в указанный <see cref="T:System.Data.EntityState" /> значение.
            </summary>
      <param name="state">
                <see cref="T:System.Data.EntityState" /> Значение <see cref="P:System.Data.Objects.ObjectStateEntry.State" /> Свойства записи.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.Delete">
      <summary>
              Обозначает сущность как удаленную.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.GetModifiedProperties">
      <summary>
              Возвращает имена свойств объекта, которые были изменены со времени последнего <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> был вызван.
            </summary>
      <returns>
              <see cref="T:System.Collections.Generic.IEnumerable`1" /> Коллекцию имен как строка.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.GetUpdatableOriginalValues">
      <summary>
              Возвращает версию обновляемые исходные значения объекта, связанного с этим <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </summary>
      <returns>
              Обновляемые исходные значения данных объекта.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.IsPropertyChanged(System.String)">
      <summary>
              Метод DetectChanges используется для определения, отличается ли текущее значение свойства с заданным именем исходное значение.
               Обратите внимание, что он может отличаться от свойства помечены как измененные, так как свойство, которое не изменились по-прежнему могут быть помечены как измененные.
            </summary>
      <param name="propertyName">
                Имя свойства.
              </param>
      <returns>
              <see langword="true" /> Если изменилось свойство; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.RejectPropertyChanges(System.String)">
      <summary>
              Отклоняет все изменения свойства с заданным именем, так как свойство был последнего загружен, присоединен, сохранения или изменения приняты.
               Исходное значение свойства сохраняется и свойства не помечены как измененные.
            </summary>
      <param name="propertyName">
                Имя свойства для изменения.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.SetModified">
      <summary>
              Задает состояние объекта или связи для изменения.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.SetModifiedProperty(System.String)">
      <summary>
              Обозначает указанное свойство как измененное.
            </summary>
      <param name="propertyName">
                Имя свойства.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.System#Data#Objects#DataClasses#IEntityChangeTracker#EntityComplexMemberChanged(System.String,System.Object,System.String)">
      <summary>
              Уведомляет диспетчер состояния об изменении сложного свойства.
            </summary>
      <param name="entityMemberName">
                Имя измененяемого свойства объекта верхнего уровня.
              </param>
      <param name="complexObject">
                Сложный объект, содержащий изменяемое свойство.
              </param>
      <param name="complexObjectMemberName">
                Имя изменяемого свойства сложного объекта.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.System#Data#Objects#DataClasses#IEntityChangeTracker#EntityComplexMemberChanging(System.String,System.Object,System.String)">
      <summary>
              Уведомляет диспетчер состояния, что сложное свойство имеет отложенное изменение.
            </summary>
      <param name="entityMemberName">
                Имя сложного свойства.
              </param>
      <param name="complexObject">
                Сложный объект, содержащий изменяемое свойство.
              </param>
      <param name="complexObjectMemberName">
                Имя изменяемого свойства сложного объекта.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.System#Data#Objects#DataClasses#IEntityChangeTracker#EntityMemberChanged(System.String)">
      <summary>
              Уведомляет диспетчер состояния об изменении свойства.
            </summary>
      <param name="entityMemberName">
                Имя измененного свойства сущности.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectStateEntry.System#Data#Objects#DataClasses#IEntityChangeTracker#EntityMemberChanging(System.String)">
      <summary>
              Уведомляет диспетчер состояния, что свойство имеет отложенное изменение.
            </summary>
      <param name="entityMemberName">
                Имя изменяемого свойства сущности.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.ObjectStateManager" />.
            </summary>
      <param name="metadataWorkspace">
                Рабочая область метаданных <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />, которая предоставляет информацию о сопоставлении и метаданных.
              </param>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)">
      <summary>
              Изменяет состояние записи <see cref="T:System.Data.Objects.ObjectStateEntry" /> для определенного объекта на указанное состояние <paramref name="entityState" />.
            </summary>
      <param name="entity">
                Объект, для которого должно быть изменено состояние.
              </param>
      <param name="entityState">
                Новое состояние объекта.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Objects.ObjectStateEntry" /> для предоставленной записи <paramref name="entity" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Если <paramref name="entity" /> является <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Когда объект не отсоединен и не имеет записи в диспетчере состояния.
                
                  -или-
                
                  При попытке изменить состояние на <see cref="F:System.Data.EntityState.Detached" /> от любого другого <see cref="T:System.Data.EntityState." />
                
                  -или- 
                
                  Если <paramref name="state" /> не является допустимым <see cref="T:System.Data.EntityState" /> значение.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)">
      <summary>
              Изменяет состояние отношения между двумя объектами сущностей, заданное на основании двух связанных объектов и имени свойства навигации.
            </summary>
      <param name="sourceEntity">
                Экземпляр объекта или объект <see cref="T:System.Data.EntityKey" /> исходной сущности с одной стороны отношения.
              </param>
      <param name="targetEntity">
                Экземпляр объекта или объект <see cref="T:System.Data.EntityKey" /> целевой сущности с другой стороны отношения.
              </param>
      <param name="navigationProperty">
                Имя свойства навигации исходного объекта <paramref name="source" />, возвращающего указанный объект <paramref name="target" />.
              </param>
      <param name="relationshipState">
                Запрошенное состояние <see cref="T:System.Data.EntityState" /> указанного отношения.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Objects.ObjectStateEntry" /> для измененного отношения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  При <paramref name="source" /> или <paramref name="target" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  При попытке изменить состояние связи в состояние не <see cref="F:System.Data.EntityState.Deleted" /> или <see cref="F:System.Data.EntityState.Detached" /> при либо <paramref name="source" /> или <paramref name="target" /> в <see cref="F:System.Data.EntityState.Deleted" /> состояние.
                
                  -или- 
                
                  При попытке изменить состояние связи в состояние не <see cref="F:System.Data.EntityState.Added" /> или <see cref="F:System.Data.EntityState.Detached" /> при либо <paramref name="source" /> или <paramref name="target" /> в <see cref="F:System.Data.EntityState.Added" /> состояние.
                
                  -или-
                
                  Если <paramref name="state" /> не является допустимым <see cref="T:System.Data.EntityState" /> значение.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)">
      <summary>
              Изменяет состояние отношения между двумя объектами сущностей, заданное на основании двух связанных объектов и свойств отношения.
            </summary>
      <param name="sourceEntity">
                Экземпляр объекта или объект <see cref="T:System.Data.EntityKey" /> исходной сущности с одной стороны отношения.
              </param>
      <param name="targetEntity">
                Экземпляр объекта или объект <see cref="T:System.Data.EntityKey" /> целевой сущности с другой стороны отношения.
              </param>
      <param name="relationshipName">
                Имя связи.
              </param>
      <param name="targetRoleName">
                Имя роли на стороне <paramref name="target" /> отношения.
              </param>
      <param name="relationshipState">
                Запрошенное состояние <see cref="T:System.Data.EntityState" /> указанного отношения.
              </param>
      <returns>
              Объект <see cref="T:System.Data.Objects.ObjectStateEntry" /> для измененного отношения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  При <paramref name="source" /> или <paramref name="target" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  При попытке изменить состояние связи в состояние не <see cref="F:System.Data.EntityState.Deleted" /> или <see cref="F:System.Data.EntityState.Detached" /> при либо <paramref name="source" /> или <paramref name="target" /> в <see cref="F:System.Data.EntityState.Deleted" /> состояние.
                
                  -или- 
                
                  При попытке изменить состояние связи в состояние не <see cref="F:System.Data.EntityState.Added" /> или <see cref="F:System.Data.EntityState.Detached" /> при либо <paramref name="source" /> или <paramref name="target" /> в <see cref="F:System.Data.EntityState.Added" /> состояние.
                
                  -или-
                
                  Если <paramref name="state" /> не является допустимым <see cref="T:System.Data.EntityState" /> значение.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)">
      <summary>
              Изменяет состояние отношения между двумя объектами сущностей, заданное на основании двух связанных объектов и выражения LINQ, определяющего свойство навигации.
            </summary>
      <param name="sourceEntity">
                Экземпляр объекта или объект <see cref="T:System.Data.EntityKey" /> исходной сущности с одной стороны отношения.
              </param>
      <param name="targetEntity">
                Экземпляр объекта или объект <see cref="T:System.Data.EntityKey" /> целевой сущности с другой стороны отношения.
              </param>
      <param name="navigationPropertySelector">
                Выражение LINQ, выбирающее свойство навигации исходного объекта <paramref name="source" />, возвращающего указанный объект <paramref name="target" />.
              </param>
      <param name="relationshipState">
                Запрошенное состояние <see cref="T:System.Data.EntityState" /> указанного отношения.
              </param>
      <typeparam name="TEntity">
                Тип сущности объекта <paramref name="source" />.
              </typeparam>
      <returns>
              Объект <see cref="T:System.Data.Objects.ObjectStateEntry" /> для измененного отношения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Когда <paramref name="source" />, <paramref name="target" />, или <paramref name="selector" /> — <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="selector" /> Неправильный формат или не может возвратить свойство навигации.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  При попытке изменить состояние связи в состояние не <see cref="F:System.Data.EntityState.Deleted" /> или <see cref="F:System.Data.EntityState.Detached" /> при либо <paramref name="source" /> или <paramref name="target" /> в <see cref="F:System.Data.EntityState.Deleted" /> состояние.
                
                  -или- 
                
                  При попытке изменить состояние связи в состояние не <see cref="F:System.Data.EntityState.Added" /> или <see cref="F:System.Data.EntityState.Detached" /> при либо <paramref name="source" /> или <paramref name="target" /> в <see cref="F:System.Data.EntityState.Added" /> состояние.
                
                  -или-
                
                  Если <paramref name="state" /> не является допустимым <see cref="T:System.Data.EntityState" /> значение.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)">
      <summary>
              Возвращает коллекцию объектов <see cref="T:System.Data.Objects.ObjectStateEntry" /> для объектов или связей с заданным состоянием.
            </summary>
      <param name="state">
                Состояние <see cref="T:System.Data.EntityState" /> используется для фильтрации возвращаемых объектов <see cref="T:System.Data.Objects.ObjectStateEntry" />.
              </param>
      <returns>
              Коллекция объектов <see cref="T:System.Data.Objects.ObjectStateEntry" /> в заданном состоянии <see cref="T:System.Data.EntityState" />.
            </returns>
      <exception cref="T:System.ArgumentException">
                  Если <paramref name="state" /> является <see cref="F:System.Data.EntityState.Detached" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)">
      <summary>
              Возвращает запись <see cref="T:System.Data.Objects.ObjectStateEntry" /> для объекта или запись связи с указанным ключом.
            </summary>
      <param name="key">
                <see cref="T:System.Data.EntityKey" />.
              </param>
      <returns>
              Соответствующая запись <see cref="T:System.Data.Objects.ObjectStateEntry" /> для заданного ключа <see cref="T:System.Data.EntityKey" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Если <paramref name="key" /> является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Если указанный <paramref name="key" /> не удается найти в диспетчере состояния.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Сущность с указанным ключом <see cref="T:System.Data.EntityKey" /> отсутствует в диспетчере <see cref="T:System.Data.Objects.ObjectStateManager" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)">
      <summary>
              Возвращает запись <see cref="T:System.Data.Objects.ObjectStateEntry" /> для указанного объекта.
            </summary>
      <param name="entity">
                Класс <see cref="T:System.Object" />, которому принадлежит полученный объект <see cref="T:System.Data.Objects.ObjectStateEntry" />.
              </param>
      <returns>
              Соответствующая запись <see cref="T:System.Data.Objects.ObjectStateEntry" /> для заданного ключа <see cref="T:System.Object" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Сущность для указанного ключа <see cref="T:System.Object" /> отсутствует в диспетчере <see cref="T:System.Data.Objects.ObjectStateManager" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />, используемый указанным объектом.
            </summary>
      <param name="entity">
                Объект, для которого возвращается <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.
              </param>
      <returns>
              Операция <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> для заданного объекта.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Если <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> не может быть возвращен для указанного <paramref name="entity" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)">
      <summary>
              Пытается получить элемент <see cref="T:System.Data.Objects.ObjectStateEntry" /> для объекта или связи с указанным ключом <see cref="T:System.Data.EntityKey" />.
            </summary>
      <param name="key">
                Заданное значение ключа <see cref="T:System.Data.EntityKey" />.
              </param>
      <param name="entry">
                После того как этот метод вернет управление, содержит значение записи <see cref="T:System.Data.Objects.ObjectStateEntry" /> для указанного ключа <see cref="T:System.Data.EntityKey" />. Этот параметр передается в неинициализированном виде.
              </param>
      <returns>
              Логическое значение <see langword="true" />, если имеется соответствующий объект <see cref="T:System.Data.Objects.ObjectStateEntry" /> для данного <see cref="T:System.Data.EntityKey" />; в противном случае — значение <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  A <see langword="null" /> (<see langword="Nothing" /> в Visual Basic) для указано значение <paramref name="key" />.
                </exception>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)">
      <summary>
              Пытается получить элемент <see cref="T:System.Data.Objects.ObjectStateEntry" />, соответствующий указанному объекту <see cref="T:System.Object" />.
            </summary>
      <param name="entity">
                Класс <see cref="T:System.Object" />, которому принадлежит полученный объект <see cref="T:System.Data.Objects.ObjectStateEntry" />.
              </param>
      <param name="entry">
                После того как этот метод вернет управление, содержит запись <see cref="T:System.Data.Objects.ObjectStateEntry" /> для указанного объекта <see cref="T:System.Data.EntityKey" />. Этот параметр передается в неинициализированном виде.
              </param>
      <returns>
              Логическое значение <see langword="true" />, если для заданного объекта имеется соответствующий объект <see cref="T:System.Data.Objects.ObjectStateEntry" />; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)">
      <summary>
              Возвращает объект <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />, используемый указанным объектом.
            </summary>
      <param name="entity">
                Объект, для которого возвращается <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.
              </param>
      <param name="relationshipManager">
                После выполнения возврата этим методом содержит объект <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> для сущности <paramref name="entity" />.
              </param>
      <returns>
              Значение <see langword="true" />, если для предоставленной сущности <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> возвращен экземпляр объекта <paramref name="entity" />; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ProxyDataContractResolver.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Objects.ProxyDataContractResolver" />.
            </summary>
    </member>
    <member name="M:System.Data.Objects.ProxyDataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary>
              При десериализации сопоставляет все данные <see langword="xsi:type" /> с фактическим типом объекта, игнорирующего сохраняемость.
            </summary>
      <param name="typeName">
                Данные <see langword="xsi:type" /> для сопоставления.
              </param>
      <param name="typeNamespace">
                Пространство имен <see langword="xsi:type" />.
              </param>
      <param name="declaredType">
                Объявленный тип.
              </param>
      <param name="knownTypeResolver">
                Экземпляр <see cref="T:System.Data.Objects.ProxyDataContractResolver" />.
              </param>
      <returns>
              Возвращает тип, который сопоставляется с <see langword="xsi:type" />.
               Возвращает <see langword="null" />, если не найдены известные типы, которые соответствуют <see langword="xsi:type" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.ProxyDataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary>
              При сериализации сопоставляет фактические типы для <see langword="xsi:type" /> сведения.
            </summary>
      <param name="dataContractType">
                Фактический тип объекта, игнорирующих сохраняемость.
              </param>
      <param name="declaredType">
                Объявленный тип.
              </param>
      <param name="knownTypeResolver">
                Экземпляр <see cref="T:System.Data.Objects.ProxyDataContractResolver" />.
              </param>
      <param name="typeName">
                При возвращении данного метода содержит список <see langword="xsi:type" /> объявления.
              </param>
      <param name="typeNamespace">
                При возвращении данного метода содержит список использованных пространств имен.
              </param>
      <returns>
              <see langword="true" /> Если тип был разрешен; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Decimal})">
      <summary>
              Математическая функция, которая возвращает угол в радианах, косинус которого равен указанному числовому значению.
               Этот угол называется арккосинус.
            </summary>
      <param name="arg1">
                Косинус угла.
              </param>
      <returns>
              Угол, измеряемый в радианах.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Double})">
      <summary>
              Математическая функция, которая возвращает угол в радианах, косинус которого равен указанному числовому значению.
               Этот угол называется арккосинус.
            </summary>
      <param name="arg1">
                Косинус угла.
              </param>
      <returns>
              Угол в радианах, определяемый входным значением косинуса.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Ascii(System.String)">
      <summary>
              Возвращает код ASCII левого символа указанного символьного выражения.
            </summary>
      <param name="arg">
                Допустимое строковое выражение.
              </param>
      <returns>
              Код ASCII первого символа во входной строке.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Decimal})">
      <summary>
              Математическая функция, которая возвращает угол в радианах, синус которого равен указанному числовому значению.
               Этот угол называется арксинус.
            </summary>
      <param name="arg">
                Синус угла.
              </param>
      <returns>
              Угол, измеряемый в радианах.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Double})">
      <summary>
              Математическая функция, которая возвращает угол в радианах, синус которого равен указанному числовому значению.
               Этот угол называется арксинус.
            </summary>
      <param name="arg">
                Синус угла.
              </param>
      <returns>
              Угол, измеряемый в радианах.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Decimal})">
      <summary>
              Математическая функция, которая возвращает угол в радианах, тангенс которого равен указанному числовому значению.
               Этот угол называется арктангенсом.
            </summary>
      <param name="arg">
                Тангенс угла.
              </param>
      <returns>
              Угол, измеряемый в радианах.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Double})">
      <summary>
              Математическая функция, которая возвращает угол в радианах, тангенс которого равен указанному числовому значению.
               Этот угол называется арктангенсом.
            </summary>
      <param name="arg">
                Тангенс угла.
              </param>
      <returns>
              Угол, измеряемый в радианах.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>
              Возвращает положительный угол в радианах между положительным направлением оси x и лучом, проведенным из начала координат точки (x, y), где x и y — два заданных числовых значений.
               Первый параметр, передаваемый в функцию-значение y, а второй параметр — значение x.
            </summary>
      <param name="arg1">
                Координата y точки.
              </param>
      <param name="arg2">
                Координата x точки.
              </param>
      <returns>
              Угол, измеряемый в радианах.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>
              Возвращает положительный угол в радианах между положительным направлением оси x и лучом, проведенным из начала координат точки (x, y), где x и y — два заданных числовых значений.
               Первый параметр, передаваемый в функцию-значение y, а второй параметр — значение x.
            </summary>
      <param name="arg1">
                Координата y точки.
              </param>
      <param name="arg2">
                Координата x точки.
              </param>
      <returns>
              Угол, измеряемый в радианах.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Char(System.Nullable{System.Int32})">
      <summary>
              Возвращает символ, соответствующий указанному целому значению ASCII.
            </summary>
      <param name="arg">
                Код ASCII.
              </param>
      <returns>
              Символ, соответствующий указанному значению ASCII.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[])">
      <summary>
              Возвращает начальное положение выражения внутри другого выражения.
            </summary>
      <param name="toSearch">
                Строковое выражение, в котором производится поиск.
              </param>
      <param name="target">
                Строковое выражение, которое требуется найти.
              </param>
      <returns>
              Начальная позиция <paramref name="target" /> если он найден в <paramref name="toSearch" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})">
      <summary>
              Возвращает начальное положение выражения внутри другого выражения.
            </summary>
      <param name="toSearch">
                Строковое выражение, в котором производится поиск.
              </param>
      <param name="target">
                Строковое выражение, которое требуется найти.
              </param>
      <param name="startLocation">
                Положение символа в <paramref name="toSearch" /> которого начинается поиск.
              </param>
      <returns>
              Начальная позиция <paramref name="target" /> если он найден в <paramref name="toSearch" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})">
      <summary>
              Возвращает начальное положение выражения внутри другого выражения.
            </summary>
      <param name="toSearch">
                Строковое выражение, в котором производится поиск.
              </param>
      <param name="target">
                Строковое выражение, которое требуется найти.
              </param>
      <param name="startLocation">
                Положение символа в <paramref name="toSearch" /> с какой поиск начинается.
              </param>
      <returns>
              Начальная позиция <paramref name="target" /> если он найден в <paramref name="toSearch" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String)">
      <summary>
              Возвращает начальное положение выражения внутри другого выражения.
            </summary>
      <param name="toSearch">
                Строковое выражение, в котором производится поиск.
              </param>
      <param name="target">
                Строковое выражение, которое требуется найти.
              </param>
      <returns>
              Начальная позиция <paramref name="target" /> если он найден в <paramref name="toSearch" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})">
      <summary>
              Возвращает начальное положение выражения внутри другого выражения.
            </summary>
      <param name="toSearch">
                Строковое выражение, в котором производится поиск.
              </param>
      <param name="target">
                Строковое выражение, которое требуется найти.
              </param>
      <param name="startLocation">
                Положение символа в <paramref name="toSearch" /> которого начинается поиск.
              </param>
      <returns>
              Начальная позиция <paramref name="target" /> если он найден в <paramref name="toSearch" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})">
      <summary>
              Возвращает начальное положение выражения внутри другого выражения.
            </summary>
      <param name="toSearch">
                Строковое выражение, в котором производится поиск.
              </param>
      <param name="target">
                Строковое выражение, которое требуется найти.
              </param>
      <param name="startLocation">
                Положение символа в <paramref name="toSearch" /> которого начинается поиск.
              </param>
      <returns>
              Объект <see cref="T:System.Nullable`1" /> из <see cref="T:System.Int64" /> значение, которое представляет начальную позицию <paramref name="target" /> если он найден в <paramref name="toSearch" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[])">
      <summary>
              Возвращает значение контрольной суммы, вычисленное для входного аргумента.
            </summary>
      <param name="arg1">
                Массив символов, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[])">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Массив символов, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Массив символов, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Массив символов, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Массив символов, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg3">
                Массив символов, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное для входного аргумента.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg3">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное для входного аргумента.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg3">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное для входного аргумента.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg3">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное для входного аргумента.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg3">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное для входного аргумента.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg3">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное для входного аргумента.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg3">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное для входного аргумента.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg3">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String)">
      <summary>
              Возвращает значение контрольной суммы, вычисленное для входного аргумента.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String)">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String,System.String)">
      <summary>
              Возвращает значение контрольной суммы, вычисленное входных аргументов.
            </summary>
      <param name="arg1">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg2">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <param name="arg3">
                Значение, для которого вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма, вычисленная входных значений.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>
              Возвращает контрольную сумму значений в коллекции.
               Значения NULL не учитываются.
            </summary>
      <param name="arg">
                Коллекция значений, по которым вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма вычисляется из входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>
              Возвращает контрольную сумму значений в коллекции.
               Значения NULL не учитываются.
            </summary>
      <param name="arg">
                Коллекция значений, по которым вычисляется контрольная сумма.
              </param>
      <returns>
              Контрольная сумма вычисляется из входной коллекции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Decimal})">
      <summary>
              Возвращает тригонометрический косинус указанного угла в радианах в указанном выражении.
            </summary>
      <param name="arg">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Тригонометрический косинус указанного угла.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Double})">
      <summary>
              Возвращает тригонометрический косинус указанного угла в радианах в указанном выражении.
            </summary>
      <param name="arg">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Тригонометрический косинус указанного угла.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Decimal})">
      <summary>
              Математическая функция, возвращающая тригонометрический котангенс указанного угла в радианах.
            </summary>
      <param name="arg">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Тригонометрический котангенс указанного угла.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Double})">
      <summary>
              Математическая функция, возвращающая тригонометрический котангенс указанного угла в радианах.
            </summary>
      <param name="arg">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Тригонометрический котангенс указанного угла.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp">
      <summary>
              Возвращает текущую дату и время.
            </summary>
      <returns>
              Текущая дата и время.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.CurrentUser">
      <summary>
              Возвращает имя текущего пользователя.
            </summary>
      <returns>
              Имя текущего пользователя.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Byte[])">
      <summary>
              Возвращает число байтов, используемых для представления выражения.
            </summary>
      <param name="arg">
                Значение, которое необходимо проверить на длину.
              </param>
      <returns>
              Число байтов в входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Boolean})">
      <summary>
              Возвращает число байтов, используемых для представления выражения.
            </summary>
      <param name="arg">
                Значение, которое необходимо проверить на длину данных.
              </param>
      <returns>
              Число байтов в входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTime})">
      <summary>
              Возвращает число байтов, используемых для представления выражения.
            </summary>
      <param name="arg">
                Значение, которое необходимо проверить на длину данных.
              </param>
      <returns>
              Число байтов в входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})">
      <summary>
              Возвращает число байтов, используемых для представления выражения.
            </summary>
      <param name="arg">
                Значение, которое необходимо проверить на длину данных.
              </param>
      <returns>
              Число байтов в входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Decimal})">
      <summary>
              Возвращает число байтов, используемых для представления выражения.
            </summary>
      <param name="arg">
                Значение, которое необходимо проверить на длину данных.
              </param>
      <returns>
              Число байтов в входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Double})">
      <summary>
              Возвращает число байтов, используемых для представления выражения.
            </summary>
      <param name="arg">
                Значение, которое необходимо проверить на длину данных.
              </param>
      <returns>
              Число байтов в входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Guid})">
      <summary>
              Возвращает число байтов, используемых для представления выражения.
            </summary>
      <param name="arg">
                Значение, которое необходимо проверить на длину данных.
              </param>
      <returns>
              Число байтов в входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})">
      <summary>
              Возвращает число байтов, используемых для представления выражения.
            </summary>
      <param name="arg">
                Значение, которое необходимо проверить на длину данных.
              </param>
      <returns>
              Число байтов в входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.String)">
      <summary>
              Возвращает число байтов, используемых для представления выражения.
            </summary>
      <param name="arg">
                Значение, которое необходимо проверить на длину данных.
              </param>
      <returns>
              Число байтов в входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})">
      <summary>
              Возвращает новый <see langword="datetime" /> значение в соответствии с добавлением интервала к указанной дате.
            </summary>
      <param name="datePartArg">
                Часть даты для увеличения значения.
              </param>
      <param name="number">
                Значение, используемое для увеличения даты на указанную величину.
              </param>
      <param name="date">
                Дата для увеличения значения.
              </param>
      <returns>
              Новая дата.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})">
      <summary>
              Возвращает новое значение даты на основе за счет добавления интервала к указанной дате.
            </summary>
      <param name="datePartArg">
                Часть даты для увеличения значения.
              </param>
      <param name="number">
                Значение, используемое для увеличения даты на указанную величину.
              </param>
      <param name="dateTimeOffsetArg">
                Дата для увеличения значения.
              </param>
      <returns>
              Новый момент времени, выражается в виде даты и времени суток, относительно времени в формате UTC.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})">
      <summary>
              Возвращает новое значение промежутка времени, полученное в результате прибавления интервала для указанного интервала времени.
            </summary>
      <param name="datePartArg">
                Часть даты для увеличения значения.
              </param>
      <param name="number">
                Значение, используемое для увеличения даты на указанную величину.
              </param>
      <param name="time">
                Увеличиваемый интервал времени.
              </param>
      <returns>
              Новый интервал времени.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)">
      <summary>
              Возвращает новый <see langword="datetime" /> значение в соответствии с добавлением интервала к указанной дате.
            </summary>
      <param name="datePartArg">
                Часть даты для увеличения значения.
              </param>
      <param name="number">
                Значение, используемое для увеличения даты на указанную величину.
              </param>
      <param name="date">
                Дата для увеличения значения.
              </param>
      <returns>
              Объект <see cref="T:System.Nullable`1" /> из <see cref="T:System.DateTime" /> значение, представляющее новую дату.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Значение, указывающее число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.String)">
      <summary>
              Возвращает число заданных границ, пересеченных между указанной датой начала и Дата окончания.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="startDate">
                Первая дата.
              </param>
      <param name="endDate">
                Второй даты.
              </param>
      <returns>
              Число интервалов времени между двумя датами.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})">
      <summary>
              Возвращает символьную строку, представляющую заданную часть указанной даты.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="date">
                Дата.
              </param>
      <returns>
              Указанную часть указанной даты.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>
              Возвращает символьную строку, представляющую заданную часть указанной даты.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="date">
                Дата.
              </param>
      <returns>
              Указанную часть указанной даты.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})">
      <summary>
              Возвращает символьную строку, представляющую заданную часть указанной даты.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="date">
                Дата.
              </param>
      <returns>
              Указанную часть указанной даты.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.String)">
      <summary>
              Возвращает символьную строку, представляющую заданную часть указанной даты.
            </summary>
      <param name="datePartArg">
                Часть даты для вычисления Разное количество интервалов времени.
              </param>
      <param name="date">
                Дата.
              </param>
      <returns>
              Указанную часть указанной даты.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})">
      <summary>
              Возвращает целое число, представляющее указанную часть даты.
            </summary>
      <param name="datePartArg">
                Часть даты для возврата значения.
              </param>
      <param name="date">
                Дата.
              </param>
      <returns>
              Заданную часть указанной даты.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>
              Возвращает целое число, представляющее указанную часть даты.
            </summary>
      <param name="datePartArg">
                Часть даты для возврата значения.
              </param>
      <param name="date">
                Дата.
              </param>
      <returns>
              Заданная часть указанной даты.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})">
      <summary>
              Возвращает целое число, представляющее указанную часть даты.
            </summary>
      <param name="datePartArg">
                Часть даты для возврата значения.
              </param>
      <param name="date">
                Дата.
              </param>
      <returns>
              Заданная часть указанной даты.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.String)">
      <summary>
              Возвращает целое число, представляющее указанную часть даты.
            </summary>
      <param name="datePartArg">
                Часть даты для возврата значения.
              </param>
      <param name="date">
                Дата.
              </param>
      <returns>
              Заданная часть указанной даты.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Decimal})">
      <summary>
              Возвращает соответствующее значение угла в градусах для значения угла в радианах.
            </summary>
      <param name="arg1">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Указанный угол, преобразованный в градусы.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Double})">
      <summary>
              Возвращает соответствующее значение угла в градусах для значения угла в радианах.
            </summary>
      <param name="arg1">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Указанный угол, преобразованный в градусы.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int32})">
      <summary>
              Возвращает соответствующее значение угла в градусах для значения угла в радианах.
            </summary>
      <param name="arg1">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Указанный угол, преобразованный в градусы.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int64})">
      <summary>
              Возвращает соответствующее значение угла в градусах для значения угла в радианах.
            </summary>
      <param name="arg1">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Указанный угол, преобразованный в градусы.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Difference(System.String,System.String)">
      <summary>
              Возвращает целочисленное значение, указывающее разницу между значениями SOUNDEX двух символьных выражений.
            </summary>
      <param name="string1">
                Первая строка.
              </param>
      <param name="string2">
                Вторая строка.
              </param>
      <returns>
              SOUNDEX разница между двумя строками.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Decimal})">
      <summary>
              Возвращает значение экспоненты заданного выражения.
            </summary>
      <param name="arg">
                Входное значение.
              </param>
      <returns>
              Константа e, возведенное в степень входного значения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Double})">
      <summary>
              Возвращает значение экспоненты заданного выражения.
            </summary>
      <param name="arg">
                Входное значение.
              </param>
      <returns>
              Константа e, возведенное в степень входного значения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.GetDate">
      <summary>
              Возвращает текущую отметку времени базы данных в виде значения даты и времени без смещения часового пояса базы данных.
               Это значение является производным от операционной системы компьютера, на котором выполняется экземпляр SQL Server.
            </summary>
      <returns>
              Текущую отметку времени базы данных.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate">
      <summary>
              Возвращает текущую отметку времени базы данных в виде значения даты и времени.
               Смещение часового пояса базы данных не включается.
               Это значение представляет текущее время UTC (время по Гринвичу).
               Это значение является производным от операционной системы компьютера, на котором выполняется экземпляр SQL Server.
            </summary>
      <returns>
              Текущую отметку времени базы данных UTC.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.HostName">
      <summary>
              Возвращает имя рабочей станции.
            </summary>
      <returns>
              Имя рабочей станции.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.IsDate(System.String)">
      <summary>
              Указывает, является ли входное значение допустимой датой или временем.
            </summary>
      <param name="arg">
                Проверенное значение.
              </param>
      <returns>
              1, если входное выражение является допустимым значением даты или времени типов данных datetime или smalldatetime; в противном случае — 0.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(System.String)">
      <summary>
              Указывает, является ли входное значение допустимого числового типа.
            </summary>
      <param name="arg">
                Строковое выражение.
              </param>
      <returns>
              1, если входное выражение является допустимым числовым типом данных; в противном случае — 0.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Decimal})">
      <summary>
              Возвращает натуральный логарифм указанного входного значения.
            </summary>
      <param name="arg">
                Числовое выражение.
              </param>
      <returns>
              Натуральный логарифм входного значения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Double})">
      <summary>
              Возвращает натуральный логарифм указанного входного значения.
            </summary>
      <param name="arg">
                Числовое выражение.
              </param>
      <returns>
              Натуральный логарифм входного значения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Decimal})">
      <summary>
              Возвращает десятичный логарифм указанного входного значения.
            </summary>
      <param name="arg">
                Числовое выражение.
              </param>
      <returns>
              Десятичный логарифм входного значения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Double})">
      <summary>
              Возвращает десятичный логарифм указанного входного значения.
            </summary>
      <param name="arg">
                Числовое выражение.
              </param>
      <returns>
              Десятичный логарифм входного значения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.NChar(System.Nullable{System.Int32})">
      <summary>
              Возвращает символ Юникода с указанным целочисленным кодом, определенным в стандарте Юникода.
            </summary>
      <param name="arg">
                Код символа.
              </param>
      <returns>
              Символ, соответствующий входному коду знака.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.PatIndex(System.String,System.String)">
      <summary>
              Возвращает начальную позицию первого вхождения шаблона в указанном выражении или нули, если шаблон не найден, все допустимые текста и символьные типы данных.
            </summary>
      <param name="stringPattern">
                Шаблон строки для поиска.
              </param>
      <param name="target">
                Строка для поиска.
              </param>
      <returns>
              Начальная позиция символа, где был найден шаблон строки.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Pi">
      <summary>
              Возвращает значение числа пи.
            </summary>
      <returns>
              Числовое значение числа пи.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String)">
      <summary>
              Возвращает добавлением строки в Юникоде с разделителями, образуя из входной строки допустимый Microsoft SQL Server идентификатор с разделителем.
            </summary>
      <param name="stringArg">
                Выражение, символы кавычек добавляемый.
              </param>
      <returns>
              Исходная строка с квадратными скобками.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String,System.String)">
      <summary>
              Возвращает добавлением строки в Юникоде с разделителями, образуя из входной строки допустимый Microsoft SQL Server идентификатор с разделителем.
            </summary>
      <param name="stringArg">
                Выражение, символы кавычек добавляемый.
              </param>
      <param name="quoteCharacter">
                Односимвольная строка для использования в качестве разделителя.
                 Он может быть одинарная кавычка ('), открывающей или закрывающей квадратной скобкой ([]) или двойные кавычки («).
                 Если значение аргумента quote_character не указано, используются скобки.
              </param>
      <returns>
              Исходная строка с указанного кавычка знаки добавлены.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Decimal})">
      <summary>
              Возвращает в радианах для указанного угла в градусах.
            </summary>
      <param name="arg">
                Угол, измеряемый в градусах.
              </param>
      <returns>
              Количество мера указанного угла.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Double})">
      <summary>
              Возвращает в радианах для указанного угла в градусах.
            </summary>
      <param name="arg">
                Угол, измеряемый в градусах.
              </param>
      <returns>
              Количество мера указанного угла.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int32})">
      <summary>
              Возвращает в радианах для указанного угла в градусах.
            </summary>
      <param name="arg">
                Угол, измеряемый в градусах
              </param>
      <returns>
              Количество мера указанного угла.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int64})">
      <summary>
              Возвращает в радианах для указанного угла в градусах.
            </summary>
      <param name="arg">
                Угол, измеряемый в градусах
              </param>
      <returns>
              Количество мера указанного угла.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Rand">
      <summary>
              Возвращает значение псевдослучайных чисел с плавающей запятой от 0 до 1.
            </summary>
      <returns>
              Псевдослучайное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Rand(System.Nullable{System.Int32})">
      <summary>
              Возвращает значение псевдослучайных чисел с плавающей запятой от 0 до 1.
            </summary>
      <param name="seed">
                Начальное значение.
                 Если аргумент <paramref name="seed" /> не задан, то компонент SQL Server Database Engine присваивает случайно выбранное начальное значение.
                 Для указанного начального значения возвращаемый результат всегда будет один и тот же.
              </param>
      <returns>
              Псевдослучайное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})">
      <summary>
              Повторяет значение строки указанное число раз.
            </summary>
      <param name="target">
                Допустимое строковое выражение.
              </param>
      <param name="count">
                Значение, указывающее, сколько раз нужно повторить <paramref name="target" />.
              </param>
      <returns>
              Целевая строка повторяется количество раз, заданное параметром <paramref name="count" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Decimal})">
      <summary>
              Возвращает положительный знак (+1), ноль (0) или отрицательный знак (-1) указанного выражения.
            </summary>
      <param name="arg">
                Числовое выражение.
              </param>
      <returns>
              Знак входного выражения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Double})">
      <summary>
              Возвращает положительный знак (+1), ноль (0) или отрицательный знак (-1) указанного выражения.
            </summary>
      <param name="arg">
                Числовое выражение.
              </param>
      <returns>
              Знак входного выражения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int32})">
      <summary>
              Возвращает положительный знак (+1), ноль (0) или отрицательный знак (-1) указанного выражения.
            </summary>
      <param name="arg">
                Числовое выражение.
              </param>
      <returns>
              Знак входного выражения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int64})">
      <summary>
              Возвращает положительный знак (+1), ноль (0) или отрицательный знак (-1) указанного выражения.
            </summary>
      <param name="arg">
                Числовое выражение.
              </param>
      <returns>
              Знак входного выражения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Decimal})">
      <summary>
              Возвращает тригонометрический синус указанного угла.
            </summary>
      <param name="arg">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Тригонометрический синус входного выражения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Double})">
      <summary>
              Возвращает тригонометрический синус указанного угла.
            </summary>
      <param name="arg">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Тригонометрический синус входного выражения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.SoundCode(System.String)">
      <summary>
              Преобразует алфавитно-цифровую строку в четырехсимвольный код (SOUNDEX) для нахождения сходно звучащих слов или имен.
            </summary>
      <param name="arg">
                Допустимое строковое выражение.
              </param>
      <returns>
              Код SOUNDEX входной строки.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Space(System.Nullable{System.Int32})">
      <summary>
              Возвращает строку пробелов.
            </summary>
      <param name="arg1">
                Количество пробелов.
                 Если значение отрицательное, возвращается пустая строка.
              </param>
      <returns>
              Строка, состоящая из указанного числа пробелов.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Decimal})">
      <summary>
              Возвращает квадрат указанного числа.
            </summary>
      <param name="arg1">
                Числовое выражение.
              </param>
      <returns>
              Квадрат входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Double})">
      <summary>
              Возвращает квадрат указанного числа.
            </summary>
      <param name="arg1">
                Числовое выражение.
              </param>
      <returns>
              Квадрат входное значение.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})">
      <summary>
              Возвращает квадратный корень из указанного числа.
            </summary>
      <param name="arg">
                Числовое выражение.
              </param>
      <returns>
              Квадратный корень из входного значения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Double})">
      <summary>
              Возвращает квадратный корень из указанного числа.
            </summary>
      <param name="arg">
                Числовое выражение.
              </param>
      <returns>
              Квадратный корень из входного значения.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal})">
      <summary>
              Возвращает символьные данные, преобразованные из числовых данных.
            </summary>
      <param name="number">
                Числовое выражение.
              </param>
      <returns>
              Входное выражение, преобразованное в строку.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})">
      <summary>
              Возвращает символьные данные, преобразованные из числовых данных.
            </summary>
      <param name="number">
                Числовое выражение.
              </param>
      <param name="length">
                Общая длина строки.
                 Оно включает десятичную запятую, знак, цифры и пробелы.
                 Значение по умолчанию — 10.
              </param>
      <returns>
              Входное выражение, преобразованное в строку.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>
              Возвращает символьные данные, преобразованные из числовых данных.
            </summary>
      <param name="number">
                Числовое выражение.
              </param>
      <param name="length">
                Общая длина строки.
                 Оно включает десятичную запятую, знак, цифры и пробелы.
                 Значение по умолчанию — 10.
              </param>
      <param name="decimalArg">
                Количество знаков справа от десятичной запятой.
                <paramref name="decimal" /> должно быть меньше или равен 16.
                 Если<paramref name=" decimal" /> больше 16, то результат усекается до 16 знаков справа от десятичной запятой.
              </param>
      <returns>
              Входное выражение, преобразованное в строку.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double})">
      <summary>
              Возвращает символьные данные, преобразованные из числовых данных.
            </summary>
      <param name="number">
                Числовое выражение.
              </param>
      <returns>
              Числовое входное выражение, преобразованное в строку.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>
              Возвращает символьные данные, преобразованные из числовых данных.
            </summary>
      <param name="number">
                Числовое выражение.
              </param>
      <param name="length">
                Общая длина строки.
                 Оно включает десятичную запятую, знак, цифры и пробелы.
                 Значение по умолчанию — 10.
              </param>
      <returns>
              Числовое входное выражение, преобразованное в строку.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>
              Возвращает символьные данные, преобразованные из числовых данных.
            </summary>
      <param name="number">
                Числовое выражение.
              </param>
      <param name="length">
                Общая длина строки.
                 Оно включает десятичную запятую, знак, цифры и пробелы.
                 Значение по умолчанию — 10.
              </param>
      <param name="decimalArg">
                Количество знаков справа от десятичной запятой.
                <paramref name="decimal" /> должно быть меньше или равен 16.
                 Если<paramref name=" decimal" /> больше 16, то результат усекается до 16 знаков справа от десятичной запятой.
              </param>
      <returns>
              Числовое входное выражение, преобразованное в строку.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
      <summary>
              Вставляет строку в другую строку.
               Она удаляет указанное количество символов в целевой строке в начальной позиции и вставляет второй строки в целевой строке в начальной позиции.
            </summary>
      <param name="stringInput">
                Целевая строка.
              </param>
      <param name="start">
                Положение символа в <paramref name="stringinput" /> где замещающая строка — для вставки.
              </param>
      <param name="length">
                Число символов для удаления из <paramref name="stringInput" />.
                 Если <paramref name="length" /> длиннее, чем <paramref name="stringInput" />, удаление выполняется до последнего символа в <paramref name="stringReplacement" />.
              </param>
      <param name="stringReplacement">
                Подстрока для вставки в <paramref name="stringInput" />.
              </param>
      <returns>
              Строка, состоящая из двух строк.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Decimal})">
      <summary>
              Возвращает тригонометрический тангенс входного выражения.
            </summary>
      <param name="arg">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Тангенс входного угла.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Double})">
      <summary>
              Возвращает тригонометрический тангенс входного выражения.
            </summary>
      <param name="arg">
                Угол, измеряемый в радианах.
              </param>
      <returns>
              Тангенс входного угла.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.Unicode(System.String)">
      <summary>
              Возвращает целочисленное значение первого символа заданного выражения в стандарте Юникод.
            </summary>
      <param name="arg">
                Допустимое строковое выражение.
              </param>
      <returns>
              Код знака первого символа во входной строке.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.UserName">
      <summary>
              Возвращает имя пользователя базы данных, соответствующее указанному идентификационному номеру.
            </summary>
      <returns>
              Имя пользователя.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlFunctions.UserName(System.Nullable{System.Int32})">
      <summary>
              Возвращает имя пользователя базы данных, соответствующее указанному идентификационному номеру.
            </summary>
      <param name="arg">
                Идентификатор пользователя.
              </param>
      <returns>
              Имя пользователя.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает представление экземпляра географического объекта, дополненного Z (высота) и M (Мера) значения экземпляра Open Geospatial Consortium (OGC) Well-Known Text (WKT).
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <returns>
              Open Geospatial Consortium (OGC) Well-Known Text (WKT) представление экземпляра географического объекта.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.AsTextZM(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает представление экземпляра географического объекта, дополненного Z (высота) и M (Мера) значения экземпляра Open Geospatial Consortium (OGC) Well-Known Text (WKT).
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              Open Geospatial Consortium (OGC) Well-Known Text (WKT) представление экземпляра геометрического объекта.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(System.Data.Spatial.DbGeography,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>
              Возвращает геометрический объект, представляющий объединение всех значений точек, расстояние которых от экземпляра географического объекта меньше или равно указанному значению, указанной погрешностью.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <param name="distance">
                Расстояние.
              </param>
      <param name="tolerance">
                Заданного допуска.
              </param>
      <param name="relative">
                Указывается, является ли значение допуска относительный или абсолютный.
              </param>
      <returns>
              Объединение всех значений точек, расстояние которых от экземпляра географического объекта меньше или равно указанному значению
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.BufferWithTolerance(System.Data.Spatial.DbGeometry,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>
              Возвращает геометрический объект, представляющий объединение всех значений точек, расстояние от геометрического которых меньше или равно указанному значению, указанной погрешностью.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <param name="distance">
                Расстояние.
              </param>
      <param name="tolerance">
                Заданного допуска.
              </param>
      <param name="relative">
                Указывается, является ли значение допуска относительный или абсолютный.
              </param>
      <returns>
              Объединение всех значений точек, расстояние от геометрического которых меньше или равно указанному значению
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeAngle(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает максимальный угол между точкой, возвращаемой методом EnvelopeCenter() и точкой в экземпляре географического объекта (в градусах).
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <returns>
              Максимальный угол между точкой, возвращаемой методом EnvelopeCenter().
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.EnvelopeCenter(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает точку, которую можно использовать как центр ограничивающей окружности для экземпляра географического объекта.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <returns>
              SqlGeography значение, указывающее расположение центра ограничивающей окружности.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
      <summary>
              Предоставляет быстрое, только для индексов пересечение способ определить, доступен ли экземпляр географического объекта пересекается с другим экземпляром SqlGeography, при условии, что индекс.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <param name="geographyOther">
                Другой экземпляр географического объекта для сравнения с экземпляром, для которого был вызван фильтр.
              </param>
      <returns>
              <see langword="True" /> Если экземпляр географического объекта потенциально пересекается с другим экземпляром SqlGeography; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.Filter(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Предоставляет быстрое, только для индексов пересечение способ определить, доступен ли экземпляр географического объекта пересекается с другим экземпляром SqlGeometry, при условии, что индекс.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <param name="geometryOther">
                Другой экземпляр географического объекта для сравнения с экземпляром, для которого был вызван фильтр.
              </param>
      <returns>
              <see langword="True" /> Если экземпляр географического объекта потенциально пересекается с другим экземпляром SqlGeography; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(System.Data.Spatial.DbGeography,System.String)">
      <summary>
              Проверяет экземпляр SqlGeography совпадает с указанным типом.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <param name="geometryTypeName">
                Строка, указывающая одну из 12 типов, доступных в иерархии типа «География».
              </param>
      <returns>
              Строка, указывающая одну из 12 типов, доступных в иерархии типа «География».
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.InstanceOf(System.Data.Spatial.DbGeometry,System.String)">
      <summary>
              Проверяет экземпляр SqlGeometry совпадает с указанным типом.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <param name="geometryTypeName">
                Строка, указывающая одну из 12 типов, доступных в иерархии типа «География».
              </param>
      <returns>
              Строка, указывающая одну из 12 типов, доступных в иерархии типа «География».
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.MakeValid(System.Data.Spatial.DbGeometry)">
      <summary>
              Преобразует недопустимое геометрического объекта в экземпляр geometry с допустимым типом Open Geospatial Consortium (OGC).
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              Преобразованный геометрического объекта.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.NumRings(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает общее количество колец в экземпляре многоугольника.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <returns>
              Общее количество колец.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeography(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>
              Создает экземпляр geography, представляющий экземпляр Point из его значениям x и y и идентификатор пространственной ссылки (SRID).
            </summary>
      <param name="latitude">
                Координата x точки создается.
              </param>
      <param name="longitude">
                Координата y точки создаваемого
              </param>
      <param name="spatialReferenceId">
                Идентификатор SRID экземпляра географического объекта.
              </param>
      <returns>
              Экземпляр сконструированного geography.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.PointGeometry(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>
              Создает экземпляр geometry, представляющий экземпляр Point из его значениям x и y и идентификатор пространственной ссылки (SRID).
            </summary>
      <param name="xCoordinate">
                Координата x точки создается.
              </param>
      <param name="yCoordinate">
                Координата y точки создаваемого
              </param>
      <param name="spatialReferenceId">
                Идентификатор SRID экземпляра географического объекта.
              </param>
      <returns>
              Сконструированный геометрического объекта.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(System.Data.Spatial.DbGeography,System.Nullable{System.Double})">
      <summary>
              Возвращает приближенное значение для заданного экземпляра географического объекта создавались с помощью алгоритма Дугласа-Пекера для экземпляра с заданным допуском.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <param name="tolerance">
                Погрешность, передаваемую в алгоритм Дугласа-Пекера.
                 отклонение должно быть положительным числом.
              </param>
      <returns>
              Возвращает <see cref="T:System.Data.Spatial.DbGeography" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.Reduce(System.Data.Spatial.DbGeometry,System.Nullable{System.Double})">
      <summary>
              Возвращает приближенное значение для заданного экземпляра географического объекта создавались с помощью алгоритма Дугласа-Пекера для экземпляра с заданным допуском.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <param name="tolerance">
                Погрешность, передаваемую в алгоритм Дугласа-Пекера.
                 отклонение должно быть положительным числом.
              </param>
      <returns>
              Возвращает <see cref="T:System.Data.Spatial.DbGeometry" />.
            </returns>
    </member>
    <member name="M:System.Data.Objects.SqlClient.SqlSpatialFunctions.RingN(System.Data.Spatial.DbGeography,System.Nullable{System.Int32})">
      <summary>
              Возвращает указанное кольцо экземпляра SqlGeography: 1 ≤ n ≤ NumRings().
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <param name="index">
                Выражение типа int, от 1 до количества колец в экземпляре многоугольника.
              </param>
      <returns>
              Объект SqlGeography, представляющий кольцо, указанное параметром n.
            </returns>
    </member>
    <member name="M:System.Data.OptimisticConcurrencyException.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.OptimisticConcurrencyException" />.
            </summary>
    </member>
    <member name="M:System.Data.OptimisticConcurrencyException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.OptimisticConcurrencyException" />, содержащий специальное сообщение об ошибке.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
    </member>
    <member name="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.OptimisticConcurrencyException" />, использующий указанное сообщение об ошибке и ссылку на внутреннее исключение.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
      <param name="innerException">
                Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.
              </param>
    </member>
    <member name="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.OptimisticConcurrencyException" />, использующий заданное сообщение об ошибке, ссылку на внутреннее исключение и перечислимую коллекцию объектов <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
      <param name="innerException">
                Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.
              </param>
      <param name="stateEntries">
                Перечислимая коллекция объектов <see cref="T:System.Data.Objects.ObjectStateEntry" />.
              </param>
    </member>
    <member name="M:System.Data.PropertyConstraintException.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.PropertyConstraintException" /> класса сообщений по умолчанию.
            </summary>
    </member>
    <member name="M:System.Data.PropertyConstraintException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.PropertyConstraintException" /> класса с предоставленным сообщением.
            </summary>
      <param name="message">
                Локализованное сообщение об ошибке.
              </param>
    </member>
    <member name="M:System.Data.PropertyConstraintException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.PropertyConstraintException" /> предоставленный класс с сообщением и внутренним исключением.
            </summary>
      <param name="message">
                Локализованное сообщение об ошибке.
              </param>
      <param name="innerException">
                Внутреннее исключение.
              </param>
    </member>
    <member name="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.PropertyConstraintException" />.
            </summary>
      <param name="message">
                Локализованное сообщение об ошибке.
              </param>
      <param name="propertyName">
                Имя свойства.
              </param>
    </member>
    <member name="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.PropertyConstraintException" />.
            </summary>
      <param name="message">
                Локализованное сообщение об ошибке.
              </param>
      <param name="propertyName">
                Имя свойства.
              </param>
      <param name="innerException">
                Внутреннее исключение.
              </param>
    </member>
    <member name="M:System.Data.PropertyConstraintException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> сведениями об исключении.
            </summary>
      <param name="info">
                Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные объекта о созданном исключении.
              </param>
      <param name="context">
                Контекст сериализации.
              </param>
    </member>
    <member name="M:System.Data.ProviderIncompatibleException.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.ProviderIncompatibleException" />.
            </summary>
    </member>
    <member name="M:System.Data.ProviderIncompatibleException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.ProviderIncompatibleException" />, содержащий специальное сообщение об ошибке.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
    </member>
    <member name="M:System.Data.ProviderIncompatibleException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.ProviderIncompatibleException" />, использующий заданное сообщение об ошибке.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
      <param name="innerException">
                Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.
              </param>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.AsBinary">
      <summary>
               Создает известного двоичное представление этого значения DbGeography.
            </summary>
      <returns>
              Хорошо известного двоичное представление этого значения DbGeography.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.AsGml">
      <summary>
               Создает представление языка разметки Geography (GML) это значение DbGeography.
            </summary>
      <returns>
              Строка, содержащая GML-представления этого значения DbGeography.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.AsText">
      <summary>
               Создает хорошо известных текстовое представление данного значения DbGeography.
                Включает только широту и долготу точки.
            </summary>
      <returns>
              Строка, содержащая хорошо известных текстовое представление данного значения DbGeography.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.Buffer(System.Nullable{System.Double})">
      <summary>
              Возвращает географический объект, представляющий собой объединение всех точек, расстояние которых от экземпляра географического объекта меньше или равно указанному значению.
            </summary>
      <param name="distance">
                Расстояние.
              </param>
      <returns>
              Географический объект, представляющий собой объединение всех точек
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.Difference(System.Data.Spatial.DbGeography)">
      <summary>
               Вычисляет разность это значение DbGeography и другое значение DbGeography.
            </summary>
      <param name="other">
                Значение geography, для которой должна быть вычислена разница с этим значением.
              </param>
      <returns>
              Новое значение DbGeography, представляющее разница между значением этого geography и <paramref name="other" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.Disjoint(System.Data.Spatial.DbGeography)">
      <summary>
               Определяет, является ли этот DbGeography перекрытие с заданным аргументом DbGeography.
            </summary>
      <param name="other">
                Значение geography, должны сравниваться с этим значением geography для disjointness.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="other" /> несвязанным из этого значения geography; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.Distance(System.Data.Spatial.DbGeography)">
      <summary>
               Вычисляет расстояние между ближайшую точку в это значение DbGeography и другое значение DbGeography.
            </summary>
      <param name="other">
                Значение geography, для которой должно быть вычислено расстояние от этого значения.
              </param>
      <returns>
              Значение типа double, указывающее расстояние между двумя точками ближайший в значении geography и <paramref name="other" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.ElementAt(System.Int32)">
      <summary>
               Возвращает элемент этого значения DbGeography определенное место, если он представляет коллекцию географических объектов.
               &lt; имя param = «индекс» &gt; позицию в это значение geography, из которой должны быть взяты элемента. &lt; / param &gt;&lt; возвращает &gt; элемент в этом значении geography в указанной позиции, если он представляет коллекцию значений других geography; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <param name="index">
                Индекс.
              </param>
      <returns>
              Элемент этого значения DbGeography с конкретной позиции
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.FromBinary(System.Byte[])">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение на основании указанного известного двоичное значение.
            </summary>
      <param name="wellKnownBinary">
                Массив байтов, содержащий известного двоичное представление значения geography.
              </param>
      <returns>
              Новый DbGeography значение, определяемое известного двоичное значение с идентификатор системы координат географического объекта по умолчанию (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinary" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.FromBinary(System.Byte[],System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение в соответствии с указанным хорошо известных двоичные значения и система координат идентификатором (SRID).
            </summary>
      <param name="wellKnownBinary">
                Массив байтов, содержащий известного двоичное представление значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeography.
              </param>
      <returns>
              Новое DbGeography значение как определено по известным двоичное значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.FromGml(System.String)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение в соответствии с указанным значением языка разметки Geography (GML).
            </summary>
      <param name="geographyMarkup">
                Строка, содержащая представления языка разметки Geography (GML) значения geography.
              </param>
      <returns>
              Новый DbGeography значение, определяемое значением GML идентификатор системы координат географического объекта по умолчанию (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyMarkup" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.FromGml(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение на основе указанного языка разметки Geography (GML) значение и система координат идентификатора (SRID).
            </summary>
      <param name="geographyMarkup">
                Строка, содержащая представления языка разметки Geography (GML) значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeography.
              </param>
      <returns>
              Новое DbGeography значение как определено значением GML с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyMarkup" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.FromText(System.String)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение на основании указанного хорошо известных текстового значения.
            </summary>
      <param name="wellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <returns>
              Новый DbGeography значение в соответствии с известным текстового значения с идентификатор системы координат географического объекта по умолчанию (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.FromText(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение на основе указанного текста хорошо известных значение и система координат идентификатора (SRID).
            </summary>
      <param name="wellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeography.
              </param>
      <returns>
              Новое DbGeography значение как определено по известным текстовое значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.GeographyCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение коллекции на основе указанного хорошо известных двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="geographyCollectionWellKnownBinary">
                Массив байтов, содержащий известного двоичное представление значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeography.
              </param>
      <returns>
              Новое DbGeography значение как определено по известным двоичное значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyCollectionWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.GeographyCollectionFromText(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение коллекции на основе указанного текста хорошо известных значение и система координат идентификатора (SRID).
            </summary>
      <param name="geographyCollectionWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeography.
              </param>
      <returns>
              Новое DbGeography значение как определено по известным текстовое значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyCollectionWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.Intersection(System.Data.Spatial.DbGeography)">
      <summary>
               Вычисляет пересечение этого значения DbGeography и другое значение DbGeography.
            </summary>
      <param name="other">
                Значение geography, для которой должно быть вычислено пересечения с этим значением.
              </param>
      <returns>
              Новое значение DbGeography, представляющее пересечения это значение geography и <paramref name="other" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.Intersects(System.Data.Spatial.DbGeography)">
      <summary>
               Определяет, пересекается ли это значение DbGeography пространственно указанный аргумент DbGeography.
            </summary>
      <param name="other">
                Значение geography, должны сравниваться с этим значением geography для пересечения.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="other" /> пересекается geography значение; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.LineFromBinary(System.Byte[],System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> строки на основе указанного хорошо известных двоичное значение и система координат идентификатора (SRID) значение.
            </summary>
      <param name="lineWellKnownBinary">
                Массив байтов, содержащий известного двоичное представление значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeography.
              </param>
      <returns>
              Новое DbGeography значение как определено по известным двоичное значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.LineFromText(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> строки на основе указанного текста хорошо известных значение и система координат идентификатора (SRID) значение.
            </summary>
      <param name="lineWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeography.
              </param>
      <returns>
              Новое DbGeography значение как определено по известным текстовое значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.MultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>
              Возвращает многострочное значение из двоичного значения.
            </summary>
      <param name="multiLineWellKnownBinary">
                Хорошо известное двоичное значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Многострочное значение из двоичного значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.MultiLineFromText(System.String,System.Int32)">
      <summary>
              Возвращает многострочное значение из хорошо известного текстового значения.
            </summary>
      <param name="multiLineWellKnownText">
                Хорошо известный текст.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Многострочное значение из хорошо известного текстового значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.MultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>
              Возвращает многоточечное значение из известного двоичного значения.
            </summary>
      <param name="multiPointWellKnownBinary">
                Известное двоичное значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Многоточечное значение из известного двоичного значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.MultiPointFromText(System.String,System.Int32)">
      <summary>
              Возвращает многоточечное значение из хорошо известного текстового значения.
            </summary>
      <param name="multiPointWellKnownText">
                Хорошо известное текстовое значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Многоточечное значение из хорошо известного текстового значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.MultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>
              Возвращает значение мультиполигона из хорошо известного двоичного значения.
            </summary>
      <param name="multiPolygonWellKnownBinary">
                Хорошо известное двоичное значение мультиполигона.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Значение мультиполигона из хорошо известного двоичного значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.MultiPolygonFromText(System.String,System.Int32)">
      <summary>
              Возвращает значение мультиполигона из хорошо известного текстового значения.
            </summary>
      <param name="multiPolygonWellKnownText">
                Хорошо известное текстовое значение мультиполигона.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Значение мультиполигона из хорошо известного текстового значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.PointAt(System.Int32)">
      <summary>
               Возвращает элемент этого значения DbGeography определенное место, если он представляет linestring или линейной кольцо.
               &lt; имя param = «индекс» &gt; позицию в это значение geography, из которой должны быть взяты элемента. &lt; / param &gt;&lt; возвращает &gt; элемент в этом значении geography в указанной позиции, если он представляет linestring или линейной кольцо; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <param name="index">
                Индекс.
              </param>
      <returns>
              Элемент этого значения DbGeography с конкретной позиции
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.PointFromBinary(System.Byte[],System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> запятой на основе указанного хорошо известных двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="pointWellKnownBinary">
                Массив байтов, содержащий известного двоичное представление значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeography.
              </param>
      <returns>
              Новое DbGeography значение как определено по известным двоичное значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pointWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.PointFromText(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> запятой на основе указанного текста хорошо известных значение и система координат идентификатора (SRID).
            </summary>
      <param name="pointWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeography.
              </param>
      <returns>
              Новое DbGeography значение как определено по известным текстовое значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pointWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.PolygonFromBinary(System.Byte[],System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение многоугольника на основе указанного хорошо известных двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="polygonWellKnownBinary">
                Массив байтов, содержащий известного двоичное представление значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeography.
              </param>
      <returns>
              Новое DbGeography значение как определено по известным двоичное значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.PolygonFromText(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение многоугольника на основе указанного текста хорошо известных значение и система координат идентификатора (SRID).
            </summary>
      <param name="polygonWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeography.
              </param>
      <returns>
              Новое DbGeography значение как определено по известным текстовое значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.SpatialEquals(System.Data.Spatial.DbGeography)">
      <summary>
               Определяет, является ли этот DbGeography пространственно равно указанному аргументу DbGeography.
            </summary>
      <param name="other">
                Значение geography, должны сравниваться с этим значением географического объекта на равенство.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="other" /> пространственно равными этому значению geography; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.SymmetricDifference(System.Data.Spatial.DbGeography)">
      <summary>
               Вычисляет симметричной разницы это значение DbGeography и другое значение DbGeography.
            </summary>
      <param name="other">
                Значение geography, для которой должно быть вычислено симметричной разницы с этим значением.
              </param>
      <returns>
              Новое значение DbGeography, представляющий симметричную разницу между это значение geography и <paramref name="other" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.ToString">
      <summary>
               Возвращает строковое представление значения geography.
            </summary>
      <returns>
              Строковое представление значения типа geography.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeography.Union(System.Data.Spatial.DbGeography)">
      <summary>
               Вычисляет объединение это значение DbGeography и другое значение DbGeography.
            </summary>
      <param name="other">
                Значение geography, для которой должно быть вычислено объединение с этим значением.
              </param>
      <returns>
              Новое значение DbGeography, представляющее объединение это значение geography и <paramref name="other" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeographyWellKnownValue.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Spatial.DbGeographyWellKnownValue" />.
            </summary>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.AsBinary">
      <summary>
               Создает известного двоичное представление этого значения DbGeometry.
            </summary>
      <returns>
              Хорошо известного двоичное представление этого значения DbGeometry.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.AsGml">
      <summary>
               Создает представление языка разметки Geography (GML) это значение DbGeometry.
            </summary>
      <returns>
              Строка, содержащая GML-представления этого значения DbGeometry.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.AsText">
      <summary>
               Создает хорошо известных текстовое представление данного значения DbGeometry.
                Включает только координаты X и Y для точки.
            </summary>
      <returns>
              Строка, содержащая хорошо известных текстовое представление данного значения DbGeometry.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Buffer(System.Nullable{System.Double})">
      <summary>
              Возвращает геометрический объект, представляющий собой объединение всех точек, расстояние от геометрического которых меньше или равно указанному значению.
            </summary>
      <param name="distance">
                Расстояние.
              </param>
      <returns>
              Объект geometry представляет собой объединение всех точек.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Contains(System.Data.Spatial.DbGeometry)">
      <summary>
               Определяет, содержит ли это значение DbGeometry пространственно указанный аргумент DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, должны сравниваться с этим значением geometry для вложения.
              </param>
      <returns>
              <see langword="true" /> Если это значение geometry содержит <paramref name="other" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Crosses(System.Data.Spatial.DbGeometry)">
      <summary>
               Определяет, является ли это значение DbGeometry пространственно пересекает указанный аргумент DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, должны сравниваться с этим значением geometry.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="other" /> достигает этого значения geometry; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Difference(System.Data.Spatial.DbGeometry)">
      <summary>
               Вычисляет разницу между это значение DbGeometry и другое значение DbGeometry.
            </summary>
      <param name="other">
                Значение геометрического объекта, для которого должна быть вычислена разница с этим значением.
              </param>
      <returns>
              Новое значение DbGeometry, представляющее разница между значением этого геометрии и <paramref name="other" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Disjoint(System.Data.Spatial.DbGeometry)">
      <summary>
               Определяет, является ли этот DbGeometry перекрытие с заданным аргументом DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, должны сравниваться с этим значением geometry для disjointness.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="other" /> несвязанным из этого значения geometry; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Distance(System.Data.Spatial.DbGeometry)">
      <summary>
               Вычисляет расстояние между ближайшую точку в это значение DbGeometry и другое значение DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, для которой должно быть вычислено расстояние от этого значения.
              </param>
      <returns>
              Значение типа double, указывающее расстояние между двумя точками ближайший в значении геометрии и <paramref name="other" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.ElementAt(System.Int32)">
      <summary>
               Возвращает элемент этого значения DbGeometry определенное место, если он представляет коллекцию геометрических объектов.
               &lt; имя param = «индекс» &gt; позицию в это значение geometry, из которой должны быть взяты элемент. &lt; / param &gt;&lt; возвращает &gt; элемент в этом значении geometry в указанной позиции, если он представляет коллекцию значений других geometry; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <param name="index">
                Индекс.
              </param>
      <returns>
              Элемент этого значения DbGeometry с конкретной позиции.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.FromBinary(System.Byte[])">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение на основании указанного известного двоичное значение.
            </summary>
      <param name="wellKnownBinary">
                Массив байтов, содержащий известные двоичное представление значения geometry.
              </param>
      <returns>
              Новый DbGeometry значение, определяемое известного двоичное значение с идентификатор системы координат геометрического объекта по умолчанию (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinary" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.FromBinary(System.Byte[],System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение в соответствии с указанным хорошо известных двоичные значения и система координат идентификатором (SRID).
            </summary>
      <param name="wellKnownBinary">
                Массив байтов, содержащий известные двоичное представление значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeometry.
              </param>
      <returns>
              Новое DbGeometry значение как определено по известным двоичное значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.FromGml(System.String)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение в соответствии с указанным значением языка разметки Geography (GML).
            </summary>
      <param name="geometryMarkup">
                Строка, содержащая представления языка разметки Geography (GML) значения geometry.
              </param>
      <returns>
              Новый DbGeometry значение, определяемое значением GML идентификатор системы координат геометрического объекта по умолчанию (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryMarkup" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.FromGml(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение на основе указанного языка разметки Geography (GML) значение и система координат идентификатора (SRID).
            </summary>
      <param name="geometryMarkup">
                Строка, содержащая представления языка разметки Geography (GML) значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeometry.
              </param>
      <returns>
              Новое DbGeometry значение как определено значением GML с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryMarkup" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.FromText(System.String)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение на основании указанного хорошо известных текстового значения.
            </summary>
      <param name="wellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <returns>
              Новый DbGeometry значение в соответствии с известным текстовое значение с идентификатором системе координат геометрического объекта по умолчанию (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.FromText(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение на основе указанного текста хорошо известных значение и система координат идентификатора (SRID).
            </summary>
      <param name="wellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeometry.
              </param>
      <returns>
              Новое DbGeometry значение как определено по известным текстовое значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение коллекции на основе указанного хорошо известных двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="geometryCollectionWellKnownBinary">
                Массив байтов, содержащий известные двоичное представление значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeometry.
              </param>
      <returns>
              Новое DbGeometry значение как определено по известным двоичное значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryCollectionWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.GeometryCollectionFromText(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение коллекции на основе указанного текста хорошо известных значение и система координат идентификатора (SRID).
            </summary>
      <param name="geometryCollectionWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeometry.
              </param>
      <returns>
              Новое DbGeometry значение как определено по известным текстовое значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryCollectionWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.InteriorRingAt(System.Int32)">
      <summary>
               Возвращает внутреннее кольцо из этого значения DbGeometry в определенной позиции, если он представляет собой многоугольник.
               &lt; param name = «index» &gt; позицию в это значение geometry, из которой должны быть взяты внутреннее кольцо. &lt; / param &gt;&lt; возвращает &gt; внутреннее кольцо в значении geometry в указанной позиции, если он представляет собой многоугольник, в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <param name="index">
                Индекс.
              </param>
      <returns>
              Внутреннее кольцо из этого значения DbGeometry в заданной позиции.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Intersection(System.Data.Spatial.DbGeometry)">
      <summary>
               Вычисляет пересечение этого значения DbGeometry и другое значение DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, для которой должно быть вычислено пересечения с этим значением.
              </param>
      <returns>
              Новое значение DbGeometry, представляющее пересечение этого значения типа geometry и <paramref name="other" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Intersects(System.Data.Spatial.DbGeometry)">
      <summary>
               Определяет, пересекается ли это значение DbGeometry пространственно указанный аргумент DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, должны сравниваться с этим значением geometry для пересечения.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="other" /> пересекается geometry значение; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.LineFromBinary(System.Byte[],System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> строки на основе указанного хорошо известных двоичное значение и система координат идентификатора (SRID) значение.
            </summary>
      <param name="lineWellKnownBinary">
                Массив байтов, содержащий известные двоичное представление значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeometry.
              </param>
      <returns>
              Новое DbGeometry значение как определено по известным двоичное значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.LineFromText(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> строки на основе указанного текста хорошо известных значение и система координат идентификатора (SRID) значение.
            </summary>
      <param name="lineWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeometry.
              </param>
      <returns>
              Новое DbGeometry значение как определено по известным текстовое значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.MultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>
              Возвращает многострочное значение из двоичного значения.
            </summary>
      <param name="multiLineWellKnownBinary">
                Хорошо известное двоичное значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Многострочное значение из двоичного значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.MultiLineFromText(System.String,System.Int32)">
      <summary>
              Возвращает многострочное значение из хорошо известного текстового значения.
            </summary>
      <param name="multiLineWellKnownText">
                Хорошо известный текст.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Многострочное значение из хорошо известного текстового значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.MultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>
              Возвращает многоточечное значение из известного двоичного значения.
            </summary>
      <param name="multiPointWellKnownBinary">
                Известное двоичное значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Многоточечное значение из известного двоичного значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.MultiPointFromText(System.String,System.Int32)">
      <summary>
              Возвращает многоточечное значение из хорошо известного текстового значения.
            </summary>
      <param name="multiPointWellKnownText">
                Хорошо известное текстовое значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Многоточечное значение из хорошо известного текстового значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.MultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>
              Возвращает значение мультиполигона из хорошо известного двоичного значения.
            </summary>
      <param name="multiPolygonWellKnownBinary">
                Хорошо известное текстовое значение мультиполигона.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Многоточечное значение из хорошо известного текстового значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.MultiPolygonFromText(System.String,System.Int32)">
      <summary>
              Возвращает значение мультиполигона из хорошо известного двоичного значения.
            </summary>
      <param name="multiPolygonWellKnownText">
                Хорошо известное текстовое значение мультиполигона.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Значение мультиполигона из хорошо известного двоичного значения.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Overlaps(System.Data.Spatial.DbGeometry)">
      <summary>
               Определяет, пересекаются ли это значение DbGeometry пространственно указанный аргумент DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, должны сравниваться с этим значением geometry перекрываются.
              </param>
      <returns>
              <see langword="true" /> Если это значение geometry перекрывает <paramref name="other" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.PointAt(System.Int32)">
      <summary>
               Возвращает элемент этого значения DbGeometry определенное место, если он представляет linestring или линейной кольцо.
               &lt; имя param = «индекс» &gt; позицию в это значение geometry, из которой должны быть взяты элемента. &lt; / param &gt;&lt; возвращает &gt; элемент в этом значении geometry в указанной позиции, если он представляет linestring или линейной кольцо; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <param name="index">
                Индекс.
              </param>
      <returns>
              Элемент этого значения DbGeometry с конкретной позиции.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.PointFromBinary(System.Byte[],System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> запятой на основе указанного хорошо известных двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="pointWellKnownBinary">
                Массив байтов, содержащий известные двоичное представление значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeometry.
              </param>
      <returns>
              Новое DbGeometry значение как определено по известным двоичное значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pointWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.PointFromText(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> запятой на основе указанного текста хорошо известных значение и система координат идентификатора (SRID).
            </summary>
      <param name="pointWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeometry.
              </param>
      <returns>
              Новое DbGeometry значение как определено по известным текстовое значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pointWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.PolygonFromBinary(System.Byte[],System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение многоугольника на основе указанного хорошо известных двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="polygonWellKnownBinary">
                Массив байтов, содержащий известные двоичное представление значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeometry.
              </param>
      <returns>
              Новое DbGeometry значение как определено по известным двоичное значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.PolygonFromText(System.String,System.Int32)">
      <summary>
               Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение многоугольника на основе указанного текста хорошо известных значение и система координат идентификатора (SRID).
            </summary>
      <param name="polygonWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, который следует использовать новое значение DbGeometry.
              </param>
      <returns>
              Новое DbGeometry значение как определено по известным текстовое значение с идентификатором указанной системы координат.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Relate(System.Data.Spatial.DbGeometry,System.String)">
      <summary>
               Определяет, относится ли это значение DbGeometry пространственно указанному аргументу DbGeometry согласно заданному шаблону пересечение модель "девять пересечения многомерно расширенных" (DE-9IM).
            </summary>
      <param name="other">
                Значение geometry, должны сравниваться с этим значением геометрического объекта для отношения.
              </param>
      <param name="matrix">
                Строка, содержащая текстовое представление шаблон пересечения (DE-9IM), который определяет отношение.
              </param>
      <returns>
              <see langword="true" /> Если это значение geometry относится к <paramref name="other" /> согласно матрице пересечение заданного шаблона; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                  <paramref name="matrix" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.SpatialEquals(System.Data.Spatial.DbGeometry)">
      <summary>
               Определяет, является ли этот DbGeometry пространственно равно указанному аргументу DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, должны сравниваться с этим значением геометрического объекта на равенство.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="other" /> пространственно равными этому значению geometry; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.SymmetricDifference(System.Data.Spatial.DbGeometry)">
      <summary>
               Вычисляет симметричную разницу между это значение DbGeometry и другое значение DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, для которой должно быть вычислено симметричной разницы с этим значением.
              </param>
      <returns>
              Новое значение DbGeometry, представляющий симметричную разницу между это значение геометрии и <paramref name="other" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.ToString">
      <summary>
               Возвращает строковое представление значения geometry.
            </summary>
      <returns>
              Строковое представление значения типа geometry.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Touches(System.Data.Spatial.DbGeometry)">
      <summary>
               Определяет, является ли это значение DbGeometry пространственно соприкасается с заданным аргументом DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, должны сравниваться с этим значением geometry.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="other" /> затрагивает это значение geometry; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Union(System.Data.Spatial.DbGeometry)">
      <summary>
               Вычисляет объединение это значение DbGeometry и другое значение DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, для которой должно быть вычислено объединение с этим значением.
              </param>
      <returns>
              Новое значение DbGeometry, представляющее объединение это значение геометрии и <paramref name="other" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometry.Within(System.Data.Spatial.DbGeometry)">
      <summary>
               Определяет, является ли это значение DbGeometry пространственно в пределах заданного аргумента DbGeometry.
            </summary>
      <param name="other">
                Значение geometry, должны сравниваться с этим значением geometry для вложения.
              </param>
      <returns>
              <see langword="true" /> Если это значение geometry в <paramref name="other" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbGeometryWellKnownValue.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Spatial.DbGeometryWellKnownValue" />.
            </summary>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialDataReader.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Spatial.DbSpatialDataReader" />.
            </summary>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialDataReader.GetGeography(System.Int32)">
      <summary>
               Если реализуется в производных типах, считывает экземпляр <see cref="T:System.Data.Spatial.DbGeography" /> из столбца с указанным порядковым номером столбца.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца, содержащего значение географического объекта
              </param>
      <returns>
              Экземпляр DbGeography значение указанного столбца по
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialDataReader.GetGeometry(System.Int32)">
      <summary>
               Если реализуется в производных типах, считывает экземпляр <see cref="T:System.Data.Spatial.DbGeometry" /> из столбца с указанным порядковым номером столбца.
            </summary>
      <param name="ordinal">
                Порядковый номер данных записи столбец, содержащий данные поставщика geometry
              </param>
      <returns>
              Экземпляр DbGeometry значение указанного столбца по
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.Spatial.DbSpatialServices" />.
            </summary>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.AsBinary(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает известного двоичное представление данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </summary>
      <param name="geographyValue">
                Значение geography, для которого должны создаваться известный бинарный формат.
              </param>
      <returns>
              Хорошо известного двоичное представление данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.AsBinary(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает известного двоичное представление данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </summary>
      <param name="geometryValue">
                Значение геометрического объекта, для которого должны создаваться известный бинарный формат.
              </param>
      <returns>
              Хорошо известного двоичное представление данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.AsGml(System.Data.Spatial.DbGeography)">
      <summary>
              Создает представление языка разметки Geography (GML) это <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </summary>
      <param name="geographyValue">
                Значение geography, для которого должны создаваться GML-код.
              </param>
      <returns>
              Строка, содержащая GML-представления этого значения DbGeography.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.AsGml(System.Data.Spatial.DbGeometry)">
      <summary>
              Создает представление языка разметки Geography (GML) это <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </summary>
      <param name="geometryValue">
                Значение геометрического объекта, для которого должны создаваться GML-код.
              </param>
      <returns>
              Строка, содержащая GML-представления этого значения DbGeometry.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.AsText(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает известных текстовое представление заданного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
               Это значение должно содержать долготу и широту точки.
            </summary>
      <param name="geographyValue">
                Значение geography, для которого должны создаваться известный текст.
              </param>
      <returns>
              Строка, содержащая хорошо известных текстовое представление <paramref name="geographyValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.AsText(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает известных текстовое представление заданного <see cref="T:System.Data.Spatial.DbGeometry" /> значения, включая только координаты X и Y для точки.
            </summary>
      <param name="geometryValue">
                Значение geometry, для которого должны создаваться известный текст.
              </param>
      <returns>
              Строка, содержащая хорошо известных текстовое представление <paramref name="geometryValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает текстовое представление <see cref="T:System.Data.Spatial.DbSpatialServices" /> с уровень и мера.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <returns>
              Текстовое представление <see cref="T:System.Data.Spatial.DbSpatialServices" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает текстовое представление <see cref="T:System.Data.Spatial.DbSpatialServices" /> с уровень и мера.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              Текстовое представление <see cref="T:System.Data.Spatial.DbSpatialServices" /> с уровень и мера.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Buffer(System.Data.Spatial.DbGeography,System.Double)">
      <summary>
              Создает значение geography, представляющий все точки меньше или равно <paramref name="distance" /> из данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <param name="distance">
                Значение типа double, указав насколько далеко от <paramref name="geographyValue" /> буфер.
              </param>
      <returns>
              Указывает новое значение DbGeography, представляющий все меньше или равно <paramref name="distance" /> из <paramref name="geographyValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Buffer(System.Data.Spatial.DbGeometry,System.Double)">
      <summary>
              Создает значение geometry, представляющий все точки меньше или равно <paramref name="distance" /> из данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <param name="distance">
                Значение типа double, указав насколько далеко от <paramref name="geometryValue" /> буфер.
              </param>
      <returns>
              Указывает новое значение DbGeometry, представляющий все меньше или равно <paramref name="distance" /> из <paramref name="geometryValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Contains(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Определяет, является ли один <see cref="T:System.Data.Spatial.DbGeometry" /> значение содержит другой.
            </summary>
      <param name="geometryValue">
                Первое значение geometry.
              </param>
      <param name="otherGeometry">
                Второе значение geometry.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="geometryValue" /> содержит <paramref name="otherGeometry" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.CreateGeography(System.Data.Spatial.DbSpatialServices,System.Object)">
      <summary>
               Этот метод предназначен для использования производных реализаций <see cref="M:System.Data.Spatial.DbSpatialServices.GeographyFromProviderValue(System.Object)" /> после подходящий проверки значение указанного поставщика, чтобы он подходит для использования с производной реализацией.
            </summary>
      <param name="spatialServices">
                Пространственные службы экземпляр, возвращаемый <see cref="T:System.Data.Spatial.DbGeography" /> значение будет зависеть от для его реализации пространственных функциональные возможности.
              </param>
      <param name="providerValue">
                Значение поставщика.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> экземпляр, который содержит указанный <paramref name="providerValue" /> и использует указанный <paramref name="spatialServices" /> пространственных реализацию.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialServices" />
                  <paramref name="providerValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.CreateGeometry(System.Data.Spatial.DbSpatialServices,System.Object)">
      <summary>
              Этот метод предназначен для использования производных реализаций <see cref="M:System.Data.Spatial.DbSpatialServices.GeometryFromProviderValue(System.Object)" /> после подходящий проверки значение указанного поставщика, чтобы он подходит для использования с производной реализацией.
            </summary>
      <param name="spatialServices">
                Пространственные службы экземпляр, возвращаемый <see cref="T:System.Data.Spatial.DbGeometry" /> значение будет зависеть от для его реализации пространственных функциональные возможности.
              </param>
      <param name="providerValue">
                Значение поставщика.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> экземпляр, который содержит указанный <paramref name="providerValue" /> и использует указанный <paramref name="spatialServices" /> пространственных реализацию.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="spatialServices" />
                  <paramref name="providerValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.CreateProviderValue(System.Data.Spatial.DbGeographyWellKnownValue)">
      <summary>
              Создает значение поставщика совместимы с этой реализацией пространственных служб на основе указанных хорошо известных <see cref="T:System.Data.Spatial.DbGeography" /> представление.
            </summary>
      <param name="wellKnownValue">
                Экземпляр <see cref="T:System.Data.Spatial.DbGeographyWellKnownValue" /> содержащий хорошо известных представление значения geography.
              </param>
      <returns>
              Значение от поставщика, кодирует сведения, содержащиеся в <paramref name="wellKnownValue" /> образом совместимы с этой реализацией пространственных служб.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.CreateProviderValue(System.Data.Spatial.DbGeometryWellKnownValue)">
      <summary>
              Создает значение поставщика совместимы с этой реализацией пространственных служб на основе указанных хорошо известных <see cref="T:System.Data.Spatial.DbGeometry" /> представление.
            </summary>
      <param name="wellKnownValue">
                Экземпляр <see cref="T:System.Data.Spatial.DbGeometryWellKnownValue" /> содержащий хорошо известных представление значения geometry.
              </param>
      <returns>
              Значение от поставщика, кодирует сведения, содержащиеся в <paramref name="wellKnownValue" /> образом совместимы с этой реализацией пространственных служб.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.CreateWellKnownValue(System.Data.Spatial.DbGeography)">
      <summary>
              Создает экземпляр <see cref="T:System.Data.Spatial.DbGeographyWellKnownValue" /> представляющее указанный <see cref="T:System.Data.Spatial.DbGeography" /> значение, используя одно или оба стандартных форматов пространственных хорошо известных.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <returns>
              Представление хорошо известных <paramref name="geographyValue" />, как новый <see cref="T:System.Data.Spatial.DbGeographyWellKnownValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.CreateWellKnownValue(System.Data.Spatial.DbGeometry)">
      <summary>
              Создает экземпляр <see cref="T:System.Data.Spatial.DbGeometryWellKnownValue" /> представляющее указанный <see cref="T:System.Data.Spatial.DbGeometry" /> значение, используя одно или оба стандартных форматов пространственных хорошо известных.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              Представление хорошо известных <paramref name="geometryValue" />, как новый <see cref="T:System.Data.Spatial.DbGeometryWellKnownValue" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Crosses(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Определяет ли получает два <see cref="T:System.Data.Spatial.DbGeometry" /> пространственно кросс-значения.
            </summary>
      <param name="geometryValue">
                Первое значение geometry.
              </param>
      <param name="otherGeometry">
                Второе значение geometry.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="geometryValue" /> пересекает <paramref name="otherGeometry" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Difference(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
      <summary>
              Вычисляет разность двух <see cref="T:System.Data.Spatial.DbGeography" /> значения.
            </summary>
      <param name="geographyValue">
                Первое значение geography.
              </param>
      <param name="otherGeography">
                Второе значение geography.
              </param>
      <returns>
              Новое значение DbGeography, представляющий разность <paramref name="geographyValue" /> и <paramref name="otherGeography" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Difference(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Вычисляет разницу между двумя <see cref="T:System.Data.Spatial.DbGeometry" /> значениями.
            </summary>
      <param name="geometryValue">
                Первое значение geometry.
              </param>
      <param name="otherGeometry">
                Второе значение geometry.
              </param>
      <returns>
              Новое значение DbGeometry, представляющую собой разность <paramref name="geometryValue" /> и <paramref name="otherGeometry" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Disjoint(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
      <summary>
              Определяет ли получает два <see cref="T:System.Data.Spatial.DbGeography" /> значения: перекрытие.
            </summary>
      <param name="geographyValue">
                Первое сравниваемое для disjointness значение geography.
              </param>
      <param name="otherGeography">
                Второе сравниваемое для disjointness значение geography.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="geographyValue" /> не принадлежит <paramref name="otherGeography" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Disjoint(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Определяет ли получает два <see cref="T:System.Data.Spatial.DbGeometry" /> значения: перекрытие.
            </summary>
      <param name="geometryValue">
                Первое сравниваемое для disjointness значение geometry.
              </param>
      <param name="otherGeometry">
                Второе сравниваемое для disjointness значение geometry.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="geometryValue" /> не принадлежит <paramref name="otherGeometry" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Distance(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
      <summary>
              Вычисляет расстояние между ближайшую точку в двух <see cref="T:System.Data.Spatial.DbGeography" /> значения.
            </summary>
      <param name="geographyValue">
                Первое значение geography.
              </param>
      <param name="otherGeography">
                Второе значение geography.
              </param>
      <returns>
              Значение типа double, указывающее расстояние между двумя точками ближайший в <paramref name="geographyValue" /> и <paramref name="otherGeography" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Distance(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Вычисляет расстояние между ближайшую точку в двух <see cref="T:System.Data.Spatial.DbGeometry" /> значения.
            </summary>
      <param name="geometryValue">
                Первое значение geometry.
              </param>
      <param name="otherGeometry">
                Второе значение geometry.
              </param>
      <returns>
              Значение типа double, указывающее расстояние между двумя точками ближайший в <paramref name="geometryValue" /> и <paramref name="otherGeometry" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.ElementAt(System.Data.Spatial.DbGeography,System.Int32)">
      <summary>
              Возвращает элемент из заданной <see cref="T:System.Data.Spatial.DbGeography" /> значение, если он представляет коллекцию географических объектов.
            </summary>
      <param name="geographyValue">
                Значение geography требуется представляет коллекцию географических объектов.
              </param>
      <param name="index">
                Позиция в значение geography, из которой должны быть взяты элемента.
              </param>
      <returns>
              Элемент в <paramref name="geographyValue" /> позиции <paramref name="index" />, если он представляет коллекцию значений других geography; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.ElementAt(System.Data.Spatial.DbGeometry,System.Int32)">
      <summary>
              Возвращает элемент из заданной <see cref="T:System.Data.Spatial.DbGeometry" /> значение, если он представляет коллекцию геометрических объектов.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет коллекцию геометрических объектов.
              </param>
      <param name="index">
                Позиция в значение geometry, из которой должны быть взяты элемента.
              </param>
      <returns>
              Элемент в <paramref name="geometryValue" /> позиции <paramref name="index" />, если он представляет коллекцию значений других geometry; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение коллекции на основе указанного хорошо известного двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="geographyCollectionWellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeography" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известного двоичное значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyCollectionWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyCollectionFromText(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение коллекции на основе указанного текста хорошо известного значения и система координат идентификатора (SRID).
            </summary>
      <param name="geographyCollectionWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeography" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известных текстовое значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyCollectionWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyFromBinary(System.Byte[])">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение в соответствии с указанным хорошо известного двоичное значение.
            </summary>
      <param name="wellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geography.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известного двоичное значение по умолчанию <see cref="T:System.Data.Spatial.DbGeography" /> идентификатор системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinary" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение на основе указанного хорошо известного двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="wellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeography" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известного двоичное значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyFromGml(System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение в соответствии с указанным значением языка разметки Geography (GML).
            </summary>
      <param name="geographyMarkup">
                Строка, содержащая представления языка разметки Geometry (GML) значения geography.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в GML значение по умолчанию <see cref="T:System.Data.Spatial.DbGeography" /> идентификатор системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyMarkup" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyFromGml(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение на основе указанного языка разметки Geography (GML) значение и система координат идентификатора (SRID).
            </summary>
      <param name="geographyMarkup">
                Строка, содержащая представления языка разметки Geometry (GML) значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeography" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в GML значение с идентификатором указанной системы координат (SRID).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyMarkup" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyFromProviderValue(System.Object)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение на основе поставщика значения, совместимый с этой реализацией пространственных служб.
            </summary>
      <param name="providerValue">
                Значение от поставщика, этой реализацией пространственных служб позволяет интерпретировать как значение geography.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> значение, поддерживаемых этой реализацией пространственных служб и заданное значение поставщика.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="providerValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="providerValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyFromText(System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение на основе указанного текста хорошо известного значения.
            </summary>
      <param name="wellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известных текстовое значение по умолчанию <see cref="T:System.Data.Spatial.DbGeography" /> идентификатор системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyFromText(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение на основе указанного текста хорошо известного значения и система координат идентификатора (SRID).
            </summary>
      <param name="wellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeography" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известных текстовое значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyLineFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> строки на основе указанного хорошо известного двоичное значение и система координат идентификатора (SRID) значение.
            </summary>
      <param name="lineWellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeography" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известного двоичное значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyLineFromText(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> строки на основе указанного текста хорошо известного значения и система координат идентификатора (SRID) значение.
            </summary>
      <param name="lineWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeography" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известных текстовое значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyMultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает многострочное значение <see cref="T:System.Data.Spatial.DbGeography" /> на основе указанного хорошо известного двоичного значения и идентификатора системы координат.
            </summary>
      <param name="multiLineWellKnownBinary">
                Хорошо известное двоичное значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое многострочное значение <see cref="T:System.Data.Spatial.DbGeography" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyMultiLineFromText(System.String,System.Int32)">
      <summary>
              Создает новое многострочное значение <see cref="T:System.Data.Spatial.DbGeography" /> на основе указанного хорошо известного текстового значения и идентификатора системы координат.
            </summary>
      <param name="multiLineWellKnownText">
                Хорошо известное текстовое значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое многострочное значение <see cref="T:System.Data.Spatial.DbGeography" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyMultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новое многоточечное значение <see cref="T:System.Data.Spatial.DbGeography" /> на основе указанного хорошо известного двоичного значения и идентификатора системы координат.
            </summary>
      <param name="multiPointWellKnownBinary">
                Хорошо известное двоичное значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое многоточечное значение <see cref="T:System.Data.Spatial.DbGeography" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyMultiPointFromText(System.String,System.Int32)">
      <summary>
              Создает новое многоточечное значение <see cref="T:System.Data.Spatial.DbGeography" /> на основе указанного хорошо известного текстового значения и идентификатора системы координат.
            </summary>
      <param name="multiPointWellKnownText">
                Известное текстовое значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое многоточечное значение <see cref="T:System.Data.Spatial.DbGeography" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyMultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новое значение мультиполигона <see cref="T:System.Data.Spatial.DbGeography" /> на основе указанного хорошо известного двоичного значения и идентификатора системы координат.
            </summary>
      <param name="multiPolygonWellKnownBinary">
                Хорошо известное двоичное значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое значение мультиполигона <see cref="T:System.Data.Spatial.DbGeography" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyMultiPolygonFromText(System.String,System.Int32)">
      <summary>
              Создает новое значение мультиполигона <see cref="T:System.Data.Spatial.DbGeography" /> на основе указанного хорошо известного текстового значения и идентификатора системы координат.
            </summary>
      <param name="multiPolygonWellKnownText">
                Хорошо известное текстовое значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое значение мультиполигона <see cref="T:System.Data.Spatial.DbGeography" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyPointFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> запятой на основе указанного хорошо известного двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="pointWellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeography" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известного двоичное значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pointWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyPointFromText(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> запятой на основе указанного текста хорошо известного значения и система координат идентификатора (SRID).
            </summary>
      <param name="pointWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeography" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известных текстовое значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pointWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение многоугольника на основе указанного хорошо известных двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="polygonWellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeography" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известного двоичное значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeographyPolygonFromText(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeography" /> значение многоугольника на основе указанного текста хорошо известных значение и система координат идентификатора (SRID).
            </summary>
      <param name="polygonWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geography.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeography" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> как определено в хорошо известных текстовое значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение коллекции на основе указанного хорошо известного двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="geometryCollectionWellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeometry" />значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известного двоичное значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryCollectionWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryCollectionFromText(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение коллекции на основе указанного текста хорошо известного значения и система координат идентификатора (SRID).
            </summary>
      <param name="geometryCollectionWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известных текстовое значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryCollectionWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryFromBinary(System.Byte[])">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение в соответствии с указанным хорошо известного двоичное значение.
            </summary>
      <param name="wellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geometry.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известного двоичное значение по умолчанию <see cref="T:System.Data.Spatial.DbGeometry" /> идентификатор системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinary" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение на основе указанного хорошо известного двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="wellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известного двоичное значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryFromGml(System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение в соответствии с указанным значением языка разметки Geography (GML).
            </summary>
      <param name="geometryMarkup">
                Строка, содержащая представления языка разметки Geography (GML) значения geometry.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в GML значение по умолчанию <see cref="T:System.Data.Spatial.DbGeometry" /> идентификатор системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryMarkup" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryFromGml(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение на основе указанного языка разметки Geography (GML) значение и система координат идентификатора (SRID).
            </summary>
      <param name="geometryMarkup">
                Строка, содержащая представления языка разметки Geography (GML) значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в GML значение с идентификатором указанной системы координат (SRID).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryMarkup" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryFromProviderValue(System.Object)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение на основе поставщика значения, совместимый с этой реализацией пространственных служб.
            </summary>
      <param name="providerValue">
                Значение от поставщика, этой реализацией пространственных служб позволяет интерпретировать как значение geometry.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение, поддерживаемых этой реализацией пространственных служб и заданное значение поставщика.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="providerValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="providerValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryFromText(System.String)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение на основе указанного текста хорошо известного значения.
            </summary>
      <param name="wellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известных текстовое значение по умолчанию <see cref="T:System.Data.Spatial.DbGeometry" /> идентификатор системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryFromText(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение на основе указанного текста хорошо известного значения и система координат идентификатора (SRID).
            </summary>
      <param name="wellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известных текстовое значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="wellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryLineFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> строки на основе указанного хорошо известного двоичное значение и система координат идентификатора (SRID) значение.
            </summary>
      <param name="lineWellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известного двоичное значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryLineFromText(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> строки на основе указанного текста хорошо известного значения и система координат идентификатора (SRID) значение.
            </summary>
      <param name="lineWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известных текстовое значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="lineWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryMultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает многострочное значение <see cref="T:System.Data.Spatial.DbGeometry" /> на основе указанного, хорошо известного двоичного значения и идентификатора системы координат.
            </summary>
      <param name="multiLineWellKnownBinary">
                Хорошо известное двоичное значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое многострочное значение <see cref="T:System.Data.Spatial.DbGeometry" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryMultiLineFromText(System.String,System.Int32)">
      <summary>
              Создает новое многострочное значение <see cref="T:System.Data.Spatial.DbGeometry" /> на основе указанного хорошо известного текстового значения и идентификатора системы координат.
            </summary>
      <param name="multiLineWellKnownText">
                Хорошо известное текстовое значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое многострочное значение <see cref="T:System.Data.Spatial.DbGeometry" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryMultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новое многоточечное значение <see cref="T:System.Data.Spatial.DbGeometry" /> на основе указанного хорошо известного двоичного значения и идентификатора системы координат.
            </summary>
      <param name="multiPointWellKnownBinary">
                Хорошо известное двоичное значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое многоточечное значение <see cref="T:System.Data.Spatial.DbGeometry" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryMultiPointFromText(System.String,System.Int32)">
      <summary>
              Создает новое многоточечное значение <see cref="T:System.Data.Spatial.DbGeometry" /> на основе указанного хорошо известного текстового значения и идентификатора системы координат.
            </summary>
      <param name="multiPointWellKnownText">
                Известное текстовое значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое многоточечное значение <see cref="T:System.Data.Spatial.DbGeometry" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryMultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новое значение мультиполигона <see cref="T:System.Data.Spatial.DbGeometry" /> на основе указанного хорошо известного двоичного значения и идентификатора системы координат.
            </summary>
      <param name="multiPolygonWellKnownBinary">
                Хорошо известное двоичное значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое значение мультиполигона <see cref="T:System.Data.Spatial.DbGeometry" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryMultiPolygonFromText(System.String,System.Int32)">
      <summary>
              Создает новое значение мультиполигона <see cref="T:System.Data.Spatial.DbGeometry" /> на основе указанного хорошо известного текстового значения и идентификатора системы координат.
            </summary>
      <param name="multiPolygonKnownText">
                Хорошо известное текстовое значение.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат.
              </param>
      <returns>
              Новое значение мультиполигона <see cref="T:System.Data.Spatial.DbGeometry" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryPointFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> запятой на основе указанного хорошо известного двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="pointWellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известного двоичное значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pointWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryPointFromText(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> запятой на основе указанного текста хорошо известного значения и система координат идентификатора (SRID).
            </summary>
      <param name="pointWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известных текстовое значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pointWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение многоугольника на основе указанного хорошо известных двоичное значение и система координат идентификатора (SRID).
            </summary>
      <param name="polygonWellKnownBinary">
                Массив байтов, содержащий хорошо известного двоичное представление значения geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известного двоичное значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownBinary" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GeometryPolygonFromText(System.String,System.Int32)">
      <summary>
              Создает новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение многоугольника на основе указанного текста хорошо известных значение и система координат идентификатора (SRID).
            </summary>
      <param name="polygonWellKnownText">
                Строка, содержащая хорошо известных текстовое представление значения типа geometry.
              </param>
      <param name="coordinateSystemId">
                Идентификатор системы координат, новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение следует использовать.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> как определено в хорошо известных текстовое значение с идентификатором указанной системы координат (SRID) (<see cref="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId" />).
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="polygonWellKnownText" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="coordinateSystemId" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetArea(System.Data.Spatial.DbGeography)">
      <summary>
               Возвращает значение NULL значение типа double, определяет область данного <see cref="T:System.Data.Spatial.DbGeography" /> значение, которое может принимать значение null, если значение не представляет рабочую область.
            </summary>
      <param name="geographyValue">
                Значение geography нужны представляет рабочую область.
              </param>
      <returns>
              Допускает значения NULL значение типа double, определяющий область, для данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetArea(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает значение NULL значение типа double, определяет область данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение, которое может принимать значение null, если значение не представляет рабочую область.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет рабочую область.
              </param>
      <returns>
              Допускает значения NULL значение типа double, определяющий область, для данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetBoundary(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает значение nullable типа double, указывающее границы данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              Границы данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetCentroid(System.Data.Spatial.DbGeometry)">
      <summary>
               Возвращает <see cref="T:System.Data.Spatial.DbGeometry" /> значение, которое представляет центроид заданное значение DbGeometry, который может принимать значение null, если значение не представляет рабочую область.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет рабочую область.
              </param>
      <returns>
              Центроида <paramref name="geometryValue" />, если он представляет поверхность; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetConvexHull(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает значение nullable типа double, указывающее выпуклая оболочка для данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              Выпуклая оболочка для данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetCoordinateSystemId(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает идентификатор системы координат для данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <returns>
              Идентификатор системы координат для данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetCoordinateSystemId(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает идентификатор системы координат для данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              Идентификатор системы координат для данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetDimension(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает измерения данного <see cref="T:System.Data.Spatial.DbGeography" /> значение или, если значение коллекции, большой размер элемента.
            </summary>
      <param name="geographyValue">
                Значение географического объекта, для которого должно быть получено значение измерения.
              </param>
      <returns>
              Измерения <paramref name="geographyValue" />, или самого большого элемента измерения, если <see cref="T:System.Data.Spatial.DbGeography" /> является коллекцией.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetDimension(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает измерения данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение или, если значение коллекции, большой размер элемента.
            </summary>
      <param name="geometryValue">
                Значение геометрического объекта, для которого должно быть получено значение измерения.
              </param>
      <returns>
              Измерения <paramref name="geometryValue" />, или самого большого элемента измерения, если <see cref="T:System.Data.Spatial.DbGeometry" /> является коллекцией.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetElementCount(System.Data.Spatial.DbGeography)">
      <summary>
               Возвращает количество элементов в данной <see cref="T:System.Data.Spatial.DbGeography" /> значение, если он представляет коллекцию географических объектов.
            </summary>
      <param name="geographyValue">
                Значение geography требуется представляет коллекцию географических объектов.
              </param>
      <returns>
              Число элементов в <paramref name="geographyValue" />, если он представляет коллекцию значений других geography; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetElementCount(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает количество элементов в данной <see cref="T:System.Data.Spatial.DbGeometry" /> значение, если он представляет коллекцию геометрических объектов.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет коллекцию геометрических объектов.
              </param>
      <returns>
              Число элементов в <paramref name="geometryValue" />, если он представляет коллекцию значений других geometry; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetElevation(System.Data.Spatial.DbGeography)">
      <summary>
               Возвращает повышения (по оси Z) данного <see cref="T:System.Data.Spatial.DbGeography" /> значение, если он представляет точку.
            </summary>
      <param name="geographyValue">
                Значение geography не нужны для представления точки.
              </param>
      <returns>
              Повышение прав (по оси Z) <paramref name="geographyValue" />, если он представляет точку; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetElevation(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает повышения (Z) данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение, если он представляет точку.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет точку.
              </param>
      <returns>
              Повышение прав (Z) <paramref name="geometryValue" />, если он представляет точку; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetEndPoint(System.Data.Spatial.DbGeography)">
      <summary>
               Возвращает <see cref="T:System.Data.Spatial.DbGeography" /> значение, представляющее конечную точку заданного значения DbGeography, который может принимать значение null, если значение не представляет кривую.
            </summary>
      <param name="geographyValue">
                Значение geography не должны представлять кривой.
              </param>
      <returns>
              Конечная точка <paramref name="geographyValue" />, если он представляет кривую; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetEndPoint(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает <see cref="T:System.Data.Spatial.DbGeometry" /> значение, представляющее конечную точку заданного значения DbGeometry, который может принимать значение null, если значение не представляет кривую.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет кривую.
              </param>
      <returns>
              Конечная точка <paramref name="geometryValue" />, если он представляет кривую; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetEnvelope(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает конверте (минимального ограничивающего прямоугольника) данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение в качестве значения geometry.
            </summary>
      <param name="geometryValue">
                Значение геометрического объекта, для которого должно быть получено значение конверта.
              </param>
      <returns>
              Конверт <paramref name="geometryValue" />, как <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetExteriorRing(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает <see cref="T:System.Data.Spatial.DbGeometry" /> значение, представляющее внешнее кольцо заданное значение DbGeometry, который может принимать значение null, если значение представляет собой многоугольник.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет многоугольник.
              </param>
      <returns>
              Значение DbGeometry, представляющий внешнее кольцо в <paramref name="geometryValue" />, если он представляет собой многоугольник; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetInteriorRingCount(System.Data.Spatial.DbGeometry)">
      <summary>
               Возвращает число внутреннюю кольцами в данной <see cref="T:System.Data.Spatial.DbGeometry" /> значение, если он представляет собой многоугольник.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет многоугольник.
              </param>
      <returns>
              Число элементов в <paramref name="geometryValue" />, если он представляет собой многоугольник; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetIsClosed(System.Data.Spatial.DbGeography)">
      <summary>
               Возвращает логическое значение, допускающие значения NULL, следует ли данного <see cref="T:System.Data.Spatial.DbGeography" /> значение закрывается, который может принимать значение null, если значение не представляет кривую.
            </summary>
      <param name="geographyValue">
                Значение geography не должны представлять кривой.
              </param>
      <returns>
              <see langword="true" /> Если заданный <see cref="T:System.Data.Spatial.DbGeography" /> закрыт; в противном случае — значение <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetIsClosed(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает логическое значение, допускающие значения NULL, следует ли данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение закрывается, который может принимать значение null, если значение не представляет кривую.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет кривую.
              </param>
      <returns>
              <see langword="true" /> Если заданный <see cref="T:System.Data.Spatial.DbGeography" /> закрыт; в противном случае — значение <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetIsEmpty(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает логическое значение, допускающее значение null, которое указывает, является ли заданное значение <see cref="T:System.Data.Spatial.DbGeography" /> пустым.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <returns>
              Значение <see langword="true" />, если заданное значение <see cref="T:System.Data.Spatial.DbGeography" /> пустое; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetIsEmpty(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает логическое значение, допускающее значение null, которое указывает, является ли заданное значение <see cref="T:System.Data.Spatial.DbGeometry" /> пустым.
            </summary>
      <param name="geometryValue">
                Значение типа geometry.
              </param>
      <returns>
              Значение <see langword="true" />, если заданное значение <see cref="T:System.Data.Spatial.DbGeometry" /> пустое; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetIsRing(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает логическое значение, допускающие значения NULL, следует ли данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение — кольца, которое может принимать значение null, если значение не представляет кривую.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет кривую.
              </param>
      <returns>
              <see langword="true" /> Если заданный <see cref="T:System.Data.Spatial.DbGeometry" /> значение является кольцом; в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetIsSimple(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает логическое значение, допускающие значения NULL, следует ли данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение прост.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              <see langword="true" /> Если заданный <see cref="T:System.Data.Spatial.DbGeometry" /> простой, в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetIsValid(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает логическое значение, допускающие значения NULL, будет ли данный <see cref="T:System.Data.Spatial.DbGeometry" /> имеет допустимое значение.
            </summary>
      <param name="geometryValue">
                Значение geometry.
              </param>
      <returns>
              <see langword="true" /> Если заданный <see cref="T:System.Data.Spatial.DbGeometry" /> значение является допустимым; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetLatitude(System.Data.Spatial.DbGeography)">
      <summary>
               Возвращает координаты широты данного <see cref="T:System.Data.Spatial.DbGeography" /> значение, если он представляет точку.
            </summary>
      <param name="geographyValue">
                Значение geography не нужны для представления точки.
              </param>
      <returns>
              Координаты широты данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetLength(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает значение NULL значение типа double, указывающее длину данного <see cref="T:System.Data.Spatial.DbGeography" /> значение, которое может принимать значение null, если значение не представляет кривую.
            </summary>
      <param name="geographyValue">
                Значение geography не должны представлять кривой.
              </param>
      <returns>
              Длина данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetLength(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает значение NULL значение типа double, указывающее длину данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение, которое может принимать значение null, если значение не представляет кривую.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет кривую.
              </param>
      <returns>
              Длина данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetLongitude(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает координату долготы данного <see cref="T:System.Data.Spatial.DbGeography" /> значение, если он представляет точку.
            </summary>
      <param name="geographyValue">
                Значение geography не нужны для представления точки.
              </param>
      <returns>
              Долгота координата данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetMeasure(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает координату M (Мера) данного <see cref="T:System.Data.Spatial.DbGeography" /> значение, если он представляет точку.
            </summary>
      <param name="geographyValue">
                Значение geography не нужны для представления точки.
              </param>
      <returns>
              Координата M (Мера) данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetMeasure(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает координату M (Мера) данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение, если он представляет точку.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет точку.
              </param>
      <returns>
              Координата M (Мера) данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetPointCount(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает количество точек в данной <see cref="T:System.Data.Spatial.DbGeography" /> значение, если он представляет linestring или линейной кольцо.
            </summary>
      <param name="geographyValue">
                Значение geography требуется представляет linestring или линейной кольца.
              </param>
      <returns>
              Количество точек в данной <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetPointCount(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает количество точек в заданном значении <see cref="T:System.Data.Spatial.DbGeometry" />, если он представляет тип linestring или линейное кольцо.
            </summary>
      <param name="geometryValue">
                Геометрическое значение, которое не должно представлять тип linestring или линейное кольцо.
              </param>
      <returns>
              Количество точек в заданном значении <see cref="T:System.Data.Spatial.DbGeometry" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  geometryValue
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetPointOnSurface(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает <see cref="T:System.Data.Spatial.DbGeometry" /> значение, представляющее точку в области заданного значения DbGeometry, который может принимать значение null, если значение не представляет рабочую область.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет рабочую область.
              </param>
      <returns>
              A <see cref="T:System.Data.Spatial.DbGeometry" /> значение, представляющее точку на поверхности заданное значение DbGeometry.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetSpatialTypeName(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает значение, указывающее имя пространственного типа данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </summary>
      <param name="geographyValue">
                Значение geography.
              </param>
      <returns>
              Имя пространственного типа данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetSpatialTypeName(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает значение, указывающее имя пространственного типа заданного значения <see cref="T:System.Data.Spatial.DbGeometry" />.
            </summary>
      <param name="geometryValue">
                Значение типа geometry.
              </param>
      <returns>
              Имя пространственного типа заданного значения <see cref="T:System.Data.Spatial.DbGeometry" />.
            </returns>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetStartPoint(System.Data.Spatial.DbGeography)">
      <summary>
              Возвращает <see cref="T:System.Data.Spatial.DbGeography" /> значение, представляющее начальную точку заданного значения DbGeography, который может принимать значение null, если значение не представляет кривую.
            </summary>
      <param name="geographyValue">
                Значение geography не должны представлять кривой.
              </param>
      <returns>
              Начальную точку данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetStartPoint(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает <see cref="T:System.Data.Spatial.DbGeometry" /> значение, представляющее начальную точку заданного значения DbGeometry, который может принимать значение null, если значение не представляет кривую.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет кривую.
              </param>
      <returns>
              Начальную точку данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetXCoordinate(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает координату X данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение, если он представляет точку.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет точку.
              </param>
      <returns>
              Координата X данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.GetYCoordinate(System.Data.Spatial.DbGeometry)">
      <summary>
              Возвращает координату Y данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение, если он представляет точку.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет точку.
              </param>
      <returns>
              Координата по оси Y данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.InteriorRingAt(System.Data.Spatial.DbGeometry,System.Int32)">
      <summary>
              Возвращает внутреннее кольцо из данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение, если он представляет собой многоугольник.
            </summary>
      <param name="geometryValue">
                Значение geometry требуется представляет многоугольник.
              </param>
      <param name="index">
                Позиция в значение geometry, из которой должны быть взяты элемента.
              </param>
      <returns>
              Внутреннее кольцо <paramref name="geometryValue" /> позиции <paramref name="index" />, если он представляет собой многоугольник; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Intersection(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
      <summary>
              Вычисляет пересечение двух <see cref="T:System.Data.Spatial.DbGeography" /> значения.
            </summary>
      <param name="geographyValue">
                Первое значение geography.
              </param>
      <param name="otherGeography">
                Второе значение geography.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> значение, представляющее собой пересечение <paramref name="geographyValue" /> и <paramref name="otherGeography" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Intersection(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Вычисляет пересечение двух <see cref="T:System.Data.Spatial.DbGeometry" /> значения.
            </summary>
      <param name="geometryValue">
                Первое значение geometry.
              </param>
      <param name="otherGeometry">
                Второе значение geometry.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение, представляющее собой пересечение <paramref name="geometryValue" /> и <paramref name="otherGeometry" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Intersects(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
      <summary>
              Определяет ли получает два <see cref="T:System.Data.Spatial.DbGeography" /> значения пространственно intersect.
            </summary>
      <param name="geographyValue">
                Первое значение geography для сравнения для пересечения.
              </param>
      <param name="otherGeography">
                Второе значение geography для сравнения для пересечения.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="geographyValue" /> пересекается с <paramref name="otherGeography" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Intersects(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Определяет ли получает два <see cref="T:System.Data.Spatial.DbGeometry" /> значения пространственно intersect.
            </summary>
      <param name="geometryValue">
                Первое значение geometry для сравнения для пересечения.
              </param>
      <param name="otherGeometry">
                Второе сравниваемое для пересечения значение geometry.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="geometryValue" /> пересекается с <paramref name="otherGeometry" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Overlaps(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Определяет ли получает два <see cref="T:System.Data.Spatial.DbGeometry" /> значения пространственно перекрываются.
            </summary>
      <param name="geometryValue">
                Первое значение geometry.
              </param>
      <param name="otherGeometry">
                Второе значение geometry.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="geometryValue" /> перекрывается <paramref name="otherGeometry" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.PointAt(System.Data.Spatial.DbGeography,System.Int32)">
      <summary>
              Возвращает элемент точки данного <see cref="T:System.Data.Spatial.DbGeography" /> значение, если он представляет linestring или линейной кольцо.
            </summary>
      <param name="geographyValue">
                Значение geography требуется представляет linestring или линейной кольца.
              </param>
      <param name="index">
                Позиция в значение geography, из которой должны быть взяты элемента.
              </param>
      <returns>
              Точка в <paramref name="geographyValue" /> позиции <paramref name="index" />, если он представляет linestring или линейной кольцо; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.PointAt(System.Data.Spatial.DbGeometry,System.Int32)">
      <summary>
              Возвращает элемент точки данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение, если он представляет linestring или линейной кольцо.
            </summary>
      <param name="geometryValue">
                Геометрическое значение, которое не должно представлять тип linestring или линейное кольцо.
              </param>
      <param name="index">
                Позиция в значение geometry, из которой должны быть взяты элемента.
              </param>
      <returns>
              Точка в <paramref name="geometryValue" /> позиции <paramref name="index" />, если он представляет linestring или линейной кольцо; в противном случае <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Relate(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry,System.String)">
      <summary>
              Определяет ли получает два <see cref="T:System.Data.Spatial.DbGeometry" /> значения пространственной связи в соответствии с данным шаблоном пересечение модель "девять пересечения многомерно расширенных" (DE-9IM).
            </summary>
      <param name="geometryValue">
                Первое значение geometry.
              </param>
      <param name="otherGeometry">
                Значение geometry, следует сравнивать с первым значением геометрического объекта для отношения.
              </param>
      <param name="matrix">
                Строка, содержащая текстовое представление шаблон пересечения (DE-9IM), который определяет отношение.
              </param>
      <returns>
              <see langword="true" /> Если этот <paramref name="geometryValue" /> значение относится к <paramref name="otherGeometry" /> согласно матрице пересечение заданного шаблона; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                  <paramref name="matrix" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.SpatialEquals(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
      <summary>
              Определяет, является ли получает два <see cref="T:System.Data.Spatial.DbGeography" /> пространственно значения равны.
            </summary>
      <param name="geographyValue">
                Первое значение geography для сравнения на равенство.
              </param>
      <param name="otherGeography">
                Второе значение geography для сравнения на равенство.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="geographyValue" /> пространственно равен <paramref name="otherGeography" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.SpatialEquals(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Определяет, является ли получает два <see cref="T:System.Data.Spatial.DbGeometry" /> пространственно значения равны.
            </summary>
      <param name="geometryValue">
                Первое значение geometry для сравнения на равенство.
              </param>
      <param name="otherGeometry">
                Второе значение geometry для сравнения на равенство.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="geometryValue" /> пространственно равен <paramref name="otherGeometry" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.SymmetricDifference(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
      <summary>
              Вычисляет симметричной разницы двух <see cref="T:System.Data.Spatial.DbGeography" /> значения.
            </summary>
      <param name="geographyValue">
                Первое значение geography.
              </param>
      <param name="otherGeography">
                Второе значение geography.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> значение, представляющее симметричной разницы <paramref name="geographyValue" /> и <paramref name="otherGeography" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.SymmetricDifference(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Вычисляет симметричной разницы между двумя <see cref="T:System.Data.Spatial.DbGeometry" /> значениями.
            </summary>
      <param name="geometryValue">
                Первое значение geometry.
              </param>
      <param name="otherGeometry">
                Второе значение geometry.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение, представляющее симметричную разницу между <paramref name="geometryValue" /> и <paramref name="otherGeometry" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Touches(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Определяет ли получает два <see cref="T:System.Data.Spatial.DbGeometry" /> значения пространственно touch.
            </summary>
      <param name="geometryValue">
                Первое значение geometry.
              </param>
      <param name="otherGeometry">
                Второе значение geometry.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="geometryValue" /> касается <paramref name="otherGeometry" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Union(System.Data.Spatial.DbGeography,System.Data.Spatial.DbGeography)">
      <summary>
              Вычисляет объединение двух <see cref="T:System.Data.Spatial.DbGeography" /> значения.
            </summary>
      <param name="geographyValue">
                Первое значение geography.
              </param>
      <param name="otherGeography">
                Второе значение geography.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeography" /> значение, представляющее объединение <paramref name="geographyValue" /> и <paramref name="otherGeography" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geographyValue" />
                  <paramref name="otherGeography" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Union(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Вычисляет объединение двух <see cref="T:System.Data.Spatial.DbGeometry" /> значения.
            </summary>
      <param name="geometryValue">
                Первое значение geometry.
              </param>
      <param name="otherGeometry">
                Второе значение geometry.
              </param>
      <returns>
              Новый <see cref="T:System.Data.Spatial.DbGeometry" /> значение, представляющее объединение <paramref name="geometryValue" /> и <paramref name="otherGeometry" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.Spatial.DbSpatialServices.Within(System.Data.Spatial.DbGeometry,System.Data.Spatial.DbGeometry)">
      <summary>
              Определяет, является ли один <see cref="T:System.Data.Spatial.DbGeometry" /> значение пространственно находится внутри другого.
            </summary>
      <param name="geometryValue">
                Первое значение geometry.
              </param>
      <param name="otherGeometry">
                Второе значение geometry.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="geometryValue" /> находится в пределах <paramref name="otherGeometry" />; в противном случае <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="geometryValue" />
                  <paramref name="otherGeometry" />
                </exception>
    </member>
    <member name="M:System.Data.UpdateException.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.UpdateException" />.
            </summary>
    </member>
    <member name="M:System.Data.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Data.UpdateException" /> сериализованными данными.
            </summary>
      <param name="info">
                Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные объекта о созданном исключении.
              </param>
      <param name="context">
                Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.
              </param>
    </member>
    <member name="M:System.Data.UpdateException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.UpdateException" />, содержащий специальное сообщение об ошибке.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
    </member>
    <member name="M:System.Data.UpdateException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.UpdateException" />, содержащий указанное сообщение об ошибке и ссылку на внутреннее исключение, вызвавшее это исключение.
            </summary>
      <param name="message">
                Сообщение об ошибке, указывающее причину создания исключения.
              </param>
      <param name="innerException">
                Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.
              </param>
    </member>
    <member name="M:System.Data.UpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Data.UpdateException" />, содержащий заданное сообщение об ошибке, ссылку на внутреннее исключение и перечислимую коллекцию объектов <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </summary>
      <param name="message">
                Сообщение об ошибке, указывающее причину создания исключения.
              </param>
      <param name="innerException">
                Исключение, вызвавшее текущее исключение, или пустая ссылка (<see langword="Nothing" /> в Visual Basic), если внутреннее исключение не задано.
              </param>
      <param name="stateEntries">
                Коллекция объектов <see cref="T:System.Data.Objects.ObjectStateEntry" />.
              </param>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbAggregate.Arguments">
      <summary>
              Возвращает список выражений, которые определяют аргументы для объекта <see cref="T:System.Data.Common.CommandTrees.DbAggregate" />.
            </summary>
      <returns>
              Список выражений, которые определяют аргументы для объекта <see cref="T:System.Data.Common.CommandTrees.DbAggregate" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbAggregate.ResultType">
      <summary>
              Возвращает тип результата статистического выражения <see cref="T:System.Data.Common.CommandTrees.DbAggregate" />.
            </summary>
      <returns>
              Тип результата статистического выражения <see cref="T:System.Data.Common.CommandTrees.DbAggregate" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbApplyExpression.Apply">
      <summary>
              Возвращает параметр <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, указывающий на функцию, которая вызывается для каждого элемента во входном наборе.
            </summary>
      <returns>
              Параметр <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, указывающий на функцию, которая вызывается для каждого элемента во входном наборе.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbApplyExpression.Input">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbArithmeticExpression.Arguments">
      <summary>
              Получает список <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> элементов, определяющих текущие аргументы.
            </summary>
      <returns>
              Список фиксированного размера <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> элементы.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left">
      <summary>
              Возвращает или задает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее левый аргумент.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее левый аргумент.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд выражения <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />,
                
                  или его результирующий тип не совпадает с типом, необходимым для левого аргумента, и не может быть повышен до нужного типа.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right">
      <summary>
              Возвращает или задает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее правый аргумент.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее правый аргумент.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд выражения <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" />,
                
                  или его результирующий тип не совпадает с типом, необходимым для правого аргумента, и не может быть повышен до нужного типа.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbCaseExpression.Else">
      <summary>
              Возвращает или задает <see langword="Else" /> это предложение <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.
            </summary>
      <returns>
              <see langword="Else" /> Это предложение <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд выражения <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />,
                
                  или тип его результата не совпадает с типом результатов выражения <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" /> и не может быть повышен до этого типа.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbCaseExpression.Then">
      <summary>
              Возвращает <see langword="Then" /> предложения данного <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.
            </summary>
      <returns>
              <see langword="Then" /> Предложения данного <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbCaseExpression.When">
      <summary>
              Возвращает <see langword="When" /> предложения данного <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.
            </summary>
      <returns>
              <see langword="When" /> Предложения данного <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters">
      <summary>
              Возвращает имя и соответствующий тип каждого параметра, ссылку на который можно указать в рамках этого класса <see cref="T:System.Data.Common.CommandTrees.DbCommandTree" />.
            </summary>
      <returns>
              Имя и соответствующий тип каждого параметра, ссылку на который можно указать в рамках этого класса <see cref="T:System.Data.Common.CommandTrees.DbCommandTree" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbConstantExpression.Value">
      <summary>
              Возвращает значение константы.
            </summary>
      <returns>
              Значение константы.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbCrossJoinExpression.Inputs">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> список, который предоставляет входные наборы для соединения.
            </summary>
      <returns>
              A <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> список, который предоставляет входные наборы для соединения.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbDeleteCommandTree.Predicate">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, указывающее предикат, который используется для определения удаляемых элементов целевой коллекции.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, указывающее предикат, который используется для определения удаляемых элементов целевой коллекции.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind">
      <summary>
              Возвращает тип выражения, который указывает операцию этого выражения.
            </summary>
      <returns>
              Тип выражения, который указывает операцию этого выражения.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpression.ResultType">
      <summary>
              Возвращает тип метаданных для результирующего типа выражения.
            </summary>
      <returns>
              Тип метаданных для результирующего типа выражения.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpressionBinding.Expression">
      <summary>
              Возвращает или задает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее входной набор.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее входной набор.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Это выражение не связано с деревом команд привязки, а тип его результата отличается от типа результата текущего значения и не может быть повышен до него.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpressionBinding.Variable">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> ссылается на переменную элемента.
            </summary>
      <returns>
              Ссылка на переменную.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpressionBinding.VariableName">
      <summary>
              Возвращает имя, присвоенное переменной элемента.
            </summary>
      <returns>
              Имя, присвоенное переменной элемента.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbExpressionBinding.VariableType">
      <summary>
              Возвращает метаданные типа переменной элемента.
            </summary>
      <returns>
              Метаданные типа переменной элемента.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFilterExpression.Input">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFilterExpression.Predicate">
      <summary>
              Возвращает или задает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, которое указывает предикат, используемый для фильтрации набора входных данных.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, которое указывает предикат, используемый для фильтрации набора входных данных.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />, или его результирующий тип не <see langword="Boolean" /> типа.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionAggregate.Distinct">
      <summary>
              Возвращает значение, показывающее, является ли это статистическое выражение уникальным.
            </summary>
      <returns>
              <see langword="true" /> Если статистическое выражение является уникальным; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionAggregate.Function">
      <summary>
              Возвращает метаданные метода, которые задают вызываемую агрегатную функцию.
            </summary>
      <returns>
              Метаданные метода, которые задают вызываемую агрегатную функцию.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionCommandTree.EdmFunction">
      <summary>
              Возвращает объект <see cref="T:System.Data.Metadata.Edm.EdmFunction" />, который представляет вызываемую функцию.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EdmFunction" />, который представляет вызываемую функцию.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionCommandTree.ResultType">
      <summary>
              Возвращает ожидаемый тип результата для первого результирующего набора функции.
            </summary>
      <returns>
              Ожидаемый тип результата для первого результирующего набора функции.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionExpression.Arguments">
      <summary>
              Возвращает список <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, предоставляющий аргументы функции.
            </summary>
      <returns>
              Список <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, предоставляющий аргументы функции.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbFunctionExpression.Function">
      <summary>
              Возвращает метаданные вызываемой функции.
            </summary>
      <returns>
              Метаданные вызываемой функции.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbAggregate" /> список, который предоставляет применяемые статистические функции.
            </summary>
      <returns>
              A <see cref="T:System.Data.Common.CommandTrees.DbAggregate" /> список, который предоставляет применяемые статистические функции.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupByExpression.Input">
      <summary>
              Возвращает объект <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />, указывающий входной набор и предоставляющий доступ к переменным элементов набора и группы.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />, указывающий входной набор и предоставляющий доступ к переменным элементов набора и группы.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupByExpression.Keys">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> список, содержащий ключи группирования.
            </summary>
      <returns>
              A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> список, содержащий ключи группирования.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Expression">
      <summary>
              Возвращает или задает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее входной набор.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее входной набор.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд объекта <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />, или тип его результата не совпадает с типом результата текущего значения свойства и не может быть повышен до этого типа.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupAggregate">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbGroupAggregate" /> представляющий коллекцию элементов в группе.
            </summary>
      <returns>
              Элементы в группе.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariable">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> ссылающийся переменной элемента группы.
            </summary>
      <returns>
              Ссылка для переменной элемента группы.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableName">
      <summary>
              Возвращает имя, присвоенное переменной элемента группы.
            </summary>
      <returns>
              Имя, присвоенное переменной элемента группа.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariableType">
      <summary>
              Возвращает метаданные типа для переменной элемента группы.
            </summary>
      <returns>
              Метаданные типа для переменной элемента группы.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Variable">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> ссылается на переменную элемента.
            </summary>
      <returns>
              Ссылка на переменную элемента.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.VariableName">
      <summary>
              Возвращает имя, присвоенное переменной элемента.
            </summary>
      <returns>
              Имя, присвоенное переменной элемента.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.VariableType">
      <summary>
              Возвращает метаданные типа переменной элемента.
            </summary>
      <returns>
              Метаданные типа переменной элемента.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbInsertCommandTree.Returning">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, задающее проекцию результатов, которые будут возвращены, на основе измененных строк. 
            </summary>
      <returns>
              <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> Задающее проекцию результатов, которые должны быть возвращены с учетом измененных строк.
              <see langword="null" /> Указывает, что результаты не должно возвращаться при выполнении этой команды.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbInsertCommandTree.SetClauses">
      <summary>
              Возвращает список предложений insert set, используемых в определении операции вставки.
            </summary>
      <returns>
              Список предложений insert set, используемых в определении операции вставки.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbIsOfExpression.OfType">
      <summary>
              Возвращает метаданные типа, с которыми должны сравниваться метаданные типа аргумента.
            </summary>
      <returns>
              Метаданные типа, с которыми должны сравниваться метаданные типа аргумента.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbJoinExpression.JoinCondition">
      <summary>
              Возвращает или задает применяемое условие соединения.
            </summary>
      <returns>
              Применяемое условие соединения.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, или его результирующий тип не <see langword="Boolean" /> типа.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbJoinExpression.Left">
      <summary>
              Возвращает экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, предоставляющий левый вход.
            </summary>
      <returns>
              Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, предоставляющий левый вход.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbJoinExpression.Right">
      <summary>
              Возвращает экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, предоставляющий правый вход.
            </summary>
      <returns>
              Экземпляр <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, предоставляющий правый вход.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLambda.Body">
      <summary>
              Возвращает тело лямбда-выражения.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> представляющий тело лямбда-функции.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLambda.Variables">
      <summary>
              Возвращает параметры лямбда-выражения.
            </summary>
      <returns>
              Список параметров функции лямбда-выражения, представлены в виде объектов DbVariableReferenceExpression.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLambdaExpression.Arguments">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> список, который содержит аргументы, к которым должна применяться лямбда-функции.
            </summary>
      <returns>
              <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> Список.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLambdaExpression.Lambda">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> представляет лямбда-функции, применяемые этого выражения.
            </summary>
      <returns>
              <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> Представляет лямбда-функции, применяемые этого выражения.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLikeExpression.Argument">
      <summary>
              Возвращает или задает выражение, которое указывает строку для сравнения с данным шаблоном.
            </summary>
      <returns>
              Выражение, которое указывает строку для сравнения с данным шаблоном.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, или тип его результата отличен от строкового.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLikeExpression.Escape">
      <summary>
              Возвращает или задает выражение, которое предоставляет необязательную экранирующую строку для использования в сравнении.
            </summary>
      <returns>
              Выражение, которое предоставляет необязательную экранирующую строку для использования в сравнении.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, или тип его результата отличен от строкового.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLikeExpression.Pattern">
      <summary>
              Возвращает или задает выражение, которое указывает шаблон, с которым должна сравниваться данная строка.
            </summary>
      <returns>
              Выражение, которое указывает шаблон, с которым должна сравниваться данная строка.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, или тип его результата отличен от строкового.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLimitExpression.Argument">
      <summary>
              Возвращает или задает выражение, определяющее входную коллекцию.
            </summary>
      <returns>
              Выражение, определяющее входную коллекцию.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />, или типом его результата не является коллекция.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLimitExpression.Limit">
      <summary>
              Возвращает или задает выражение, которое ограничивающее количество элементов, возвращаемых из входной коллекции.
            </summary>
      <returns>
              Выражение, ограничивающее количество элементов, возвращаемых из входной коллекции.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Это выражение не связано с деревом команд <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />, не является одним из выражений <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> или <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> либо тип его результата не равен или не может быть повышен до 64-разрядного целочисленного типа.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbLimitExpression.WithTies">
      <summary>
              Возвращает значение, которое указывает, будет ли операция ограничения затрагивать связанные результаты.
               Включение связанных результатов может привести к получению большего количества результатов, чем указано значением <see cref="P:System.Data.Common.CommandTrees.DbLimitExpression.Limit" />.
            </summary>
      <returns>
              <see langword="true" /> Если операция ограничения будет затрагивать связанные результаты; в противном случае — <see langword="false" />.
               Значение по умолчанию — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbModificationCommandTree.Target">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, которое определяет целевую таблицу для операции языка обработки данных (DML).
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, которое определяет целевую таблицу для операции DML.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbNewInstanceExpression.Arguments">
      <summary>
              Возвращает список <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> значений «свойство-столбец» или элементов набора для нового экземпляра.
            </summary>
      <returns>
              Список <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> значений «свойство-столбец» или элементов набора для нового экземпляра.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbOfTypeExpression.OfType">
      <summary>
              Возвращает метаданные типа элементов, которые должны быть получены из аргумента набора.
            </summary>
      <returns>
              Метаданные типа элементов, которые должны быть получены из аргумента набора.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbParameterReferenceExpression.ParameterName">
      <summary>
              Возвращает имя упоминаемого параметра.
            </summary>
      <returns>
              Имя упоминаемого параметра.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbProjectExpression.Input">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbProjectExpression.Projection">
      <summary>
              Возвращает или задает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее проекцию.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее проекцию.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />, или тип его результата не равен или не может быть повышен до ссылочного типа текущей проекции.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbPropertyExpression.Instance">
      <summary>
              Возвращает или задает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> определяющее экземпляр, из которого требуется извлечь свойство.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> определяющее экземпляр, из которого требуется извлечь свойство.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Это выражение не связано с деревом команд выражения <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />, либо тип его результата не равен и не может быть повышен до типа, определяющего свойство.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbPropertyExpression.Property">
      <summary>
              Возвращает метаданные получаемого свойства.
            </summary>
      <returns>
              Метаданные получаемого свойства.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Input">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Predicate">
      <summary>
              Возвращает или задает <see langword="Boolean" /> предикат, который должен вычисляться для каждого элемента во входном наборе.
            </summary>
      <returns>
              <see langword="Boolean" /> Предикат, который должен вычисляться для каждого элемента во входном наборе.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд для выражения <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />,
                
                  или его результирующий тип не <see langword="Boolean" /> типа.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> определяющее логику операции запроса.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее логику операции запроса.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение связано с другим деревом команд.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbRefExpression.EntitySet">
      <summary>
              Возвращает метаданные для набора сущностей, содержащего экземпляр.
            </summary>
      <returns>
              Метаданные для набора сущностей, содержащего экземпляр.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateFrom">
      <summary>
              Возвращает метаданные для элемента связи, от которого должен быть выполнен переход.
            </summary>
      <returns>
              Метаданные для элемента связи, от которого должен быть выполнен переход.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateTo">
      <summary>
              Возвращает метаданные для элемента связи, к которому должен быть выполнен переход.
            </summary>
      <returns>
              Метаданные для элемента связи, к которому должен быть выполнен переход.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigationSource">
      <summary>
              Возвращает или задает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, которое указывает начальную точку перехода и должно представлять собой ссылку на экземпляр сущности.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, указывающее экземпляр исходного элемента связи, от которого должен происходить переход.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />, или его тип результата не равен ссылочному типу свойства <see cref="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.NavigateFrom" /> либо повышен до него.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.Relationship">
      <summary>
              Возвращает метаданные для связи, по которой выполняется переход.
            </summary>
      <returns>
              Метаданные для связи, по которой выполняется переход.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbScanExpression.Target">
      <summary>
              Возвращает метаданные упоминаемого набора сущностей или связей.
            </summary>
      <returns>
              Метаданные упоминаемого набора сущностей или связей.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSetClause.Property">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, которое определяет свойство, подлежащее обновлению.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, которое определяет свойство, подлежащее обновлению.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSetClause.Value">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, которое определяет новое значение обновляемого свойства.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, которое определяет новое значение обновляемого свойства.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSkipExpression.Count">
      <summary>
              Возвращает или задает выражение, указывающее, сколько элементов входной коллекции нужно пропустить.
            </summary>
      <returns>
              Выражение, указывающее, сколько элементов входной коллекции нужно пропустить.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />. Оно не является ни выражением <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />, ни выражением <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />;
                
                   или его результирующий тип не равен 64-разрядному целочисленному типу и не может быть до него повышен.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSkipExpression.Input">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSkipExpression.SortOrder">
      <summary>
              Возвращает список <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />, определяющий порядок сортировки.
            </summary>
      <returns>
              Список <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />, определяющий порядок сортировки.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSortClause.Ascending">
      <summary>
              Возвращает логическое значение, указывающее, используется ли для этого ключа восходящий порядок сортировки.
            </summary>
      <returns>
              <see langword="true" /> Если для этого ключа используется восходящий порядок сортировки. в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSortClause.Collation">
      <summary>
              Возвращает строковое значение, представляющее собой параметры сортировки для данного ключа сортировки.
            </summary>
      <returns>
              Строковое значение, представляющее собой параметры сортировки для данного ключа сортировки.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSortClause.Expression">
      <summary>
              Возвращает или задает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, предоставляющее значение для указанного ключа сортировки.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, предоставляющее значение для указанного ключа сортировки.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSortExpression.Input">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, задающее входной набор.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbSortExpression.SortOrder">
      <summary>
              Возвращает список <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />, определяющий порядок сортировки.
            </summary>
      <returns>
              Список <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />, определяющий порядок сортировки.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument">
      <summary>
              Возвращает или задает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее аргумент.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, определяющее аргумент.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Выражение является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Выражение не связано с деревом команд объекта <see cref="T:System.Data.Common.CommandTrees.DbUnaryExpression" />, или тип его результата не совпадает с типом, требуемым для аргумента, и не может быть повышен до этого типа.
                </exception>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.Predicate">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, которое указывает предикат, используемый для определения того, какие элементы целевой коллекции должны быть обновлены.
            </summary>
      <returns>
              Выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, которое указывает предикат, используемый для определения того, какие элементы целевой коллекции должны быть обновлены.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.Returning">
      <summary>
              Возвращает выражение <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, которое указывает проекцию результатов, подлежащих возврату, с учетом измененных строк.
            </summary>
      <returns>
              <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> Задающее проекцию результатов, возвращаемых на основании измененных строк.
              <see langword="null" /> Указывает, что результаты не должно возвращаться при выполнении этой команды.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbUpdateCommandTree.SetClauses">
      <summary>
              Возвращает список предложений набора обновлений, который определяет операцию обновления.
            </summary>
      <returns>
              Список предложений набора обновлений, который определяет операцию обновления.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.DbVariableReferenceExpression.VariableName">
      <summary>
              Возвращает имя упоминаемой переменной.
            </summary>
      <returns>
              Имя упоминаемой переменной.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> с логическим значением <see langword="false" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> с логическим значением <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True">
      <summary>
              Возвращает <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> с логическим значением <see langword="true" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> с логическим значением <see langword="true" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.DataRecordInfo.FieldMetadata">
      <summary>
              Возвращает <see cref="T:System.Data.Common.FieldMetadata" /> для этого объекта <see cref="P:System.Data.IExtendedDataRecord.DataRecordInfo" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Common.FieldMetadata" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.DataRecordInfo.RecordType">
      <summary>
              Получает сведения о типе для этого объекта в виде объекта <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
            </summary>
      <returns>
              Значение <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
            </returns>
    </member>
    <member name="P:System.Data.Common.DbProviderManifest.NamespaceName">
      <summary>
              Возвращает пространство имен, используемое манифестом этого поставщика.
            </summary>
      <returns>
              Пространство имен, используемое манифестом этого поставщика.
            </returns>
    </member>
    <member name="P:System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName">
      <summary>
              Возвращает имя пространства имен, поддерживаемое манифестом этого поставщика.
            </summary>
      <returns>
              Имя пространства имен, поддерживаемое манифестом этого поставщика.
            </returns>
    </member>
    <member name="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType">
      <summary>
              Возвращает наилучший эквивалент сопоставления типа модели EDM с заданным по имени типом хранения.
            </summary>
      <returns>
              Наилучший эквивалент сопоставления типа модели EDM для заданного по имени типа хранения.
            </returns>
    </member>
    <member name="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType">
      <summary>
              Возвращает наилучший эквивалент типа-примитива хранения, сопоставленный с заданным именем типа хранения.
            </summary>
      <returns>
              Наилучший эквивалент типа-примитива хранения, сопоставленный с заданным именем типа хранения.
            </returns>
    </member>
    <member name="P:System.Data.Common.EntityRecordInfo.EntityKey">
      <summary>
              Возвращает <see cref="T:System.Data.EntityKey" /> для сущности.
            </summary>
      <returns>
              Ключ сущности.
            </returns>
    </member>
    <member name="P:System.Data.Common.EntitySql.FunctionDefinition.EndPosition">
      <summary>
               Конечное положение определения функции в тексте запроса eSQL.
            </summary>
    </member>
    <member name="P:System.Data.Common.EntitySql.FunctionDefinition.Lambda">
      <summary>
               Тело функции и параметры.
            </summary>
    </member>
    <member name="P:System.Data.Common.EntitySql.FunctionDefinition.Name">
      <summary>
               Имя функции.
            </summary>
    </member>
    <member name="P:System.Data.Common.EntitySql.FunctionDefinition.StartPosition">
      <summary>
               Начальное положение определения функции в тексте запроса eSQL.
            </summary>
    </member>
    <member name="P:System.Data.Common.EntitySql.ParseResult.CommandTree">
      <summary>
               Дерево команд, созданных во время синтаксического анализа.
            </summary>
    </member>
    <member name="P:System.Data.Common.EntitySql.ParseResult.FunctionDefinitions">
      <summary>
               Список <see cref="T:System.Data.Common.EntitySql.FunctionDefinition" /> объектов, описывающих определения встроенных функций запроса.
            </summary>
    </member>
    <member name="P:System.Data.Common.FieldMetadata.FieldType">
      <summary>
              Возвращает тип поля для объекта <see cref="T:System.Data.Common.FieldMetadata" />.
            </summary>
      <returns>
              Тип поля для этого <see cref="T:System.Data.Common.FieldMetadata" /> объекта.
            </returns>
    </member>
    <member name="P:System.Data.Common.FieldMetadata.Ordinal">
      <summary>
              Возвращает порядковый номер для объекта <see cref="T:System.Data.Common.FieldMetadata" />.
            </summary>
      <returns>
              Целое число, представляющее порядковый номер.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.CommandText">
      <summary>
              Возвращает или задает инструкцию Entity SQL, которая определяет команду или хранимую процедуру, подлежащую выполнению.
            </summary>
      <returns>
              Инструкция Entity SQL, которая определяет команду или хранимую процедуру для выполнения.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.CommandTimeout">
      <summary>
              Возвращает или задает интервал времени, которое должно пройти до истечения времени ожидания.
            </summary>
      <returns>
              Время в секундах, в течение которого должно происходить ожидание выполнения команды.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.CommandTree">
      <summary>
              Возвращает или задает дерево команд для выполнения; только одно дерево команд или текст команды можно задать, не оба.
            </summary>
      <returns>
              Дерево команд для выполнения.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.CommandType">
      <summary>
              Возвращает или задает значение, которое указывает, как должно интерпретироваться свойство <see cref="P:System.Data.EntityClient.EntityCommand.CommandText" />.
            </summary>
      <returns>
              Одно из значений перечисления <see cref="T:System.Data.CommandType" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.Connection">
      <summary>
              Возвращает или задает <see cref="T:System.Data.EntityClient.EntityConnection" /> используется <see cref="T:System.Data.EntityClient.EntityCommand" />.
            </summary>
      <returns>
              Соединение, используемое командой сущности.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.DesignTimeVisible">
      <summary>
              Возвращает или задает значение, которое указывает, должен ли объект команды быть видимым в элементе управления конструктора Windows Form.
            </summary>
      <returns>
              <see langword="true" /> Если объект команды должен быть видимым в элементе управления конструктора Windows Forms; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.EnablePlanCaching">
      <summary>
              Возвращает или задает значение, указывающее, включено ли кэширование планов запросов.
            </summary>
      <returns>
              <see langword="true" /> Если включено кэширование планов запросов; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.Parameters">
      <summary>
              Возвращает параметры инструкции Entity SQL или хранимой процедуры.
            </summary>
      <returns>
              Параметры инструкции Entity SQL или хранимой процедуры.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.Transaction">
      <summary>
              Возвращает или задает транзакцию, в течение которого <see cref="T:System.Data.SqlClient.SqlCommand" /> выполняет.
            </summary>
      <returns>
              Транзакции, в течение которого <see cref="T:System.Data.SqlClient.SqlCommand" /> выполняет.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityCommand.UpdatedRowSource">
      <summary>
              Возвращает или задает способ применения результатов команды обновляемой строки.
            </summary>
      <returns>
              Одно из значений <see cref="T:System.Data.UpdateRowSource" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.ConnectionString">
      <summary>
              Возвращает или задает строку соединения <see cref="T:System.Data.EntityClient.EntityConnection" />.
            </summary>
      <returns>
              Строка подключения, необходимые для установления начального соединения с источником данных.
               Значение по умолчанию - пустая строка.
               Для закрытого соединения возвращается текущее установленное значение.
               Если значение не было задано, возвращается пустая строка.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Попытка установить <see cref="P:System.Data.EntityClient.EntityConnection.ConnectionString" /> свойство после <see cref="EntityConnection" />в <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> был инициализирован.
                  <see cref="MetadataWorkspace" /> — Инициализирован либо если <see cref="EntityConnection" /> экземпляр создается через перегрузку, принимающую <see cref="MetadataWorkspace" /> как параметр, или если <see cref="T:System.Data.EntityClient.EntityConnection" /> экземпляр был открыт.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Имеется ключевое слово строки соединения недопустим или не указано ключевое слово строки подключения требуется.
                </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.ConnectionTimeout">
      <summary>
              Возвращает количество секунд ожидания при попытке установить соединение, прежде чем эта попытка завершается и создается ошибка.
            </summary>
      <returns>
              Время (в секундах), в течение которого должно производиться ожидание открытия соединения.
               Значением по умолчанию является стандартное время ожидания базового поставщика данных.
            </returns>
      <exception cref="T:System.ArgumentException">
                  Заданное значение меньше 0.
                </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.Database">
      <summary>
              Возвращает имя текущей базы данных или базы данных, которая будет использоваться после открытия подключения.
            </summary>
      <returns>
              Значение <see langword="Database" /> свойства базового поставщика данных.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Базовый поставщик данных неизвестен.
                </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.DataSource">
      <summary>
              Возвращает имя или сетевой адрес источника данных, с которым должно быть установлено соединение.
            </summary>
      <returns>
              Имя источника данных.
               Значение по умолчанию - пустая строка.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Базовый поставщик данных неизвестен.
                </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.ServerVersion">
      <summary>
              Возвращает строку, содержащую версию источника данных, к которому подключается клиент.
            </summary>
      <returns>
              Версия источника данных, содержащихся в строке соединения поставщика.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Соединение закрыто.
                </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.State">
      <summary>
              Возвращает свойство <see cref="T:System.Data.ConnectionState" /> базового поставщика, если соединение <see cref="T:System.Data.EntityClient.EntityConnection" /> открыто.
               В противном случае возвращает значение <see cref="F:System.Data.ConnectionState.Closed" />.
            </summary>
      <returns>
              <see cref="F:System.Data.ConnectionState.Open" />, если и только если оба <see cref="T:System.Data.EntityClient.EntityConnection" />его внутренним состоянием и базового поставщика <see cref="T:System.Data.ConnectionState" /> открыты.
               Если <see cref="T:System.Data.EntityClient.EntityConnection" />его состояние открыт, но поставщик <see cref="T:System.Data.ConnectionState" /> закрывается, это свойство возвращает <see cref="F:System.Data.ConnectionState.Broken" />.
               В противном случае возвращает значение <see cref="F:System.Data.ConnectionState.Closed" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnection.StoreConnection">
      <summary>
              Предоставляет доступ к базовой соединения с источником данных, используемый <see cref="T:System.Data.EntityClient.EntityConnection" /> объекта.
            </summary>
      <returns>
              <see cref="T:System.Data.Common.DbConnection" /> Для соединения с источником данных.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize">
      <summary>
              Возвращает значение, показывающее, имеет ли объект <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> фиксированный размер.
            </summary>
      <returns>
              Возвращает <see langword="true" /> во всех случаях, поскольку <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> предоставляет коллекцию пар «ключевое слово значение» фиксированного размера.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)">
      <summary>
              Возвращает или задает значение, связанное с указанным ключом.
               В языке C# это свойство является индексатором.
            </summary>
      <param name="keyword">
                Ключ возвращаемого или задаваемого элемента.
              </param>
      <returns>
              Значение, связанное с указанным ключом.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="keyword" /> является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).
                </exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
                  Попытка добавить ключ, не существующий в списке доступных ключей.
                </exception>
      <exception cref="T:System.FormatException">
                  Недопустимое значение в строке соединения (конкретнее, ожидаемое логическое или численное значение не было передано).
                </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.Keys">
      <summary>
              Возвращает коллекцию <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.
            </summary>
      <returns>
              Коллекция <see cref="T:System.Collections.ICollection" />, которая содержит ключи из <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.Metadata">
      <summary>
              Возвращает или задает расположение метаданных в строке соединения.
            </summary>
      <returns>
              Возвращает или задает расположение метаданных в строке соединения.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.Name">
      <summary>
              Возвращает или задает имя раздела, заданное в файле конфигурации.
            </summary>
      <returns>
              Имя раздела, заданное в файле конфигурации.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.Provider">
      <summary>
              Возвращает или задает имя базового поставщика данных .NET Framework в строке соединения.
            </summary>
      <returns>
              Неизменяемое имя базового .NET Framework поставщика данных.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString">
      <summary>
              Возвращает или задает внутреннюю, специфичную для данного поставщика строку соединения.
            </summary>
      <returns>
              Внутренняя, специфичная для данного поставщика строка соединения.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.DataRecordInfo">
      <summary>
              Возвращает <see cref="T:System.Data.Common.DataRecordInfo" /> для этой транзакции <see cref="T:System.Data.IExtendedDataRecord" />.
            </summary>
      <returns>
              Сведения о записи данных.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.Depth">
      <summary>
              Возвращает значение, показывающее глубину вложенности для текущей строки.
            </summary>
      <returns>
              Глубина вложенности для текущей строки.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.FieldCount">
      <summary>
              Возвращает число столбцов в текущей строке.
            </summary>
      <returns>
              Число столбцов в текущей строке.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.HasRows">
      <summary>
              Возвращает значение, указывающее на то, что в модуле чтения данных <see cref="T:System.Data.EntityClient.EntityDataReader" /> содержится одна или несколько строк.
            </summary>
      <returns>
              <see langword="true" /> Если <see cref="T:System.Data.EntityClient.EntityDataReader" /> содержит одну или несколько строк; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.IsClosed">
      <summary>
              Возвращает значение, указывающее, закрыт ли модуль чтения <see cref="T:System.Data.EntityClient.EntityDataReader" />.
            </summary>
      <returns>
              <see langword="true" /> Если <see cref="T:System.Data.EntityClient.EntityDataReader" /> закрыт; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.Item(System.Int32)">
      <summary>
              Возвращает значение указанного столбца как экземпляр <see cref="T:System.Object" />.
            </summary>
      <param name="ordinal">
                Порядковый номер столбца (от нуля).
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.Item(System.String)">
      <summary>
              Возвращает значение указанного столбца как экземпляр <see cref="T:System.Object" />.
            </summary>
      <param name="name">
                Имя столбца.
              </param>
      <returns>
              Значение указанного столбца.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.RecordsAffected">
      <summary>
              Возвращает число строк, которые были изменены, вставлены или удалены инструкцией SQL.
            </summary>
      <returns>
              Число измененных, вставленных или удаленных строк.
               Возвращает значение -1 для инструкций SELECT и значение 0, если строки не были затронуты или инструкция завершилась ошибкой.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityDataReader.VisibleFieldCount">
      <summary>
              Возвращает число не скрытых полей в <see cref="T:System.Data.EntityClient.EntityDataReader" />.
            </summary>
      <returns>
              Число не скрытых полей.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.DbType">
      <summary>
              Возвращает или устанавливает тип <see cref="T:System.Data.DbType" /> параметра.
            </summary>
      <returns>
              Одно из значений <see cref="T:System.Data.DbType" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.Direction">
      <summary>
              Возвращает или задает направление параметра.
            </summary>
      <returns>
              Одно из значений <see cref="T:System.Data.ParameterDirection" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.EdmType">
      <summary>
              Возвращает или задает тип параметра, выраженный как тип EdmType.
            </summary>
      <returns>
              Тип параметра, выраженный как тип EdmType.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.IsNullable">
      <summary>
              Возвращает или задает значение, указывающее, принимает ли этот параметр значения NULL.
            </summary>
      <returns>
              <see langword="true" /> Если значения null принимаются; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.ParameterName">
      <summary>
              Возвращает или задает имя параметра сущности.
            </summary>
      <returns>
              Имя параметра сущности.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.Precision">
      <summary>
              Возвращает или задает число знаков, используемых для представления <see cref="P:System.Data.EntityClient.EntityParameter.Value" /> свойство.
            </summary>
      <returns>
              Количество разрядов, используемых для представления значения.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.Scale">
      <summary>
              Возвращает или задает число десятичных разрядов, до которых вычисляется значение <see cref="P:System.Data.EntityClient.EntityParameter.Value" />.
            </summary>
      <returns>
              Число десятичных разрядов, до которых разрешается значение.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.Size">
      <summary>
              Возвращает или задает максимальный размер данных внутри столбца.
            </summary>
      <returns>
              Максимальный размер данных внутри столбца.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.SourceColumn">
      <summary>
              Возвращает или задает имя столбца источника, сопоставленного <see cref="T:System.Data.DataSet" /> и используется для загрузки или возвращения <see cref="P:System.Data.EntityClient.EntityParameter.Value" />.
            </summary>
      <returns>
              Имя исходного столбца, сопоставленного с dataset и используется для загрузки или возвращения значения.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.SourceColumnNullMapping">
      <summary>
              Возвращает или задает значение, указывающее, является ли исходный столбец допускает значения NULL.
            </summary>
      <returns>
              <see langword="true" /> Если исходный столбец допускает значение NULL; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.SourceVersion">
      <summary>
              Возвращает или задает <see cref="T:System.Data.DataRowVersion" /> для использования при загрузке значения.
            </summary>
      <returns>
              Одно из значений <see cref="T:System.Data.DataRowVersion" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameter.Value">
      <summary>
              Возвращает или задает значение параметра.
            </summary>
      <returns>
              Значение параметра.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.Count">
      <summary>
              Возвращает значение типа Integer, содержащее число элементов в коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <returns>
              Число элементов в коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> является значением типа Integer.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.IsFixedSize">
      <summary>
              Возвращает значение, показывающее, имеет ли объект <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> фиксированный размер.
            </summary>
      <returns>
              Возвращает <see langword="true" /> Если <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> имеет фиксированный размер; в противном случае <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.IsReadOnly">
      <summary>
              Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> доступной только для чтения.
            </summary>
      <returns>
              Возвращает <see langword="true" /> Если <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> только для чтения; в противном случае <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.IsSynchronized">
      <summary>
              Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> синхронизированной.
            </summary>
      <returns>
              Возвращает <see langword="true" /> Если <see cref="T:System.Data.EntityClient.EntityParameterCollection" /> синхронизирована; в противном случае <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.Item(System.Int32)">
      <summary>
              Возвращает объект <see cref="T:System.Data.EntityClient.EntityParameter" /> по указанному индексу.
            </summary>
      <param name="index">
                Индекс получаемого параметра (отсчет с нуля).
              </param>
      <returns>
              Параметр <see cref="T:System.Data.EntityClient.EntityParameter" /> по указанному индексу.
            </returns>
      <exception cref="T:System.IndexOutOfRangeException">
                  Указанный индекс не существует.
                </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.Item(System.String)">
      <summary>
              Возвращает объект <see cref="T:System.Data.EntityClient.EntityParameter" /> с указанным именем.
            </summary>
      <param name="parameterName">
                Имя получаемого параметра.
              </param>
      <returns>
              Параметр <see cref="T:System.Data.EntityClient.EntityParameter" /> с указанным именем.
            </returns>
      <exception cref="T:System.IndexOutOfRangeException">
                  Указанное имя не существует.
                </exception>
    </member>
    <member name="P:System.Data.EntityClient.EntityParameterCollection.SyncRoot">
      <summary>
              Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </summary>
      <returns>
              Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Data.EntityClient.EntityParameterCollection" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityTransaction.Connection">
      <summary>
              Возвращает <see cref="T:System.Data.EntityClient.EntityConnection" /> для этой транзакции <see cref="T:System.Data.EntityClient.EntityTransaction" />.
            </summary>
      <returns>
              Экземпляр типа <see cref="T:System.Data.EntityClient.EntityConnection" /> для базового источника данных.
            </returns>
    </member>
    <member name="P:System.Data.EntityClient.EntityTransaction.IsolationLevel">
      <summary>
              Возвращает уровень изоляции этой транзакции <see cref="T:System.Data.EntityClient.EntityTransaction" />.
            </summary>
      <returns>
              Значение перечисления <see cref="T:System.Data.IsolationLevel" />, которое представляет уровень изоляции базовой транзакции.
            </returns>
    </member>
    <member name="P:System.Data.EntityKey.EntityContainerName">
      <summary>
              Возвращает или задает имя контейнера сущностей.
            </summary>
      <returns>
              Значение <see cref="T:System.String" />, представляющее имя контейнера сущностей, содержащего сущность, которой принадлежит ключ <see cref="T:System.Data.EntityKey" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityKey.EntityKeyValues">
      <summary>
              Возвращает или задает ключевые значения, связанные с этим <see cref="T:System.Data.EntityKey" />.
            </summary>
      <returns>
              Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> значений ключей для этого объекта <see cref="T:System.Data.EntityKey" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityKey.EntitySetName">
      <summary>
              Возвращает или задает имя набора сущностей.
            </summary>
      <returns>
              Значение <see cref="T:System.String" />, представляющее имя набора сущностей, содержащего сущность, которой принадлежит ключ <see cref="T:System.Data.EntityKey" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityKey.IsTemporary">
      <summary>
              Возвращает значение, определяющее, является ли ключ <see cref="T:System.Data.EntityKey" /> временным.
            </summary>
      <returns>
              <see langword="true" /> Если <see cref="T:System.Data.EntityKey" /> временной; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.EntityKeyMember.Key">
      <summary>
              Возвращает или задает имя ключа сущности.
            </summary>
      <returns>
              Имя ключа.
            </returns>
    </member>
    <member name="P:System.Data.EntityKeyMember.Value">
      <summary>
              Возвращает или задает значение ключа сущности.
            </summary>
      <returns>
              Значение ключа.
            </returns>
    </member>
    <member name="P:System.Data.EntitySqlException.Column">
      <summary>
              Возвращает приблизительный номер столбца, в котором возникла ошибка.
            </summary>
      <returns>
              Целое число, соответствующее номеру столбца, в котором возникла ошибка.
            </returns>
    </member>
    <member name="P:System.Data.EntitySqlException.ErrorContext">
      <summary>
              По возможности возвращает приблизительный контекст, в котором возникла ошибка.
            </summary>
      <returns>
              Строка с описанием приблизительного контекста, в котором возникла ошибка, если такая информация имеется.
            </returns>
    </member>
    <member name="P:System.Data.EntitySqlException.ErrorDescription">
      <summary>
              Возвращает описание ошибки.
            </summary>
      <returns>
              Строка с описанием ошибки.
            </returns>
    </member>
    <member name="P:System.Data.EntitySqlException.Line">
      <summary>
              Возвращает приблизительный номер строки, в которой возникла ошибка.
            </summary>
      <returns>
              Целое число, соответствующее номеру строки, в которой возникла ошибка.
            </returns>
    </member>
    <member name="P:System.Data.IExtendedDataRecord.DataRecordInfo">
      <summary>
              Возвращает <see cref="T:System.Data.Common.DataRecordInfo" /> для этой транзакции <see cref="T:System.Data.IExtendedDataRecord" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Common.DataRecordInfo" />.
            </returns>
    </member>
    <member name="P:System.Data.Mapping.EntityViewContainer.EdmEntityContainerName">
      <summary>
              Возвращает или задает имя <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
            </summary>
      <returns>
              Имя контейнера.
            </returns>
    </member>
    <member name="P:System.Data.Mapping.EntityViewContainer.HashOverAllExtentViews">
      <summary>
              Хэш-значение представлений.
            </summary>
      <returns>
              Хэш-значение.
            </returns>
    </member>
    <member name="P:System.Data.Mapping.EntityViewContainer.HashOverMappingClosure">
      <summary>
              Хэш-значение.
            </summary>
      <returns>
              Хэш-значение.
            </returns>
    </member>
    <member name="P:System.Data.Mapping.EntityViewContainer.StoreEntityContainerName">
      <summary>
              Возвращает или задает <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> в схеме хранения.
            </summary>
      <returns>
              Имя контейнера.
            </returns>
    </member>
    <member name="P:System.Data.Mapping.EntityViewContainer.ViewCount">
      <summary>
              Возвращает или задает число представлений.
            </summary>
      <returns>
              Просмотреть число.
            </returns>
    </member>
    <member name="P:System.Data.Mapping.EntityViewGenerationAttribute.ViewGenerationType">
      <summary>
              Возвращает свойство типа T:System.Type для представления.
            </summary>
      <returns>
              Свойство типа T:System.Type для представления.
            </returns>
    </member>
    <member name="P:System.Data.Mapping.StorageMappingItemCollection.MappingVersion">
      <summary>
              Возвращает версию этого <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> представляет.
            </summary>
      <returns>
              Версия этого <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> представляет.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationEndMember.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSet.AssociationSetEnds">
      <summary>
              Возвращает элементы этого набора ассоциаций <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая элементы этого набора ассоциаций <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSet.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий вид встроенного типа для этого экземпляра <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSet.ElementType">
      <summary>
              Возвращает ассоциацию, связанную с этим набором ассоциаций <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.AssociationType" />, представляющий ассоциацию, связанную с этим набором ассоциаций <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.CorrespondingAssociationEndMember">
      <summary>
              Возвращает <see langword="End" /> элемент, <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" /> объект соответствует.
            </summary>
      <returns>
              <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" /> Объект, представляющий <see langword="End" /> элемент, <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" /> объект соответствует.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.EntitySet">
      <summary>
              Возвращает значение ссылается эта сущность <see langword="End" /> роли.
            </summary>
      <returns>
              <see cref="T:System.Data.Metadata.Edm.EntitySet" /> Объект, представляющий набор сущностей, на которые ссылается это <see langword="End" /> роли.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.Name">
      <summary>
              Возвращает имя элемента <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.
            </summary>
      <returns>
              Имя элемента <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.ParentAssociationSet">
      <summary>
              Возвращает родительский набор ассоциаций этого элемента <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.AssociationSet" />, который представляет родительский набор ассоциаций этого элемента <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationSetEnd.Role">
      <summary>
              Возвращает имя <see langword="End" /> роль для этого <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.
            </summary>
      <returns>
              Имя <see langword="End" /> роль для этого <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationType.AssociationEndMembers">
      <summary>
              Возвращает список элементов для ассоциации типа <see cref="T:System.Data.Metadata.Edm.AssociationType" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая список элементов для этого типа <see cref="T:System.Data.Metadata.Edm.AssociationType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationType.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.AssociationType" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.AssociationType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationType.IsForeignKey">
      <summary>
              Возвращает логическое значение, указывающее, является ли столбец внешним ключом.
            </summary>
      <returns>
              Логическое значение, указывающее, является ли столбец внешним ключом.
               Если <see langword="true" />, столбец является внешним ключом.
               Если <see langword="false" /> (по умолчанию), столбец не является внешним ключом.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.AssociationType.ReferentialConstraints">
      <summary>
              Возвращает список ограничений для этого типа <see cref="T:System.Data.Metadata.Edm.AssociationType" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая список ограничений для этого типа <see cref="T:System.Data.Metadata.Edm.AssociationType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.CollectionType.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.CollectionType" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.CollectionType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.CollectionType.TypeUsage">
      <summary>
              Возвращает экземпляр класса <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, который содержит тип элемента, включаемого текущим объектом <see cref="T:System.Data.Metadata.Edm.CollectionType" />, и аспекты для этого типа.
            </summary>
      <returns>
              Экземпляр класса <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, который содержит тип элемента, включаемого текущим объектом <see cref="T:System.Data.Metadata.Edm.CollectionType" />, и аспекты для этого типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ComplexType.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.ComplexType" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.ComplexType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ComplexType.Properties">
      <summary>
              Возвращает список свойств для этого типа <see cref="T:System.Data.Metadata.Edm.ComplexType" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая список свойств для этого типа <see cref="T:System.Data.Metadata.Edm.ComplexType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Documentation.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.Documentation" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.Documentation" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Documentation.IsEmpty">
      <summary>
              Возвращает значение, указывающее на то, содержит ли этот объект <see cref="T:System.Data.Metadata.Edm.Documentation" /> только значение NULL или пустое значение <see cref="P:System.Data.Metadata.Edm.Documentation.Summary" /> и <see cref="P:System.Data.Metadata.Edm.Documentation.Longdescription" />.
            </summary>
      <returns>
              <see langword="true" /> Если этот <see cref="T:System.Data.Metadata.Edm.Documentation" /> объект содержит только значение null или пустой <see cref="P:System.Data.Metadata.Edm.Documentation.Summary" /> и <see cref="P:System.Data.Metadata.Edm.Documentation.LongDescription" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Documentation.LongDescription">
      <summary>
              Возвращает подробное описание для этой документации <see cref="T:System.Data.Metadata.Edm.Documentation" />.
            </summary>
      <returns>
              Подробное описание для этой документации <see cref="T:System.Data.Metadata.Edm.Documentation" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Documentation.Summary">
      <summary>
              Возвращает сводку для документации <see cref="T:System.Data.Metadata.Edm.Documentation" />.
            </summary>
      <returns>
              Сводка для документации <see cref="T:System.Data.Metadata.Edm.Documentation" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmError.Message">
      <summary>
              Возвращает сообщение об ошибке.
            </summary>
      <returns>
              Сообщение об ошибке.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.
            </summary>
      <returns>
              Одно из значений перечисления <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> перечисления.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.CommandTextAttribute">
      <summary>
              Получает запрос на языке, используется модель системы или хранилища базы данных управления.
            </summary>
      <returns>
              Строковое значение в синтаксис, используемый моделью базы данных управления системы или хранилища, содержащего инструкцию запроса или обновления из <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.FullName">
      <summary>
              Возвращает полное имя (пространство имен и имя) этого типа.
            </summary>
      <returns>
              Полное имя типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.IsComposableAttribute">
      <summary>
              Возвращает или задает ли этот экземпляр сопоставляется функции или хранимой процедуры.
            </summary>
      <returns>
              <see langword="true" /> Если этот экземпляр сопоставляется функции; <see langword="false" /> Если этот экземпляр сопоставляется с хранимой процедурой.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.Parameters">
      <summary>
              Возвращает параметры этой функции <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая параметры этой функции <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.ReturnParameter">
      <summary>
              Возвращает выходной параметр этой функции <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />, представляющий выходной параметр этой функции <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmFunction.ReturnParameters">
      <summary>
              Получает возвращаемое параметры <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> представляющий возвращаемое параметры <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmItemCollection.EdmVersion">
      <summary>
              Возвращает версию концептуальной модели для этой коллекции.
            </summary>
      <returns>
              Версия концептуальной модели для этой коллекции.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmMember.DeclaringType">
      <summary>
              Возвращает тип, который имеет данный элемент.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.StructuralType" />, представляющий тип, который имеет данный элемент.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmMember.Name">
      <summary>
              Возвращает имя данного элемента.
            </summary>
      <returns>
              Имя данного элемента.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmMember.TypeUsage">
      <summary>
              Возвращает экземпляр класса <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, содержащий тип элемента и аспекты этого типа.
            </summary>
      <returns>
              Объект класса <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, содержащий тип элемента и аспекты этого типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmProperty.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.EdmProperty" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.EdmProperty" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmProperty.DefaultValue">
      <summary>
              Возвращает значение по умолчанию для свойства <see cref="T:System.Data.Metadata.Edm.EdmProperty" />.
            </summary>
      <returns>
              Значение по умолчанию для свойства <see cref="T:System.Data.Metadata.Edm.EdmProperty" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmProperty.Nullable">
      <summary>
              Возвращает значение, указывающее, допускает ли свойство <see cref="T:System.Data.Metadata.Edm.EdmProperty" /> значения NULL.
            </summary>
      <returns>
              <see langword="true" /> Если этот <see cref="T:System.Data.Metadata.Edm.EdmProperty" /> может иметь значение null; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.Column">
      <summary>
              Возвращает столбец, в котором произошла ошибка.
            </summary>
      <returns>
              Столбец, в котором произошла ошибка.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.ErrorCode">
      <summary>
              Возвращает код ошибки.
            </summary>
      <returns>
              Код ошибки.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.Line">
      <summary>
              Возвращает номер строки, в которой произошла ошибка.
            </summary>
      <returns>
              Номер строки, в которой произошла ошибка.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.SchemaLocation">
      <summary>
              Возвращает расположение схемы, содержащей ошибку.
               В конце этой строки содержится имя схемы.
            </summary>
      <returns>
              Расположение схемы, содержащей ошибку.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.SchemaName">
      <summary>
              Возвращает имя схемы, содержащей ошибку.
            </summary>
      <returns>
              Имя схемы, содержащей ошибку.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.Severity">
      <summary>
              Возвращает степень серьезности ошибки.
            </summary>
      <returns>
              Одно из значений <see cref="T:System.Data.Metadata.Edm.EdmSchemaErrorSeverity" />.
               Значение по умолчанию — <see cref="F:System.Data.Metadata.Edm.EdmSchemaErrorSeverity.Warning" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmSchemaError.StackTrace">
      <summary>
              Возвращает строковое представление трассировки стека при возникновении ошибки.
            </summary>
      <returns>
              Строковое представление трассировки стека при возникновении ошибки.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmType.Abstract">
      <summary>
              Возвращает значение, указывающее, является ли тип абстрактным.
            </summary>
      <returns>
              <see langword="true" /> Если этот тип является абстрактным. в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmType.BaseType">
      <summary>
              Возвращает базовый тип этого типа.
            </summary>
      <returns>
              Базовый тип этого типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmType.FullName">
      <summary>
              Возвращает полное имя этого типа.
            </summary>
      <returns>
              Полное имя этого типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmType.Name">
      <summary>
              Возвращает имя этого типа.
            </summary>
      <returns>
              Имя этого типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EdmType.NamespaceName">
      <summary>
              Возвращает пространство имен этого типа.
            </summary>
      <returns>
              Пространство имен этого типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityContainer.BaseEntitySets">
      <summary>
              Возвращает список наборов сущностей и наборов ассоциаций, входящих в этот контейнер <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащий список наборов сущностей и наборов ассоциаций, входящих в этот контейнер <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityContainer.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityContainer.FunctionImports">
      <summary>
              Задает коллекцию элементов <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.
               Каждая функция содержит подробные сведения о хранимой процедуры, которая существует в базе данных или эквивалент CommandText сопоставляется с сущностью и ее свойствами.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> содержащий <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> элементы.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityContainer.Name">
      <summary>
              Возвращает имя этого аспекта <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
            </summary>
      <returns>
              Имя этого аспекта <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySet.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.EntitySet" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.EntitySet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySet.ElementType">
      <summary>
              Возвращает тип сущности этого объекта <see cref="T:System.Data.Metadata.Edm.EntitySet" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EntityType" />, представляющий тип сущности этого объекта <see cref="T:System.Data.Metadata.Edm.EntitySet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySetBase.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.EntitySetBase" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.EntitySetBase" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySetBase.ElementType">
      <summary>
              Возвращает тип сущности этого объекта <see cref="T:System.Data.Metadata.Edm.EntityTypeBase" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EntityTypeBase" />, представляющий тип сущности этого объекта <see cref="T:System.Data.Metadata.Edm.EntityTypeBase" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySetBase.EntityContainer">
      <summary>
              Возвращает контейнер сущностей текущей сущности или набора связей.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> контейнера сущностей текущей сущности или набора связей.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntitySetBase.Name">
      <summary>
              Возвращает имя текущей сущности или набора связей.
            </summary>
      <returns>
              Имя текущей сущности или набора связей.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityType.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.EntityType" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.EntityType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityType.NavigationProperties">
      <summary>
              Возвращает свойства навигации этого типа <see cref="T:System.Data.Metadata.Edm.EntityType" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая список свойств навигации для этого типа <see cref="T:System.Data.Metadata.Edm.EntityType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityType.Properties">
      <summary>
              Возвращает список свойств для этого типа <see cref="T:System.Data.Metadata.Edm.EntityType" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая список свойств для этого типа <see cref="T:System.Data.Metadata.Edm.EntityType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EntityTypeBase.KeyMembers">
      <summary>
              Возвращает список всех ключевых элементов для текущего типа сущности или связи.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, который представляет список ключевых элементов для текущего типа сущности или связи.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.EnumMember.BuiltInTypeKind">
      <summary>
               Возвращает вид этого типа.
            </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EnumMember.Name">
      <summary>
               Возвращает имя члена этого перечисления.
            </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EnumMember.Value">
      <summary>
               Возвращает значение члена этого перечисления.
            </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EnumType.BuiltInTypeKind">
      <summary>
               Возвращает вид типа 
            </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EnumType.IsFlags">
      <summary>
               Возвращает значение, указывающее, определен ли тип перечисления флаги (т. е. может рассматриваться как битовое поле) 
            </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EnumType.Members">
      <summary>
               Возвращает коллекцию членов перечисления для этого типа перечисления.
            </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.EnumType.UnderlyingType">
      <summary>
               Возвращает базовый тип для этого типа перечисления.
            </summary>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.Description">
      <summary>
              Возвращает описание этого аспекта <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.FacetDescription" />, представляющий описание этого аспекта <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.FacetType">
      <summary>
              Возвращает тип этого аспекта <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EdmType" />, представляющий тип этого аспекта <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.IsUnbounded">
      <summary>
              Возвращает значение, показывающее, является ли значения аспекта неограниченным.
            </summary>
      <returns>
              <see langword="true" /> Если значение аспекта не ограничено; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.Name">
      <summary>
              Возвращает имя этого аспекта <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </summary>
      <returns>
              Имя этого аспекта <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.Facet.Value">
      <summary>
              Возвращает значение этого аспекта <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </summary>
      <returns>
              Значение этого аспекта <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.DefaultValue">
      <summary>
              Возвращает значение аспекта по умолчанию с этим описанием аспекта.
            </summary>
      <returns>
              Значение аспекта по умолчанию с этим описанием аспекта.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.FacetName">
      <summary>
              Возвращает имя этого аспекта.
            </summary>
      <returns>
              Имя этого аспекта.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.FacetType">
      <summary>
              Возвращает тип этого аспекта.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EdmType" />, представляющий тип этого аспекта.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.IsConstant">
      <summary>
              Возвращает значение, указывающее, является ли значение этого аспекта константой.
            </summary>
      <returns>
              <see langword="true" /> Если этот аспект является константой; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.IsRequired">
      <summary>
              Возвращает значение, указывающее, является ли этот аспект обязательным.
            </summary>
      <returns>
              <see langword="true" /> Если этот аспект является обязательным; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.MaxValue">
      <summary>
              Возвращает максимальное значение для этого аспекта.
            </summary>
      <returns>
              Максимальное значение для этого аспекта.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FacetDescription.MinValue">
      <summary>
              Возвращает минимальное значение для этого аспекта.
            </summary>
      <returns>
              Минимальное значение для этого аспекта.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FunctionParameter.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FunctionParameter.DeclaringFunction">
      <summary>
              Возвращает или задает функцию <see cref="T:System.Data.Metadata.Edm.EdmFunction" />, в которой объявлен этот параметр.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EdmFunction" />, представляющий функцию, в которой объявлен этот параметр.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FunctionParameter.Mode">
      <summary>
              Возвращает режим этого параметра <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.
            </summary>
      <returns>
              Одно из значений <see cref="T:System.Data.Metadata.Edm.ParameterMode" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FunctionParameter.Name">
      <summary>
              Возвращает имя этого аспекта <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.
            </summary>
      <returns>
              Имя этого аспекта <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.FunctionParameter.TypeUsage">
      <summary>
              Возвращает экземпляр класса <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, который содержит тип параметра и аспекты для этого типа.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, содержащий тип параметра и аспекты для этого типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ItemCollection.DataSpace">
      <summary>
              Возвращает модель данных, связанную с этой коллекцией элементов.
            </summary>
      <returns>
              Модель данных, связанная с этой коллекцией элементов.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataItem.BuiltInTypeKind">
      <summary>
              Возвращает вид встроенного типа для этого типа.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий вид встроенного типа для этого типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataItem.Documentation">
      <summary>
              Возвращает или задает документацию, связанную с этим типом.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.Documentation" />, представляющий документацию по этому типу.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataItem.MetadataProperties">
      <summary>
              Возвращает список свойств текущего типа.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая список свойств текущего типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataProperty.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataProperty.Name">
      <summary>
              Возвращает имя этого аспекта <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.
            </summary>
      <returns>
              Имя этого аспекта <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataProperty.PropertyKind">
      <summary>
              Возвращает значение этого аспекта <see cref="T:System.Data.Metadata.Edm.PropertyKind" />.
            </summary>
      <returns>
              Значение этого аспекта <see cref="T:System.Data.Metadata.Edm.PropertyKind" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataProperty.TypeUsage">
      <summary>
              Возвращает экземпляр класса <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, который содержит тип этого свойства <see cref="T:System.Data.Metadata.Edm.MetadataProperty" /> и аспекты для этого типа.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.TypeUsage" />, содержащий тип этого свойства <see cref="T:System.Data.Metadata.Edm.MetadataProperty" /> и аспекты для этого типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.MetadataProperty.Value">
      <summary>
              Возвращает значение этого аспекта <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.
            </summary>
      <returns>
              Значение этого аспекта <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.NavigationProperty.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.NavigationProperty" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.NavigationProperty" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.NavigationProperty.FromEndMember">
      <summary>
              Возвращает последний элемент «начального» объекта связи для данного перемещения.
            </summary>
      <returns>
              Последний элемент «начального» объекта связи для данного перемещения.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.NavigationProperty.RelationshipType">
      <summary>
              Возвращает тип связи, с которым работает данное свойство навигации.
            </summary>
      <returns>
              Тип связи, с которым работает данное свойство навигации.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.NavigationProperty.ToEndMember">
      <summary>
              Возвращает последний элемент «конечного» объекта связи для данного перемещения.
            </summary>
      <returns>
              Последний элемент «конечного» объекта связи для данного перемещения.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.PrimitiveType.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.PrimitiveType.ClrEquivalentType">
      <summary>
              Возвращает эквивалентный типу среды CLR тип <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
               Следует отметить, что свойство <see cref="P:System.Data.Metadata.Edm.PrimitiveType.ClrEquivalentType" /> всегда возвращает значение типа, не допускающего значений NULL.
            </summary>
      <returns>
              Объект <see cref="T:System.Type" />, который представляет эквивалентный типу среды CLR тип <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.PrimitiveType.FacetDescriptions">
      <summary>
              Возвращает список описаний аспектов для типа <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, содержащая список описаний аспектов для типа <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.PrimitiveType.PrimitiveTypeKind">
      <summary>
              Возвращает значение перечисления <see cref="T:System.Data.Metadata.Edm.PrimitiveTypeKind" />, которое указывает тип-примитив <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </summary>
      <returns>
              Значение перечисления <see cref="T:System.Data.Metadata.Edm.PrimitiveTypeKind" />, которое указывает тип-примитив <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Current">
      <summary>
              Возвращает элемент в текущей позиции.
            </summary>
      <returns>
              Элемент в текущей позиции.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>
              Возвращает элемент в текущей позиции.
            </summary>
      <returns>
              Элемент в текущей позиции.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly">
      <summary>
              Возвращает значение, которое определяет, является ли коллекция доступной только для чтения.
            </summary>
      <returns>
              <see langword="true" /> Если коллекция доступна только для чтения; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)">
      <summary>
              Возвращает элемент из этой коллекции с использованием заданного идентификатора.
            </summary>
      <param name="identity">
                Идентификатор искомого элемента.
              </param>
      <returns>
              Элемент из этой коллекции.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ReferentialConstraint.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ReferentialConstraint.FromProperties">
      <summary>
              Возвращает список свойств для «исходной роли», на которой определено это ограничение <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая список свойств для «исходной роли», на которой определено это ограничение <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ReferentialConstraint.FromRole">
      <summary>
              Возвращает «исходную роль», участвующую в этом ограничении <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.RelationshipEndMember" />, представляющий «исходную роль», участвующую в этом ограничении <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ReferentialConstraint.ToProperties">
      <summary>
              Возвращает список свойств для «целевой роли», на которой определено это ограничение <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая список свойств для «целевой роли», на которой определено это ограничение <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.ReferentialConstraint.ToRole">
      <summary>
              Возвращает «целевую роль», участвующую в этом ограничении <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.RelationshipEndMember" />, представляющий «целевую роль», участвующую в этом ограничении <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.RefType.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.RefType" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.RefType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.RefType.ElementType">
      <summary>
              Возвращает тип сущности, на которую ссылается объект <see cref="T:System.Data.Metadata.Edm.RefType" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EntityTypeBase" />, представляющий тип сущности, на которую ссылается <see cref="T:System.Data.Metadata.Edm.RefType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.RelationshipEndMember.DeleteBehavior">
      <summary>
              Возвращает рабочие характеристики члена элемента связи.
            </summary>
      <returns>
              Одно из значений <see cref="T:System.Data.Metadata.Edm.OperationAction" />.
               Значение по умолчанию — <see cref="P:System.Data.Metadata.Edm.OperationAction.None" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.RelationshipEndMember.RelationshipMultiplicity">
      <summary>
              Возвращает кратность члена элемента связи.
            </summary>
      <returns>
              Одно из значений <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.RelationshipSet.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.RelationshipSet" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.RelationshipSet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.RelationshipSet.ElementType">
      <summary>
              Возвращает тип связи для этого набора <see cref="T:System.Data.Metadata.Edm.RelationshipSet" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.RelationshipType" />, представляющий тип связи для этого набора <see cref="T:System.Data.Metadata.Edm.RelationshipSet" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.RelationshipType.RelationshipEndMembers">
      <summary>
              Возвращает список элементов для этого типа связи.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая список элементов для этого типа связи.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.RowType.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.RowType" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.RowType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.RowType.Properties">
      <summary>
              Возвращает список свойств для этого типа <see cref="T:System.Data.Metadata.Edm.RowType" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая список свойств для этого типа <see cref="T:System.Data.Metadata.Edm.RowType" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.StoreItemCollection.StoreSchemaVersion">
      <summary>
              Возвращает версию схемы хранения для этой коллекции.
            </summary>
      <returns>
              Версия схемы хранилища для этой коллекции.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.StructuralType.Members">
      <summary>
              Возвращает список элементов для этого типа.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая набор элементов для этого типа.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.TypeUsage.BuiltInTypeKind">
      <summary>
              Возвращает разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" />, представляющий разновидность встроенного типа для этой функции <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.TypeUsage.EdmType">
      <summary>
              Возвращает сведения о типе, описанные в этой сущности <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EdmType" />, представляющий сведения о типе, описанные в этой сущности <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
            </returns>
    </member>
    <member name="P:System.Data.Metadata.Edm.TypeUsage.Facets">
      <summary>
              Возвращает список аспектов для типа, который описан этой сущностью <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
            </summary>
      <returns>
              Коллекция типа <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />, содержащая список аспектов для типа, описанного этой сущностью <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmFunctionAttribute.FunctionName">
      <summary>
              Имя сопоставляемой функции.
            </summary>
      <returns>
              Имя сопоставляемой функции.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmFunctionAttribute.NamespaceName">
      <summary>
              Пространство имен сопоставляемой функции.
            </summary>
      <returns>
              Пространство имен сопоставляемой функции.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey">
      <summary>
              Возвращает логическое значение, указывающее, основан ли связь на значение внешнего ключа.
            </summary>
      <returns>
              <see langword="true" /> Если связь основана на значении внешнего ключа; в противном случае <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName">
      <summary>
              Имя связи.
            </summary>
      <returns>
              Строка <see cref="T:System.String" />, содержащая имя связи, заданной этим атрибутом <see cref="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName">
      <summary>
              Пространство имен данной связи.
            </summary>
      <returns>
              Строка <see cref="T:System.String" />, содержащая имя пространства имен данной связи.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity">
      <summary>
              Кратность на одном конце связи.
            </summary>
      <returns>
              Значение <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" />, показывающее кратность.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name">
      <summary>
              Имя роли для одного из элементов связи.
            </summary>
      <returns>
              Объект <see cref="T:System.String" />, который является именем роли.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type">
      <summary>
              Тип сущности одного из элементов связи.
            </summary>
      <returns>
              Объект <see cref="T:System.Type" /> — тип объекта, представляющего собой один из элементов ассоциации.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity">
      <summary>
              Кратность на другом конце связи.
            </summary>
      <returns>
              Значение <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" />, показывающее кратность.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name">
      <summary>
              Имя роли для второго элемента связи.
            </summary>
      <returns>
              Объект <see cref="T:System.String" />, который является именем роли.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type">
      <summary>
              Тип сущности другого элемента связи.
            </summary>
      <returns>
              Объект <see cref="T:System.Type" /> — тип объекта, представляющего собой второй элемент ассоциации.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.RelationshipName">
      <summary>
              Возвращает неполное имя связи.
            </summary>
      <returns>
              Имя связи.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.RelationshipNamespaceName">
      <summary>
              Имя пространства имен свойства навигации.
            </summary>
      <returns>
              Объект типа <see cref="T:System.String" />, содержащий имя пространства имен.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.TargetRoleName">
      <summary>
              Возвращает имя роли на другом конце связи.
            </summary>
      <returns>
              Имя целевой роли задается <see langword="Role" /> другой атрибут <see langword="End" /> элемента ассоциации, которая определяет связь в концептуальной модели.
               Дополнительные сведения см. в разделе элемент ассоциации (CSDL).
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.EntityKeyProperty">
      <summary>
              Возвращает или задает значение, указывающее, является ли свойство частью ключа сущности.
            </summary>
      <returns>
              Значение, указывающее, является ли свойство частью ключа сущности.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.IsNullable">
      <summary>
              Возвращает или задает значение, указывающее, может ли свойство иметь <see langword="null" /> значение.
            </summary>
      <returns>
              Значение, указывающее, может ли свойство иметь <see langword="null" /> значение.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmTypeAttribute.Name">
      <summary>
              Имя типа в концептуальной схеме, сопоставляемого с классом, к которому применен этот атрибут.
            </summary>
      <returns>
              Объект типа <see cref="T:System.String" />, содержащий имя.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EdmTypeAttribute.NamespaceName">
      <summary>
              Имя пространства имен типа объекта сущности или сложного типа в концептуальной схеме, которая сопоставляется с этим типом.
            </summary>
      <returns>
              Объект типа <see cref="T:System.String" />, содержащий имя пространства имен.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
      <summary>
              Возвращает число объектов, содержащихся в коллекции.
            </summary>
      <returns>
              Число элементов, содержащихся в <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly">
      <summary>
              Возвращает значение, которое определяет, является ли коллекция <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> доступной только для чтения.
            </summary>
      <returns>
              Всегда возвращает значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>
              Возвращает значение, показывающее, содержит ли коллекция связанных сущностей объекты-коллекции.
            </summary>
      <returns>
              Это свойство всегда возвращает <see langword="false" /> из-за <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> содержит объекты, а не коллекции.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EntityObject.EntityKey">
      <summary>
              Возвращает или задает ключ для этого объекта.
            </summary>
      <returns>
              Ключ <see cref="T:System.Data.EntityKey" /> для этого объекта.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EntityObject.EntityState">
      <summary>
              Возвращает состояние сущности объекта.
            </summary>
      <returns>
              Состояние <see cref="T:System.Data.EntityState" /> этого объекта.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithRelationships#RelationshipManager">
      <summary>
              Возвращает диспетчер связей, используемый этим объектом.
            </summary>
      <returns>
              Диспетчер <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />, используемый этим объектом.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EntityReference.EntityKey">
      <summary>
              Возвращает ключ для связанного объекта.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.EntityKey" />, который является ключом для связанного объекта.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.EntityReference`1.Value">
      <summary>
              Возвращает или задает связанный объект, возвращаемый этим объектом <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.
            </summary>
      <returns>
              Объект, возвращаемый этим объектом <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityState">
      <summary>
              Возвращает текущее состояние отслеживаемого объекта.
            </summary>
      <returns>
              Свойство <see cref="T:System.Data.EntityState" />, являющееся состоянием отслеживаемого объекта.
            
              Дополнительные сведения см. в разделе разрешение идентификаторов, управление состоянием и отслеживание изменений и Отслеживание изменений в сущностях POCO.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.IEntityWithKey.EntityKey">
      <summary>
              Возвращает или задает ключ <see cref="T:System.Data.EntityKey" /> для экземпляров типов сущностей, реализующих этот интерфейс.
            </summary>
      <returns>
              <see cref="T:System.Data.EntityKey" /> Для экземпляров типов сущностей, реализующих этот интерфейс.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager">
      <summary>
              Возвращает диспетчер связей, который управляет связями экземпляра типа сущности.
            </summary>
      <returns>
              Диспетчер связей <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> для этой сущности.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded">
      <summary>
              Возвращает значение, показывающее, все ли связанные объекты загружены.
            </summary>
      <returns>
              <see langword="true" /> Если связанный элемент содержит все связанные сущности из базы данных; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName">
      <summary>
              Возвращает имя связи, в которой участвует этот связанный элемент.
            </summary>
      <returns>
              Имя связи, в котором участвует элемент <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />.
               В имени связи не указано пространство имен.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet">
      <summary>
              Возвращает ссылку на метаданные для связанного элемента.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> содержащий метаданные для элемента связи.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName">
      <summary>
              Возвращает имя роли в исходном элементе связи.
            </summary>
      <returns>
              Имя роли в исходном элементе связи.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName">
      <summary>
              Возвращает имя роли в целевом элементе связи.
            </summary>
      <returns>
              Имя роли в целевом элементе связи.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded">
      <summary>
              Возвращает значение, показывающее, все ли связанные объекты загружены.
            </summary>
      <returns>
              <see langword="true" /> Если связанный элемент содержит все связанные объекты из базы данных; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName">
      <summary>
              Возвращает имя связи, в которой участвует этот связанный элемент.
            </summary>
      <returns>
              Имя связи, в которой участвует этот элемент <see cref="T:System.Data.Objects.DataClasses.RelatedEnd" />.
               В имени связи не указано пространство имен.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet">
      <summary>
              Возвращает ссылку на метаданные для связанного элемента.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> содержащий метаданные для элемента связи.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName">
      <summary>
              Возвращает имя роли в исходном элементе связи.
            </summary>
      <returns>
              Объект типа <see cref="T:System.String" />, содержащий имя роли.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName">
      <summary>
              Возвращает имя роли в целевом элементе связи.
            </summary>
      <returns>
              Объект типа <see cref="T:System.String" />, содержащий имя роли.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DbUpdatableDataRecord.DataRecordInfo">
      <summary>
              Возвращает сведения о записи данных.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Common.DataRecordInfo" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DbUpdatableDataRecord.FieldCount">
      <summary>
              Возвращает число полей в записи.
            </summary>
      <returns>
              Целочисленное значение, представляющее число полей.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DbUpdatableDataRecord.Item(System.Int32)">
      <summary>
              Возвращает значение с заданным порядковым номером поля.
            </summary>
      <param name="ordinal">
                Порядковый номер поля.
              </param>
      <returns>
              Значение с заданным порядковым номером поля.
            </returns>
    </member>
    <member name="P:System.Data.Objects.DbUpdatableDataRecord.Item(System.String)">
      <summary>
              Возвращает значение с заданным именем поля.
            </summary>
      <param name="name">
                Имя поля.
              </param>
      <returns>
              Значение поля.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectContext.CommandTimeout">
      <summary>
              Возвращает или задает значение времени ожидания (в секундах) для всех операций контекста объекта.
               A <see langword="null" /> значение указывает, что будет использоваться значение по умолчанию базового поставщика.
            </summary>
      <returns>
              Значение <see cref="T:System.Int32" />, которое является значением времени ожидания (в секундах).
            </returns>
      <exception cref="T:System.ArgumentException">
                  Время ожидания меньше 0.
                </exception>
    </member>
    <member name="P:System.Data.Objects.ObjectContext.Connection">
      <summary>
              Возвращает соединение, используемое контекстом объекта.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Common.DbConnection" />, который является соединением.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  Если <see cref="T:System.Data.Objects.ObjectContext" /> экземпляр был удален.
                </exception>
    </member>
    <member name="P:System.Data.Objects.ObjectContext.ContextOptions">
      <summary>
              Возвращает <see cref="T:System.Data.Objects.ObjectContextOptions" /> экземпляр, содержащий параметры, влияющие на поведение <see cref="T:System.Data.Objects.ObjectContext" />.
            </summary>
      <returns>
              <see cref="T:System.Data.Objects.ObjectContextOptions" /> Экземпляр, содержащий параметры, влияющие на поведение <see cref="T:System.Data.Objects.ObjectContext" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectContext.DefaultContainerName">
      <summary>
              Возвращает или задает имя контейнера по умолчанию.
            </summary>
      <returns>
              Объект <see cref="T:System.String" />, который является именем контейнера по умолчанию.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectContext.MetadataWorkspace">
      <summary>
              Возвращает рабочую область метаданных, используемую контекстом объекта.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />, ассоциированный с этим классом <see cref="T:System.Data.Objects.ObjectContext" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectContext.ObjectStateManager">
      <summary>
              Возвращает диспетчер состояния объекта, используемый контекстом объекта, чтобы отслеживать изменения объекта.
            </summary>
      <returns>
              Диспетчер <see cref="T:System.Data.Objects.ObjectStateManager" />, используемый этим классом <see cref="T:System.Data.Objects.ObjectContext" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectContext.QueryProvider">
      <summary>
              Возвращает поставщик запросов LINQ, связанный с данным контекстом объекта.
            </summary>
      <returns>
              <see cref="T:System.Linq.IQueryProvider" /> Экземпляра, используемое данным контекстом объекта.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled">
      <summary>
              Возвращает или задает логическое значение, определяющее, является ли связанные объекты загружаются автоматически при доступе к свойству навигации.
            </summary>
      <returns>
              <see langword="true" /> Если отложенная загрузка включена. в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled">
      <summary>
              Возвращает или задает логическое значение, которое определяет, создаются ли экземпляры прокси для пользовательских классов данных, игнорирующих сохраняемость.
            </summary>
      <returns>
              <see langword="true" /> Если создаются прокси-серверы; в противном случае — <see langword="false" />.
               Значение по умолчанию — <see langword="true" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior">
      <summary>
              Возвращает или задает логическое значение, определяющее, следует ли использовать согласованно NullReference.
            </summary>
      <returns>
              <see langword="true" /> Если необходимо использовать согласованно NullReference; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior">
      <summary>
              Возвращает или задает логическое значение, определяющее необходимость использования поведения NullComparison C#.
            </summary>
      <returns>
              <see langword="true" /> Если необходимо использовать поведение NullComparison C#; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior">
      <summary>
              Возвращает или задает логическое значение, определяющее, следует ли использовать устаревшее поведение PreserveChanges.
            </summary>
      <returns>
              <see langword="true" /> Если необходимо использовать прежнее поведение PreserveChanges; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectMaterializedEventArgs.Entity">
      <summary>
              Возвращает созданный объект сущности.
            </summary>
      <returns>
              Созданный объект сущности.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectParameter.Name">
      <summary>
              Возвращает имя параметра, которое можно задать только с помощью конструктора.
            </summary>
      <returns>
              Имя параметра, которое можно задать только с помощью конструктора.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectParameter.ParameterType">
      <summary>
              Возвращает тип параметра.
            </summary>
      <returns>
              Тип <see cref="T:System.Type" /> параметра.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectParameter.Value">
      <summary>
              Возвращает или задает значение параметра.
            </summary>
      <returns>
              Значение параметра.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectParameterCollection.Count">
      <summary>
              Возвращает число параметров, находящихся в коллекции в данный момент.
            </summary>
      <returns>
              Число объектов <see cref="T:System.Data.Objects.ObjectParameter" />, находящихся в коллекции в данный момент.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectParameterCollection.Item(System.String)">
      <summary>
              Представляет индексатор, который позволяет вызывающим методам получать параметры по имени.
            </summary>
      <param name="name">
                Имя искомого параметра.
                 Это имя не должно содержать маркер параметра «@», используемый для инструкций Entity SQL, а только фактическое имя.
              </param>
      <returns>
              Экземпляр класса <see cref="T:System.Data.Objects.ObjectParameter" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  В коллекции не найден параметр с указанным именем.
                </exception>
    </member>
    <member name="P:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection{System#Data#Objects#ObjectParameter}#IsReadOnly">
      <summary>
              Возвращает значение, которое определяет, является ли коллекция доступной только для чтения.
            </summary>
      <returns>
              Логическое значение, равное <see langword="true" /> Если коллекция доступна только для чтения и <see langword="false" /> коллекции могут быть изменены.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectQuery.CommandText">
      <summary>
              Возвращает текст команды запроса.
            </summary>
      <returns>
              Значение <see langword="string" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectQuery.Context">
      <summary>
              Возвращает контекст объекта, ассоциированный с этим запросом объектов.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Objects.ObjectContext" />, ассоциированный с этим экземпляром <see cref="T:System.Data.Objects.ObjectQuery`1" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectQuery.EnablePlanCaching">
      <summary>
              Возвращает или задает значение, указывающее, должен ли быть кэширован план запроса.
            </summary>
      <returns>
              Значение, указывающее, должен ли быть кэширован план запроса.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectQuery.MergeOption">
      <summary>
              Возвращает или задает способ добавления к контексту объекта объектов, возвращенных запросом.
            </summary>
      <returns>
              Свойство <see cref="T:System.Data.Objects.MergeOption" /> запроса.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectQuery.Parameters">
      <summary>
              Возвращает коллекцию параметров для этого запроса объектов.
            </summary>
      <returns>
              Коллекция параметров для этого запроса <see cref="T:System.Data.Objects.ObjectQuery`1" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>
              Возвращает значение, которое показывает, содержит ли коллекция, возвращенная запросом, объекты-коллекции.
            </summary>
      <returns>
              Значение типа Boolean.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType">
      <summary>
              Возвращает результирующий тип элемента для этого экземпляра запроса.
            </summary>
      <returns>
              Тип <see cref="T:System.Type" />, который является результирующим типом элемента для этого экземпляра запроса.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression">
      <summary>
              Возвращает выражение, описывающее этот запрос.
            </summary>
      <returns>
              Выражение LINQ типа <see cref="T:System.Linq.Expressions.Expression" />, которое описывает этот запрос.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider">
      <summary>
              Возвращает поставщик LINQ типа <see cref="T:System.Linq.IQueryProvider" />, ассоциированный с этим экземпляром запроса.
            </summary>
      <returns>
              Поставщик <see cref="T:System.Linq.IQueryProvider" />, ассоциированный с этим экземпляром запроса.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectQuery`1.Name">
      <summary>
              Возвращает или задает имя данного запроса объектов.
            </summary>
      <returns>
              Объект <see langword="string" /> являющееся именем этого <see cref="T:System.Data.Objects.ObjectQuery`1" />.
            </returns>
      <exception cref="T:System.ArgumentException">
                  Значение, указанное в наборе, не является допустимым.
                </exception>
    </member>
    <member name="P:System.Data.Objects.ObjectResult.ElementType">
      <summary>
              При переопределении в производном классе возвращает тип универсального <see cref="T:System.Data.Objects.ObjectResult`1" />.
            </summary>
      <returns>
              Тип универсального <see cref="T:System.Data.Objects.ObjectResult`1" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectResult.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>
              Возвращает значение, которое показывает, содержит ли коллекция, возвращенная запросом, объекты-коллекции.
            </summary>
      <returns>
              <see langword="true" /> Если коллекция, возвращаемая свойством запрос содержит коллекцию объектов. в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectResult`1.ElementType">
      <summary>
              Возвращает тип службы <see cref="T:System.Data.Objects.ObjectResult`1" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Type" />, который является типом результата <see cref="T:System.Data.Objects.ObjectResult`1" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectSet`1.EntitySet">
      <summary>
              Возвращает метаданные для набора сущностей, представленный этим <see cref="T:System.Data.Objects.ObjectSet`1" /> экземпляра.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Metadata.Edm.EntitySet" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectStateEntry.CurrentValues">
      <summary>
              Возвращает текущие значения свойств объекта или связи, ассоциированной с этим экземпляром <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </summary>
      <returns>
              Экземпляр типа <see cref="T:System.Data.Objects.CurrentValueRecord" />, который содержит текущие значения объекта или связи, ассоциированной с экземпляром <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectStateEntry.Entity">
      <summary>
              Возвращает объект сущности.
            </summary>
      <returns>
              Объект сущности.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectStateEntry.EntityKey">
      <summary>
              Возвращает или задает ключ сущности.
            </summary>
      <returns>
              Ключ сущности.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectStateEntry.EntitySet">
      <summary>
              Возвращает <see cref="T:System.Data.Metadata.Edm.EntitySetBase" /> для объекта или связи.
            </summary>
      <returns>
              <see cref="T:System.Data.Metadata.Edm.EntitySetBase" /> Для объекта или связи.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectStateEntry.IsRelationship">
      <summary>
              Возвращает значение, указывающее, является ли <see cref="T:System.Data.Objects.ObjectStateEntry" /> представляет связь.
            </summary>
      <returns>
              <see langword="true" /> Если <see cref="T:System.Data.Objects.ObjectStateEntry" /> представляет связь; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectStateEntry.ObjectStateManager">
      <summary>
              Возвращает состояние <see cref="T:System.Data.Objects.ObjectStateManager" /> для экземпляра <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Objects.ObjectStateManager" /> для <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectStateEntry.OriginalValues">
      <summary>
              Получает версию только для чтения исходных значений объекта или связи.
            </summary>
      <returns>
              Только для чтения версии исходных значений связи задать запись или сущности.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectStateEntry.RelationshipManager">
      <summary>
              Возвращает <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> экземпляра для объекта, представленного запись.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectStateEntry.State">
      <summary>
              Возвращает или задает состояние <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </summary>
      <returns>
              Состояние объекта <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectStateEntry.System#Data#Objects#DataClasses#IEntityChangeTracker#EntityState">
      <summary>
              Возвращает состояние <see cref="T:System.Data.EntityState" /> для экземпляра <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Data.EntityState" /> для <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </returns>
    </member>
    <member name="P:System.Data.Objects.ObjectStateManager.MetadataWorkspace">
      <summary>
              Возвращает рабочую область метаданных <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />, связанную с этим диспетчером состояний.
            </summary>
      <returns>
              Рабочая область метаданных <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />, связанная с этим соединением <see cref="T:System.Data.Objects.ObjectStateManager" />.
            </returns>
    </member>
    <member name="P:System.Data.PropertyConstraintException.PropertyName">
      <summary>
              Возвращает имя свойства, которое нарушает ограничение.
            </summary>
      <returns>
              Имя свойства, которое нарушает ограничение.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.Area">
      <summary>
               Возвращает значения NULL значение типа double, определяет область параметра DbGeography, который может принимать значение null, если это значение не представляет рабочую область.
            </summary>
      <returns>
              Допускающие значения NULL значение типа double, определяющий область, это значение DbGeography.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.CoordinateSystemId">
      <summary>
              Возвращает идентификатор, связанный с системы координат.
            </summary>
      <returns>
              Идентификатор, связанный с системы координат.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId">
      <summary>
               Возвращает идентификатор системы координат по умолчанию (SRID) для значения geography (WGS 84).
            </summary>
      <returns>
              По умолчанию идентификатор системы координат (SRID) для значений geography (WGS 84).
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.Dimension">
      <summary>
               Возвращает измерения данного <see cref="T:System.Data.Spatial.DbGeography" /> значение или, если значение коллекции, большой размер элемента.
            </summary>
      <returns>
              Измерения данного <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.ElementCount">
      <summary>
               Возвращает количество элементов в это значение DbGeography, если он представляет коллекцию географических.
               &lt; возвращает &gt; количество элементов в этом значении geography, если он представляет коллекцию значений других geography; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Число элементов в значении DbGeography.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.Elevation">
      <summary>
               Возвращает повышение прав (по оси Z) это значение DbGeography, если он представляет точку.
               &lt; возвращает &gt; значения высоты (по оси Z) это значение geography, если он представляет точку; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Повышение прав (по оси Z) этого значения DbGeography.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.EndPoint">
      <summary>
               Возвращает значение DbGeography, представляющее начальную точку, это значение может быть равно null, если это значение DbGeography не представляет кривую.
            </summary>
      <returns>
              Значение DbGeography, представляющее начальную точку этого значения.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.IsClosed">
      <summary>
               Возвращает значение NULL логическое значение, указывающее, ли это значение DbGeography закрыт, который может принимать значение null, если это значение не представляет кривую.
            </summary>
      <returns>
              <see langword="True" /> Если это значение DbGeography закрыт; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.IsEmpty">
      <summary>
              Возвращает значение NULL логическое значение, указывающее, является ли это значение DbGeography пустым.
            </summary>
      <returns>
              <see langword="True" /> Если это значение DbGeography пуст; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.Latitude">
      <summary>
               Возвращает координаты широты это значение DbGeography, если он представляет точку.
               значение координаты &lt; возвращает &gt; широты это значение geography, если он представляет точку; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Широта координат этого значения DbGeography.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.Length">
      <summary>
               Возвращает значения NULL значение типа double, указывающее длину параметра DbGeography, который может принимать значение null, если это значение не представляет кривую.
            </summary>
      <returns>
              Допускающие значения NULL значение типа double, указывающее длину этого значения DbGeography.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.Longitude">
      <summary>
               Возвращает координаты долготы это значение DbGeography, если он представляет точку.
               значение координаты &lt; возвращает &gt; долготы это значение geography, если он представляет точку; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Долгота координат этого значения DbGeography.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.Measure">
      <summary>
               Возвращает координату M (Мера) это значение DbGeography, если он представляет точку.
               значение координаты &lt; возвращает &gt; M (Мера) это значение geography, если он представляет точку; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Координата M (Мера) этого значения DbGeography.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.PointCount">
      <summary>
               Получает количество точек в это значение DbGeography, если он представляет linestring или линейной кольцо.
               &lt; возвращает &gt; количество элементов в этом значении geography, если он представляет linestring или линейной кольцо; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Количество точек в это значение DbGeography.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.ProviderValue">
      <summary>
               Возвращает представление этого значения DbGeography, характерной для базового поставщика, который он создан.
            </summary>
      <returns>
              Представление этого значения DbGeography.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.SpatialTypeName">
      <summary>
              Возвращает имя пространственного типа DBGeography.
            </summary>
      <returns>
              Имя пространственного типа DBGeography.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.StartPoint">
      <summary>
               Возвращает значение DbGeography, представляющее начальную точку, это значение может быть равно null, если это значение DbGeography не представляет кривую.
            </summary>
      <returns>
              Значение DbGeography, представляющее начальную точку этого значения.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeography.WellKnownValue">
      <summary>
               Возвращает или задает контракт сериализуемый хорошо известных представление данных этого значения DbGeography.
            </summary>
      <returns>
              Сериализуемый хорошо известных представление этого значения DbGeography контракт данных.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeographyWellKnownValue.CoordinateSystemId">
      <summary>
               Возвращает или задает идентификатор системы координат (SRID) это значение.
            </summary>
    </member>
    <member name="P:System.Data.Spatial.DbGeographyWellKnownValue.WellKnownBinary">
      <summary>
               Возвращает или задает известные двоичное представление этого значения.
            </summary>
    </member>
    <member name="P:System.Data.Spatial.DbGeographyWellKnownValue.WellKnownText">
      <summary>
               Возвращает или задает известные текстовое представление этого значения.
            </summary>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.Area">
      <summary>
               Возвращает значения NULL значение типа double, определяет область параметра DbGeometry, который может принимать значение null, если это значение не представляет рабочую область.
            </summary>
      <returns>
              Допускающие значения NULL значение типа double, определяющий область, это значение DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.Boundary">
      <summary>
              Возвращает границу объектов DbGeometry.
            </summary>
      <returns>
              Граница объектов DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.Centroid">
      <summary>
               Возвращает значение DbGeometry, которое представляет центроид параметра DbGeometry, который может принимать значение null, если это значение не представляет рабочую область.
            </summary>
      <returns>
              Значение DbGeometry, которое представляет центроид этого значения DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.ConvexHull">
      <summary>
               Возвращает выпуклая этого значения DbGeometry как другое значение DbGeometry.
            </summary>
      <returns>
              Выпуклая оболочка это значение DbGeometry другое значение DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.CoordinateSystemId">
      <summary>
              Возвращает идентификатор системы координат объекта DbGeometry.
            </summary>
      <returns>
              Идентификатор системы координат объекта DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId">
      <summary>
               Получает идентификатор системы координат по умолчанию (SRID) для значений geometry.
            </summary>
      <returns>
              По умолчанию идентификатор системы координат (SRID) для значений geometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.Dimension">
      <summary>
               Возвращает измерения данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение или, если значение представляет собой коллекцию, его большого элемента измерения.
            </summary>
      <returns>
              Измерения данного <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.ElementCount">
      <summary>
               Возвращает количество элементов в это значение DbGeometry, если он представляет коллекцию геометрических объектов.
               &lt; возвращает &gt; количество элементов в этом значении geometry, если он представляет коллекцию значений других geometry; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Число элементов в значении DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.Elevation">
      <summary>
               Возвращает повышение прав (по оси Z) это значение DbGeometry, если он представляет точку.
               &lt; возвращает &gt; повышение прав (по оси Z) это значение geometry, если он представляет точку; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Повышение прав (по оси Z) это значение DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.EndPoint">
      <summary>
               Возвращает значение DbGeometry, представляющее начальную точку, это значение может быть равно null, если это значение DbGeometry не представляет кривую.
            </summary>
      <returns>
              Значение DbGeometry, представляющее начальную точку этого значения.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.Envelope">
      <summary>
               Возвращает конверта (минимального ограничивающего прямоугольника), это значение DbGeometry как значение geometry.
            </summary>
      <returns>
              Конверт (минимального ограничивающего прямоугольника) это значение DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.ExteriorRing">
      <summary>
               Возвращает значение DbGeometry, представляющий внешнее кольцо параметра DbGeometry, который может принимать значение null, если это значение не представляет многоугольник.
            </summary>
      <returns>
              Значение DbGeometry, представляющий внешнее кольцо это значение DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.InteriorRingCount">
      <summary>
               Возвращает количество внутренних колец в это значение DbGeometry, если он представляет собой многоугольник.
               &lt; возвращает &gt; количество элементов в этом значении geometry, если он представляет собой многоугольник; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Количество внутреннюю кольцами в это значение DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.IsClosed">
      <summary>
               Возвращает значение NULL логическое значение, указывающее, ли это значение DbGeometry закрыт, который может принимать значение null, если это значение не представляет кривую.
            </summary>
      <returns>
              <see langword="True" /> Если это значение DbGeometry закрыт; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.IsEmpty">
      <summary>
              Возвращает значение NULL логическое значение, указывающее, было ли это значение DbGeometry пуст, которой может быть равно null, если это значение не представляет кривую.
            </summary>
      <returns>
              <see langword="True" /> Если это значение DbGeometry пуст; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.IsRing">
      <summary>
               Возвращает значение NULL логическое значение, указывающее, является ли это значение DbGeometry кольца, которое может принимать значение null, если это значение не представляет кривую.
            </summary>
      <returns>
              <see langword="True" /> Если это значение DbGeometry кольцо; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.IsSimple">
      <summary>
              Возвращает значение NULL логическое значение, указывающее, является ли это значение DbGeometry простой.
            </summary>
      <returns>
              <see langword="True" /> Если это значение DbGeometry проста; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.IsValid">
      <summary>
              Возвращает значение NULL логическое значение, указывающее, является ли допустимым значение DbGeometry.
            </summary>
      <returns>
              <see langword="True" /> Если это значение DbGeometry является допустимым; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.Length">
      <summary>
               Возвращает значения NULL значение типа double, указывающее длину параметра DbGeometry, который может принимать значение null, если это значение не представляет кривую.
            </summary>
      <returns>
              Длина этого значения DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.Measure">
      <summary>
               Получает величину (M координат) это значение DbGeometry, если он представляет точку.
               &lt; возвращает &gt; мер (M координат) значение этого значения geometry, если он представляет точку; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Измерения (M координат) это значение DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.PointCount">
      <summary>
               Получает количество точек в это значение DbGeometry, если он представляет linestring или линейной кольцо.
               &lt; возвращает &gt; количество элементов в этом значении geometry, если он представляет linestring или линейной кольцо; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Количество точек в это значение DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.PointOnSurface">
      <summary>
               Возвращает точку в области параметра DbGeometry, который может принимать значение null, если это значение не представляет рабочую область.
            </summary>
      <returns>
              Точка в области этого значения DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.ProviderValue">
      <summary>
               Возвращает представление этого значения DbGeometry, характерной для базового поставщика, который он создан.
            </summary>
      <returns>
              Представление этого значения DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.SpatialTypeName">
      <summary>
              Возвращает представление имени пространственный тип этого значения DbGeometry.
            </summary>
      <returns>
              Представление имени пространственный тип этого значения DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.StartPoint">
      <summary>
               Возвращает значение DbGeometry, представляющее начальную точку, это значение может быть равно null, если это значение DbGeometry не представляет кривую.
            </summary>
      <returns>
              Значение DbGeometry, представляющее начальную точку этого значения.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.WellKnownValue">
      <summary>
               Возвращает или задает контракт сериализуемый хорошо известных представление от данных это значение DbGeometry.
            </summary>
      <returns>
              Сериализуемый хорошо известных представление этого значения DbGeometry контракт данных.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.XCoordinate">
      <summary>
               Возвращает координату X это значение DbGeometry, если он представляет точку.
               значение координаты &lt; возвращает &gt; X это значение geometry, если он представляет точку; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Координата X это значение DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometry.YCoordinate">
      <summary>
               Возвращает координату Y это значение DbGeometry, если он представляет точку.
               значение координаты &lt; возвращает &gt; Y этого значения типа geometry, если он представляет точку; в противном случае <see langword="null" />. &lt; / возвращает &gt;
            </summary>
      <returns>
              Координата Y это значение DbGeometry.
            </returns>
    </member>
    <member name="P:System.Data.Spatial.DbGeometryWellKnownValue.CoordinateSystemId">
      <summary>
               Возвращает или задает идентификатор системы координат (SRID) это значение.
            </summary>
    </member>
    <member name="P:System.Data.Spatial.DbGeometryWellKnownValue.WellKnownBinary">
      <summary>
               Возвращает или задает известные двоичное представление этого значения.
            </summary>
    </member>
    <member name="P:System.Data.Spatial.DbGeometryWellKnownValue.WellKnownText">
      <summary>
               Возвращает или задает известные текстовое представление этого значения.
            </summary>
    </member>
    <member name="P:System.Data.Spatial.DbSpatialServices.Default">
      <summary>
              Возвращает службы по умолчанию для <see cref="T:System.Data.Spatial.DbSpatialServices" />.
            </summary>
      <returns>
              Службы по умолчанию.
            </returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlProviderServices.SingletonInstance">
      <summary>
              Возвращает одноэлементный экземпляр <see cref="T:System.Data.SqlClient.SqlProviderServices" />.
            </summary>
      <returns>
              Возвращает <see cref="T:System.Data.SqlClient.SqlProviderServices" />.
            </returns>
    </member>
    <member name="P:System.Data.UpdateException.StateEntries">
      <summary>
              Возвращает объекты <see cref="T:System.Data.Objects.ObjectStateEntry" /> для исключения <see cref="T:System.Data.UpdateException" />.
            </summary>
      <returns>
              Коллекция объектов <see cref="T:System.Data.Objects.ObjectStateEntry" />, представляющая одну сущность и 0 или более связей либо 0 сущностей и 1 или более связей.
            </returns>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbAggregate">
      <summary>
              Реализует базовую функциональность, необходимую для статистических выражений в <see langword="GroupBy" /> предложения.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbAndExpression">
      <summary>
              Представляет логическое умножение двух <see langword="Boolean" /> аргументы.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbApplyExpression">
      <summary>
              Представляет собой операцию применения, то есть вызов указанной функции для каждого элемента заданного входного набора.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbArithmeticExpression">
      <summary>
              Представляет собой арифметическую операцию, применяемую к двум числовым аргументам.
               Сложение, вычитание, умножение, деление, получение остатка от деления и отрицание — все это арифметические операции.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbBinaryExpression">
      <summary>
              Реализует базовую функциональность, необходимую выражениям, принимающим два операнда-выражения.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbCaseExpression">
      <summary>
              Представляет <see langword="When" />, <see langword="Then" />, и <see langword="Else" /> предложения <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbCastExpression">
      <summary>
              Представляет преобразование типа одного аргумента в указанный тип.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbCommandTree">
      <summary>
              Неизменяемый класс, который реализует базовую функциональность для запроса, Insert, Update, Delete и типы дерева команд вызова функции.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbComparisonExpression">
      <summary>
              Представляет собой операцию сравнения, применяемую к двум аргументам.
               «Равно», «больше чем», «больше или равно», «меньше чем», «меньше или равно», «не равно» — все это операторы сравнения.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbConstantExpression">
      <summary>
              Представляет константы различных видов (литералы).
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbCrossJoinExpression">
      <summary>
              Представляет безусловную операцию соединения между данными аргументами коллекции.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbDeleteCommandTree">
      <summary>
              Представляет операцию удаления одной строки, выраженную в виде дерева команд.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbDerefExpression">
      <summary>
              Представляет выражение, извлекающее сущность на основе указанной ссылки.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbDistinctExpression">
      <summary>
              Удаляет повторяющиеся значения из набора, заданного аргументом.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbElementExpression">
      <summary>
              Представляет преобразование аргумента указанного набора в одноэлементный набор.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbEntityRefExpression">
      <summary>
              Представляет выражение, которое извлекает ссылку из базового экземпляра сущности.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExceptExpression">
      <summary>
              Представляет операцию вычитания наборов, выраженных левым и правым операндами.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExpression">
      <summary>
              Представляет базовый тип для всех выражений.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExpressionBinding">
      <summary>
              Представляет набор входных данных для реляционных выражений, например <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />, <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> и <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExpressionKind">
      <summary>
              Содержит значения, используемые каждым классом выражений для обозначения представляемой им операции.
               Чтобы определить, какую операцию представляет конкретное выражение, можно извлечь свойство <see cref="P:System.Data.Common.CommandTrees.DbExpression.ExpressionKind" /> выражения <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.All">
      <summary>
              <see langword="true" />-для-все выражения.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.And">
      <summary>
              Логические выражения И.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Any">
      <summary>
              <see langword="true" />-для-любые выражения.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Case">
      <summary>
              Условные выражения с инструкцией CASE.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Cast">
      <summary>
              Выражения приведения полиморфных типов.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Constant">
      <summary>
              Выражения с постоянными значениями.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.CrossApply">
      <summary>
              Выражения с перекрестным применением.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin">
      <summary>
              Выражения с перекрестным соединением.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Deref">
      <summary>
              Выражения разыменования.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Distinct">
      <summary>
              Выражения для удаления повторов.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Divide">
      <summary>
              Выражения деления.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Element">
      <summary>
              Выражения преобразования набора в одинарный элемент.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.EntityRef">
      <summary>
              Выражения, возвращающие значения ссылок на сущность.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Equals">
      <summary>
              Выражения равенства.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Except">
      <summary>
              Выражения для вычитания наборов.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Filter">
      <summary>
              Выражения ограничения.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin">
      <summary>
              Выражения полного внешнего соединения.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Function">
      <summary>
              Выражение независимой функции.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan">
      <summary>
              Выражения «больше чем».
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals">
      <summary>
              Выражения «больше или равно».
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.GroupBy">
      <summary>
              Выражения группировки.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin">
      <summary>
              Выражения с внутренним соединением.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Intersect">
      <summary>
              Выражения пересечения наборов.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty">
      <summary>
              Выражения для определения пустых наборов.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.IsNull">
      <summary>
              Выражения для определения значений NULL.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.IsOf">
      <summary>
              Выражения сравнения типов (с указанием типа или подтипа).
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly">
      <summary>
              Выражения сравнения типов (с указанием только типа).
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Lambda">
      <summary>
              Функция лямбда-выражения.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin">
      <summary>
              Выражения левого внешнего соединения.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.LessThan">
      <summary>
              Выражения «меньше чем».
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals">
      <summary>
              Выражения «меньше или равно».
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Like">
      <summary>
              Выражения сравнения строк.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Limit">
      <summary>
              Выражения с ограничением количества результатов (TOP n).
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Minus">
      <summary>
              Выражения вычитания.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Modulo">
      <summary>
              Выражения получения остатка от деления.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Multiply">
      <summary>
              Выражения умножения.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.NewInstance">
      <summary>
              Выражения создания экземпляров, строк и наборов.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Not">
      <summary>
              Логические выражения НЕ.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.NotEquals">
      <summary>
              Выражения неравенства.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Null">
      <summary>
              Выражения со значением NULL.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType">
      <summary>
              Выражения с элементами набора по типу (или подтипу).
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly">
      <summary>
              Выражения с элементами наборов по точному типу.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Or">
      <summary>
              Логические выражения ИЛИ.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.OuterApply">
      <summary>
              Выражения с внешним применением.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference">
      <summary>
              Выражения со ссылками на параметры.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Plus">
      <summary>
              Выражения сложения.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Project">
      <summary>
              Выражения проекции.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Property">
      <summary>
              Выражения для извлечения статических свойств и свойств экземпляров.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Ref">
      <summary>
              Выражения со ссылками.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.RefKey">
      <summary>
              Выражения, возвращающие значение ключа для ссылки.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation">
      <summary>
              Выражения перемещения по связям (композиции или ассоциации).
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Scan">
      <summary>
              Выражения просмотра наборов сущностей или связей.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Skip">
      <summary>
              Пропуск элементов упорядоченной коллекции.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Sort">
      <summary>
              Выражения сортировки.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.Treat">
      <summary>
              Выражения преобразования типов.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus">
      <summary>
              Выражения отрицания.
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.UnionAll">
      <summary>
              Выражения объединения наборов (с повторами).
            </summary>
    </member>
    <member name="F:System.Data.Common.CommandTrees.DbExpressionKind.VariableReference">
      <summary>
              Выражения со ссылками на переменные.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExpressionVisitor">
      <summary>
              Определяет базовые возможности, которые должны реализовывать посетители, не возвращающие результирующее значение.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1">
      <summary>
              Определяет базовые возможности, которые должны реализовывать посетители, возвращающие результирующее значение определенного типа.
            </summary>
      <typeparam name="TResultType">
                Тип результата, формируемого посетителя.
              </typeparam>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbFilterExpression">
      <summary>
              Представляет предикат, применяемый для фильтрации входного набора.
               В результате формируется набор элементов, которые удовлетворяют предикату.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbFunctionAggregate">
      <summary>
              Поддерживает стандартные агрегатные функции, такие как MIN, MAX, AVG, SUM и т. д.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbFunctionCommandTree">
      <summary>
              Представляет вызов функции базы данных.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbFunctionExpression">
      <summary>
              Пример вызова функции.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbGroupAggregate">
      <summary>
              Представляет коллекцию элементов, составляющих группу.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbGroupByExpression">
      <summary>
              Представляет операцию группирования.
               Эта операция группирует элементы во входном наборе на основании заданных ключевых выражений, а затем применяет указанные статистические функции.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding">
      <summary>
              Определяет для входного набора привязку к выражению <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbInsertCommandTree">
      <summary>
              Представляет собой операцию вставки одной строки, выраженную деревом команд.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbIntersectExpression">
      <summary>
              Представляет операцию пересечения наборов между левым и правым операндами.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbIsEmptyExpression">
      <summary>
              Представляет определение пустого набора, примененное к аргументу, содержащему один набор.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbIsNullExpression">
      <summary>
              Представляет определение значения NULL, применяемого к одному аргументу.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbIsOfExpression">
      <summary>
              Представляет сравнение типа единственного аргумента с указанным типом.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbJoinExpression">
      <summary>
              Представляет операцию внутреннего, левого внешнего или полного внешнего соединения между указанными параметрами коллекции при указанном условии соединения.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbLambda">
      <summary>
               Представляет лямбда-функции, который может быть вызван для создания <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbLambdaExpression">
      <summary>
              Позволяет приложению лямбда-функции аргументы, представленные <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> объектов.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbLikeExpression">
      <summary>
              Представляет сравнение строки с указанным шаблоном с необязательной экранирующей строкой.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbLimitExpression">
      <summary>
              Представляет ограничение на количество элементов в коллекции аргументов, соответствующее указанному значению предела.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbModificationClause">
      <summary>
              Задает одно предложение в операции вставки или обновления изменения.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbModificationCommandTree">
      <summary>
              Представляет операцию языка обработки данных (DML), выраженную деревом команд.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbNewInstanceExpression">
      <summary>
              Представляет структуру нового экземпляра определенного типа, включая типы набора и записи.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbNotExpression">
      <summary>
              Представляет операцию логического не из одного <see langword="Boolean" /> аргумент.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbNullExpression">
      <summary>
              Представляет ссылку на типизированный литерал со значением null.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbOfTypeExpression">
      <summary>
              Представляет методы для получения элементов указанного типа из заданного аргумента набора.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbOrExpression">
      <summary>
              Представляет логическое или для двух <see langword="Boolean" /> аргументы.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression">
      <summary>
              Представляет ссылку на параметр, объявленный в дереве команд, которое содержит это выражение.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbProjectExpression">
      <summary>
              Представляет проекцию заданного входного набора на указанное выражение.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbPropertyExpression">
      <summary>
              Предоставляет методы и свойства для получения свойства экземпляра.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbQuantifierExpression">
      <summary>
              Представляет операцию с квантором заданного типа над элементами указанного набора входных данных.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbQueryCommandTree">
      <summary>
              Представляет операцию запроса в виде дерева команд.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbRefExpression">
      <summary>
              Представляет строго типизированную ссылку на определенный экземпляр в наборе сущностей.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbRefKeyExpression">
      <summary>
              Представляет методы для получения ключевого значения (в структурной форме) из базового эталонного значения.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression">
      <summary>
              Представляет средства навигации связи.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbScanExpression">
      <summary>
              Представляет просмотр набора сущностей или связей, как указано свойством <see cref="P:System.Data.Common.CommandTrees.DbScanExpression.Target" />.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbSetClause">
      <summary>
              Определяет предложение в операции модификации, задающей значение свойства.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbSkipExpression">
      <summary>
              Пропускает заданное число элементов в наборе входных данных.
              <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> можно использовать только после входной коллекции были отсортированы в соответствии с ключами сортировки.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbSortClause">
      <summary>
              Задает ключ сортировки, используемый как часть порядка сортировки в выражении <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbSortExpression">
      <summary>
              Представляет операцию сортировки, примененную к элементам заданного набора входных значений на основе указанных ключей сортировки.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbTreatExpression">
      <summary>
              Представляет операцию преобразования типов, применяемую к полиморфному аргументу.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbUnaryExpression">
      <summary>
              Реализует основные функции, необходимые для выражений, принимающих одиночный аргумент-выражение.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbUnionAllExpression">
      <summary>
              Представляет операцию объединения (без удаления дубликатов) наборов, заданных левым и правым операндами.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbUpdateCommandTree">
      <summary>
              Представляет однострочную операцию обновления, выраженную в виде дерева команд.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression">
      <summary>
              Представляет ссылку на переменную, в настоящий момент находящуюся в области.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor">
      <summary>
               Посещает каждый элемент дерева выражений из заданного корневого выражения.
               При изменении любого элемента дерева перестраивается корневой и возвращается новый корневой выражения; в противном случае возвращается исходное выражение корневой.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
      <summary>
               Предоставляет API для создания выражений <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> и обеспечивает доступ к этому API в форме методов расширения в самом типе выражения.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
      <summary>
               Предоставляет API-Интерфейс для создания <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s вызова канонические функции модели EDM, который позволяет этого API должен осуществляться как методы расширения в самом типе выражения.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row">
      <summary>
              Предоставляет средства для вызова как конструктор <see cref="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />.
            </summary>
    </member>
    <member name="T:System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions">
      <summary>
              Предоставляет API-Интерфейс для создания <see cref="T:System.Data.Common.CommandTrees.DbExpression" />позволяет s, вызывать другом Пространственные канонические функции модели EDM и, если применимо, API должен осуществляться как методы расширения в самом типе выражения.
            </summary>
    </member>
    <member name="T:System.Data.Common.DataRecordInfo">
      <summary>
              Предоставляет доступ к сведениям о структурном типе и о столбцах для <see cref="T:System.Data.Common.DbDataRecord" />.
            </summary>
    </member>
    <member name="T:System.Data.Common.DbCommandDefinition">
      <summary>
              Определяет кэшируемый план команд.
            </summary>
    </member>
    <member name="T:System.Data.Common.DbProviderManifest">
      <summary>
               Интерфейс метаданных для всех типов для типов CLR 
            </summary>
    </member>
    <member name="T:System.Data.Common.DbProviderServices">
      <summary>
               Фабрику для создания определения команд; Используйте этот объект в качестве аргумента для метода IServiceProvider.GetService фабрики поставщика; 
            </summary>
    </member>
    <member name="T:System.Data.Common.DbXmlEnabledProviderManifest">
      <summary>
              Представляет базовый класс, реализующий <see cref="T:System.Data.Common.DbProviderManifest" /> на основе определения XML.
               Класс <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /> можно использовать для получения сведений о конкретном поставщике во время выполнения.
            </summary>
    </member>
    <member name="T:System.Data.Common.EntityRecordInfo">
      <summary>
              Предоставляет доступ к метаданным сущности.
            </summary>
    </member>
    <member name="T:System.Data.Common.EntitySql.EntitySqlParser">
      <summary>
              Представляет класс, средство синтаксического анализа для открытого Entity SQL.
            </summary>
    </member>
    <member name="T:System.Data.Common.EntitySql.FunctionDefinition">
      <summary>
               Определение встроенной функции, возвращаемые как часть запроса Entity SQL <see cref="T:System.Data.Common.EntitySql.ParseResult" />.
            </summary>
    </member>
    <member name="T:System.Data.Common.EntitySql.ParseResult">
      <summary>
               Сведения о результате синтаксического анализа SQL сущности.
            </summary>
    </member>
    <member name="T:System.Data.Common.FieldMetadata">
      <summary>
              Предоставляет доступ к метаданным поля для объекта <see cref="T:System.Data.Common.DataRecordInfo" />.
            </summary>
    </member>
    <member name="T:System.Data.EntityClient.EntityCommand">
      <summary>
              Представляет команду для концептуального уровня.
            </summary>
    </member>
    <member name="T:System.Data.EntityClient.EntityConnection">
      <summary>
              Содержит ссылку на концептуальную модель и подключение к источнику данных.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.Data.EntityClient.EntityConnectionStringBuilder">
      <summary>
              Предоставляет простой способ создания строк соединений, используемых EntityClient, и управления их содержимым.
            </summary>
    </member>
    <member name="T:System.Data.EntityClient.EntityDataReader">
      <summary>
              Считывает однопроходные потоки строк из источника данных.
            </summary>
    </member>
    <member name="T:System.Data.EntityClient.EntityParameter">
      <summary>
              Представляет параметр, используемый в EntityCommand.
            </summary>
    </member>
    <member name="T:System.Data.EntityClient.EntityParameterCollection">
      <summary>
              Представляет коллекцию параметров, связанных с командой <see cref="T:System.Data.EntityClient.EntityCommand" />.
            </summary>
    </member>
    <member name="T:System.Data.EntityClient.EntityProviderFactory">
      <summary>
              Представляет набор методов для создания экземпляров реализации поставщика для классов источника данных.
            </summary>
    </member>
    <member name="T:System.Data.EntityClient.EntityTransaction">
      <summary>
              Указывает транзакцию для объекта <see cref="P:System.Data.EntityClient.EntityCommand" />.
            </summary>
    </member>
    <member name="T:System.Data.EntityCommandCompilationException">
      <summary>
              Представляет ошибки, которые возникают во время компиляции команды, если не удается сформировать дерево команд, представляющее текст команды.
            </summary>
    </member>
    <member name="T:System.Data.EntityCommandExecutionException">
      <summary>
              Представляет ошибки, возникающие, когда поставщик базового хранилища не может выполнить заданную команду.
               Это исключение, как правило, зависит от поставщика.
            </summary>
    </member>
    <member name="T:System.Data.EntityException">
      <summary>
              Представляет ошибки, связанные с Entity Framework, которые возникают в <see langword="EntityClient" /> пространства имен.
              <see langword="EntityException" /> Является базовым классом для всех исключений платформы Entity Framework с <see langword="EntityClient" />.
            </summary>
    </member>
    <member name="T:System.Data.EntityKey">
      <summary>
              Предоставляет устойчивую ссылку на объект, являющийся экземпляром типа сущности.
            </summary>
    </member>
    <member name="T:System.Data.EntityKeyMember">
      <summary>
              Представляет имя ключа и значение, которое является частью ключа <see cref="T:System.Data.EntityKey" />.
            </summary>
    </member>
    <member name="T:System.Data.EntitySqlException">
      <summary>
              Представляет ошибки, возникающие при синтаксическом анализе текста команды на языке Entity SQL.
               Это исключение возникает при нарушении синтаксических и семантических правил.
            </summary>
    </member>
    <member name="T:System.Data.EntityState">
      <summary>
              Состояние объекта сущности.
            </summary>
    </member>
    <member name="F:System.Data.EntityState.Detached">
      <summary>
              Объект существует, но не отслеживается.
               Сущность находится в этом состоянии сразу после создания и до добавления в контекст объекта.
               Сущность также находится в этом состоянии после ее удаления из контекста с помощью вызова метода <see cref="M:System.Data.Objects.ObjectContext.Detach(System.Object)" /> или в случае ее загрузки с помощью <see cref="F:System.Data.Objects.MergeOption.NoTracking" /><see cref="T:System.Data.Objects.MergeOption" />.
               Экземпляр <see cref="T:System.Data.Objects.ObjectStateEntry" />, который связан с объектами в состоянии <see cref="F:System.Data.EntityState.Detached" />, отсутствует.
            </summary>
    </member>
    <member name="F:System.Data.EntityState.Unchanged">
      <summary>
              Объект не был изменен с момента присоединения к контексту или с момента последнего вызова метода <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" />.
            </summary>
    </member>
    <member name="F:System.Data.EntityState.Added">
      <summary>
              Объект является новым, он был добавлен в контекст объекта без вызова метода <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" />.
               После сохранения изменений состояние объекта меняется на <see cref="F:System.Data.EntityState.Unchanged" />.
               У объектов в состоянии <see cref="F:System.Data.EntityState.Added" /> отсутствуют исходные значения в <see cref="T:System.Data.Objects.ObjectStateEntry" />.
            </summary>
    </member>
    <member name="F:System.Data.EntityState.Deleted">
      <summary>
              Объект был удален из контекста объекта.
               После сохранения изменений состояние объекта меняется на <see cref="F:System.Data.EntityState.Detached" />.
            </summary>
    </member>
    <member name="F:System.Data.EntityState.Modified">
      <summary>
              Одно из скалярных свойств объекта было изменено, а метод <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> не был вызван.
               В сущностях POCO без посредников, отслеживающих изменения, состояние измененных свойств при вызове метода <see cref="F:System.Data.EntityState.Modified" /> меняется на <see cref="M:System.Data.Objects.ObjectContext.DetectChanges" />.
               После сохранения изменений состояние объекта меняется на <see cref="F:System.Data.EntityState.Unchanged" />.
            </summary>
    </member>
    <member name="T:System.Data.IExtendedDataRecord">
      <summary>
              Предоставляет доступ к значениям столбцов в каждой строке <see cref="T:System.Data.Common.DbDataRecord" /> для <see cref="T:System.Data.Common.DbDataReader" />.
            </summary>
    </member>
    <member name="T:System.Data.InvalidCommandTreeException">
      <summary>
              Исключение, указывающее на недопустимость дерева команд.
               Это исключение в настоящее время не вызывается в любом месте в Entity Framework.
            </summary>
    </member>
    <member name="T:System.Data.Mapping.EntityViewContainer">
      <summary>
              Базовый класс для типа, созданного во время разработки для хранения созданных представлений.
            </summary>
    </member>
    <member name="T:System.Data.Mapping.EntityViewGenerationAttribute">
      <summary>
              Атрибут для разметки сборок, содержащих тип созданных представлений.
            </summary>
    </member>
    <member name="T:System.Data.Mapping.MappingItemCollection">
      <summary>
              Коллекция объектов <see cref="T:System.Data.Metadata.Edm.ItemCollection" />, предназначенных для хранения сведений о сопоставлении.
            </summary>
    </member>
    <member name="T:System.Data.Mapping.StorageMappingItemCollection">
      <summary>
              Представляет коллекцию элементов в области сопоставления хранилища (сопоставление CS).
            </summary>
    </member>
    <member name="T:System.Data.MappingException">
      <summary>
              Исключение, возникающее при сбое запросов связанной службы сопоставления.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.AssociationEndMember">
      <summary>
              Представляет <see langword="End" /> ассоциации в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.AssociationSet">
      <summary>
              Представляет набор ассоциаций в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.AssociationSetEnd">
      <summary>
              Представляет <see langword="End" /> набора ассоциаций в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.AssociationType">
      <summary>
              Представляет ассоциацию в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.BuiltInTypeKind">
      <summary>
              Представляет перечисление, содержащее список всех встроенных типов в концептуальной модели.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.AssociationEndMember">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.AssociationEndMember" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.AssociationSetEnd">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.AssociationSetEnd" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.AssociationSet">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.AssociationSet" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.AssociationType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.AssociationType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EntitySetBase">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.EntitySetBase" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EntityTypeBase">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.EntityTypeBase" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.CollectionType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.CollectionType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.CollectionKind">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.CollectionKind" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.ComplexType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.ComplexType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.Documentation">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.Documentation" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.OperationAction">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.OperationAction" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EdmType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.EdmType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EntityContainer">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EntitySet">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.EntitySet" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EntityType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.EntityType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EnumType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.EnumType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EnumMember">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.EdmEnumMember" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.Facet">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.Facet" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EdmFunction">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.FunctionParameter">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.FunctionParameter" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.GlobalItem">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.GlobalItem" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.MetadataProperty">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.MetadataProperty" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.NavigationProperty">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.NavigationProperty" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.MetadataItem">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.MetadataItem" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EdmMember">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.EdmMember" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.ParameterMode">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.ParameterMode" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.PrimitiveType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.PrimitiveType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.PrimitiveTypeKind">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.PrimitiveTypeKind" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.EdmProperty">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.EdmProperty" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.ProviderManifest">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.ProviderManifest" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.ReferentialConstraint">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.ReferentialConstraint" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RefType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.RefType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RelationshipEndMember">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.RelationshipEndMember" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RelationshipMultiplicity">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RelationshipSet">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.RelationshipSet" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RelationshipType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.RelationshipType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.RowType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.RowType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.SimpleType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.SimpleType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.StructuralType">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.StructuralType" />.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.BuiltInTypeKind.TypeUsage">
      <summary>
              Элемент перечисления, указывающий тип объекта <see cref="T:System.Data.Metadata.Edm.TypeUsage" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.CollectionKind">
      <summary>
              Представляет собой перечисление, задающее вид коллекции, применяемой к свойствам в файле CSDL.
               Это можно применять к свойствам любого типа.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.CollectionKind.None">
      <summary>
              Это свойство не является коллекцией.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.CollectionKind.Bag">
      <summary>
              Эта коллекция обладает семантикой контейнера.
               Элементы неупорядочены, повторы допускаются.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.CollectionKind.List">
      <summary>
              Эта коллекция обладает семантикой списка.
               Порядок элементов детерминирован, повторы допускаются.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.CollectionType">
      <summary>
              Представляет коллекцию экземпляров конкретного типа.
               Нельзя явно определять <see cref="T:System.Data.Metadata.Edm.CollectionType" /> в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.ComplexType">
      <summary>
              Представляет сложный тип в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.ConcurrencyMode">
      <summary>
              Указывает параметры параллелизма для свойств в концептуальной модели.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.ConcurrencyMode.None">
      <summary>
              Это свойство никогда не проверяется во время записи.
               Это режим параллелизма по умолчанию.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.ConcurrencyMode.Fixed">
      <summary>
              Это свойство всегда проверяется во время записи.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.DataSpace">
      <summary>
              Задает имена по умолчанию для моделей в платформе Entity Framework.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.DataSpace.OSpace">
      <summary>
              Представляет имя по умолчанию для модели объектов.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.DataSpace.CSpace">
      <summary>
              Представляет имя по умолчанию для концептуальной модели.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.DataSpace.SSpace">
      <summary>
              Представляет имя по умолчанию для модели хранения.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.DataSpace.OCSpace">
      <summary>
              Представляет имя по умолчанию для сопоставления модели объектов с концептуальной моделью.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.DataSpace.CSSpace">
      <summary>
              Представляет имя по умолчанию для сопоставления концептуальной модели с моделью хранения.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.Documentation">
      <summary>
              Представляет документацию, связанную с конструкцией концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmError">
      <summary>
              Инкапсулирует сведения об ошибке для универсальной ошибке концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmFunction">
      <summary>
              Представляет сведения о функциях, которые могут вызываться из запросов, написанных на языке запросов Entity SQL.
               Это могут быть встроенные функции, доступ к которым предоставляет поставщик хранения, или определяемые пользователем функции в какой-либо базе данных.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmItemCollection">
      <summary>
              Загружает метаданные о концептуальной модели.
               Метод EdmItemCollection загружает метаданные из CSDL-файлов.
               Этот класс является производным от класса <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmMember">
      <summary>
              Представляет собой элемент, который может иметь любой тип <see cref="T:System.Data.Metadata.Edm.StructuralType" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmProperty">
      <summary>
              Представляет свойство для <see cref="T:System.Data.Metadata.Edm.EntityType" /> в концептуальной модели.
               Класс <see cref="T:System.Data.Metadata.Edm.EdmProperty" /> происходит от класса <see cref="T:System.Data.Metadata.Edm.EdmMember" /> и предоставляет аспекты <see cref="P:System.Data.Metadata.Edm.EdmProperty.Default" /> и <see cref="P:System.Data.Metadata.Edm.EdmProperty.Nullable" /> для типа свойства <see cref="T:System.Data.Metadata.Edm.EdmProperty" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmSchemaError">
      <summary>
              Содержит подробные сведения об ошибке схемы концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmSchemaErrorSeverity">
      <summary>
              Указывает степень серьезность ошибки.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.EdmSchemaErrorSeverity.Warning">
      <summary>
              Предупреждение указывает на наличие некоторых проблем в схеме, при этом она все еще может использоваться.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.EdmSchemaErrorSeverity.Error">
      <summary>
              Ошибка указывает, что возникла серьезная проблема и схема не может использоваться.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EdmType">
      <summary>
              Представляет базовый класс для всех типов в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EntityContainer">
      <summary>
              Представляет контейнер сущностей в концептуальной модели.
               Контейнер <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> является логическим группированием наборов сущностей и наборов ассоциаций.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EntitySet">
      <summary>
              Представляет набор сущностей в концептуальной модели.
               Набор сущностей <see cref="T:System.Data.Metadata.Edm.EntitySet" /> для типа <see cref="T:System.Data.Metadata.Edm.EntityType" /> содержит экземпляры <see cref="T:System.Data.Metadata.Edm.EntityType" /> или любые из его подтипов.
               Можно определить несколько наборов <see cref="T:System.Data.Metadata.Edm.EntitySet" />, используя один и тот же тип <see cref="T:System.Data.Metadata.Edm.EntityType" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EntitySetBase">
      <summary>
              Базовый класс объектов <see cref="T:System.Data.Metadata.Edm.EntitySet" /> и <see cref="T:System.Data.Metadata.Edm.RelationshipSet" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EntityType">
      <summary>
              Представляет определенный тип данных, например сущность customer или order, в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EntityTypeBase">
      <summary>
              Базовый тип для типов <see cref="T:System.Data.Metadata.Edm.EntityType" /> и <see cref="T:System.Data.Metadata.Edm.RelationshipType" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EnumMember">
      <summary>
               Представляет член перечисления.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.EnumType">
      <summary>
               Представляет тип перечисления.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.Facet">
      <summary>
              Предоставляет дополнительные сведения об элементах.
               В ADO.NET иерархии типов метаданных, аспекты предоставляют дополнительные сведения об элементах, основываясь на объявленном типе элемента. </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.FacetDescription">
      <summary>
              Задает описание аспекта.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.FunctionParameter">
      <summary>
              Описывает параметры функции <see cref="T:System.Data.Metadata.Edm.EdmFunction" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.GlobalItem">
      <summary>
              Представляет базовый класс элементов для всех типов концептуальной модели и контейнерах сущностей.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.ItemCollection">
      <summary>
              Базовый класс для классов <see cref="T:System.Data.Metadata.Edm.ObjectItemCollection" />, <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> и <see cref="T:System.Data.Mapping.StorageMappingItemCollection" />.
               Класс <see cref="T:System.Data.Metadata.Edm.ItemCollection" /> является абстрактным и содержит основной API для загрузки и размещения метаданных, хранящихся в памяти.
               Этот класс является производным от класса <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.MetadataItem">
      <summary>
              Представляет базовый класс элемента для всех метаданных в иерархии типов метаданных ADO.NET. </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.MetadataProperty">
      <summary>
              Представляет атрибут метаданных для элемента в иерархии метаданных ADO.NET.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.MetadataWorkspace">
      <summary>
              Представляет ADO.NET компонент службы метаданных среды выполнения, который обеспечивает поддержку извлечения метаданных из различных источников.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.NavigationProperty">
      <summary>
              Представляет навигацию от одного типа сущности к другому типу сущности в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.ObjectItemCollection">
      <summary>
              Класс для представления коллекции элементов для слоя объектов.
               Большая часть реализации для фактического технического обслуживания коллекции выполняется в коллекции ItemCollection.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.OperationAction">
      <summary>
              Указывает список возможных действий, когда родительский <see langword="End" /> из <see cref="T:System.Data.Metadata.Edm.RelationshipType" /> удаляется.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.OperationAction.None">
      <summary>
              Только родительский элемент <see langword="End" /> может быть удален.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.OperationAction.Cascade">
      <summary>
              При удалении родительского элемента <see langword="End" /> будет удален, его связанных дочерних элементов также удаляются.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.OperationAction.Restrict">
      <summary>
              Родительский <see langword="End" /> нельзя удалить, если он имеет один или несколько связанных дочерних элементов.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.ParameterMode">
      <summary>
              Задает направление параметра.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.ParameterMode.In">
      <summary>
              Входной параметр.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.ParameterMode.Out">
      <summary>
              Выходной параметр.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.ParameterMode.InOut">
      <summary>
              Параметр, являющийся и входным, и выходным.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.ParameterMode.ReturnValue">
      <summary>
              Возвращаемое значение метода.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.ParameterTypeSemantics">
      <summary>
              Указывает семантику типа, которая используется для разрешения перегрузок функций.
               Каждый поставщик хранения должен использовать эти флаги перечисления в файле манифеста поставщика для каждого определения функции.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion">
      <summary>
              Флаг, указывающий неявное преобразование между данными типами аргументов и формальными типами аргументов.
               Это тип преобразования по умолчанию.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion">
      <summary>
              Флаг, указывающий повышения типов между данными типами аргументов и формальными типами аргументов.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly">
      <summary>
              Флаг, задающий использование только строгой эквивалентности.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.PrimitiveType">
      <summary>
              Описывает .NET Framework примитивных типов, типов-примитивов концептуальной модели и типов-примитивов поставщика хранилища.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.PrimitiveTypeKind">
      <summary>
              Задает типы-примитивы, как определено в модели EDM.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Binary">
      <summary>
              Двоичный тип.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Boolean">
      <summary>
              Тип Boolean.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Byte">
      <summary>
              Тип Byte.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.DateTime">
      <summary>
              Тип DateTime.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Decimal">
      <summary>
              Тип Decimal.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Double">
      <summary>
              Тип Double.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Guid">
      <summary>
              Тип идентификатора Guid.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Single">
      <summary>
              Тип Single.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.SByte">
      <summary>
              Тип SByte.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Int16">
      <summary>
              Тип Int16.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Int32">
      <summary>
              Тип Int32.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Int64">
      <summary>
              Тип Int64.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.String">
      <summary>
              Тип String.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Time">
      <summary>
              Тип времени.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.DateTimeOffset">
      <summary>
              Тип DateTimeOffset.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Geometry">
      <summary>
              Тип Geometry.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.Geography">
      <summary>
              Тип Geography.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeometryPoint">
      <summary>
              Тип геометрического точки.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeometryLineString">
      <summary>
              Тип строки геометрического строки.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeometryPolygon">
      <summary>
              Тип геометрического многоугольника.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeometryMultiPoint">
      <summary>
              Геометрический тип многоточечного.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeometryMultiLineString">
      <summary>
              Тип геометрического многострочный текст.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeometryMultiPolygon">
      <summary>
              Геометрический тип нескольких многоугольников.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeometryCollection">
      <summary>
              Тип геометрической коллекции.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeographyPoint">
      <summary>
              Тип географических точек.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeographyLineString">
      <summary>
              Тип строки географической строки.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeographyPolygon">
      <summary>
              Тип географической многоугольника.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeographyMultiPoint">
      <summary>
              Географический тип многоточечного.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeographyMultiLineString">
      <summary>
              Тип географической многострочный текст.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeographyMultiPolygon">
      <summary>
              Географический тип нескольких многоугольников.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PrimitiveTypeKind.GeographyCollection">
      <summary>
              Тип географической коллекции.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.PropertyKind">
      <summary>
              Указывает типы атрибутов элемента в концептуальной модели.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PropertyKind.System">
      <summary>
              Элемент перечисления, показывающий, что атрибут элемента является System.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.PropertyKind.Extended">
      <summary>
              Элемент перечисления, показывающий, что атрибут элемента является Extended.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1">
      <summary>
              Представляет коллекцию элементов в иерархии метаданных ADO.NET, предоставляя коллекцию с расширенными возможностями поиска, доступную только для чтения.
               Этот класс является производным от класса <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection" />. </summary>
      <typeparam name="T">
                Тип элементов в коллекции.
              </typeparam>
    </member>
    <member name="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator">
      <summary>
              Поддерживает простой итератор для коллекции <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.ReferentialConstraint">
      <summary>
              Описывает ссылочные ограничения связей в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.RefType">
      <summary>
              Предоставляет адрес сущности для операций с этой сущностью.
               Не удается определить <see cref="T:System.Data.Metadata.Edm.RefType" /> в концептуальной модели схемы явным образом.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.RelationshipEndMember">
      <summary>
              Определяет <see langword="End" /> элемент для <see cref="T:System.Data.Metadata.Edm.RelationshipType" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.RelationshipMultiplicity">
      <summary>
              Представляет сведения о кратности о <see langword="End" /> типа связи.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne">
      <summary>
              Нижняя граница диапазона — ноль, а верхняя граница — один.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.RelationshipMultiplicity.One">
      <summary>
              Нижняя граница диапазона — один, и верхняя граница — один.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.RelationshipMultiplicity.Many">
      <summary>
              Нижняя граница диапазона — ноль, а верхняя граница имеет значение NULL.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.RelationshipSet">
      <summary>
              Представляет набор связей в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.RelationshipType">
      <summary>
              Представляет базовый класс для связей в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.RowType">
      <summary>
              Описывает строку, например результат запроса.
               Этот класс является производным от класса <see cref="T:System.Data.Metadata.Edm.StructuralType" />.
               Структура типа строки зависит от того, какие столбцы базы данных проецируются в запросе.
              <see cref="T:System.Data.Metadata.Edm.RowType" /> Может быть полезно в функции концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.SimpleType">
      <summary>
              Базовый класс, который описывает типы-примитивы в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.StoreGeneratedPattern">
      <summary>
              Представляет перечисление, которое задает три параметра, указывающее, является ли столбец в языке определения схемы хранения (SSDL) (.ssdl) необходимо указать значение во время вставки и обновления.
              
                ADO.NET Считывает значение столбца и сохраняет его в кэше.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.StoreGeneratedPattern.None">
      <summary>
              Значение, указывающее, что это свойство сформировано не сервером.
               Это значение по умолчанию.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.StoreGeneratedPattern.Identity">
      <summary>
              Значение формируется при вставке и остается неизменным после обновления.
            </summary>
    </member>
    <member name="F:System.Data.Metadata.Edm.StoreGeneratedPattern.Computed">
      <summary>
              Значение формируется как при вставке, так и при обновлении.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.StoreItemCollection">
      <summary>
              Загружает метаданные о модели хранения (базы данных).
               Класс <see cref="T:System.Data.Metadata.Edm.StoreItemCollection" /> загружает метаданные из SSDL-файлов.
               Этот класс является производным от класса <see cref="T:System.Data.Metadata.Edm.ItemCollection" />.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.StructuralType">
      <summary>
              Базовый тип для всех типов в концептуальной модели, имеющих элементов.
            </summary>
    </member>
    <member name="T:System.Data.Metadata.Edm.TypeUsage">
      <summary>
              Описывает тип и список аспектов для этого типа.
            </summary>
    </member>
    <member name="T:System.Data.MetadataException">
      <summary>
              Исключение, возникающее при сбое запросов метаданных связанной службы.
            </summary>
    </member>
    <member name="T:System.Data.ObjectNotFoundException">
      <summary>
              Исключение, возникающее при отсутствии объекта.
            </summary>
    </member>
    <member name="T:System.Data.Objects.CompiledQuery">
      <summary>
              Представляет кэшируемый запрос LINQ to Entities.
            </summary>
    </member>
    <member name="T:System.Data.Objects.CurrentValueRecord">
      <summary>
              Предоставляет доступ к текущим значениям данных объекта.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.ComplexObject">
      <summary>
              Базовый класс для сложных типов.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute">
      <summary>
              Атрибут, указывающий, что свойство представляет сложное свойство.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute">
      <summary>
              Атрибут, указывающий, что класс представляет сложный тип.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute">
      <summary>
              Атрибут, указывающий, что класс представляет тип сущности.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EdmEnumTypeAttribute">
      <summary>
               Атрибут, указывающий тип перечисления.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EdmFunctionAttribute">
      <summary>
              Атрибут, при применении к методу указывает, что метод является прокси-сервера для функции в концептуальной модели или модели хранения.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EdmPropertyAttribute">
      <summary>
              Базовый класс для атрибутов, указывающих сопоставление свойств типов на уровне объектов со свойствами типов сущностей или сложных типов в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute">
      <summary>
              Задает связь между двумя типами сущностей на основе ассоциации в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute">
      <summary>
              Атрибут, который указывает, что свойство является свойством навигации.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute">
      <summary>
              Атрибут, который указывает, что свойство является скалярным.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EdmSchemaAttribute">
      <summary>
              Атрибут, указывающий, что сборка содержит классы, которые сопоставлены с типами сущностей в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EdmTypeAttribute">
      <summary>
              Базовый класс для атрибутов, определяющих, как типы на уровне объектов сопоставляются с типами сущностей и сложных типов в концептуальной модели.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EntityCollection`1">
      <summary>
              Представляет коллекцию объектов, образующих элемент связи «многие».
            </summary>
      <typeparam name="TEntity">
                Тип сущности коллекции.
              </typeparam>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EntityObject">
      <summary>
              Базовый класс для типов сущностей, создаваемых средствами модели EDM.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EntityReference">
      <summary>
              Базовый класс, реализующий специализированные функции для <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.EntityReference`1">
      <summary>
              Представляет связанный элемент ассоциации, имеющий кратность 0 или 1.
            </summary>
      <typeparam name="TEntity">
                Тип сущности ссылки.
              </typeparam>
    </member>
    <member name="T:System.Data.Objects.DataClasses.IEntityChangeTracker">
      <summary>
              Определяет средства, которые используются службами объектов для отслеживания изменений, внесенных в свойства объекта.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker">
      <summary>
              Определяет тип сущности, реализующей отслеживание изменений.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.IEntityWithKey">
      <summary>
              Определяет тип сущности, предоставляющей ключ сущности.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.IEntityWithRelationships">
      <summary>
              Определяет тип сущности со связью с одним или несколькими другими типами сущности.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.IRelatedEnd">
      <summary>
              Определяет элемент связи.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.RelatedEnd">
      <summary>
              Представляет базовый класс, реализующий общие функции для связанного элемента.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.RelationshipKind">
      <summary>
              Перечисляет типы связей между двумя или более сущностями.
            </summary>
    </member>
    <member name="F:System.Data.Objects.DataClasses.RelationshipKind.Association">
      <summary>
              Связь определяется ассоциацией в концептуальной модели.
               Дополнительные сведения см. в разделе элемент ассоциации (CSDL).
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.RelationshipManager">
      <summary>
              Отслеживает связи между объектами в контексте объекта.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DataClasses.StructuralObject">
      <summary>
              Представляет класс, который содержит общие методы, необходимые для объекта даты.
            </summary>
    </member>
    <member name="T:System.Data.Objects.DbUpdatableDataRecord">
      <summary>
              Предоставляет доступ к исходные значения данных объекта.
              <see cref="T:System.Data.Objects.DbUpdatableDataRecord" /> Реализует методы, которые позволяют обновлять исходные значения объекта.
            </summary>
    </member>
    <member name="T:System.Data.Objects.EntityFunctions">
      <summary>
              Предоставляет общеязыковая среда выполнения (CLR) методы, предоставляющие канонические функции концептуальной модели в запросах LINQ для запросов сущностей.
               Дополнительные сведения о канонических функциях см. в разделе Канонические функции.
            </summary>
    </member>
    <member name="T:System.Data.Objects.IObjectSet`1">
      <summary>
              Предоставляет функциональные возможности, обеспечивающие внесение изменений в набор объектов данных.
            </summary>
      <typeparam name="TEntity">
                Тип объекта сущности, возвращаемого запросом.
              </typeparam>
    </member>
    <member name="T:System.Data.Objects.MergeOption">
      <summary>
              Определяет, как объекты, загружаемые в контекст объекта, объединяются с объектами, которые уже находятся в этом контексте объекта.
            </summary>
    </member>
    <member name="F:System.Data.Objects.MergeOption.AppendOnly">
      <summary>
              Объекты, которые не существуют в контексте объекта, присоединяются к контексту.
               Если объект уже находится в контексте, текущие и исходные значения свойств объекта в записи не переписываются значениями из источника данных.
               Состояние записи объекта и состояние свойств объекта в записи не меняется.
               Параметр <see cref="F:System.Data.Objects.MergeOption.AppendOnly" /> является параметром слияния по умолчанию.
            </summary>
    </member>
    <member name="F:System.Data.Objects.MergeOption.OverwriteChanges">
      <summary>
              Объекты, которые не существуют в контексте объекта, присоединяются к контексту.
               Если объект уже находится в контексте, текущие и исходные значения свойств объекта в записи переписываются значениями из источника данных.
               Состоянию записи объекта присваивается значение <see cref="F:System.Data.EntityState.Unchanged" />, а свойства, отмеченные как измененные, отсутствуют.
            </summary>
    </member>
    <member name="F:System.Data.Objects.MergeOption.PreserveChanges">
      <summary>
              Объекты, которые не существуют в контексте объекта, присоединяются к контексту.
            </summary>
    </member>
    <member name="F:System.Data.Objects.MergeOption.NoTracking">
      <summary>
              Объекты обслуживаются в состоянии <see cref="F:System.Data.EntityState.Detached" /> и не отслеживаются экземпляром <see cref="T:System.Data.Objects.ObjectStateManager" />.
               Тем не менее Entity Framework-сущностей POCO с прокси и сущностей, созданных поддерживать ссылку на контекст объекта для упрощения загрузки связанных объектов.
            </summary>
    </member>
    <member name="T:System.Data.Objects.ObjectContext">
      <summary>
              Предоставляет возможность выполнять запросы и работать с данными сущности как с объектами.
            </summary>
    </member>
    <member name="T:System.Data.Objects.ObjectContextOptions">
      <summary>
              Определяет параметры, которые влияют на поведение <see cref="T:System.Data.Objects.ObjectContext" />.
            </summary>
    </member>
    <member name="T:System.Data.Objects.ObjectMaterializedEventArgs">
      <summary>
              Содержит данные для <see cref="E:System.Data.Objects.ObjectContext.ObjectMaterialized" /> события.
            </summary>
    </member>
    <member name="T:System.Data.Objects.ObjectMaterializedEventHandler">
      <summary>
              Представляет метод, обрабатывающий <see cref="E:System.Data.Objects.ObjectContext.ObjectMaterialized" /> событие <see cref="T:System.Data.Objects.ObjectContext" />.
            </summary>
      <param name="sender">
                <see cref="T:System.Data.Objects.ObjectContext" /> Экземпляра, вызвавшей событие.
              </param>
      <param name="e">
                Объект <see cref="T:System.Data.Objects.ObjectMaterializedEventArgs" />, содержащий данные о событии.
              </param>
    </member>
    <member name="T:System.Data.Objects.ObjectParameter">
      <summary>
              Представляет параметр запроса, передающийся запросу объектов.
            </summary>
    </member>
    <member name="T:System.Data.Objects.ObjectParameterCollection">
      <summary>
              Представляет параметры запроса в виде объектов <see cref="T:System.Data.Objects.ObjectParameter" />, определенных в <see cref="T:System.Data.Objects.ObjectQuery`1" />.
            </summary>
    </member>
    <member name="T:System.Data.Objects.ObjectQuery">
      <summary>
              Реализует общие функции для запросов в концептуальной модели с помощью LINQ to Entities и <see cref="T:System.Data.Objects.ObjectQuery`1" />.
            </summary>
    </member>
    <member name="T:System.Data.Objects.ObjectQuery`1">
      <summary>
              Представляет типизированный запрос к концептуальной модели в данном контексте объекта.
            </summary>
      <typeparam name="T">
                Тип сущности запроса.
              </typeparam>
    </member>
    <member name="T:System.Data.Objects.ObjectResult">
      <summary>
              Представляет класс, реализующий интерфейсы IEnumerable и IDisposable.
               Экземпляр этого класса возвращается из метода ObjectQuery.Execute.
            </summary>
    </member>
    <member name="T:System.Data.Objects.ObjectResult`1">
      <summary>
              Представляет результат запроса <see cref="T:System.Data.Objects.ObjectQuery`1" /> в виде перечисляемой коллекции объектов.
            </summary>
      <typeparam name="T">
                Тип сущности результата.
              </typeparam>
    </member>
    <member name="T:System.Data.Objects.ObjectSet`1">
      <summary>
              Представляет набор типизированных сущностей, который используется для операций создания, чтения, обновления и удаления.
            </summary>
      <typeparam name="TEntity">
                Тип сущности.
              </typeparam>
    </member>
    <member name="T:System.Data.Objects.ObjectStateEntry">
      <summary>
              Представляет сущность, заглушку сущности или отношение.
            </summary>
    </member>
    <member name="T:System.Data.Objects.ObjectStateManager">
      <summary>
              Поддерживает состояние объекта и обеспечивает управление идентификаторами для экземпляров типа сущности и экземпляров связи.
            </summary>
    </member>
    <member name="T:System.Data.Objects.OriginalValueRecord">
      <summary>
              Предоставляет доступ к исходные значения данных объекта.
            </summary>
    </member>
    <member name="T:System.Data.Objects.ProxyDataContractResolver">
      <summary>
              Этот класс помогает преобразовать типы прокси, созданные для классов данных, игнорирующих сохраняемость, в фактические типы объектов, игнорирующих сохраняемость.
            </summary>
    </member>
    <member name="T:System.Data.Objects.RefreshMode">
      <summary>
              Указывает, сохраняются ли изменения свойств объектов, отслеживаемых службами объектов или заменяются значениями свойств из источника данных.
            </summary>
    </member>
    <member name="F:System.Data.Objects.RefreshMode.ClientWins">
      <summary>
              Изменения свойств объектов в контексте объекта не заменяются значениями из источника данных.
               В следующем вызове <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" />, эти изменения передаются источнику данных.
            </summary>
    </member>
    <member name="F:System.Data.Objects.RefreshMode.StoreWins">
      <summary>
              Изменения свойств объектов в контексте объекта заменяются значениями из источника данных.
            </summary>
    </member>
    <member name="T:System.Data.Objects.SaveOptions">
      <summary>
              Задает поведение контекста объекта при <see cref="M:System.Data.Objects.ObjectContext.SaveChanges(System.Data.Objects.SaveOptions)" /> вызывается метод.
            </summary>
    </member>
    <member name="F:System.Data.Objects.SaveOptions.None">
      <summary>
              Изменения сохраняются без <see cref="M:System.Data.Objects.ObjectContext.DetectChanges" /> или <see cref="M:System.Data.Objects.ObjectContext.AcceptAllChangesAfterSave" /> вызываемого метода.
            </summary>
    </member>
    <member name="F:System.Data.Objects.SaveOptions.AcceptAllChangesAfterSave">
      <summary>
              После сохранения изменений <see cref="M:System.Data.Objects.ObjectContext.AcceptAllChangesAfterSave" /> вызывается метод, который сбрасывает отслеживание изменений в <see cref="T:System.Data.Objects.ObjectStateManager" />.
            </summary>
    </member>
    <member name="F:System.Data.Objects.SaveOptions.DetectChangesBeforeSave">
      <summary>
              Перед сохранением изменений <see cref="M:System.Data.Objects.ObjectContext.DetectChanges" /> синхронизировать значения свойств объектов, которые присоединены к контексту объекта с данными в вызове метода <see cref="T:System.Data.Objects.ObjectStateManager" />.
            </summary>
    </member>
    <member name="T:System.Data.Objects.SqlClient.SqlFunctions">
      <summary>
              Предоставляет общеязыковая среда выполнения (CLR) методы, которые вызывают функции в базе данных в запросах LINQ to Entities.
            </summary>
    </member>
    <member name="T:System.Data.Objects.SqlClient.SqlSpatialFunctions">
      <summary>
              Представляет SQL Пространственные функции для клиента SQL.
            </summary>
    </member>
    <member name="T:System.Data.OptimisticConcurrencyException">
      <summary>
              Исключение, возникающее при нарушении оптимистичного параллелизма.
            </summary>
    </member>
    <member name="T:System.Data.PropertyConstraintException">
      <summary>
              Класс исключения, свойство ограничения.
               Обратите внимание, что этот класс имеет состояние — поэтому при изменении даже его внутренние составляющие, это может быть критическим изменением.
            </summary>
    </member>
    <member name="T:System.Data.ProviderIncompatibleException">
      <summary>
              Исключение, возникающее при несовместимости базового поставщика данных с платформой Entity Framework.
            </summary>
    </member>
    <member name="T:System.Data.Spatial.DbGeography">
      <summary>
              Представляет данные в систему координат геодезический (круглой Земли).
            </summary>
    </member>
    <member name="T:System.Data.Spatial.DbGeographyWellKnownValue">
      <summary>
               Контракт данных сериализованным представлением <see cref="T:System.Data.Spatial.DbGeography" /> значение.
            </summary>
    </member>
    <member name="T:System.Data.Spatial.DbGeometry">
      <summary>
              Предоставляет базовый класс для объектов, которые определяют геометрические фигуры.
            </summary>
    </member>
    <member name="T:System.Data.Spatial.DbGeometryWellKnownValue">
      <summary>
               Контракт данных сериализованным представлением <see cref="T:System.Data.Spatial.DbGeometry" /> значение.
            </summary>
    </member>
    <member name="T:System.Data.Spatial.DbSpatialDataReader">
      <summary>
               Поддерживает API-интерфейса службы независимого от поставщика для типа геопространственных (Geometry и Geography).
            </summary>
    </member>
    <member name="T:System.Data.Spatial.DbSpatialServices">
      <summary>
              Представляет независимый от поставщика службы API для поддержки типа геопространственных (Geometry и Geography).
            </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlProviderServices">
      <summary>
              Реализация DbProviderServices поставщика SqlClient для SQL Server.
            </summary>
    </member>
    <member name="T:System.Data.UpdateException">
      <summary>
              Исключение, которое возникает, когда изменения в экземплярах объектов не могут быть сохранены в источнике данных.
            </summary>
    </member>
  </members>
</doc>