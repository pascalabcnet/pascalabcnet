<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary>
              Возникает при смене значения свойства.
            </summary>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>
              Возникает при смене значения свойства.
            </summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary>
              При реализации данного интерфейса это событие должно наступать после изменения текущего элемента.
            </summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary>
              При реализации этого интерфейса данное событие должно наступать перед изменением текущего элемента.
               Обработчик событий может отменить это событие.
            </summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary>
              Происходит при добавлении или удалении элемента.
            </summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>
              Происходит при добавлении или удалении элемента.
            </summary>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary>
              Происходит при <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> обнаруживает недопустимую подпись.
            </summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary>
              Происходит при <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> свойства имеет другое значение.
            </summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary>
              Возникает при смене значения свойства.
            </summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>
              Возникает при смене значения свойства.
            </summary>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary>
              Происходит при <see cref="T:System.Windows.Freezable" /> или изменить объект, она содержит.
            </summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary>
              Возникает, когда поток становится модальным.
            </summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary>
              Возникает, когда модальный поток становится немодальным.
            </summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary>
              Возникает, когда конвейер сообщений получает сообщение от клавиатуры.
            </summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary>
              Возникает, когда поток бездействует.
            </summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary>
              Возникает, когда конвейер сообщений получает сообщение от клавиатуры.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary>
              Происходит при <see cref="T:System.Windows.Threading.Dispatcher" /> завершения завершает работу.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary>
              Происходит при <see cref="T:System.Windows.Threading.Dispatcher" /> начинает завершение работы.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary>
              Происходит, когда исключения потока является исключение и не перехваченные во время выполнения делегата посредством <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> или <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary>
              Происходит, когда исключения потока является исключение и не перехваченные во время выполнения делегата посредством <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> или <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> при работе в рабочей области фильтра.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary>
              Происходит, когда диспетчер имеет никакие дополнительные операции для обработки.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary>
              Происходит при прерывании операции.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary>
              Происходит при завершении операции.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary>
              Происходит, когда операция помещается в диспетчер.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary>
              Происходит при изменении приоритета операции.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary>
              Происходит при вызове операции.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary>
              Происходит при прерывании операции.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary>
              Создается по завершении операции.
            </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary>
              Возникает при истечении интервала таймера.
            </summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary>
              Этот член поддерживает инфраструктуру Microsoft .NET Framework и не предназначен для непосредственного использования из кода.
            </summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary>
              Возвращает пустой и неизменяемый экземпляр <see cref="T:System.ComponentModel.SortDescriptionCollection" />.
            </summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary>
              Идентифицирует присоединенное свойство <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" />.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>
              Определяет имя pack схемы URI типа pack.
            </summary>
      <returns>
              Строка pack с именем схемы URI типа pack.
            </returns>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary>
              Указывает статическое значение, которое используется WPF системы свойств вместо <see langword="null" /> Чтобы указать, что свойство существует, но не имеет его значение, установленное в системе свойств.
            </summary>
      <returns>
              Неопределенное значение.
               Это фактически результат вызова <see cref="T:System.Object" /> конструктор.
            </returns>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary>
              Идентифицирует присоединенное свойство <see cref="P:System.Windows.NameScope.NameScope" />.
            </summary>
      <returns>
              Идентификатор присоединенного свойства <see cref="P:System.Windows.NameScope.NameScope" />.
            </returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary>
              Добавляет заданный обработчик событий, который вызывается, когда указанный источник вызывает <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> события.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> события.
              </param>
      <param name="handler">
                Делегат, который обрабатывает <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> события.
              </param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary>
              Добавляет указанный прослушиватель для <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> событие из указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
      <param name="listener">
                Объект, добавляемый в качестве прослушивателя.
              </param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary>
              Возвращает новый объект для хранения прослушивателей, <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> событие.
            </summary>
      <returns>
              Новый объект для хранения прослушивателей, <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> событие.
            </returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary>
              Удаляет заданный обработчик событий из указанного источника.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> события.
              </param>
      <param name="handler">
                Делегат, который обрабатывает <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> события.
              </param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary>
              Удаляет указанный прослушиватель из <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> событие из указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
      <param name="listener">
                Чтобы удалить прослушиватель.
              </param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary>
              Начинает прослушивание <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> событий для указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary>
              Ожидание остановки <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> событий для указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary>
              Добавляет заданный обработчик событий, который вызывается, когда указанный источник вызывает <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> события.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> события.
              </param>
      <param name="handler">
                Исходный объект, который вызывает <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> события.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="handler" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>
              Добавляет указанный прослушиватель для <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> событие из указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
      <param name="listener">
                Объект, добавляемый в качестве прослушивателя.
              </param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary>
              Возвращает новый объект для хранения прослушивателей, <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> событие.
            </summary>
      <returns>
              Новый объект для хранения прослушивателей, <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> событие.
            </returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary>
              Удаляет заданный обработчик событий из указанного источника.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> события.
              </param>
      <param name="handler">
                Делегат, который обрабатывает <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> события.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="handler" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>
              Удаляет указанный прослушиватель из <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> событие из указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
      <param name="listener">
                Чтобы удалить прослушиватель.
              </param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary>
              Начинает прослушивание <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> событий для указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary>
              Ожидание остановки <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> событий для указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.CurrentChangingEventArgs" />.
            </summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> заданным значением <paramref name="isCancelable" />.
            </summary>
      <param name="isCancelable">
                Значение, которое указывает, можно ли отменить событие.
              </param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary>
              Добавляет заданный обработчик событий, который вызывается, когда указанный источник вызывает <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> события.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> события.
              </param>
      <param name="handler">
                Делегат, который обрабатывает <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> события.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="handler" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>
              Добавляет указанный прослушиватель для <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> событие из указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
      <param name="listener">
                Объект, добавляемый в качестве прослушивателя.
              </param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary>
              Возвращает новый объект для хранения прослушивателей, <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> событие.
            </summary>
      <returns>
              Новый объект для хранения прослушивателей, <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> событие.
            </returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary>
              Удаляет заданный обработчик событий из указанного источника.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> события.
              </param>
      <param name="handler">
                Делегат, который обрабатывает <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> события.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="handler" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>
              Удаляет указанный прослушиватель из <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> событие из указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
      <param name="listener">
                Чтобы удалить прослушиватель.
              </param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary>
              Начинает прослушивание <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> событий для указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary>
              Ожидание остановки <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> событий для указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary>
              Позволяет другим объектам получать уведомления при изменении этого свойства.
            </summary>
      <param name="component">
                Компонент, чтобы добавить обработчик.
              </param>
      <param name="handler">
                Делегат, который добавляется в качестве прослушивателя.
              </param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary>
              Возвращает, изменяет ли сброс объекта его значение.
            </summary>
      <param name="component">
                Компонент для проверки на возможность сброса.
              </param>
      <returns>
              <see langword="true" /> Если сброс компонента изменяет его значение; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary>
              Сравнивает два экземпляра <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> на предмет их равенства.
            </summary>
      <param name="obj">
                <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />  Для сравнения с текущим экземпляром.
              </param>
      <returns>
              <see langword="true" /> Если значения эквивалентны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary>
              Возвращает <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для имени указанного свойства.
            </summary>
      <param name="name">
                Зарегистрированное имя свойства зависимостей или присоединенного свойства.
              </param>
      <param name="ownerType">
                <see cref="T:System.Type" /> объекта, которому принадлежит определение свойства.
              </param>
      <param name="targetType">
                <see cref="T:System.Type" /> объекта, для которого необходимо задать свойство.
              </param>
      <returns>
              Запрошенный <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary>
              Возвращает <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для имени указанного свойства.
            </summary>
      <param name="name">
                Зарегистрированное имя свойства зависимостей или присоединенного свойства.
              </param>
      <param name="ownerType">
                <see cref="T:System.Type" /> объекта, которому принадлежит определение свойства.
              </param>
      <param name="targetType">
                <see cref="T:System.Type" /> объекта, для которого необходимо задать свойство.
              </param>
      <param name="ignorePropertyType">
                Предписывает игнорировать тип свойства.
              </param>
      <returns>
              Запрошенный <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary>
              Возвращает <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для указанного <see cref="T:System.ComponentModel.PropertyDescriptor" />.
            </summary>
      <param name="property">
                Проверяемый элемент <see cref="T:System.ComponentModel.PropertyDescriptor" />.
              </param>
      <returns>
              Если свойство, описываемое <paramref name="property" />, является свойством зависимостей, возвращает допустимый дескриптор <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.
               В противном случае возвращает <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary>
              Возвращает <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для указанных свойства зависимостей и целевого типа.
            </summary>
      <param name="dependencyProperty">
                Идентификатор для свойства зависимостей.
              </param>
      <param name="targetType">
                Тип объекта, где задано свойство.
              </param>
      <returns>
              <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для предоставленного свойства зависимостей.
            </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary>
              Возвращает значение типа <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.
            </summary>
      <param name="instance">
                Компонент, для которого требуется получить свойства.
              </param>
      <param name="filter">
                Массив типа <see cref="T:System.Attribute" /> для использования в качестве фильтра.
              </param>
      <returns>
              Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> с событиями, которые соответствуют указанным атрибутам для заданного компонента.
            </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary>
              Возвращает редактор указанного типа.
            </summary>
      <param name="editorBaseType">
                Базовый тип редактора, который позволяет различать многочисленные редакторы, которые поддерживает свойство.
              </param>
      <returns>
              Экземпляр запрошенного типа редактора, или <see langword="null" /> Если редактор не найден.
            </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary>
              Возвращает хэш-код для модуля чтения данных <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.
            </summary>
      <returns>
              Хэш-код в виде 32-разрядного целого числа со знаком.
            </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary>
              Возвращает текущее значение свойства компонента.
            </summary>
      <param name="component">
                Экземпляр компонента.
              </param>
      <returns>
              Запрошенное значение.
            </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary>
              Позволяет другим объектам получать уведомления при изменении этого свойства.
            </summary>
      <param name="component">
                Компонент, чтобы добавить обработчик.
              </param>
      <param name="handler">
                Делегат, который добавляется в качестве прослушивателя.
              </param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary>
              Сбрасывает значение для этого свойства компонента в значение по умолчанию.
            </summary>
      <param name="component">
                Компонент со значением свойства, чтобы сбросить значение по умолчанию.
              </param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>
              Задает значение компонента другое значение.
            </summary>
      <param name="component">
                Компонент со значением свойства, которое требуется задать.
              </param>
      <param name="value">
                Новое значение.
              </param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>
              Указывает, является ли значение данного свойства должны сохраняться процессами сериализации.
            </summary>
      <param name="component">
                Компонент со свойством, чтобы проверить сохраняемость.
              </param>
      <returns>
              <see langword="true" /> Если необходимо сохранить свойство; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary>
              Преобразует значение этого экземпляра в эквивалентное ему строковое представление.
            </summary>
      <returns>
              Возвращает <see cref="P:System.ComponentModel.MemberDescriptor.Name" /> значение.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary>
              Добавляет заданный обработчик событий, который вызывается, когда указанный источник вызывает <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> события.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> события.
              </param>
      <param name="handler">
                Делегат, который обрабатывает <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> события.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="handler" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary>
              Возвращает новый объект для хранения прослушивателей, <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> событие.
            </summary>
      <returns>
              Новый объект для хранения прослушивателей, <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> событие.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary>
              Удаляет заданный обработчик событий из указанного источника.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> события.
              </param>
      <param name="handler">
                Делегат, который обрабатывает <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> события.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="handler" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary>
              Начинает прослушивание <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> событий для указанного источника.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> события.
              </param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary>
              Ожидание остановки <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> событий для указанного источника.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> события.
              </param>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.GroupDescription" />.
            </summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>
              Возвращает имя (имена) группы для данного элемента.
            </summary>
      <param name="item">
                Элемент, для которого возвращаются имена группы.
              </param>
      <param name="level">
                Уровень группирования.
              </param>
      <param name="culture">
                <see cref="T:System.Globalization.CultureInfo" /> для предоставления преобразователю.
              </param>
      <returns>
              Имя (имена) группы для данного элемента.
            </returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>
              Возвращает значение, указывающее, входит ли элемент с указанным именем в группу с указанным именем.
            </summary>
      <param name="groupName">
                Имя проверяемой группы.
              </param>
      <param name="itemName">
                Имя проверяемого элемента.
              </param>
      <returns>
              Значение <see langword="true" />, если имена соответствуют и элемент принадлежит группе; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Вызывает событие <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" />.
            </summary>
      <param name="e">
                Аргументы вызываемого события.
              </param>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary>
              Возвращает значение, указывающее, должны ли процессы сериализации сериализовать действующее значение свойства <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> в экземплярах этого класса.
            </summary>
      <returns>
              Возвращает <see langword="true" />, если значение свойства <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> следует сериализовать; в противном случае возвращает false.
            </returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary>
              Возвращает значение, указывающее, должны ли процессы сериализации сериализовать действующее значение свойства <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> в экземплярах этого класса.
            </summary>
      <returns>
              Значение <see langword="true" />, если значение свойства <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> подлежит сериализации, в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary>
              Возвращает значение, указывающее, принадлежит ли данный элемент этому представлению коллекции.
            </summary>
      <param name="item">
                Объект для проверки.
              </param>
      <returns>
              Значение <see langword="true" />, если элемент принадлежит этому представлению коллекции; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary>
              Вводит отложенный цикл, который можно использовать для слияния изменений с представлением и задержки автоматического обновления.
            </summary>
      <returns>
              Объект <see cref="T:System.IDisposable" />, который можно использовать для уничтожения вызывающего объекта.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary>
              Задает указанный элемент в качестве <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в представлении.
            </summary>
      <param name="item">
                Элемент, устанавливаемый в качестве <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.
              </param>
      <returns>
              Значение <see langword="true" />, если полученное свойство <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> находится в представлении; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary>
              Задает первый элемент в представлении в качестве <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.
            </summary>
      <returns>
              Значение <see langword="true" />, если результирующий элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> лежит в пределах представления. В противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary>
              Задает последний элемент в представлении в качестве <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.
            </summary>
      <returns>
              Значение <see langword="true" />, если результирующий элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> находится в пределах представления; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary>
              Задает элемент после <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в представлении в качестве элемента <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.
            </summary>
      <returns>
              Значение <see langword="true" />, если результирующий элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> находится в пределах представления; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>
              Задает элемент по заданному индексу в качестве <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в представлении.
            </summary>
      <param name="position">
                Индекс для задания элемента <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.
              </param>
      <returns>
              Значение <see langword="true" />, если результирующий элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> лежит в пределах представления. В противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary>
              Устанавливает элемент перед элементом <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в качестве <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.
            </summary>
      <returns>
              Значение <see langword="true" />, если результирующий элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> находится в пределах представления; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary>
              Воссоздает представление.
            </summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary>
              Создает новое представление коллекции, реализующей этот интерфейс.
               Как правило пользовательский код не вызывает этот метод.
            </summary>
      <returns>
              Созданное представление.
            </returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary>
              Добавляет новый элемент в коллекцию.
            </summary>
      <returns>
              Новый элемент, добавленный в коллекцию.
            </returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary>
              Завершает транзакцию изменения и, если это возможно, восстанавливает исходное значение для элемента.
            </summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary>
              Завершает транзакцию добавления и отменяет ожидающий новый элемент.
            </summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary>
              Завершает транзакцию изменения и сохраняет отложенные изменения.
            </summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary>
              Завершает транзакцию добавления и сохраняет ожидаемый новый элемент.
            </summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary>
              Начинает транзакцию изменения заданного элемента.
            </summary>
      <param name="item">
                Изменяемый элемент.
              </param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary>
              Удаляет заданный элемент из коллекции.
            </summary>
      <param name="item">
                Удаляемый элемент.
              </param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary>
              Удаляет элемент в указанной позиции из коллекции.
            </summary>
      <param name="index">
                Позиция удаляемого элемента.
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Значение <paramref name="index" /> меньше нуля или больше количества элементов в представлении коллекции.
                </exception>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary>
              Добавляет указанный объект в коллекцию.
            </summary>
      <param name="newItem">
                Объект, добавляемый в коллекцию.
              </param>
      <returns>
              Объект, добавляемый в коллекцию.
            </returns>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.ItemPropertyInfo" />.
            </summary>
      <param name="name">
                Имя свойства.
              </param>
      <param name="type">
                Тип свойства.
              </param>
      <param name="descriptor">
                Объект, содержащий дополнительные сведения о свойстве.
              </param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary>
              Добавляет заданный обработчик событий, который вызывается, когда указанный источник вызывает <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> событий для указанного свойства.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> события.
              </param>
      <param name="handler">
                Делегат, который обрабатывает <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> события.
              </param>
      <param name="propertyName">
                Имя свойства, существующего на <paramref name="source" /> основе которой можно отслеживать изменения.
                 Значение <see cref="F:System.String.Empty" /> для указания «все свойства».
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="handler" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.NotSupportedException">
                  Более одного метода, связанные с <paramref name="handler" />.
                </exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary>
              Добавляет указанный прослушиватель в список прослушивателей указанного источника.
            </summary>
      <param name="source">
                Объект с событием.
              </param>
      <param name="listener">
                Объект, добавляемый в качестве прослушивателя.
              </param>
      <param name="propertyName">
                Имя свойства, которое уже существует на <paramref name="source" /> на которой будет отслеживать изменения.
                 Значение <see cref="F:System.String.Empty" /> для указания «все свойства».
              </param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary>
              Возвращает новый объект для хранения прослушивателей, <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> событие.
            </summary>
      <returns>
              Новый объект для хранения прослушивателей, <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> событие.
            </returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary>
              Удаляет прослушиватели, ставшие неактивными, из данных для предоставленного источника.
            </summary>
      <param name="source">
                Исходный объект, из которого удаляются все прослушиватели.
              </param>
      <param name="data">
                Для очистки данных.
                 Это должно быть <see cref="T:System.Collections.Specialized.HybridDictionary" />.
              </param>
      <param name="purgeAll">
                Значение <see langword="true" /> Чтобы остановить прослушивание и для полного удаления всех данных.
              </param>
      <returns>
              <see langword="true" /> Если некоторые записи были удалены; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary>
              Удаляет заданный обработчик событий из указанного источника.
            </summary>
      <param name="source">
                Исходный объект, который вызывает <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> события.
              </param>
      <param name="handler">
                Делегат, который обрабатывает <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> события.
              </param>
      <param name="propertyName">
                Имя свойства, существующего на <paramref name="source" /> для которого останавливается прослушивание изменений.
                 Значение <see cref="F:System.String.Empty" /> для указания «все свойства».
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="handler" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.NotSupportedException">
                  Более одного метода, связанные с <paramref name="handler" />.
                </exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary>
              Удаляет указанный прослушиватель из списка прослушивателей для предоставленного источника.
            </summary>
      <param name="source">
                Объект, удаляемый прослушиватель.
              </param>
      <param name="listener">
                Чтобы удалить прослушиватель.
              </param>
      <param name="propertyName">
                Имя свойства, существующего на <paramref name="source" /> для которого останавливается прослушивание изменений.
                 Значение <see cref="F:System.String.Empty" /> для указания «все свойства».
              </param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary>
              Начинает прослушивание <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> событие для указанного источника.
            </summary>
      <param name="source">
                Объект, для которого следует начать прослушивание <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.
              </param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary>
              Ожидание остановки <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> событие для указанного источника.
            </summary>
      <param name="source">
                Исходный объект, на котором необходимо остановить прослушивание <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.
              </param>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.
            </summary>
      <param name="filter">
                Параметры, описывающие этот фильтр свойств.
              </param>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary>
              Возвращает значение, указывающее, является ли текущий <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут .NET Framework равен указанному объекту. 
            </summary>
      <param name="value">
                Объект для сравнения с <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.
              </param>
      <returns>
              Значение <see langword="true" />, если указанный объект <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> равен текущему объекту <see cref="T:System.ComponentModel.PropertyFilterAttribute" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary>
              Возвращает хэш-код для текущего объекта <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут .NET Framework.
            </summary>
      <returns>
              32-разрядное целое значение со знаком.
            </returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary>
              Возвращает значение, указывающее, является ли свойство параметров текущего фильтра <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут .NET Framework соответствуют параметрам фильтра свойств предоставленного объекта. 
            </summary>
      <param name="value">
                Объект для сравнения.
                 Этот объект должен быть <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.
              </param>
      <returns>
              <see langword="true" /> Если соответствие существует; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary>
              Инициализирует новый экземпляр структуры <see cref="T:System.ComponentModel.SortDescription" />.
            </summary>
      <param name="propertyName">
                Имя свойства, по которому нужно сортировать список.
              </param>
      <param name="direction">
                Порядок сортировки.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="propertyName" /> не может иметь значение null.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="propertyName" /> не может быть пустым.
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  Параметр <paramref name="direction" /> не задает допустимое значение.
                </exception>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary>
              Проверяет указанный экземпляр и текущий экземпляр <see cref="T:System.ComponentModel.SortDescription" /> на равенство значений.
            </summary>
      <param name="obj">
                Первый экземпляр <see cref="T:System.ComponentModel.SortDescription" /> для сравнения.
              </param>
      <returns>
              Значение <see langword="true" />, если <paramref name="obj" /> и этот экземпляр <see cref="T:System.ComponentModel.SortDescription" /> имеют одинаковые значения.
            </returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary>
              Возвращает хэш-код этого экземпляра <see cref="T:System.ComponentModel.SortDescription" />.
            </summary>
      <returns>
              Хэш-код этого экземпляра <see cref="T:System.ComponentModel.SortDescription" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>
              Сравнивает два объекта <see cref="T:System.ComponentModel.SortDescription" /> на равенство значений.
            </summary>
      <param name="sd1">
                Первый экземпляр для сравнения.
              </param>
      <param name="sd2">
                Второй экземпляр для сравнения.
              </param>
      <returns>
              Значение <see langword="true" />, если эти два объекта равны; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>
              Проверяет неравенство значений двух объектов <see cref="T:System.ComponentModel.SortDescription" />.
            </summary>
      <param name="sd1">
                Первый экземпляр для сравнения.
              </param>
      <param name="sd2">
                Второй экземпляр для сравнения.
              </param>
      <returns>
              Значение <see langword="true" />, если значения неравные; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.SortDescriptionCollection" />.
            </summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary>
              Удаляет все элементы из коллекции.
            </summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>
              Вставляет элемент в коллекцию по указанному индексу.
            </summary>
      <param name="index">
                Отсчитываемый от нуля индекс, по которому вставляется <paramref name="item" />.
              </param>
      <param name="item">
                Вставляемый объект.
              </param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary>
              Удаляет элемент по указанному индексу в коллекции.
            </summary>
      <param name="index">
                Индекс (с нуля) элемента, который требуется удалить.
              </param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>
              Заменяет элемент по указанному индексу.
            </summary>
      <param name="index">
                Индекс (с нуля) элемента, который требуется заменить.
              </param>
      <param name="item">
                Новое значение элемента по указанному индексу.
              </param>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary>
              Получает значение присоединенного свойства <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> указанного элемента.
            </summary>
      <param name="element">
                Элемент, из которого считывается значение свойства.
              </param>
      <returns>
              Значение свойства <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> элемента.
            </returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary>
              Обновляет источники трассировки путем принудительного повторного считывания файла app.config.
            </summary>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary>
              Задает значение присоединенного свойства <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> в указанном элементе.
            </summary>
      <param name="element">
                Элемент, в который записывается вложенное свойство.
              </param>
      <param name="traceLevel">
                Необходимое значение <see cref="T:System.Diagnostics.PresentationTraceLevel" />.
              </param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>
              Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" />.
            </summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              Создает новый экземпляр <see cref="T:System.IO.FileFormatException" /> класса и инициализирует его, используя сериализованные данные.
               Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке.
            </summary>
      <param name="info">
                Объект, содержащий сериализованные данные объекта.
              </param>
      <param name="context">
                Контекстные сведения об источнике или назначении.
              </param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>
              Создает новый экземпляр <see cref="T:System.IO.FileFormatException" /> класса с указанным сообщением об ошибке.
            </summary>
      <param name="message">
                A <see cref="T:System.String" /> значение, представляющее сообщение об ошибке.
              </param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>
              Создает новый экземпляр <see cref="T:System.IO.FileFormatException" /> класса с указанной ошибкой сообщения и тип исключения.
            </summary>
      <param name="message">
                A <see cref="T:System.String" /> значение, представляющее сообщение об ошибке.
              </param>
      <param name="innerException">
                Значение <see cref="P:System.Exception.InnerException" /> Свойства, которое представляет причиной текущего исключения.
              </param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>
              Создает новый экземпляр <see cref="T:System.IO.FileFormatException" /> класса с источником URI значение.
            </summary>
      <param name="sourceUri">
                <see cref="T:System.Uri" /> Значение файла, вызвавшего эту ошибку.
              </param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>
              Создает новый экземпляр <see cref="T:System.IO.FileFormatException" /> класса с источником URI значение и тип исключения.
            </summary>
      <param name="sourceUri">
                <see cref="T:System.Uri" /> Значение файла, вызвавшего эту ошибку.
              </param>
      <param name="innerException">
                Значение <see cref="P:System.Exception.InnerException" /> Свойства, которое представляет причиной текущего исключения.
              </param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>
              Создает новый экземпляр <see cref="T:System.IO.FileFormatException" /> класса с источником URI значение и указанное сообщение об ошибке.
            </summary>
      <param name="sourceUri">
                <see cref="T:System.Uri" /> Значение файла, вызвавшего эту ошибку.
              </param>
      <param name="message">
                A <see cref="T:System.String" /> значение, представляющее сообщение об ошибке.
              </param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>
              Создает новый экземпляр <see cref="T:System.IO.FileFormatException" /> класса с источником URI значение, указанное сообщение об ошибке и тип исключения.
            </summary>
      <param name="sourceUri">
                <see cref="T:System.Uri" /> Значение файла, вызвавшего эту ошибку.
              </param>
      <param name="message">
                A <see cref="T:System.String" /> значение, представляющее сообщение об ошибке.
              </param>
      <param name="innerException">
                Значение <see cref="P:System.Exception.InnerException" /> Свойства, которое представляет причиной текущего исключения.
              </param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              Устанавливает объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с именем файла и дополнительными сведениями об исключении.
            </summary>
      <param name="info">
                Объект, содержащий сериализованные данные объекта.
              </param>
      <param name="context">
                Контекстные сведения об источнике или назначении.
              </param>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary>
              Закрывает зашифрованный пакет и содержащий его составной файл OLE.
            </summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>
              Создает и возвращает <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> на указанном потоке.
            </summary>
      <param name="envelopeStream">
                Поток, в котором для создания файла.
              </param>
      <param name="publishLicense">
                Лицензия на публикацию, внедренный в составной файл.
              </param>
      <param name="cryptoProvider">
                Объект, который определяет, какие операции пользователю разрешено выполнять на зашифрованное содержимое.
              </param>
      <returns>
              Вновь созданный <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="envelopeStream" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="envelopeStream" /> не предоставляет доступ на чтение и запись.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>
              Создает и возвращает <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> и присваивает ему имя указанного файла.
            </summary>
      <param name="envelopeFileName">
                Имя составного файла OLE.
              </param>
      <param name="publishLicense">
                Лицензия на публикацию, внедренный в составной файл.
              </param>
      <param name="cryptoProvider">
                Объект, который определяет, какие операции пользователю разрешено выполнять на зашифрованное содержимое.
              </param>
      <returns>
              Вновь созданный <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="envelopeFileName" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>
              Создает и возвращает <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (на указанном потоке), который использует указанный незашифрованный пакет как его содержимое.
            </summary>
      <param name="envelopeStream">
                Поток, в котором для создания файла.
              </param>
      <param name="packageStream">
                Поток, представляющий существующий незашифрованный пакет.
              </param>
      <param name="publishLicense">
                Лицензия на публикацию, внедренный в составной файл.
              </param>
      <param name="cryptoProvider">
                Объект, который определяет, какие операции пользователю разрешено выполнять на зашифрованное содержимое.
              </param>
      <returns>
              Вновь созданный <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="envelopeStream" /> или <paramref name="packageStream" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="envelopeStream" /> не предоставляет доступ на чтение и запись.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>
              Создает и возвращает <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> использующего указанный незашифрованный пакет его содержимое и присваивает ему имя указанного файла.
            </summary>
      <param name="envelopeFileName">
                Имя составного файла OLE.
              </param>
      <param name="packageStream">
                Поток, представляющий существующий незашифрованный пакет.
              </param>
      <param name="publishLicense">
                Лицензия на публикацию, внедренный в составной файл.
              </param>
      <param name="cryptoProvider">
                Объект, который определяет, какие операции пользователю разрешено выполнять на зашифрованное содержимое.
              </param>
      <returns>
              Вновь созданный <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="envelopeFileName" /> или <paramref name="packageStream" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary>
              Освобождает все ресурсы, занятые модулем <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.
            </summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary>
              Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, а при необходимости освобождает также управляемые ресурсы.
            </summary>
      <param name="disposing">
                Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.
              </param>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary>
              Сброс потока для обоих <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> и его содержимого пакета.
            </summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary>
              Возвращает зашифрованный пакет внутри <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.
            </summary>
      <returns>
              <see cref="T:System.IO.Packaging.Package" /> В конверт.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary>
              Возвращает значение, указывающее, является ли указанный поток составным файлом OLE с потоком зашифрованного пакета.
            </summary>
      <param name="stream">
                Поток, который проверяется.
              </param>
      <returns>
              <see langword="true" /> Если указанный поток является составным файлом OLE с потоком зашифрованного пакета; в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="stream" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary>
              Возвращает значение, указывающее, является ли указанный файл составным файлом OLE с потоком зашифрованного пакета.
            </summary>
      <param name="fileName">
                Файл, который проверяется.
              </param>
      <returns>
              <see langword="true" /> Если указанный файл является составным файлом OLE с потоком зашифрованного пакета; в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="fileName" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary>
              Открывает зашифрованный пакет в указанном потоке.
            </summary>
      <param name="envelopeStream">
                Поток, содержащий зашифрованный пакет.
              </param>
      <returns>
              <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Открыт.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary>
              Открывает зашифрованный пакет в указанном файле, как только для чтения без предоставления общего доступа.
            </summary>
      <param name="envelopeFileName">
                Файл, содержащий зашифрованный пакет.
              </param>
      <returns>
              <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Открыт.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary>
              Открывает зашифрованный пакет в указанном файле без общего доступа и с указанным доступом.
            </summary>
      <param name="envelopeFileName">
                Файл, содержащий зашифрованный пакет.
              </param>
      <param name="access">
                Тип доступа.
              </param>
      <returns>
              <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Открыт.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary>
              Открывает зашифрованный пакет в указанном файле и обеспечивает указанный доступ и совместное использование.
            </summary>
      <param name="envelopeFileName">
                Файл, содержащий зашифрованный пакет.
              </param>
      <param name="access">
                Тип доступа.
              </param>
      <param name="sharing">
                Тип общего доступа.
              </param>
      <returns>
              <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Открыт.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.IO.Packaging.Package" /> класс, который использует заданный <see cref="T:System.IO.FileAccess" />.
            </summary>
      <param name="openFileAccess">
                Разрешения файла ввода-ВЫВОДА для пакета.
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Значение <paramref name="openFileAccess" /> является недопустимым.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.IO.Packaging.Package" /> класс, который использует заданный <see cref="T:System.IO.FileAccess" /> и потоковой передачи параметра.
            </summary>
      <param name="openFileAccess">
                Разрешения файла ввода-ВЫВОДА для пакета.
              </param>
      <param name="streaming">
                <see langword="true" /> Чтобы открыть пакет для потоковой передачи; в противном случае — <see langword="false" />.
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Значение <paramref name="openFileAccess" /> является недопустимым.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>
              Сохраняет и закрывает пакет, а также все базовые потоки частей.
            </summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>
              Создает новую несжатую часть с заданным URI и типом содержимого.
            </summary>
      <param name="partUri">
                
                  универсальный идентификатор ресурса (URI) Новой части.
              </param>
      <param name="contentType">
                Тип содержимого потока данных.
              </param>
      <returns>
              Новая созданная часть.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="partUri" /> или <paramref name="contentType" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="partUri" /> не является допустимым <see cref="T:System.IO.Packaging.PackagePart" /> URI. 
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Часть с указанным <paramref name="partUri" /> уже присутствует в пакете.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для чтения (невозможно добавить новый элемент).
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>
              Создает новый элемент с заданным URI, типа содержимого и режима сжатия.
            </summary>
      <param name="partUri">
                
                  URI Новой части.
              </param>
      <param name="contentType">
                Тип содержимого потока данных.
              </param>
      <param name="compressionOption">
                Параметр сжатия для потока данных, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> или <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> сжатия.
              </param>
      <returns>
              Новая созданная часть.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="partUri" /> или <paramref name="contentType" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="partUri" />не является допустимым <see cref="T:System.IO.Packaging.PackagePart" />универсальный идентификатор ресурса (URI). 
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Элемент с указанным <paramref name="partUri" /> уже присутствует в пакете.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="compressionOption" /> Недопустимое значение.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> вызова).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для чтения (невозможно добавить новый элемент).
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>
              При переопределении в производном классе создает новую часть в пакете.
            </summary>
      <param name="partUri">
                
                  универсальный идентификатор ресурса (URI) Для создаваемого компонента.
              </param>
      <param name="contentType">
                Тип содержимого потока данных.
              </param>
      <param name="compressionOption">
                Параметр сжатия потока данных.
              </param>
      <returns>
              Созданная часть.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>
              Создает отношение уровня пакета в часть с заданным URI, вызываемым и тип связи.
            </summary>
      <param name="targetUri">
                
                  универсальный идентификатор ресурса (URI) Целевой части.
              </param>
      <param name="targetMode">
                Указывает, является ли целевой части <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> в пакет.
              </param>
      <param name="relationshipType">
                URI, однозначно определяющий роль связи.
              </param>
      <returns>
              Отношение уровня пакета для указанной части.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="targetUri" /> или <paramref name="relationshipType" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="targetUri" /> Часть <see cref="T:System.IO.Packaging.PackageRelationship" />, или <paramref name="targetMode" /> — <see cref="F:System.IO.Packaging.TargetMode.Internal" /> и <paramref name="targetUri" /> является абсолютным URI.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Значение <paramref name="targetMode" /> является недопустимым.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для чтения.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>
              Создает отношение уровня пакета в часть с заданным URI, вызываемым, тип связи и идентификатор (ID).
            </summary>
      <param name="targetUri">
                
                  универсальный идентификатор ресурса (URI) Целевой части.
              </param>
      <param name="targetMode">
                Указывает, является ли целевой части <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> в пакет.
              </param>
      <param name="relationshipType">
                URI, однозначно определяющий роль связи.
              </param>
      <param name="id">
                Уникальный идентификатор XML.
              </param>
      <returns>
              Отношение уровня пакета для указанной части.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="targetUri" /> или <paramref name="relationshipType" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="targetUri" /> Часть <see cref="T:System.IO.Packaging.PackageRelationship" />, или <paramref name="targetMode" /> — <see cref="F:System.IO.Packaging.TargetMode.Internal" /> и <paramref name="targetUri" /> является абсолютным URI.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Значение <paramref name="targetMode" /> является недопустимым.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для чтения.
                </exception>
      <exception cref="T:System.Xml.XmlException">
                  <paramref name="id" /> не является допустимым идентификатором XML; или часть с указанным <paramref name="id" /> уже имеется в пакете.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>
              Удаляет элемент с заданным URI из пакета.
            </summary>
      <param name="partUri">
                
                  URI Части для удаления.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="partUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="partUri" /> не является допустимым <see cref="T:System.IO.Packaging.PackagePart" /> URI. 
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для чтения.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>
              При переопределении в производном классе удаляет часть с заданным URI.
            </summary>
      <param name="partUri">
                <see cref="P:System.IO.Packaging.PackagePart.Uri" /> Из <see cref="T:System.IO.Packaging.PackagePart" /> для удаления.
              </param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>
              Удаляет отношение уровня пакета.
            </summary>
      <param name="id">
                <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> Из <see cref="T:System.IO.Packaging.PackageRelationship" /> для удаления.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="id" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для чтения.
                </exception>
      <exception cref="T:System.Xml.XmlException">
                  <paramref name="id" /> не является допустимым идентификатором XML.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>
              Очищает и сохраняет содержимое всех частей и связей, закрывает пакет и освобождает все ресурсы.
            </summary>
      <param name="disposing">
                Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.
              </param>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>
              Сохраняет содержимое всех частей и связей, которые содержатся в пакете.
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для чтения и не может быть изменен.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>
              При переопределении в производном классе сохраняет содержимое всех частей и связей в хранилище производного класса.
            </summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>
              Возвращает часть с заданным URI.
            </summary>
      <param name="partUri">
                
                  универсальный идентификатор ресурса (URI) Части для возврата.
              </param>
      <returns>
              Часть с указанным <paramref name="partUri" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="partUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="partUri" /> не является допустимым <see cref="T:System.IO.Packaging.PackagePart" /> универсальный идентификатор ресурса (URI). 
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Часть с указанным <paramref name="partUri" /> не находится в пакете.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для записи.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>
              При переопределении в производном классе возвращает часть, адресуемая с заданным URI.
            </summary>
      <param name="partUri">
                
                  универсальный идентификатор ресурса (URI) Части для извлечения.
              </param>
      <returns>
              Запрошенная часть; или <see langword="null" />, если часть с указанным <paramref name="partUri" /> не находится в пакете.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>
              Возвращает коллекцию всех частей в пакете.
            </summary>
      <returns>
              Коллекция всех <see cref="T:System.IO.Packaging.PackagePart" /> элементов, содержащихся в пакете.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> вызова).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для записи.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>
              При переопределении в производном классе возвращает массив всех частей в пакете.
            </summary>
      <returns>
              Массив всех частей, содержащихся в пакете.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>
              Возвращает связь уровня пакета с заданным идентификатором.
            </summary>
      <param name="id">
                <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> Связи для возврата.
              </param>
      <returns>
              Отношение уровня пакета с указанным <paramref name="id" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="id" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.Xml.XmlException">
                  <paramref name="id" /> не является допустимым идентификатором XML.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Связь с указанным <paramref name="id" /> не находится в пакете.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для записи.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>
              Возвращает коллекцию всех связей уровня пакета.
            </summary>
      <returns>
              Коллекция всех связей уровня пакета, содержащихся в пакете.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для записи.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>
              Возвращает коллекцию всех связей уровня пакета, которые соответствуют данной <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.
            </summary>
      <param name="relationshipType">
                <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />  Для сопоставления и вернуть в коллекции.
              </param>
      <returns>
              Коллекция связей уровня пакета, соответствующих указанному <paramref name="relationshipType" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="relationshipType" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="relationshipType" /> равен пустой строке.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для записи.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>
              Открывает пакет в заданном потоке ввода-ВЫВОДА.
            </summary>
      <param name="stream">
                Поток ввода-ВЫВОДА, в котором следует открыть пакет.
              </param>
      <returns>
              Открытый пакет.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="stream" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.IO.IOException">
                  Чтобы открыть пакет требует чтение или чтение и запись разрешения и указанного <paramref name="stream" /> доступен только для записи; или пакет, чтобы открыть требует записи или чтения и записи и указанным <paramref name="stream" /> доступно только для чтения.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>
              Открывает пакет с помощью данного потока и файл режима ввода-ВЫВОДА.
            </summary>
      <param name="stream">
                Поток ввода-ВЫВОДА, в котором следует открыть пакет.
              </param>
      <param name="packageMode">
                Файловый режим, в котором следует открыть пакет.
              </param>
      <returns>
              Открытый пакет.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="stream" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Недопустимое значение параметра <paramref name="packageMode" />.
                </exception>
      <exception cref="T:System.IO.IOException">
                  Чтобы открыть пакет требует чтение или чтение и запись разрешения и указанного <paramref name="stream" /> доступен только для записи; или пакет, чтобы открыть требует записи или чтения и записи и указанным <paramref name="stream" /> доступно только для чтения.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>
              Открывает пакет в заданном потоке ввода-ВЫВОДА, файл режима и режима доступа к файлу.
            </summary>
      <param name="stream">
                Поток ввода-ВЫВОДА, в котором следует открыть пакет.
              </param>
      <param name="packageMode">
                Файловый режим, в котором следует открыть пакет.
              </param>
      <param name="packageAccess">
                Доступ к файлу, в котором следует открыть пакет.
              </param>
      <returns>
              Открытый пакет.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="stream" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Значение для <paramref name="packageMode" /> или <paramref name="packageAccess" /> не является допустимым.
                </exception>
      <exception cref="T:System.IO.IOException">
                  Чтобы открыть пакет требует чтение или чтение и запись разрешения и указанного <paramref name="stream" /> доступен только для записи; или пакет, чтобы открыть требует записи или чтения и записи и указанным <paramref name="stream" /> доступно только для чтения.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>
              Открывает пакет на заданный путь и имя файла.
            </summary>
      <param name="path">
                Путь и имя пакета.
              </param>
      <returns>
              Открытый пакет.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="path" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>
              Открывает пакет на заданном пути с помощью режима заданного файла.
            </summary>
      <param name="path">
                Путь и имя пакета.
              </param>
      <param name="packageMode">
                Файловый режим, в котором следует открыть пакет.
              </param>
      <returns>
              Открытый пакет.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="path" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Значение <paramref name="packageMode" /> является недопустимым.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>
              Открывает пакет на заданном пути с указанными значениями файлового режима и режима доступа к файлу.
            </summary>
      <param name="path">
                Путь и имя пакета.
              </param>
      <param name="packageMode">
                Файловый режим, в котором следует открыть пакет.
              </param>
      <param name="packageAccess">
                Доступ к файлу, в котором следует открыть пакет.
              </param>
      <returns>
              Открытый пакет.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="path" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Значение для <paramref name="packageMode" /> или <paramref name="packageAccess" /> не является допустимым.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>
              Открывает пакет на заданном пути с указанными значениями файлового режима, доступ к файлам и настройку совместного использования файлов.
            </summary>
      <param name="path">
                Путь и имя пакета.
              </param>
      <param name="packageMode">
                Файловый режим, в котором следует открыть пакет.
              </param>
      <param name="packageAccess">
                Доступ к файлу, в котором следует открыть пакет.
              </param>
      <param name="packageShare">
                Режим общего доступа, в котором следует открыть пакет.
              </param>
      <returns>
              Открытый пакет.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="path" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Значение <paramref name="packageMode" />, <paramref name="packageAccess" />, или <paramref name="packageShare" /> является недопустимым.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>
              Указывает, является ли часть с заданным URI в пакете.
            </summary>
      <param name="partUri">
                <see cref="T:System.Uri" /> Части для проверки.
              </param>
      <returns>
              <see langword="true" /> Если часть с указанным <paramref name="partUri" /> в пакете; в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="partUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="partUri" /> не является допустимым <see cref="T:System.IO.Packaging.PackagePart" /> универсальный идентификатор ресурса (URI). 
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для записи (чтение информации невозможно).
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>
              Указывает, содержится ли в пакете связь уровня пакета с заданным Идентификатором.
            </summary>
      <param name="id">
                <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> Для проверки связи.
              </param>
      <returns>
              <see langword="true" /> Если связь уровня пакета с указанным <paramref name="id" /> в пакете; в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="id" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.Xml.XmlException">
                  <paramref name="id" /> не является допустимым идентификатором XML.
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для записи.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>
              Этот член поддерживает Windows Presentation Foundation (WPF) инфраструктуру и не предназначен для использования в приложениях.
                Использовать строго типизированный <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> метод вместо.
            </summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary>
              Возвращает упорядоченный список <see cref="T:System.Security.Cryptography.Xml.Transform" /> операций, применяемых к требуемой части.
            </summary>
      <param name="partName">
                <see cref="T:System.Uri" /> Из <see cref="T:System.IO.Packaging.PackagePart" /> для возврата списка для преобразования.
              </param>
      <returns>
              Упорядоченный список URI строки, такие как <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> или <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />, представляющий канонические XML преобразования, примененного к части с данной <paramref name="partName" /> URI.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary>
              Проверяет цифровую подпись на соответствие сертификату X.509.
            </summary>
      <returns>
              Значение <see cref="F:System.IO.Packaging.VerifyResult.Success" />, если проверка прошла успешно; в противном случае — одно из значений <see cref="T:System.IO.Packaging.VerifyResult" />, определяющее проблему.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>
              Проверяет цифровую подпись с учетом заданного сертификата X.509.
            </summary>
      <param name="signingCertificate">
                Сертификат X.509 подписавшего для проверки цифровой подписи.
              </param>
      <returns>
              Значение <see cref="F:System.IO.Packaging.VerifyResult.Success" />, если проверка прошла успешно; в противном случае — одно из значений <see cref="T:System.IO.Packaging.VerifyResult" />, определяющее проблему.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> класс для использования с указанным <see cref="T:System.IO.Packaging.Package" />.
            </summary>
      <param name="package">
                Пакет, связанный с данным диспетчером сигнатур.
              </param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary>
              Ставит вторые подписи для всех подписей в пакете с выбранным пользователем сертификатом X.509.
            </summary>
      <returns>
              Подпись, добавленная в качестве второй, или значение <see langword="null" />, если сертификат не найден или пользователь отменил диалоговое окно выбора сертификата.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>
              Ставит вторые подписи для всех подписей в пакете с указанным сертификатом X.509.
            </summary>
      <param name="certificate">
                Сертификат X.509, добавляемый в качестве второй подписи.
              </param>
      <returns>
              Подпись, добавленная в качестве второй.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="certificate" /> равно <see langword="null" />
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>
              Добавляет вторую подпись для списка подписей с помощью заданного сертификата X.509.
            </summary>
      <param name="certificate">
                Сертификат X.509 для добавления второй подписи для каждого из указанных <paramref name="signatures" />.
              </param>
      <param name="signatures">
                Список подписей, для которых требуется поставить вторую подпись.
              </param>
      <returns>
              Цифровая подпись, используемая для добавления второй подписи для каждого из <paramref name="signatures" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="certificate" /> или <paramref name="signatures" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Пакет не содержит подписанных объектов <see cref="T:System.IO.Packaging.PackagePart" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Пакет не содержит частей <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary>
              Возвращает цифровую подпись для данной подписи универсальный идентификатор ресурса (URI). </summary>
      <param name="signatureUri">
                
                  URI Цифровой подписи для возврата.
              </param>
      <returns>
              Цифровая подпись для указанного <paramref name="signatureUri" />, или <see langword="null" /> Если подпись для данной <paramref name="signatureUri" /> не найден.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary>
              Удаляет все цифровые подписи из пакета.
            </summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary>
              Удаляет цифровую подпись с указанным кодом универсальный идентификатор ресурса (URI). </summary>
      <param name="signatureUri">
                Тип URI удаляемого объекта <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.
              </param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>
              Запрашивает у пользователя сертификат X.509, который затем используется для цифровой подписи указанного списка частей пакета.
            </summary>
      <param name="parts">
                Список универсальные идентификаторы ресурсов (URI) для подписывания элементов <see cref="T:System.IO.Packaging.PackagePart" />.
              </param>
      <returns>
              Цифровая подпись для подписи списка <paramref name="parts" />.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>
              Подписывает список частей пакета с указанным сертификатом X.509.
            </summary>
      <param name="parts">
                Список универсальные идентификаторы ресурсов (URI) для элементов <see cref="T:System.IO.Packaging.PackagePart" /> на подпись.
              </param>
      <param name="certificate">
                Сертификат X.509, используемый для цифровой подписи каждого указанного <paramref name="parts" />.
              </param>
      <returns>
              Цифровая подпись используется для подписи указанного списка <paramref name="parts" />; или <see langword="null" />, если не удалось найти сертификат либо пользователь щелкнул "Отмена" в диалоговом окне выбора сертификатов.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary>
              Подписывает список частей пакета и взаимоотношений пакета заданным сертификатом X.509.
            </summary>
      <param name="parts">
                Список универсальные идентификаторы ресурсов (URI) для объектов <see cref="T:System.IO.Packaging.PackagePart" /> на подпись.
              </param>
      <param name="certificate">
                Сертификат X.509, используемый для создания цифровой подписи для каждой из указанных частей и связей.
              </param>
      <param name="relationshipSelectors">
                Список объектов <see cref="T:System.IO.Packaging.PackageRelationship" /> на подпись.
              </param>
      <returns>
              Цифровая подпись, которая используется для подписывания элементов, указанных в списках <paramref name="parts" /> и <paramref name="relationshipSelectors" />.
            </returns>
      <exception cref="T:System.ArgumentException">
                  Ни <paramref name="parts" />, ни <paramref name="relationshipSelectors" /> не указывают объекты для подписи.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary>
              Подписывает список частей пакета и взаимоотношений пакета заданным сертификатом X.509 и идентификатор (ID).
            </summary>
      <param name="parts">
                Список универсальные идентификаторы ресурсов (URI) для объектов <see cref="T:System.IO.Packaging.PackagePart" />, которые требуется подписать.
              </param>
      <param name="certificate">
                Сертификат X.509, используемый для создания цифровой подписи для каждой из указанных частей и связей.
              </param>
      <param name="relationshipSelectors">
                Список подписываемых объектов <see cref="T:System.IO.Packaging.PackageRelationship" />.
              </param>
      <param name="signatureId">
                Идентификационная строка, которую следует связать с подписью.
              </param>
      <returns>
              Цифровая подпись, используемая для подписывания элементов, указанных в списках <paramref name="parts" /> и <paramref name="relationshipSelectors" />.
            </returns>
      <exception cref="T:System.ArgumentException">
                  В списках <paramref name="parts" /> и <paramref name="relationshipSelectors" /> отсутствуют элементы для подписывания.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary>
              Подписывает список частей пакета, связей пакета или пользовательских объектов с использованием указанного сертификата X.509 и подписи идентификатор (ID).
            </summary>
      <param name="parts">
                Список универсальные идентификаторы ресурсов (URI) объектов <see cref="T:System.IO.Packaging.PackagePart" />, которые требуется подписать.
              </param>
      <param name="certificate">
                Сертификат X.509, используемый для создания цифровой подписи для каждой из указанных частей и связей.
              </param>
      <param name="relationshipSelectors">
                Список подписываемых объектов <see cref="T:System.IO.Packaging.PackageRelationship" />.
              </param>
      <param name="signatureId">
                Идентификационная строка, которую следует связать с подписью.
              </param>
      <param name="signatureObjects">
                Список пользовательских объектов данных, которые требуется подписать.
              </param>
      <param name="objectReferences">
                Список ссылок на подписываемые пользовательские объекты.
              </param>
      <returns>
              Цифровая подпись, использованная для подписания элементов списков <paramref name="parts" /> и <paramref name="relationshipSelectors" />.
            </returns>
      <exception cref="T:System.ArgumentException">
                  В списках <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> и <paramref name="objectReferences" /> отсутствуют элементы для подписания.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> подписываемой части ссылается на пустое, неопределенное или имеющее значение <see langword="null" /> свойство <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />.
                </exception>
      <exception cref="T:System.Xml.XmlException">
                  Значение <paramref name="signatureId" /> отлично от <see langword="null" /> и не является допустимым идентификатором схемы XML (например, начинается с цифры).
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>
              Проверяет указанный сертификат X.509.
            </summary>
      <param name="certificate">
                Проверяемый сертификат X.509.
              </param>
      <returns>
              <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (значение 0), если сертификат проверен успешно; в противном случае побитовое перечисление флагов ошибок.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary>
              Проверяет подписи всех подписанных частей в пакете.
            </summary>
      <param name="exitOnFailure">
                Значение <see langword="true" /> для выхода при первом сбое; в противном случае — значение <see langword="false" /> для продолжения обработки и проверки всех подписей.
              </param>
      <returns>
              Значение <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (0), если все подписи проверены успешно; в противном случае — значение перечисления, которое идентифицирует ошибку.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.IO.Packaging.PackagePart" /> класса с указанным родительским <see cref="P:System.IO.Packaging.PackagePart.Package" /> и URI.
            </summary>
      <param name="package">
                Родительский <see cref="T:System.IO.Packaging.Package" /> части.
              </param>
      <param name="partUri">
                
                  URI Части относительно родительского элемента <see cref="T:System.IO.Packaging.Package" /> корневой.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="package" /> или <paramref name="partUri" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.IO.Packaging.PackagePart" /> класса с указанным родительским <see cref="P:System.IO.Packaging.PackagePart.Package" />, частично URI, и MIME тип содержимого.
            </summary>
      <param name="package">
                Родительский <see cref="T:System.IO.Packaging.Package" /> части.
              </param>
      <param name="partUri">
                
                  URI Части относительно родительского элемента <see cref="T:System.IO.Packaging.Package" /> корневой.
              </param>
      <param name="contentType">
                
                  MIME Тип потока данных части содержимого.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="package" /> или <paramref name="partUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="partUri" /> не является допустимым <see cref="T:System.IO.Packaging.PackagePart" /> URI. 
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.IO.Packaging.PackagePart" /> класса с указанным родительским <see cref="P:System.IO.Packaging.PackagePart.Package" />, частично URI, MIME тип, содержимого и <see cref="T:System.IO.Packaging.CompressionOption" />.
            </summary>
      <param name="package">
                Родительский <see cref="T:System.IO.Packaging.Package" /> части.
              </param>
      <param name="partUri">
                
                  URI Части относительно родительского элемента <see cref="T:System.IO.Packaging.Package" /> корневой.
              </param>
      <param name="contentType">
                
                  MIME Тип потока данных части содержимого.
              </param>
      <param name="compressionOption">
                Параметр сжатия потока данных части.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="package" /> или <paramref name="partUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="partUri" /> не является допустимым <see cref="T:System.IO.Packaging.PackagePart" /> URI. 
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="compressionOption" /> Недопустимое значение.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>
              Создает отношение уровня части между <see cref="T:System.IO.Packaging.PackagePart" /> в указанный целевой объект <see cref="T:System.IO.Packaging.PackagePart" /> или внешний ресурс.
            </summary>
      <param name="targetUri">
                
                  URI Целевой части.
              </param>
      <param name="targetMode">
                Одно из значений перечисления.
                 Например <see cref="F:System.IO.Packaging.TargetMode.Internal" /> Если целевой части находится внутри <see cref="T:System.IO.Packaging.Package" />; или <see cref="F:System.IO.Packaging.TargetMode.External" /> Если целевой объект является ресурсом вне <see cref="T:System.IO.Packaging.Package" />.
              </param>
      <param name="relationshipType">
                Роль связи.
              </param>
      <returns>
              Отношение уровня части между <see cref="T:System.IO.Packaging.PackagePart" /> цели <see cref="T:System.IO.Packaging.PackagePart" /> или внешний ресурс.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="targetUri" /> или <paramref name="relationshipType" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="targetMode" /> Параметр не является допустимым <see cref="T:System.IO.Packaging.TargetMode" /> значение перечисления.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Часть, заданная параметром <paramref name="targetUri" /> связи (целевым объектом связи не может быть другая связь).
                
                  -или-
                
                  <paramref name="targetMode" /> указывается как <see cref="F:System.IO.Packaging.TargetMode.Internal" /> но <paramref name="targetUri" /> является абсолютным внешним URI.
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для чтения (новой связи невозможно).
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>
              Создает отношение уровня части между <see cref="T:System.IO.Packaging.PackagePart" /> в указанный целевой объект <see cref="T:System.IO.Packaging.PackagePart" /> или внешний ресурс.
            </summary>
      <param name="targetUri">
                
                  URI Целевой части.
              </param>
      <param name="targetMode">
                Одно из значений перечисления.
                 Например <see cref="F:System.IO.Packaging.TargetMode.Internal" /> Если целевой части находится внутри <see cref="T:System.IO.Packaging.Package" />; или <see cref="F:System.IO.Packaging.TargetMode.External" /> Если целевой объект является ресурсом вне <see cref="T:System.IO.Packaging.Package" />.
              </param>
      <param name="relationshipType">
                Роль связи.
              </param>
      <param name="id">
                Уникальный идентификатор для связи.
              </param>
      <returns>
              Отношение уровня части между <see cref="T:System.IO.Packaging.PackagePart" /> цели <see cref="T:System.IO.Packaging.PackagePart" /> или внешний ресурс.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="targetUri" /> или <paramref name="relationshipType" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="targetMode" /> Параметр не является допустимым <see cref="T:System.IO.Packaging.TargetMode" /> значение перечисления.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Часть, заданная параметром <paramref name="targetUri" /> связи (целевым объектом связи не может быть другая связь).
                
                  -или-
                
                  <paramref name="targetMode" /> указывается как <see cref="F:System.IO.Packaging.TargetMode.Internal" /> но <paramref name="targetUri" /> является абсолютным внешним URI.
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для чтения (новой связи невозможно).
                </exception>
      <exception cref="T:System.Xml.XmlException">
                  <paramref name="id" /> не является допустимым идентификатором XML.
                
                  -или-
                
                  Часть с указанным <paramref name="id" /> уже существует.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>
              Удаляет указанный уровень часть <see cref="T:System.IO.Packaging.PackageRelationship" />.
            </summary>
      <param name="id">
                <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> Связи для удаления.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="id" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для чтения (удаление связей невозможно).
                </exception>
      <exception cref="T:System.Xml.XmlException">
                  <paramref name="id" /> не является допустимым идентификатором XML.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>
              При переопределении в производном классе возвращает MIME тип содержимого части пакета.
            </summary>
      <returns>
              
                MIME Тип содержимого части пакета.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  Производный класс не предоставляет реализацию переопределения, необходимых для <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> метод.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>
              Возвращает отношение, которое содержит указанное <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.
            </summary>
      <param name="id">
                <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> Связи для возврата.
              </param>
      <returns>
              Отношение, которое соответствует указанному <paramref name="id" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="id" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.Xml.XmlException">
                  <paramref name="id" /> не является допустимым идентификатором XML.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="relationshipType" /> равен пустой строке.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                
                  -или-
                
                  Связь с указанным <paramref name="id" /> в пакете не существует.
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для записи (не удается прочитать сведения о связях).
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>
              Возвращает коллекцию всех связей, принадлежащие этой части.
            </summary>
      <returns>
              Коллекция всех связей, владельцем которых часть.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для записи (не удается прочитать сведения о связях).
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>
              Возвращает коллекцию связей, которые соответствуют указанным <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.
            </summary>
      <param name="relationshipType">
                <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> Связей, чтобы найти и вернуть в коллекции.
              </param>
      <returns>
              Коллекция отношений, которые совпадают с указанными <paramref name="relationshipType" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="relationshipType" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="relationshipType" /> равен пустой строке.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для записи (не удается прочитать сведения о связях).
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>
              Возвращает поток данных содержимого части.
            </summary>
      <returns>
              Поток данных содержимого части.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Объект потока, возвращенный <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> метод производного подкласс <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>
              Возвращает поток содержимого открывается в указанной операции ввода-вывода <see cref="T:System.IO.FileMode" />.
            </summary>
      <param name="mode">
                Режим ввода-вывода, в котором следует открыть поток содержимого.
              </param>
      <returns>
              Поток содержимого части.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="mode" /> Параметр не является допустимым <see cref="T:System.IO.FileMode" /> значение перечисления.
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="mode" /> Параметр несовместим с потоком пакета и части.
                
                  -или-
                
                  Объект потока, возвращенный <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> метод производного подкласс <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>
              Возвращает с указанного потока содержимого части <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />.
            </summary>
      <param name="mode">
                Режим ввода-вывода, в котором следует открыть поток содержимого.
              </param>
      <param name="access">
                Разрешения доступа, используемые при открытии потока содержимого.
              </param>
      <returns>
              Поток содержимого части.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="mode" /> Параметр не является допустимым <see cref="T:System.IO.FileMode" /> значение перечисления.
                
                  -или-
                
                  <paramref name="access" /> Параметр не является допустимым <see cref="T:System.IO.FileAccess" /> значение перечисления.
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="mode" /> или <paramref name="access" /> несовместим с потоком пакета и части.
                
                  -или-
                
                  <paramref name="access" /> Параметр определен как <see cref="F:System.IO.FileAccess.Read" /> но <paramref name="mode" /> параметра необходим доступ на запись.
                    (<see cref="T:System.IO.FileMode" /> значения <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" />, и <see cref="F:System.IO.FileMode.Append" /> требуют <see cref="F:System.IO.FileAccess.Write" /> или <see cref="F:System.IO.FileAccess.ReadWrite" /> доступа.)
                
                  -или-
                
                  Объект потока, возвращенный <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> метод производного подкласс <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>
              При переопределении в производном классе возвращает поток содержимого части открывается с указанным <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />.
            </summary>
      <param name="mode">
                Режим ввода-вывода, в котором следует открыть поток содержимого.
              </param>
      <param name="access">
                Разрешения доступа, используемые при открытии потока содержимого.
              </param>
      <returns>
              Поток данных содержимого части.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>
              Возвращает значение, указывающее, является ли данная часть является владельцем связь с указанным <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.
            </summary>
      <param name="id">
                <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> Для проверки связи.
              </param>
      <returns>
              <see langword="true" /> Если данная часть является владельцем связи с указанным <paramref name="id" />; в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="id" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.Xml.XmlException">
                  <paramref name="id" /> не является допустимым идентификатором XML.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
      <exception cref="T:System.IO.IOException">
                  Пакет доступен только для записи (не удается прочитать сведения о связях).
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>
              Возвращает перечислитель для перебора элементов коллекции.
            </summary>
      <returns>
              Перечислитель для прохода по <see cref="T:System.IO.Packaging.PackagePart" /> элементов в коллекции.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>
              Возвращает перечислитель, выполняющий перебор элементов в коллекции.
            </summary>
      <returns>
              Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который используется для прохода по коллекции.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              Описание этого члена см. в разделе <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Collections.IEnumerator" />, который используется для прохода по коллекции.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackageProperties" />.
            </summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>
              Освобождает все ресурсы, используемые экземпляром <see cref="T:System.IO.Packaging.PackageProperties" />.
            </summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>
              Освобождает неуправляемые ресурсы, используемые <see cref="T:System.IO.Packaging.PackageProperties" /> экземпляра и при необходимости освобождает также управляемые ресурсы.
            </summary>
      <param name="disposing">
                Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.
              </param>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>
              Возвращает перечислитель для прохода по связям в коллекции.
            </summary>
      <returns>
              Перечислитель для прохода по <see cref="T:System.IO.Packaging.PackageRelationship" /> элементов в коллекции.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              Данный тип или член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.
            </summary>
      <returns>
              Не используйте — использовать <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.
            </summary>
      <param name="sourceUri">
                
                  универсальный идентификатор ресурса (URI) Из <see cref="T:System.IO.Packaging.PackagePart" /> или <see cref="T:System.IO.Packaging.Package" /> (<paramref name="SourceUri" />= «/»), которому принадлежит отношение.
              </param>
      <param name="selectorType">
                Тип <paramref name="selectionCriteria" />, либо путем связи <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> или связи <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />.
              </param>
      <param name="selectionCriteria">
                Строка квалификации, используемый для выбора связей на основе <paramref name="selectorType" />.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="sourceUri" /> или <paramref name="selectionCriteria" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="selectorType" /> Указан недопустимый параметр.
                </exception>
      <exception cref="T:System.Xml.XmlException">
                  <paramref name="selectorType" /> Параметр <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> но <paramref name="selectionCriteria" /> не является допустимым Определение схемы XML (XSD) идентификатор (ID). 
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="selectionCriteria" /> Не является допустимым для указанного <paramref name="selectorType" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="sourceUri" /> Не <see cref="T:System.IO.Packaging.Package" /> корневой («/») и также не является допустимым <see cref="T:System.IO.Packaging.PackagePart" /> URI. 
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>
              Возвращает список <see cref="T:System.IO.Packaging.PackageRelationship" /> объекты, которые соответствуют определенным <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" />, <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" />, и <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" />.
            </summary>
      <param name="package">
                Пакет, из которого требуется выбрать связи на основе критериев выбора.
              </param>
      <returns>
              Список отношений, Выбор параметров, заданных для соответствующих <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> конструктор.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>
              Возвращает значение, указывающее, являются ли два URI типа pack эквивалентными.
            </summary>
      <param name="firstPackUri">
                Первый URI типа pack.
              </param>
      <param name="secondPackUri">
                Второй URI типа pack.
              </param>
      <returns>
              Целое число со знаком, указывающее на соотношение <paramref name="firstPackUri" /> и <paramref name="secondPackUri" />.
            
                      Значение
                    
                      Значение
                    
                      Меньше 0
                    
                      Значение <paramref name="firstPackUri" /> меньше <paramref name="secondPackUri" />.
                    
                      0
                    
                      <paramref name="firstPackUri" /> равно <paramref name="secondPackUri" />.
                    
                      Больше 0
                    
                      Значение <paramref name="firstPackUri" /> больше значения <paramref name="secondPackUri" />.
                    </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="firstPackUri" /> или <paramref name="secondPackUri" /> не является абсолютным URI.
                
                  -или-
                
                  <paramref name="firstPackUri" /> или <paramref name="secondPackUri" /> не начинается со схемы "pack://".
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>
              Возвращает значение, указывающее ли два пакета часть Идентификаторы URI эквивалентны.
            </summary>
      <param name="firstPartUri">
                
                  URI Первого <see cref="T:System.IO.Packaging.PackagePart" />.
              </param>
      <param name="secondPartUri">
                
                  URI Второго <see cref="T:System.IO.Packaging.PackagePart" />.
              </param>
      <returns>
              Значение, указывающее отношение между <paramref name="firstPartUri" /> и <paramref name="secondPartUri" />.
            
                      Значение
                    
                      Значение
                    
                      Меньше 0
                    
                      Значение <paramref name="firstPartUri" /> меньше <paramref name="secondPartUri" />.
                    
                      0
                    
                      <paramref name="firstPartUri" /> равно <paramref name="secondPartUri" />.
                    
                      Больше 0
                    
                      Значение <paramref name="firstPartUri" /> больше значения <paramref name="secondPartUri" />.
                    </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="firstPartUri" /> или <paramref name="secondPartUri" /> не входит в допустимый URI синтаксиса.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>
              Создает новый пакет URI, указывающий на пакет.
            </summary>
      <param name="packageUri">
                URI связанного <see cref="T:System.IO.Packaging.Package" />.
              </param>
      <returns>
              Пакет URI для <see cref="T:System.IO.Packaging.Package" />, на который ссылается данный <paramref name="packageUri" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="packageUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="packageUri" /> не является абсолютным URI.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>
              Создает URI типа pack по URI класса <see cref="T:System.IO.Packaging.Package" /> и URI части пакета.
            </summary>
      <param name="packageUri">
                
                  URI выражения <see cref="T:System.IO.Packaging.Package" />.
              </param>
      <param name="partUri">
                
                  URI части <see cref="T:System.IO.Packaging.PackagePart" /> в пакете.
              </param>
      <returns>
              URI типа pack указанной части <see cref="T:System.IO.Packaging.PackagePart" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="packageUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="packageUri" /> не является абсолютным URI.
                
                  -или-
                
                  <paramref name="partUri" /> не является допустимым синтаксисом URI части.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>
              Создает URI типа pack по URI класса <see cref="T:System.IO.Packaging.Package" /> , URI части пакета и добавляемому фрагменту "#".
            </summary>
      <param name="packageUri">
                
                  URI класса <see cref="T:System.IO.Packaging.Package" />.
              </param>
      <param name="partUri">
                
                  URI части <see cref="T:System.IO.Packaging.PackagePart" /> в пакете.
              </param>
      <param name="fragment">
                Ссылка "#", идентифицирующая элемент в части пакета.
              </param>
      <returns>
              URI типа pack, определяющий заданный пакет, часть пакета и фрагмент.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="packageUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="packageUri" /> не является абсолютным URI.
                
                  -или-
                
                  <paramref name="partUri" /> не является допустимым синтаксисом URI части.
                
                  -или-
                
                  <paramref name="fragment" /> является пустым или начинается с символа "#".
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>
              Создает отформатированное <see cref="T:System.IO.Packaging.PackagePart" /> URI.
            </summary>
      <param name="partUri">
                URI <see cref="T:System.IO.Packaging.PackagePart" /> внутри пакета.
              </param>
      <returns>
              Форматированный <see cref="T:System.IO.Packaging.PackagePart" /> URI.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>
              Возвращает нормализованную форму указанного <see cref="T:System.IO.Packaging.PackagePart" /> URI.
            </summary>
      <param name="partUri">
                <see cref="T:System.IO.Packaging.PackagePart" /> URI для нормализации.
              </param>
      <returns>
              Нормализованная форма заданного <paramref name="partUri" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="partUri" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>
              Возвращает внутренний универсальный код ресурса (URI), указывающий на весь пакет указанного кода URI типа pack.
            </summary>
      <param name="packUri">
                URI типа pack, из которого следует получить код URI пакета <see cref="T:System.IO.Packaging.Package" />.
              </param>
      <returns>
              Код URI пакета <see cref="T:System.IO.Packaging.Package" /> из указанного <paramref name="packUri" />.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>
              Возвращает URI <see cref="T:System.IO.Packaging.PackagePart" /> в указанном URI типа pack.
            </summary>
      <param name="packUri">
                URI типа pack, из которого следует получить URI <see cref="T:System.IO.Packaging.PackagePart" />.
              </param>
      <returns>
              URI <see cref="T:System.IO.Packaging.PackagePart" /> в указанном <paramref name="packUri" /> или значение <see langword="null" />, если <paramref name="packUri" /> указывает на пакет вместо <see cref="T:System.IO.Packaging.PackagePart" />.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>
              Возвращает URI части отношение, связанный с указанным <see cref="T:System.IO.Packaging.PackagePart" />.
            </summary>
      <param name="partUri">
                <see cref="P:System.IO.Packaging.PackagePart.Uri" /> Из <see cref="T:System.IO.Packaging.PackagePart" /> для возвращения URI для связанного <see cref="T:System.IO.Packaging.PackageRelationship" />.
              </param>
      <returns>
              URI <see cref="T:System.IO.Packaging.PackageRelationship" /> часть, связанные с <see cref="T:System.IO.Packaging.PackagePart" /> определяется <paramref name="partUri" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="partUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="partUri" /> Недопустимый синтаксис URI части пакета.
                
                  -или-
                
                  <paramref name="partUri" /> является абсолютным URI.
                
                  -или-
                
                  <paramref name="partUri" /> Указывает на часть отношения.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>
              Возвращает относительный URI между двумя указанными <see cref="T:System.IO.Packaging.PackagePart" /> Идентификаторы URI. 
            </summary>
      <param name="sourcePartUri">
                
                  URI Исходной части.
              </param>
      <param name="targetPartUri">
                
                  URI Целевой части.
              </param>
      <returns>
              Относительные URI из <paramref name="sourcePartUri" /> в <paramref name="targetPartUri" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="sourcePartUri" /> или <paramref name="targetPartUri" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>
              Возвращает <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> из <see cref="T:System.IO.Packaging.PackageRelationship" /> с указанным URI.
            </summary>
      <param name="relationshipPartUri">
                
                  URI Части отношения для возврата <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> из.
              </param>
      <returns>
              <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> Из <see cref="T:System.IO.Packaging.PackagePart" /> от связи с указанным <paramref name="relationshipPartUri" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="relationshipPartUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="relationshipPartUri" /> абсолютный URI.
                
                  -или-
                
                  <paramref name="relationshipPartUri" /> Недопустимый синтаксис для <see cref="T:System.IO.Packaging.PackagePart" />.
                
                  -или-
                
                  <paramref name="relationshipPartUri" /> не ссылается на элемент связи.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> Связи часть ссылается на другую часть связи (примечания не является допустимым, см. в разделе).
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>
              Возвращает значение, указывающее, является ли заданное URI — URI для <see cref="T:System.IO.Packaging.PackageRelationship" /> части.
            </summary>
      <param name="partUri">
                
                  URI Для проверки <see cref="T:System.IO.Packaging.PackageRelationship" /> часть.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="partUri" /> определяет <see cref="T:System.IO.Packaging.PackageRelationship" /> часть, в противном случае — <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="partUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="partUri" /> абсолютный URI.
                
                  -или-
                
                  <paramref name="partUri" /> является недопустимым <see cref="T:System.IO.Packaging.PackagePart" /> синтаксиса.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>
              Возвращает URI части по заданному URI исходной части URI и URI с относительным путем к целевой части.
            </summary>
      <param name="sourcePartUri">
                URI исходной части или «/» для обозначения <see cref="T:System.IO.Packaging.Package" /> корневой.
              </param>
      <param name="targetUri">
                Относительный URI целевой части.
              </param>
      <returns>
              Разрешить URI целевой части между указанным <paramref name="SourcePartUri" /> и <paramref name="targetUri" /> параметров.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="sourcePartUri" /> или <paramref name="targetUri" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="sourcePartUri" /> не является допустимым URI-адрес части.
                
                  -или-
                
                  <paramref name="targetUri" /> не является допустимым относительным URI.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary>
              Удаляет <see cref="T:System.Security.RightsManagement.UseLicense" /> для указанного пользователя из потока данных зашифрованного права управления.
            </summary>
      <param name="userKey">
                Пользователь <see cref="T:System.Security.RightsManagement.UseLicense" />   удаляемых.
              </param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary>
              Возвращает коллекцию словаря пользователя и <see cref="T:System.Security.RightsManagement.UseLicense" /> пары из потока данных зашифрованного права управления ключей и значений.
            </summary>
      <returns>
              Совокупность пользователей и <see cref="T:System.Security.RightsManagement.UseLicense" /> пары ключ значение, содержащихся в управлением правами защищенного пакета.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary>
              Возвращает внедренный <see cref="T:System.Security.RightsManagement.PublishLicense" /> из потока данных зашифрованного права управления.
            </summary>
      <returns>
              Встроенный <see cref="T:System.Security.RightsManagement.PublishLicense" />; или <see langword="null" />, если пакет не содержит <see cref="T:System.Security.RightsManagement.PublishLicense" />.
            </returns>
      <exception cref="T:System.IO.FileFormatException">
                  В текущей версии этот класс не удается прочитать информацию службы управления правами в этом пакете.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary>
              Возвращает внедренный указанного пользователя <see cref="T:System.Security.RightsManagement.UseLicense" /> из потока данных зашифрованного права управления.
            </summary>
      <param name="userKey">
                Пользователя или группы пользователей, чтобы вернуть <see cref="T:System.Security.RightsManagement.UseLicense" /> для.
              </param>
      <returns>
              <see cref="T:System.Security.RightsManagement.UseLicense" /> Для указанного пользователя; или <see langword="null" />, если пакет не содержит <see cref="T:System.Security.RightsManagement.UseLicense" /> соответствующий заданной <paramref name="userKey" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="userKey" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.IO.FileFormatException">
                  В текущей версии этот класс не удается прочитать информацию службы управления правами в этом пакете.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary>
              Сохранение заданного <see cref="T:System.Security.RightsManagement.PublishLicense" /> поток данных зашифрованного права управления.
            </summary>
      <param name="publishLicense">
                Лицензия на публикацию, которую требуется сохранить и внедрить в пакет.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="publishLicense" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.IO.FileFormatException">
                  В текущей версии этот класс не удается прочитать информацию службы управления правами в этом пакете.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary>
              Сохранение заданного <see cref="T:System.Security.RightsManagement.UseLicense" /> для указанного пользователя в поток данных зашифрованного права управления.
            </summary>
      <param name="userKey">
                Пользователь <see cref="T:System.Security.RightsManagement.UseLicense" />.
              </param>
      <param name="useLicense">
                Лицензии на использование для хранения и внедрить в пакет.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="userKey" /> или <paramref name="useLicense" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.IO.FileFormatException">
                  В текущей версии этот класс не удается прочитать информацию службы управления правами в этом пакете.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary>
              Создает новый поток с заданным именем.
            </summary>
      <param name="name">
                Имя для нового потока.
              </param>
      <returns>
              Новый поток с заданным <paramref name="name" />.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary>
              Создает новый поток с заданным именем, <see cref="T:System.IO.Packaging.CompressionOption" />, и <see cref="T:System.IO.Packaging.EncryptionOption" />.
            </summary>
      <param name="name">
                Имя для нового потока.
              </param>
      <param name="compressionOption">
                Параметр сжатия потока данных.
              </param>
      <param name="encryptionOption">
                Параметр шифрования потока данных.
              </param>
      <returns>
              Новый поток с заданным <paramref name="name" />, <paramref name="compressionOption" />, и <paramref name="encryptionOption" />.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary>
              Создает новый дочерний <see cref="T:System.IO.Packaging.StorageInfo" /> с <see cref="T:System.IO.Packaging.StorageInfo" /> в качестве родительского.
            </summary>
      <param name="name">
                Имя нового дочернего хранилища данных.
              </param>
      <returns>
              Новое дочернее хранилище данных.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="name" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary>
              Удаляет поток с указанным именем.
            </summary>
      <param name="name">
                <see cref="T:System.IO.Packaging.StreamInfo" /> Имя потока для удаления.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="name" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary>
              Удаляет указанное вложенное хранилище.
            </summary>
      <param name="name">
                Имя удаляемого вложенного хранилища.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="name" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary>
              Возвращает <see cref="T:System.IO.Packaging.StreamInfo" /> экземпляр с заданным именем.
            </summary>
      <param name="name">
                Имя <see cref="T:System.IO.Packaging.StreamInfo" /> экземпляра будут возвращены.
              </param>
      <returns>
              Поток с заданным <paramref name="name" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="name" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary>
              Возвращает массив <see cref="T:System.IO.Packaging.StreamInfo" /> экземпляры, содержащиеся в этом хранилище.
            </summary>
      <returns>
              Массив <see cref="T:System.IO.Packaging.StreamInfo" /> объектов, каждая из которых указывает поток ввода-вывода данных определены в этом хранилище.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary>
              Возвращает дочернее вложенное хранилище с указанным именем.
            </summary>
      <param name="name">
                Имя вложенного хранилища для возврата.
              </param>
      <returns>
              Дочернее вложенное хранилище с указанным <paramref name="name" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="name" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary>
              Возвращает массив дочерних вложенных хранилищ, которые в настоящее время содержатся в этом хранилище.
            </summary>
      <returns>
              Массив объектов <see cref="T:System.IO.Packaging.StorageInfo" />, каждый из которых указывает на вложенное хранилище, определенное в этом хранилище.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary>
              Возвращает значение, указывающее, существует ли данный поток.
            </summary>
      <param name="name">
                <see cref="T:System.IO.Packaging.StreamInfo" /> Имя для проверки.
              </param>
      <returns>
              <see langword="true" /> Если поток с заданным <paramref name="name" /> существует; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary>
              Возвращает значение, которое указывает, существует ли указанное дочернее вложенное хранилище.
            </summary>
      <param name="name">
                Проверяемое дочернее имя <see cref="T:System.IO.Packaging.StorageInfo" />.
              </param>
      <returns>
              Значение <see langword="true" />, если дочернее вложенное хранилище с указанным <paramref name="name" /> существует; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary>
              Возвращает поток открыт в значение по умолчанию <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />.
            </summary>
      <returns>
              Открытие потока ввода-вывода по умолчанию <see cref="T:System.IO.Packaging.Package" /> корневой <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />...
            </returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary>
              Возвращает поток ввода-вывода, открыт в заданном <see cref="T:System.IO.FileMode" />.
            </summary>
      <param name="mode">
                Файловый режим, в котором следует открыть поток.
              </param>
      <returns>
              Поток открыт в заданном файле <paramref name="mode" />.
            </returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>
              Возвращает поток ввода-вывода, открыт в заданном <see cref="T:System.IO.FileMode" /> с данной <see cref="T:System.IO.FileAccess" />.
            </summary>
      <param name="mode">
                Файловый режим, в котором следует открыть поток.
              </param>
      <param name="access">
                Режим доступа к файлу для чтения или записи в поток.
              </param>
      <returns>
              Поток ввода-вывода открыт в заданном <see cref="T:System.IO.FileMode" /> с данной <see cref="T:System.IO.FileAccess" />.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" />.
            </summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" /> путем указания уровня разрешений для аудио.
            </summary>
      <param name="permissionAudio">
                Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.
              </param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" /> путем указания уровня разрешений для видео, аудио и изображений.
            </summary>
      <param name="permissionAudio">
                Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.
              </param>
      <param name="permissionVideo">
                Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.
              </param>
      <param name="permissionImage">
                Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionImage" />.
              </param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" /> путем указания уровня разрешений для изображений.
            </summary>
      <param name="permissionImage">
                Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionImage" />.
              </param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" /> путем указания уровня разрешений для видео.
            </summary>
      <param name="permissionVideo">
                Перечисляемое значение для <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.
              </param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.MediaPermission" /> путем указания состояния разрешения.
            </summary>
      <param name="state">
                Перечисляемое значение для <see cref="T:System.Security.Permissions.PermissionState" />.
              </param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>
              Создает и возвращает идентичную копию текущего разрешения.
            </summary>
      <returns>
              Копия текущего разрешения.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>
              Восстанавливает разрешение с указанным состоянием из кодировки XML.
            </summary>
      <param name="securityElement">
                Кодировка XML, используемая для восстановления разрешения.
              </param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>
              Создает и возвращает разрешение, представляющее собой пересечение текущего и указанного разрешений.
            </summary>
      <param name="target">
                Разрешение, пересекающееся с текущим разрешением.
                 Его тип должен совпадать с типом текущего разрешения.
              </param>
      <returns>
              Пересечение двух разрешений является разрешением, которое описывает состояние, описываемое обоими разрешениями.
               Для пересеченного разрешения будет допустим только тот запрос, который передает оба исходных разрешения.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
              Определяет, является ли текущее разрешение подмножеством указанного разрешения.
            </summary>
      <param name="target">
                Разрешение, для которого требуется проверить отношение подмножества.
                 Его тип должен совпадать с типом текущего разрешения.
              </param>
      <returns>
              Значение <see langword="true" />, если текущее разрешение является подмножеством указанного разрешения. В противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>
              Возвращает значение, указывающее, является ли текущее разрешение неограниченным.
            </summary>
      <returns>
              Значение <see langword="true" />, если все разрешения для звука, изображений и видео не ограничены; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>
              Создает кодировку XML для разрешения и его текущего состояния.
            </summary>
      <returns>
              Кодировка XML разрешения, включающая любые сведения о состоянии.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>
              Создает разрешение, представляющее собой объединение текущего и указанного разрешений.
            </summary>
      <param name="target">
                Разрешение, которое требуется объединить с текущим разрешением.
                 Его тип должен совпадать с типом текущего разрешения.
              </param>
      <returns>
              Новое разрешение, представляющее собой объединение текущего и указанного разрешений.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.
            </summary>
      <param name="action">
                Одно из значений <see cref="T:System.Security.Permissions.SecurityAction" />.
              </param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>
              Создает и возвращает новый объект <see cref="T:System.Security.Permissions.MediaPermission" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Security.Permissions.MediaPermission" />, соответствующий этому атрибуту.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.WebBrowserPermission" />.
            </summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.WebBrowserPermission" /> путем указания состояния разрешения.
            </summary>
      <param name="state">
                Перечисляемое значение для <see cref="T:System.Security.Permissions.PermissionState" />.
              </param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.WebBrowserPermission" /> путем указания уровня разрешений для веб-браузера.
            </summary>
      <param name="webBrowserPermissionLevel">
                Перечисляемое значение для <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.
              </param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>
              Создает и возвращает идентичную копию текущего разрешения.
            </summary>
      <returns>
              Копия текущего разрешения.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>
              Восстанавливает разрешение с указанным состоянием из кодировки XML.
            </summary>
      <param name="securityElement">
                Кодировка XML, используемая для восстановления разрешения.
              </param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>
              Создает и возвращает разрешение, представляющее собой пересечение текущего и указанного разрешений.
            </summary>
      <param name="target">
                Разрешение, пересекающееся с текущим разрешением.
                 Его тип должен совпадать с типом текущего разрешения.
              </param>
      <returns>
              Пересечение двух разрешений является разрешением, которое описывает состояние, описываемое обоими разрешениями.
               Для пересеченного разрешения будет допустим только тот запрос, который передает оба исходных разрешения.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
              Определяет, является ли текущее разрешение подмножеством указанного разрешения.
            </summary>
      <param name="target">
                Разрешение, для которого требуется проверить отношение подмножества.
                 Его тип должен совпадать с типом текущего разрешения.
              </param>
      <returns>
              Значение <see langword="true" />, если текущее разрешение является подмножеством указанного разрешения. В противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>
              Возвращает значение, указывающее, является ли текущее разрешение неограниченным.
            </summary>
      <returns>
              Значение <see langword="true" />, если для свойства <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> задано значение <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>
              Создает кодировку XML для разрешения и его текущего состояния.
            </summary>
      <returns>
              Кодировка XML разрешения, включающая любые сведения о состоянии.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>
              Создает разрешение, представляющее собой объединение текущего и указанного разрешений.
            </summary>
      <param name="target">
                Разрешение, которое требуется объединить с текущим разрешением.
                 Его тип должен совпадать с типом текущего разрешения.
              </param>
      <returns>
              Новое разрешение, представляющее собой объединение текущего и указанного разрешений.
            </returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> указанным значением <see cref="T:System.Security.Permissions.SecurityAction" />.
            </summary>
      <param name="action">
                Одно из значений <see cref="T:System.Security.Permissions.SecurityAction" />.
              </param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>
              Создает и возвращает новый экземпляр класса <see cref="T:System.Security.Permissions.WebBrowserPermission" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Security.Permissions.WebBrowserPermission" />, соответствующий объявлению безопасности.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.RightsManagement.ContentGrant" /> класс, который предоставляет указанного <see cref="T:System.Security.RightsManagement.ContentUser" /> указанного <see cref="T:System.Security.RightsManagement.ContentRight" />.
            </summary>
      <param name="user">
                Предоставляется право доступа пользователя.
              </param>
      <param name="right">
                Право доступа предоставляется.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.RightsManagement.ContentGrant" /> класс, который предоставляет указанного <see cref="T:System.Security.RightsManagement.ContentUser" /> указанного <see cref="T:System.Security.RightsManagement.ContentRight" /> для указанного <see cref="T:System.DateTime" /> длительность.
            </summary>
      <param name="user">
                Предоставляется право доступа пользователя.
              </param>
      <param name="right">
                Право доступа предоставляется.
              </param>
      <param name="validFrom">
                Начальную дату и время начала вправо.
              </param>
      <param name="validUntil">
                Конечную дату и время истечения вправо.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.ContentUser" />.
            </summary>
      <param name="name">
                Имя пользователя или группы.
              </param>
      <param name="authenticationType">
                Метод проверки подлинности.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary>
              Возвращает значение, указывающее, является ли это <see cref="T:System.Security.RightsManagement.ContentUser" /> эквивалента в другой присваивается экземпляр.
            </summary>
      <param name="obj">
                Пользовательский экземпляр для сравнения на равенство.
              </param>
      <returns>
              <see langword="true" /> Если <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> и <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> одинаковы для этого пользователя и данного пользователя; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary>
              Возвращает вычисляемый хэш-код на основе пользователя <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> и <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.
            </summary>
      <returns>
              Вычисляемый хэш-код пользователя <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> и <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary>
              Возвращает значение, указывающее, является ли пользователь в настоящее время проверку подлинности.
            </summary>
      <returns>
              <see langword="true" /> Если в данный момент пользователь прошел проверку подлинности; в противном случае — <see langword="false" />.
                Значение по умолчанию — <see langword="false" /> до выполнения проверки подлинности.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary>
              Расшифровывает текст в виде открытого текста.
            </summary>
      <param name="cryptoText">
                Для расшифровки зашифрованного текста.
              </param>
      <returns>
              Расшифрованный открытый текст <paramref name="cryptoText" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="cipherText" /> имеет значение NULL.
                </exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">
                  Расшифровка прямо не предоставлен.
                </exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary>
              Освобождает все ресурсы, занятые модулем <see cref="T:System.Security.RightsManagement.CryptoProvider" />.
            </summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary>
              Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Security.RightsManagement.CryptoProvider" />, а при необходимости освобождает также управляемые ресурсы.
            </summary>
      <param name="disposing">
                Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary>
              Шифрует открытый текст.
            </summary>
      <param name="clearText">
                Открытый текст для шифрования.
              </param>
      <returns>
              Зашифрованный текст из заданного <paramref name="clearText" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="clearText" /> имеет значение null.
                </exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">
                  Шифрование запрещено.
                </exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary>
              Освобождает ресурсы и выполняет внутреннюю очистку, экземпляр будет утилизирован во время сборки мусора.
            </summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.
            </summary>
      <param name="name">
                Значение для языкового стандарта <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> свойство.
              </param>
      <param name="description">
                Значение для языкового стандарта <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> свойство.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Либо <paramref name="name" /> параметр или <paramref name="description" /> параметр <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary>
              Указывает, является ли <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> Свойства данного объекта совпадают, это <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.
            </summary>
      <param name="obj">
                Объект для сравнения <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> Свойства.
              </param>
      <returns>
              <see langword="true" /> Если <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> Свойства данного объекта совпадают с данного экземпляра; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary>
              Получает вычисляемый хэш-код на основании свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.
            </summary>
      <returns>
              Вычисляемый хэш-код на основании свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> данного типа <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.RightsManagement.PublishLicense" /> класс из указанного сериализуется и подписанные <see cref="T:System.Security.RightsManagement.PublishLicense" />.
            </summary>
      <param name="signedPublishLicense">
                Объект подписан и сериализации лицензию на публикацию.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="signedPublishLicense" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">
                  Лицензия недействительна.
                </exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary>
              Пытается получить <see cref="T:System.Security.RightsManagement.UseLicense" /> для пользователя или группы пользователей в указанном <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.
            </summary>
      <param name="secureEnvironment">
                Безопасная среда для активации лицензии и привязки.
              </param>
      <returns>
              <see cref="T:System.Security.RightsManagement.UseLicense" /> Для пользователя или группы пользователей в указанном <paramref name="secureEnvironment" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="secureEnvironment" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">
                  Не удалось выполнить проверку подлинности.
                </exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary>
              Пытается получить <see cref="T:System.Security.RightsManagement.UseLicense" /> для пользователя или группы пользователей в указанном <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.
            </summary>
      <param name="secureEnvironment">
                Безопасная среда для активации лицензии и привязки.
              </param>
      <returns>
              <see cref="T:System.Security.RightsManagement.UseLicense" /> Для пользователя или группы пользователей в указанном <paramref name="secureEnvironment" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="secureEnvironment" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">
                  Не удалось выполнить проверку подлинности.
                </exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary>
              Возвращает расшифрованные <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> версию этого подписью <see cref="T:System.Security.RightsManagement.PublishLicense" />.
            </summary>
      <param name="cryptoProvider">
                Службы управления правами для расшифровки лицензии.
              </param>
      <returns>
              Расшифрованная неподписанная версия данной лицензии.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="cryptoProvider" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary>
              Возвращает сериализованную строку Язык XrML, которая использовалась для создания этой лицензии.
            </summary>
      <returns>
              Сериализованная строка Язык XrML (Extensible Rights Markup Language), которая использовалась для создания этой лицензии.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" />.
            </summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.RightsManagement.RightsManagementException" /> класс и наборы <see cref="T:System.Runtime.Serialization.SerializationInfo" /> хранения со сведениями об исключении.
            </summary>
      <param name="info">
                Объект, содержащий сериализованные данные объекта.
              </param>
      <param name="context">
                Контекстные сведения об источнике или назначении.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.RightsManagement.RightsManagementException" /> класса с заданной <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />.
            </summary>
      <param name="failureCode">
                Код ошибки для ошибки.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.RightsManagement.RightsManagementException" /> класса с заданной <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> и <see cref="P:System.Exception.InnerException" />.
            </summary>
      <param name="failureCode">
                Код ошибки для ошибки.
              </param>
      <param name="innerException">
                Экземпляр исключения, вызвавшего ошибку.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.RightsManagement.RightsManagementException" /> класса с заданной <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> и <see cref="P:System.Exception.Message" />.
            </summary>
      <param name="failureCode">
                Код ошибки для ошибки.
              </param>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.RightsManagement.RightsManagementException" /> класса с заданной <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />, <see cref="P:System.Exception.Message" /> и <see cref="P:System.Exception.InnerException" />.
            </summary>
      <param name="failureCode">
                Код ошибки для ошибки.
              </param>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
      <param name="innerException">
                Экземпляр исключения, вызвавшего ошибку.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.RightsManagement.RightsManagementException" /> класса с указанным сообщением.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.RightsManagement.RightsManagementException" /> класса с заданной <see cref="P:System.Exception.Message" /> и <see cref="P:System.Exception.InnerException" />.
            </summary>
      <param name="message">
                Сообщение, описывающее ошибку.
              </param>
      <param name="innerException">
                Экземпляр исключения, вызвавшего данное исключение.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              Наборы <see cref="T:System.Runtime.Serialization.SerializationInfo" /> хранения с именем параметра и сведения об исключении.
            </summary>
      <param name="info">
                Объект, содержащий сериализованные данные объекта.
              </param>
      <param name="context">
                Контекстные сведения об источнике или назначении.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="info" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary>
              Создает безопасный сеанс клиента при наличии манифеста прав приложения, <see cref="T:System.Security.RightsManagement.AuthenticationType" /> и <see cref="T:System.Security.RightsManagement.UserActivationMode" />.
            </summary>
      <param name="applicationManifest">
                Манифеста прав приложения.
              </param>
      <param name="authentication">
                Метод проверки подлинности.
              </param>
      <param name="userActivationMode">
                Тип сертификата учетной записи прав пользователя.
              </param>
      <returns>
              Безопасный сеанс клиента для активации, привязки лицензии и других операций управления правами.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary>
              Создает безопасный сеанс клиента для указанного пользователя с заданным манифестом прав.
            </summary>
      <param name="applicationManifest">
                Манифест прав приложения.
              </param>
      <param name="user">
                Пользователь или группа пользователей для предоставления доступа к содержимому с управлением правами.
              </param>
      <returns>
              Безопасный сеанс клиента для активации, привязки лицензии и других операций управления правами.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary>
              Освобождает все ресурсы, занятые модулем <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.
            </summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary>
              Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Security.RightsManagement.SecureEnvironment" />, а при необходимости освобождает также управляемые ресурсы.
            </summary>
      <param name="disposing">
                Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary>
              Возвращает список активированных пользователей.
            </summary>
      <returns>
              Список в настоящее время активных пользователей.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary>
              Указывает, активирован ли данный пользователь для доступа к содержимому с управлением правами.
            </summary>
      <param name="user">
                Пользователь или группа пользователей для предоставления доступа к содержимому с управлением правами.
              </param>
      <returns>
              Значение <see langword="true" />, если данный <paramref name="user" /> был активирован для доступа к содержимому с управлением правами; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary>
              Отменяет активацию лицензии для указанного пользователя.
            </summary>
      <param name="user">
                Пользователь, активацию лицензии для которого требуется удалить.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="user" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Указанный <paramref name="user" /> не прошел проверку подлинности Windows или проверку подлинности по паспорту.
                </exception>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.
            </summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> класс из указанного Язык XrML шаблон публикации лицензии. </summary>
      <param name="publishLicenseTemplate">
                
                  Язык XrML (Extensible Rights Markup Language) Шаблон публикации лицензии на использование для создания этой лицензии.
              </param>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary>
              Создает подписанный <see cref="T:System.Security.RightsManagement.PublishLicense" /> и возвращает <see cref="T:System.Security.RightsManagement.UseLicense" /> автору документа.
            </summary>
      <param name="secureEnvironment">
                Безопасная среда для активации лицензии и привязки.
              </param>
      <param name="authorUseLicense">
                Возвращаемого <see cref="T:System.Security.RightsManagement.UseLicense" /> автору документа.
              </param>
      <returns>
              Подписанный <see cref="T:System.Security.RightsManagement.PublishLicense" /> создаваемый при входе это <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary>
              Возвращает сериализованный шаблон, созданный из Язык XrML для <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.
            </summary>
      <returns>
              Сериализованный шаблон, созданный из Язык XrML для <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.UseLicense" />.
            </summary>
      <param name="useLicense">
                Лицензия на использование в сериализации Язык XrML (Extensible Rights Markup Language) формы.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="useLicense" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">
                  <paramref name="useLicense" /> недопустим.
                </exception>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary>
              Привязывает лицензию к указанному <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.
            </summary>
      <param name="secureEnvironment">
                Среда, к которой привязывается лицензия.
              </param>
      <returns>
              Экземпляр <see cref="T:System.Security.RightsManagement.CryptoProvider" />, если привязка к лицензии выполнена; в противном случае — <see langword="null" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="secureEnvironment" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary>
              Указывает, является ли эта лицензия эквивалентно другой заданной лицензии.
            </summary>
      <param name="x">
                Лицензия для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если обе лицензии эквивалентны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary>
              Возвращает хэш-код, связанный с этой лицензией.
            </summary>
      <returns>
              Хэш-код для этой лицензии.
            </returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary>
              Возвращает сериализованную Язык XrML строку, используемую для создания этой лицензии.
            </summary>
      <returns>
              Сериализованный Язык XrML (Extensible Rights Markup Language) изначально передать строку <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" /> конструктор.
            </returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" />.
            </summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> класса, используя предоставленную коллекцию <paramref name="targetType" />.
            </summary>
      <param name="targetType">
                Нужный тип, который ограничивает использование вложенного свойства где это Атрибут .NET Framework применяется.
              </param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary>
              Определяет, является ли текущий <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Атрибут .NET Framework равен указанному объекту. 
            </summary>
      <param name="obj">
                <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Для сравнения с текущим <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.
              </param>
      <returns>
              Значение <see langword="true" />, если указанный объект <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> равен текущему объекту <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary>
              Возвращает хэш-код для этого <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />Атрибут .NET Framework.
            </summary>
      <returns>
              32-разрядное целое значение без знака.
            </returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.
            </summary>
      <param name="attributeType">
                <see cref="T:System.Type" /> Из  Атрибут .NET Framework также должны быть применены на класс в порядке для вложенного свойства, для просмотра в классе где <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> применяется...
              </param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary>
              Определяет, является ли текущий <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> Атрибут .NET Framework равен указанному объекту. 
            </summary>
      <param name="obj">
                <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> Для сравнения с текущим <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.
              </param>
      <returns>
              Значение <see langword="true" />, если указанный объект <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> равен текущему объекту <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary>
              Возвращает хэш-код для этого <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />Атрибут .NET Framework.
            </summary>
      <returns>
              32-разрядное целое значение без знака.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.Int32RectValueSerializer" />.
            </summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.String" /> можно преобразовать в экземпляр <see cref="T:System.Windows.Int32Rect" />.
            </summary>
      <param name="value">
                Строка для оценки для преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Всегда возвращает значение <see langword="true" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.Windows.Int32Rect" /> можно преобразовать в <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Объект, для которого необходимо проверить возможность преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Int32Rect" />.
            </summary>
      <param name="value">
                Преобразуемая строка.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Новый экземпляр <see cref="T:System.Windows.Int32Rect" /> на основе предоставленного <paramref name="value" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует экземпляр <see cref="T:System.Windows.Int32Rect" /> для <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Объект, преобразуемый в строку.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Строковое представление указанного <see cref="T:System.Windows.Int32Rect" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.PointValueSerializer" />.
            </summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.String" /> можно преобразовать в экземпляр <see cref="T:System.Windows.Point" />.
            </summary>
      <param name="value">
                Строка для оценки для преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Всегда возвращает значение <see langword="true" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.Windows.Point" /> можно преобразовать в <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Объект, для которого необходимо проверить возможность преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Point" />.
            </summary>
      <param name="value">
                Преобразуемая строка.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Новый экземпляр <see cref="T:System.Windows.Point" /> на основе предоставленного <paramref name="value" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует экземпляр <see cref="T:System.Windows.Point" /> для <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Объект, преобразуемый в строку.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Строковое представление указанного <see cref="T:System.Windows.Point" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.RectValueSerializer" />.
            </summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.String" /> можно преобразовать в экземпляр <see cref="T:System.Windows.Rect" />.
            </summary>
      <param name="value">
                Строка для оценки для преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Всегда возвращает значение <see langword="true" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.Windows.Rect" /> можно преобразовать в <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Объект, для которого необходимо проверить возможность преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Rect" />.
            </summary>
      <param name="value">
                Преобразуемая строка.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Новый экземпляр класса <see cref="T:System.Windows.Rect" /> на основе предоставленного параметра <paramref name="value" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует экземпляр <see cref="T:System.Windows.Rect" /> в <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Объект, преобразуемый в строку.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Строковое представление указанного <see cref="T:System.Windows.Rect" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.SizeValueSerializer" />.
            </summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.String" /> можно преобразовать в экземпляр <see cref="T:System.Windows.Size" />.
            </summary>
      <param name="value">
                Строка для оценки для преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Всегда возвращает значение <see langword="true" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.Windows.Size" /> можно преобразовать в <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Объект, для которого необходимо проверить возможность преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Size" />.
            </summary>
      <param name="value">
                Преобразуемая строка.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Новый экземпляр класса <see cref="T:System.Windows.Size" /> на основе предоставленного параметра <paramref name="value" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует экземпляр <see cref="T:System.Windows.Size" /> для <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Объект, преобразуемый в строку.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Строковое представление указанного <see cref="T:System.Windows.Size" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.VectorValueSerializer" />.
            </summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.String" /> можно преобразовать в экземпляр <see cref="T:System.Windows.Vector" />.
            </summary>
      <param name="value">
                Строка для оценки для преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Всегда возвращает значение <see langword="true" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.Windows.Vector" /> можно преобразовать в <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Объект, для которого необходимо проверить возможность преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Vector" />.
            </summary>
      <param name="value">
                Преобразуемая строка.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Новый экземпляр <see cref="T:System.Windows.Vector" /> на основе предоставленного <paramref name="value" />.
            </returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует экземпляр <see cref="T:System.Windows.Vector" /> для <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Объект, преобразуемый в строку.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Строковое представление указанного <see cref="T:System.Windows.Vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Data.DataSourceProvider" />.
               Этот конструктор является защищенным.
            </summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary>
              Указывает, что инициализация этого объекта готова к работе; не неявное <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> происходит до соответствующих <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /> вызывается метод.
            </summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary>
              При переопределении в производном классе, этот базовый класс вызывает этот метод при <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> или <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> был вызван.
               Базовый класс задерживает вызов метода, если включена задержка обновления или отключена начальная загрузка.
            </summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary>
              Вводит отложенный цикл, который можно использовать для изменения свойств поставщика и задержки автоматического обновления.
            </summary>
      <returns>
              Объект <see cref="T:System.IDisposable" />, который можно использовать для уничтожения вызывающего объекта.
            </returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary>
              Указывает, что инициализация этого объекта завершена; в результате <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> Если ни одно другое <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> ожидает выполнения.
            </summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary>
              Запускает начальный запрос в базовую модель данных.
               Результат возвращается в <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> свойство.
            </summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
              Вызывает <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> событие с предоставленным аргументам.
            </summary>
      <param name="e">
                Аргументы вызываемого события.
              </param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary>
              Производные классы вызывать этот метод, чтобы определить окончание запроса.
            </summary>
      <param name="newData">
                Данные, результат запроса.
              </param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary>
              Производные классы вызывать этот метод, чтобы определить окончание запроса.
            </summary>
      <param name="newData">
                Данные, результат запроса.
              </param>
      <param name="error">
                Ошибки, возникшей при выполнении этого запроса.
                 Это значение является <see langword="null" /> Если нет ошибок.
              </param>
      <param name="completionWork">
                Необязательный делегат, который используется для выполнения завершения работы на ИП потока, например, чтобы задать дополнительные свойства.
              </param>
      <param name="callbackArguments">
                Необязательные аргументы для передачи в качестве параметра с <paramref name="completionWork" /> делегат.
              </param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary>
              Инициирует операцию обновления для базовой модели данных.
               Результат возвращается в <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> свойство.
            </summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>
              Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.
            </summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>
              Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.
            </summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.DependencyObject" />.
            </summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary>
              Очищает локальное значение свойства.
               Очищаемое свойство задается идентификатором <see cref="T:System.Windows.DependencyProperty" />.
            </summary>
      <param name="dp">
                Очищаемое свойство зависимостей, идентифицируемое ссылкой на объект <see cref="T:System.Windows.DependencyProperty" />.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Предпринята попытка вызова <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> в запечатанном объекте <see cref="T:System.Windows.DependencyObject" />.
                </exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary>
              Очищает локальное значение доступного только для чтения свойства.
               Очищаемое свойство задается ключом <see cref="T:System.Windows.DependencyPropertyKey" />.
            </summary>
      <param name="key">
                Ключ очищаемого свойства зависимостей.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Предпринята попытка вызова <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> в запечатанном объекте <see cref="T:System.Windows.DependencyObject" />.
                </exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary>
              Приводит значение указанного свойства зависимостей.
               Это осуществляется путем вызова какой-либо функции <see cref="T:System.Windows.CoerceValueCallback" />, указанной в метаданных свойства зависимостей, которое существует в вызывающем объекте <see cref="T:System.Windows.DependencyObject" />.
            </summary>
      <param name="dp">
                Идентификатор приводимого свойства зависимостей.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Указанный параметр <paramref name="dp" /> или его значение недопустимы, или их не существует.
                </exception>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary>
              Определяет, является ли предоставленный <see cref="T:System.Windows.DependencyObject" /> эквивалентно значению текущего объекта <see cref="T:System.Windows.DependencyObject" />.
            </summary>
      <param name="obj">
                <see cref="T:System.Windows.DependencyObject" />  Для сравнения с текущим экземпляром.
              </param>
      <returns>
              <see langword="true" /> Если два экземпляра одинаковы; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary>
              Возвращает хэш-код для данного объекта <see cref="T:System.Windows.DependencyObject" />.
            </summary>
      <returns>
              Подписанный хэш-код в виде 32-разрядного целого числа.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary>
              Создает специализированный перечислитель для определения свойств зависимостей, которые локально установили значения для данного <see cref="T:System.Windows.DependencyObject" />.
            </summary>
      <returns>
              Специализированный перечислитель локальных значений.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary>
              Возвращает текущее действующее значение свойства зависимостей в этом экземпляре <see cref="T:System.Windows.DependencyObject" />.
            </summary>
      <param name="dp">
                Идентификатор <see cref="T:System.Windows.DependencyProperty" /> свойства, значение которого требуется извлечь.
              </param>
      <returns>
              Возвращает текущее действующее значение.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Указанный параметр <paramref name="dp" /> был недопустим, или его значение было недопустимо, или указанный <paramref name="dp" /> не существует.
                </exception>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary>
              Повторно вычисляет действующее значение для указанного свойства зависимостей
            </summary>
      <param name="dp">
                <see cref="T:System.Windows.DependencyProperty" /> Идентификатор свойства, чтобы сделать недействительным.
              </param>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
              Вызывается каждый раз, когда обновляется действительное значение любого свойства зависимостей для данного <see cref="T:System.Windows.DependencyObject" />.
               Конкретное измененное свойство зависимостей сообщается в данных события.
            </summary>
      <param name="e">
                Данные события, в которых будет содержаться интересующий идентификатор свойства зависимостей, метаданные свойства для типа, а также старое и новое значения.
              </param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary>
              Возвращает локальное значение свойства зависимостей, если оно существует.
            </summary>
      <param name="dp">
                Идентификатор <see cref="T:System.Windows.DependencyProperty" /> свойства, значение которого требуется извлечь.
              </param>
      <returns>
              Возвращает локальное значение или значение-метку <see cref="F:System.Windows.DependencyProperty.UnsetValue" />, если локальное значение не задано.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary>
              Задает значение свойства зависимостей, не изменяя источник значения.
            </summary>
      <param name="dp">
                Идентификатор задаваемого свойства зависимостей.
              </param>
      <param name="value">
                Новое локальное значение.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Предпринята попытка изменить доступное только для чтения свойство зависимостей или свойство запечатанного объекта <see cref="T:System.Windows.DependencyObject" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="value" /> не является правильным типом, зарегистрированным для свойства <paramref name="dp" />.
                </exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary>
              Задает локальное значение свойства зависимостей, определяемое идентификатором свойства зависимостей.
            </summary>
      <param name="dp">
                Идентификатор задаваемого свойства зависимостей.
              </param>
      <param name="value">
                Новое локальное значение.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Предпринята попытка изменить доступное только для чтения свойство зависимостей или свойство запечатанного объекта <see cref="T:System.Windows.DependencyObject" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="value" /> не является правильным типом, зарегистрированным для свойства <paramref name="dp" />.
                </exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary>
              Задает локальное значение свойства зависимости только для чтения, определяемое идентификатором <see cref="T:System.Windows.DependencyPropertyKey" /> свойства зависимостей.
            </summary>
      <param name="key">
                Идентификатор <see cref="T:System.Windows.DependencyPropertyKey" /> задаваемого свойства.
              </param>
      <param name="value">
                Новое локальное значение.
              </param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary>
              Возвращает значение, указывающее, должны ли процессы сериализации сериализовать значение предоставленного свойства зависимостей.
            </summary>
      <param name="dp">
                Идентификатор для сериализуемого свойства зависимостей.
              </param>
      <returns>
              Значение <see langword="true" />, если значение предоставленного свойства зависимостей необходимо сериализовать; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary>
              Возвращает <see cref="T:System.Windows.DependencyObjectType" /> представляющий данной системы (CLR) тип.
            </summary>
      <param name="systemType">
                Система (CLR) тип преобразования.
              </param>
      <returns>
              Объект <see cref="T:System.Windows.DependencyObjectType" /> представляющий системы (CLR) тип.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary>
              Возвращает хэш-код для модуля чтения данных <see cref="T:System.Windows.DependencyObjectType" />.
            </summary>
      <returns>
              Хэш-код в виде 32-разрядного целого числа со знаком.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary>
              Определяет, является ли указанный объект экземпляром текущего типа <see cref="T:System.Windows.DependencyObjectType" />.
            </summary>
      <param name="dependencyObject">
                Объект, который требуется сравнить с текущим объектом <see cref="T:System.Windows.DependencyObjectType" />.
              </param>
      <returns>
              <see langword="true" /> Если класс, представленный текущим <see cref="T:System.Windows.DependencyObjectType" /> входит в иерархию наследования <see cref="T:System.Windows.DependencyObject" /> передается в качестве <paramref name="d" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary>
              Определяет, является ли текущий <see cref="T:System.Windows.DependencyObjectType" /> производным от указанного <see cref="T:System.Windows.DependencyObjectType" />.
            </summary>
      <param name="dependencyObjectType">
                Сравниваемый шаблон <see cref="T:System.Windows.DependencyObjectType" />.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="dependencyObjectType" /> параметр и текущий <see cref="T:System.Windows.DependencyObjectType" /> представляют типы классов, и класс, представленный текущим <see cref="T:System.Windows.DependencyObjectType" /> является производным от класса, представленного параметром <paramref name="dependencyObjectType" />.
               В противном случае — значение <see langword="false" />.
               Этот метод также возвращает <see langword="false" /> Если <paramref name="dependencyObjectType" /> и текущий <see cref="T:System.Windows.DependencyObjectType" /> представляют того же класса.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary>
              Добавляет другой тип в качестве владельца свойства зависимостей, которое уже зарегистрировано.
            </summary>
      <param name="ownerType">
                Тип для добавления в качестве владельца данного свойства зависимостей.
              </param>
      <returns>
              Ссылка на исходный идентификатор <see cref="T:System.Windows.DependencyProperty" />, который определяет свойство зависимостей.
               Этот идентификатор должен быть представлен путем добавления класса в качестве поля <see langword="public static readonly" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary>
              Добавляет другой тип в качестве владельца свойства зависимостей, который уже был зарегистрирован, предоставляя метаданные свойства зависимости для свойства зависимостей в том виде, в котором оно будет существовать в предоставленном типе владельца.
            </summary>
      <param name="ownerType">
                Тип для добавления в качестве владельца данного свойства зависимостей.
              </param>
      <param name="typeMetadata">
                Метаданные, квалифицирующие свойство зависимостей в том виде, в котором оно существует в указанном типе.
              </param>
      <returns>
              Ссылка на исходный идентификатор <see cref="T:System.Windows.DependencyProperty" />, который определяет свойство зависимостей.
               Этот идентификатор должен быть предоставлен путем добавления класса в качестве поля <see langword="public static readonly" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary>
              Возвращает хэш-код для данного свойства <see cref="T:System.Windows.DependencyProperty" />.
            </summary>
      <returns>
              Хэш-код для этого экземпляра <see cref="T:System.Windows.DependencyProperty" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary>
              Возвращает метаданные для этого свойства зависимостей в том виде, в котором оно представлено в указанном существующем типе.
            </summary>
      <param name="forType">
                Конкретный тип, из которого необходимо извлечь метаданные свойства зависимостей.
              </param>
      <returns>
              Объект метаданных свойств.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary>
              Возвращает метаданные для этого свойства зависимостей в том виде,в котором оно существует в указанном экземпляре объекта.
            </summary>
      <param name="dependencyObject">
                Объект зависимости, проверяемый на наличие типа, чтобы определить, из какой типозависимой версии свойства зависимости нужно использовать метаданные.
              </param>
      <returns>
              Объект метаданных свойств.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary>
               Возвращает метаданные для этого свойства зависимостей в том виде, в каком они представлены в указанном типе.
            </summary>
      <param name="dependencyObjectType">
                Специальный объект, который записывает тип объекта зависимости, из которого запрашиваются метаданные свойства зависимостей.
              </param>
      <returns>
              Объект метаданных свойств.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary>
              Определяет, является ли указанное значение допустимо для свойства зависимостей типа, как проверяются на соответствие типу свойства, указанного при исходной регистрации свойства зависимостей.
            </summary>
      <param name="value">
                Проверяемое значение.
              </param>
      <returns>
              <see langword="true" /> Если указанное значение является типом зарегистрированного свойства или приемлемому производному типу; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary>
              Определяет, принимается ли указанное значение для типа свойства с помощью базовой проверки типа и, кроме того, возможно, если он находится в пределах диапазона допустимых значений для данного типа.
            </summary>
      <param name="value">
                Проверяемое значение.
              </param>
      <returns>
              <see langword="true" /> Если значение приемлемо и имеет неправильный тип или производному типу; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary>
              Задает альтернативные метаданные для этого свойства зависимостей, если оно присутствует в экземплярах указанного типа, переопределяя метаданные, которые существовали для данного свойства зависимостей в том виде, в котором оно было унаследовано от базовых типов.
            </summary>
      <param name="forType">
                Тип, где это свойство зависимостей наследуется и где будут применены указанные альтернативные метаданные.
              </param>
      <param name="typeMetadata">
                Метаданные для применения к свойству зависимостей в переопределяемом типе.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Была предпринята попытка переопределения метаданных в доступном только для чтения свойстве зависимости (операция не может быть выполнена с помощью данной сигнатуры).
                </exception>
      <exception cref="T:System.ArgumentException">
                  Метаданные уже были установлены для данного свойства зависимостей в том виде, в котором оно существует в предоставленном типе.
                </exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary>
              Предоставляет альтернативные метаданные для свойства зависимостей, доступного только для чтения, когда оно присутствует в экземплярах указанного типа, переопределяя метаданные, предоставленные при первоначальной регистрации свойства зависимостей.
               Вы должны передать <see cref="T:System.Windows.DependencyPropertyKey" /> для свойства зависимостей, доступного только для чтения, чтобы избежать возникновения исключения.
            </summary>
      <param name="forType">
                Тип, где это свойство зависимостей наследуется и где будут применены указанные альтернативные метаданные.
              </param>
      <param name="typeMetadata">
                Метаданные для применения к свойству зависимостей в переопределяемом типе.
              </param>
      <param name="key">
                Ключ доступа для свойства зависимостей, доступного только для чтения.
              </param>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary>
              Регистрирует свойство зависимостей с указанием имени свойства, типа свойства и типа владельца.
            </summary>
      <param name="name">
                Имя регистрируемого свойства зависимостей.
                 Имя должно быть уникальным в пределах пространства имен регистрации для типа владельца.
              </param>
      <param name="propertyType">
                Тип свойства.
              </param>
      <param name="ownerType">
                Тип владельца, регистрирующего свойство зависимостей.
              </param>
      <returns>
              Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе.
               Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>
              Регистрирует свойство зависимостей с указанным именем свойства, типом свойства, типом владельца и метаданными свойства.
            </summary>
      <param name="name">
                Имя регистрируемого свойства зависимостей.
              </param>
      <param name="propertyType">
                Тип свойства.
              </param>
      <param name="ownerType">
                Тип владельца, регистрирующий свойство зависимостей.
              </param>
      <param name="typeMetadata">
                Метаданные свойства зависимостей.
              </param>
      <returns>
              Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе.
               Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>
              Регистрирует свойство зависимостей с указанным именем свойства, типом свойства, типом владельца, метаданными свойства и обратным вызовом проверки значения для свойства.
            </summary>
      <param name="name">
                Имя регистрируемого свойства зависимостей.
              </param>
      <param name="propertyType">
                Тип свойства.
              </param>
      <param name="ownerType">
                Тип владельца, регистрирующий свойство зависимостей.
              </param>
      <param name="typeMetadata">
                Метаданные свойства зависимостей.
              </param>
      <param name="validateValueCallback">
                Ссылка на обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.
              </param>
      <returns>
              Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе.
               Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary>
              Регистрирует присоединенное свойство с указанием имени свойства, типа свойства и типа владельца.
            </summary>
      <param name="name">
                Имя регистрируемого свойства зависимостей.
              </param>
      <param name="propertyType">
                Тип свойства.
              </param>
      <param name="ownerType">
                Тип владельца, регистрирующего свойство зависимостей.
              </param>
      <returns>
              Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе.
               Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>
              Регистрирует присоединенное свойство с указанным именем и типом свойства, типом владельца и метаданными свойства.
            </summary>
      <param name="name">
                Имя регистрируемого свойства зависимостей.
              </param>
      <param name="propertyType">
                Тип свойства.
              </param>
      <param name="ownerType">
                Тип владельца, регистрирующий свойство зависимостей.
              </param>
      <param name="defaultMetadata">
                Метаданные свойства зависимостей.
                 Могут включать значение по умолчанию и другие характеристики.
              </param>
      <returns>
              Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе.
               Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>
              Регистрирует присоединенное свойство с указанным типом свойства, типом владельца, метаданными свойства и обратным вызовом для проверки значения свойства.
            </summary>
      <param name="name">
                Имя регистрируемого свойства зависимостей.
              </param>
      <param name="propertyType">
                Тип свойства.
              </param>
      <param name="ownerType">
                Тип владельца, регистрирующий свойство зависимостей.
              </param>
      <param name="defaultMetadata">
                Метаданные свойства зависимостей.
                 Могут включать значение по умолчанию и другие характеристики.
              </param>
      <param name="validateValueCallback">
                Ссылка на обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.
              </param>
      <returns>
              Идентификатор свойства зависимостей, который должен использоваться для задания значения поля <see langword="public static readonly" /> в классе.
               Затем этот идентификатор используется для ссылки на свойство зависимостей для операций, например задания значения программным образом или получение метаданных.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>
              Регистрирует доступное только для чтения присоединенное свойство с указанным типом свойства, типом владельца и метаданными свойства.
            </summary>
      <param name="name">
                Имя регистрируемого свойства зависимостей.
              </param>
      <param name="propertyType">
                Тип свойства.
              </param>
      <param name="ownerType">
                Тип владельца, регистрирующий свойство зависимостей.
              </param>
      <param name="defaultMetadata">
                Метаданные свойства зависимостей.
              </param>
      <returns>
              Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>
              Регистрирует доступное только для чтения присоединенное свойство с указанным типом свойства, типом владельца, метаданными свойства и обратным вызовом для проверки.
            </summary>
      <param name="name">
                Имя регистрируемого свойства зависимостей.
              </param>
      <param name="propertyType">
                Тип свойства.
              </param>
      <param name="ownerType">
                Тип владельца, регистрирующий свойство зависимостей.
              </param>
      <param name="defaultMetadata">
                Метаданные свойства зависимостей.
              </param>
      <param name="validateValueCallback">
                Ссылка на созданный пользователем обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.
              </param>
      <returns>
              Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>
               Регистрирует доступное только для чтения свойство зависимостей с указанным типом свойства, типом владельца и метаданными свойства.
            </summary>
      <param name="name">
                Имя регистрируемого свойства зависимостей.
              </param>
      <param name="propertyType">
                Тип свойства.
              </param>
      <param name="ownerType">
                Тип владельца, регистрирующий свойство зависимостей.
              </param>
      <param name="typeMetadata">
                Метаданные свойства зависимостей.
              </param>
      <returns>
              Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>
              Регистрирует доступное только для чтения свойство зависимостей с указанным типом свойства, типом владельца, метаданными свойства и обратным вызовом для проверки.
            </summary>
      <param name="name">
                Имя регистрируемого свойства зависимостей.
              </param>
      <param name="propertyType">
                Тип свойства.
              </param>
      <param name="ownerType">
                Тип владельца, регистрирующий свойство зависимостей.
              </param>
      <param name="typeMetadata">
                Метаданные свойства зависимостей.
              </param>
      <param name="validateValueCallback">
                Ссылка на созданный пользователем обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.
              </param>
      <returns>
              Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary>
               Возвращает строковое представление свойства зависимостей.
            </summary>
      <returns>
              Строковое представление свойства зависимостей.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.
            </summary>
      <param name="property">
                Идентификатор измененного свойства зависимостей.
              </param>
      <param name="oldValue">
                Значение свойства перед изменением соответствующего события или изменения состояния.
              </param>
      <param name="newValue">
                Значение свойства после сообщения об изменении соответствующего события или изменения состояния.
              </param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary>
              Определяет, эквивалентен ли указанный объект текущего <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.
            </summary>
      <param name="obj">
                Объект, сравниваемый с текущим <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.
              </param>
      <returns>
              <see langword="true" /> Если предоставленный объект эквивалентен текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
              Определяет, является ли предоставленный <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> эквивалентно значению текущего объекта <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.
            </summary>
      <param name="args">
                <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Для сравнения с текущим <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />
              </param>
      <returns>
              <see langword="true" /> Если предоставленный <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> эквивалентен текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary>
              Возвращает хэш-код для данного объекта <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.
            </summary>
      <returns>
              Подписанный хэш-код в виде 32-разрядного целого числа.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
              Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.
            </summary>
      <param name="left">
                Первый экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.
              </param>
      <param name="right">
                Второй экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если два <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> экземпляры эквивалентны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
              Определяет, являются ли два заданных <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> объекты различаются.
            </summary>
      <param name="left">
                Первый экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.
              </param>
      <param name="right">
                Второй экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если два <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> экземпляры, различны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary>
              Переопределения метаданных свойства зависимости только для чтения, представленного данным идентификатором свойства зависимостей.
            </summary>
      <param name="forType">
                Тип, на котором существует данное свойство зависимостей и следует переопределить метаданные.
              </param>
      <param name="typeMetadata">
                Метаданные, переданные для этого типа.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Попытка переопределения метаданных свойства зависимости для чтения и записи (не может быть выполнена с помощью данной сигнатуры).
                </exception>
      <exception cref="T:System.ArgumentException">
                  Метаданные уже были установлены для свойства, как оно существует в указанном типе.
                </exception>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.ExpressionConverter" />.
            </summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Возвращает, может ли этот преобразователь преобразовать из исходного объекта для <see cref="T:System.Windows.Expression" /> объекта.
            </summary>
      <param name="context">
                Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.
              </param>
      <param name="sourceType">
                Объект <see cref="T:System.Type" /> представляющий тип, необходимо выполнить преобразование.
              </param>
      <returns>
              Всегда <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Возвращает, может ли этот преобразователь преобразовать <see cref="T:System.Windows.Expression" /> объекта на определенный целевой тип.
            </summary>
      <param name="context">
                Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.
              </param>
      <param name="destinationType">
                Объект <see cref="T:System.Type" /> представляющий тип, необходимо выполнить преобразование.
              </param>
      <returns>
              Всегда <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              Преобразует предоставленное значение <see cref="T:System.Windows.Expression" /> типа.
            </summary>
      <param name="context">
                Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.
              </param>
      <param name="culture">
                Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в качестве текущего языка и региональных параметров.
              </param>
      <param name="value">
                Преобразуемый объект.
              </param>
      <returns>
              Всегда создает исключение и возвращает <see langword="null" />.
            </returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              Преобразует указанные <see cref="T:System.Windows.Expression" /> объект в указанный тип.
            </summary>
      <param name="context">
                Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.
              </param>
      <param name="culture">
                <see cref="T:System.Globalization.CultureInfo" /> Для использования в качестве текущего языка и региональных параметров.
              </param>
      <param name="value">
                Преобразуемый объект.
              </param>
      <param name="destinationType">
                Объект <see cref="T:System.Type" /> представляющий тип, необходимо выполнить преобразование.
              </param>
      <returns>
              Всегда создает исключение и возвращает <see langword="null" />.
            </returns>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Freezable" /> производного класса.
            </summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary>
              Создает изменяемый клон данного объекта <see cref="T:System.Windows.Freezable" />, делая глубокие копии значений этого объекта.
               При копировании свойств зависимостей объекта этот метод копирует выражения (которые могут уже не быть разрешимыми), но не копирует анимации и их текущие значения.
            </summary>
      <returns>
              Изменяемая копия текущего объекта.
               Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клонированного объекта имеет значение <see langword="false" />, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта имеет значение <see langword="true." />.
            </returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary>
              Делает экземпляр клоном (глубокой копией) указанного объекта <see cref="T:System.Windows.Freezable" />, используя базовые (без анимации) значения свойств.
            </summary>
      <param name="sourceFreezable">
                Объект, используемый для клонирования.
              </param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary>
              Создает модифицируемый клон (глубокой копии) <see cref="T:System.Windows.Freezable" /> с использованием его текущих значений.
            </summary>
      <returns>
              Изменяемая копия текущего объекта.
               Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клонированного объекта имеет значение <see langword="false" />, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта имеет значение <see langword="true." />.
            </returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>
              Создает модифицируемый клон (глубокой копии) заданного экземпляр <see cref="T:System.Windows.Freezable" /> с использованием текущих значений свойств.
            </summary>
      <param name="sourceFreezable">
                Элемент привязки <see cref="T:System.Windows.Freezable" />, точную копию которого необходимо создать.
              </param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Freezable" />.
            </summary>
      <returns>
              Новый экземпляр.
            </returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary>
              При реализации в производном классе создает новый экземпляр <see cref="T:System.Windows.Freezable" /> производного класса.
            </summary>
      <returns>
              Новый экземпляр.
            </returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary>
              Делает текущий объект неизменяемым и присваивает его свойству <see cref="P:System.Windows.Freezable.IsFrozen" /> значение <see langword="true" />.
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  Объект <see cref="T:System.Windows.Freezable" /> невозможно сделать неизменяемым.
                </exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary>
              Если <paramref name="isChecking" /> параметр <see langword="true" />, этот метод указывает ли указанный <see cref="T:System.Windows.Freezable" /> можно сделать неизменяемым.
               Если <paramref name="isChecking" /> параметр <see langword="false" />, этот метод пытается сделать указанного <see cref="T:System.Windows.Freezable" /> неизменяемым и указывает, успешно ли выполнена операция.
            </summary>
      <param name="freezable">
                Объект, который необходимо проверить или сделать неизменяемым.
                 Если <paramref name="isChecking" /> является <see langword="true" />, объект проверяется, чтобы определить, является ли его можно сделать неизменяемым.
                 Если <paramref name="isChecking" /> является <see langword="false" />, объект становится неизменяемым, если это возможно.
              </param>
      <param name="isChecking">
                <see langword="true" /> Чтобы показывает, является ли объект можно приостановить (без замораживание на самом деле он); <see langword="false" /> фактически Закрепление объекта.
              </param>
      <returns>
              Если <paramref name="isChecking" /> является <see langword="true" />, этот метод возвращает <see langword="true" /> Если указанный <see cref="T:System.Windows.Freezable" /> можно сделать неизменяемым, или <see langword="false" /> если его невозможно сделать неизменяемым.
               Если <paramref name="isChecking" /> является <see langword="false" />, этот метод возвращает <see langword="true" /> Если указанный <see cref="T:System.Windows.Freezable" /> уже является неизменяемым, или <see langword="false" /> если его невозможно сделать неизменяемым.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Если <paramref name="isChecking" /> является <see langword="false" />, попытки сделать <paramref name="freezable" /> неизменяемым завершилась неудачно; объект теперь находится в неизвестном состоянии (он может быть частично заморожен).
                </exception>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary>
              Делает <see cref="T:System.Windows.Freezable" /> объекта неизменяемым или проверяет, является ли его можно сделать неизменяемым.
            </summary>
      <param name="isChecking">
                <see langword="true" /> Чтобы показывает, является ли объект можно приостановить (без замораживание на самом деле он); <see langword="false" /> фактически Закрепление объекта.
              </param>
      <returns>
              Если <paramref name="isChecking" /> является <see langword="true" />, этот метод возвращает <see langword="true" /> Если <see cref="T:System.Windows.Freezable" /> можно сделать неизменяемым, или <see langword="false" /> если его невозможно сделать неизменяемым.
               Если <paramref name="isChecking" /> является <see langword="false" />, этот метод возвращает <see langword="true" /> Если ли указанный <see cref="T:System.Windows.Freezable" /> уже является неизменяемым, или <see langword="false" /> если его невозможно сделать неизменяемым.
            </returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary>
              Создает фиксированную копию объекта <see cref="T:System.Windows.Freezable" />, используя базовые (не анимационные) значения свойства.
               Так как копия является фиксированной, фиксированные вложенные объекты копируются по ссылке.
            </summary>
      <returns>
              Замороженные копию <see cref="T:System.Windows.Freezable" />.
               Копировать <see cref="P:System.Windows.Freezable.IsFrozen" /> свойству <see langword="true" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="T:System.Windows.Freezable" /> Нельзя зафиксировать, так как он содержит выражения или анимированных свойств.
                </exception>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>
              Создает экземпляр замороженной указанного <see cref="T:System.Windows.Freezable" /> используя базовые (не анимационные) значения свойства.
            </summary>
      <param name="sourceFreezable">
                Копируемый экземпляр.
              </param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary>
              Создает фиксированную копию объекта <see cref="T:System.Windows.Freezable" /> с использованием текущих значений свойств.
               Так как копия является фиксированной, фиксированные вложенные объекты копируются по ссылке.
            </summary>
      <returns>
              Замороженные копию <see cref="T:System.Windows.Freezable" />.
               Копировать <see cref="P:System.Windows.Freezable.IsFrozen" /> свойству <see langword="true" />.
            </returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>
              Делает текущий экземпляр зафиксированным клоном указанного объекта <see cref="T:System.Windows.Freezable" />.
               Если объект имеет анимированные свойства зависимостей, копируются их текущие анимированные значения.
            </summary>
      <param name="sourceFreezable">
                Объект <see cref="T:System.Windows.Freezable" />, который необходимо скопировать и заморозить.
              </param>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary>
              Вызывается, когда текущий <see cref="T:System.Windows.Freezable" /> изменения объекта.
            </summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>
              Гарантирует, что соответствующий контекст указатели, устанавливаются для <see cref="T:System.Windows.DependencyObjectType" /> член данных, просто установите.
            </summary>
      <param name="oldValue">
                Предыдущее значение элемента данных.
              </param>
      <param name="newValue">
                Текущее значение элемента данных.
              </param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>
              Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.
            </summary>
      <param name="oldValue">
                Предыдущее значение элемента данных.
              </param>
      <param name="newValue">
                Текущее значение элемента данных.
              </param>
      <param name="property">
                Измененное свойство.
              </param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
              Переопределяет реализацию <see cref="T:System.Windows.DependencyObject" /> для <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />, чтобы также вызвать любой обработчик <see cref="E:System.Windows.Freezable.Changed" /> в ответ на изменение свойства зависимостей типа <see cref="T:System.Windows.Freezable" />.
            </summary>
      <param name="e">
                Данные события, содержащие сведения об изменении свойства и его старое и новое значения.
              </param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary>
              Гарантирует, что <see cref="T:System.Windows.Freezable" /> осуществляется из допустимого потока.
               Наследники <see cref="T:System.Windows.Freezable" /> необходимо вызвать этот метод в начале любого API считывает элементы данных, которые не являются свойствами зависимостей.
            </summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary>
              Вызывает событие <see cref="E:System.Windows.Freezable.Changed" /> для объекта <see cref="T:System.Windows.Freezable" /> и вызывает его метод <see cref="M:System.Windows.Freezable.OnChanged" />.
               Классы, производные от <see cref="T:System.Windows.Freezable" />, должны вызывать этот метод в конце любого API, который изменяет члены класса, не сохраненные в виде свойств зависимостей.
            </summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary>
              Проверяет, что <see cref="T:System.Windows.Freezable" /> не зафиксирован и что осуществляется из допустимого контекста потока.
              <see cref="T:System.Windows.Freezable" /> Этот метод следует вызывать при наследовании в начале любого API который записывает элементы данных, которые не являются свойствами зависимостей.
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="T:System.Windows.Freezable" /> Экземпляр блокируется и не может его члены записывались.
                </exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.Key" />.
            </summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, можно ли преобразовать объект указанного типа в экземпляр <see cref="T:System.Windows.Input.Key" />, используя заданный контекст.
            </summary>
      <param name="context">
                Контекст формата, который предоставляет сведения о среде, из которой вызывается данный преобразователь.
              </param>
      <param name="sourceType">
                Тип, для которого определяется возможность преобразования.
              </param>
      <returns>
              <see langword="true" />, если <paramref name="sourceType" /> имеет тип <see cref="T:System.String" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, будет ли экземпляр <see cref="T:System.Windows.Input.Key" /> можно преобразовать в указанный тип, используя заданный контекст.
            </summary>
      <param name="context">
                Контекст формата, который предоставляет сведения о среде, из которой вызывается данный преобразователь.
              </param>
      <param name="destinationType">
                Тип, для которого определяется возможность преобразования.
              </param>
      <returns>
              <see langword="true" />, если <paramref name="destinationType" /> имеет тип <see cref="T:System.String" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              Пытается преобразовать указанный объект в <see cref="T:System.Windows.Input.Key" />, используя заданный контекст.
            </summary>
      <param name="context">
                Контекст формата, который предоставляет сведения о среде, из которой вызывается данный преобразователь.
              </param>
      <param name="culture">
                Сведения о культуре.
              </param>
      <param name="source">
                Преобразуемый объект.
              </param>
      <returns>
              Преобразованный объект.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="source" /> не удается преобразовать.
                </exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              Пытается преобразовать <see cref="T:System.Windows.Input.Key" /> заданный тип, используя заданный контекст.
            </summary>
      <param name="context">
                Контекст формата, который предоставляет сведения о среде, из которой вызывается данный преобразователь.
              </param>
      <param name="culture">
                Сведения о культуре.
              </param>
      <param name="value">
                Преобразуемый объект.
              </param>
      <param name="destinationType">
                Тип, в который требуется преобразовать объект.
              </param>
      <returns>
              Преобразованный объект.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="destinationType" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="value" /> не удается преобразовать <paramref name="destinationType" />.
                </exception>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary>
              Преобразует Win32 Виртуальная клавиша в WPF <see cref="T:System.Windows.Input.Key" />. 
            </summary>
      <param name="virtualKey">
                Виртуальная клавиша для преобразования.
              </param>
      <returns>
              
                WPF Ключ.
            </returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary>
              Преобразует WPF <see cref="T:System.Windows.Input.Key" /> в Win32 Виртуальная клавиша. 
            </summary>
      <param name="key">
                Преобразуемый объект WPF.
              </param>
      <returns>
              
                Win32 Виртуальная клавиша.
            </returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.KeyValueSerializer" />.
            </summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, если указанный <see cref="T:System.String" /> можно преобразовать в экземпляр <see cref="T:System.Windows.Input.Key" />.
            </summary>
      <param name="value">
                Строка для оценки для преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Всегда возвращает значение <see langword="true" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, если указанный <see cref="T:System.Windows.Input.Key" /> можно преобразовать в <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Ключ, чтобы проверить возможность преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Input.Key" />.
            </summary>
      <param name="value">
                Строка, преобразуемая в <see cref="T:System.Windows.Input.Key" />.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Новый экземпляр класса <see cref="T:System.Windows.Input.Key" /> на основе предоставленного параметра <paramref name="value" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует экземпляр <see cref="T:System.Windows.Input.Key" /> для <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Клавиша для преобразования в строку.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Неизменяемое строковое представление указанного <see cref="T:System.Windows.Input.Key" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.ModifierKeysConverter" />.
            </summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, можно ли преобразовать объект указанного типа в экземпляр <see cref="T:System.Windows.Input.ModifierKeys" />, используя заданный контекст.
            </summary>
      <param name="context">
                Контекст формата, который предоставляет сведения о среде, из которой вызывается данный преобразователь.
              </param>
      <param name="sourceType">
                Тип, для которого определяется возможность преобразования.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="sourceType" /> имеет тип <see cref="T:System.String" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, будет ли экземпляр <see cref="T:System.Windows.Input.ModifierKeys" /> можно преобразовать в указанный тип, используя заданный контекст.
            </summary>
      <param name="context">
                Контекст формата, который предоставляет сведения о среде, из которой вызывается данный преобразователь.
              </param>
      <param name="destinationType">
                Тип, для которого определяется возможность преобразования.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="destinationType" /> имеет тип <see cref="T:System.String" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              Пытается преобразовать указанный объект в <see cref="T:System.Windows.Input.ModifierKeys" />, используя заданный контекст.
            </summary>
      <param name="context">
                Контекст формата, который предоставляет сведения о среде, из которой вызывается данный преобразователь.
              </param>
      <param name="culture">
                Сведения о культуре.
              </param>
      <param name="source">
                Преобразуемый объект.
              </param>
      <returns>
              Преобразованный объект.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="source" /> не удается преобразовать.
                </exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              Пытается преобразовать <see cref="T:System.Windows.Input.ModifierKeys" /> заданный тип, используя заданный контекст.
            </summary>
      <param name="context">
                Контекст формата, который предоставляет сведения о среде, из которой вызывается данный преобразователь.
              </param>
      <param name="culture">
                Сведения о культуре.
              </param>
      <param name="value">
                Преобразуемый объект.
              </param>
      <param name="destinationType">
                Тип, в который требуется преобразовать объект.
              </param>
      <returns>
              Преобразованный объект.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="destinationType" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="value" /> не соответствует допустимому <see cref="T:System.Windows.Input.ModifierKeys" />.
                </exception>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="value" /> невозможно преобразовать.
                </exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary>
              Определяет, является ли указанное значение допустимым <see cref="T:System.Windows.Input.ModifierKeys" /> значение.
            </summary>
      <param name="modifierKeys">
                Значение для проверки на допустимость.
              </param>
      <returns>
              <see langword="true" /> Если аргумент является допустимым <see cref="T:System.Windows.Input.ModifierKeys" /> значение; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" />.
            </summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, если указанный <see cref="T:System.String" /> можно преобразовать в экземпляр <see cref="T:System.Windows.Input.ModifierKeys" />.
            </summary>
      <param name="value">
                Строка для оценки для преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Всегда возвращает значение <see langword="true" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, если указанный <see cref="T:System.Windows.Input.ModifierKeys" /> можно преобразовать в <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Клавиши-модификаторы для оценки для преобразования.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Input.ModifierKeys" /> значение.
            </summary>
      <param name="value">
                Строка для преобразования в <see cref="T:System.Windows.Input.ModifierKeys" />.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Новый экземпляр <see cref="T:System.Windows.Input.ModifierKeys" /> на основе предоставленного <paramref name="value" />.
            </returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует экземпляр <see cref="T:System.Windows.Input.ModifierKeys" /> для <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Клавиша для преобразования в строку.
              </param>
      <param name="context">
                Контекстная информация, используемая при выполнении преобразования.
              </param>
      <returns>
              Неизменяемое строковое представление указанного <see cref="T:System.Windows.Input.ModifierKeys" /> значения.
            </returns>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.TraversalRequest" />.
            </summary>
      <param name="focusNavigationDirection">
                Направление, нужно переместить фокус, как значение перечисления.
              </param>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Int32Rect" /> с указанным <see cref="P:System.Windows.Int32Rect.X" /> и <see cref="P:System.Windows.Int32Rect.Y" /> координаты и указанным <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" />.
            </summary>
      <param name="x">
                <see cref="P:System.Windows.Int32Rect.X" /> Нового <see cref="T:System.Windows.Int32Rect" /> экземпляр, который задает координату по оси x верхнего левого угла прямоугольника.
              </param>
      <param name="y">
                <see cref="P:System.Windows.Int32Rect.Y" /> Нового <see cref="T:System.Windows.Int32Rect" /> экземпляр, который задает координату по оси y верхнего левого угла прямоугольника.
              </param>
      <param name="width">
                <see cref="P:System.Windows.Int32Rect.Width" /> Нового <see cref="T:System.Windows.Int32Rect" /> экземпляр, который указывает ширину прямоугольника.
              </param>
      <param name="height">
                <see cref="P:System.Windows.Int32Rect.Height" /> Нового <see cref="T:System.Windows.Int32Rect" /> экземпляр, который определяет высоту прямоугольника.
              </param>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary>
              Определяет, равен ли указанный прямоугольник этого прямоугольника.
            </summary>
      <param name="o">
                Объект, сравниваемый с текущим прямоугольником.
              </param>
      <returns>
              true Если o — <see cref="T:System.Windows.Int32Rect" /> и тот же <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, и <see cref="P:System.Windows.Int32Rect.Height" /> как этот прямоугольник; в противном случае — false.
            </returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary>
              Определяет, равен ли указанный прямоугольник этого прямоугольника.
            </summary>
      <param name="value">
                Прямоугольник для сравнения с текущим прямоугольником.
              </param>
      <returns>
              true Если оба прямоугольника с одинаковым <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, и <see cref="P:System.Windows.Int32Rect.Height" /> как этот прямоугольник; в противном случае — false.
            </returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>
              Определяет, равны ли указанные прямоугольники.
            </summary>
      <param name="int32Rect1">
                Первый прямоугольник для сравнения.
              </param>
      <param name="int32Rect2">
                Второй прямоугольник для сравнения.
              </param>
      <returns>
              true Если int32Rect1 и int32Rect2 с одинаковым <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, и <see cref="P:System.Windows.Int32Rect.Height" />; в противном случае — false.
            </returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary>
              Создает хэш-код из этого прямоугольника <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, и <see cref="P:System.Windows.Int32Rect.Height" /> значения.
            </summary>
      <returns>
              Хэш-код данного прямоугольника.
            </returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>
              Проверяет точное равенство двух прямоугольников.
            </summary>
      <param name="int32Rect1">
                Первый прямоугольник для сравнения.
              </param>
      <param name="int32Rect2">
                Второй прямоугольник для сравнения.
              </param>
      <returns>
              true Если int32Rect1 и int32Rect2 с одинаковым <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, и <see cref="P:System.Windows.Int32Rect.Height" />; в противном случае — false.
            </returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>
              Проверяет неравенство двух прямоугольников.
            </summary>
      <param name="int32Rect1">
                Первый прямоугольник для сравнения.
              </param>
      <param name="int32Rect2">
                Второй прямоугольник для сравнения.
              </param>
      <returns>
              false Если int32Rect1 и int32Rect2 с одинаковым <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, и <see cref="P:System.Windows.Int32Rect.Height" />; в противном случае, если все эти значения совпадают, затем true.
            </returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary>
              Создает <see cref="T:System.Windows.Int32Rect" /> структуры из указанного <see cref="T:System.String" /> представление.
            </summary>
      <param name="source">
                Строковое представление <see cref="T:System.Windows.Int32Rect" />.
              </param>
      <returns>
              Эквивалент <see cref="T:System.Windows.Int32Rect" /> структуры.
            </returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>
              Форматирует значение текущего экземпляра, используя указанный формат.
            </summary>
      <param name="format">
                Используемый формат.
              </param>
      <param name="provider">
                Поставщик, используемый для форматирования значения
              </param>
      <returns>
              Значение текущего экземпляра в указанном формате.
            </returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary>
              Создает строковое представление данного объекта <see cref="T:System.Windows.Int32Rect" />.
            </summary>
      <returns>
              Строка, содержащая же <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" />, и <see cref="P:System.Windows.Int32Rect.Height" /> значения этого <see cref="T:System.Windows.Int32Rect" /> структуры.
            </returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary>
              Создает строковое представление данного объекта <see cref="T:System.Windows.Int32Rect" /> на основе предоставленного <see cref="T:System.IFormatProvider" />.
            </summary>
      <param name="provider">
                Поставщик формата для использования.
                 Если поставщик <see langword="null" />, используется текущий язык и региональные параметры.
              </param>
      <returns>
              Строковое представление данного экземпляра <see cref="T:System.Windows.Int32Rect" />.
            </returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Int32RectConverter" />.
            </summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, можно ли преобразовать объект из заданного типа в экземпляр <see cref="T:System.Windows.Int32Rect" />.
            </summary>
      <param name="context">
                Описывает контекстную информацию типа.
              </param>
      <param name="sourceType">
                Тип источника, которое вычисляется для преобразования.
              </param>
      <returns>
              <see langword="true" /> Если тип можно преобразовать <see cref="T:System.Windows.Int32Rect" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, будет ли экземпляр <see cref="T:System.Windows.Int32Rect" /> можно преобразовать в другой тип.
            </summary>
      <param name="context">
                Описывает контекстную информацию типа.
              </param>
      <param name="destinationType">
                Это требуемый тип <see cref="T:System.Windows.Int32Rect" /> вычисляется для преобразования.
              </param>
      <returns>
              <see langword="true" /> Если этот <see cref="T:System.Windows.Int32Rect" /> можно преобразовать в <paramref name="destinationType" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              Предпринимает попытку преобразования указанного типа, <see cref="T:System.Windows.Int32Rect" />.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения, необходимые для преобразования.
              </param>
      <param name="culture">
                Региональные особенности следует учитывать при выполнении преобразования.
              </param>
      <param name="value">
                Преобразуемый объект.
              </param>
      <returns>
              <see cref="T:System.Windows.Int32Rect" /> Из преобразования <paramref name="value" />.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  Возникает, если указанный объект равен NULL или является типом, который не может быть преобразован в <see cref="T:System.Windows.Int32Rect" />.
                </exception>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              Пытается преобразовать <see cref="T:System.Windows.Int32Rect" /> для указанного типа.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения, необходимые для преобразования.
              </param>
      <param name="culture">
                Региональные особенности следует учитывать при выполнении преобразования.
              </param>
      <param name="value">
                Преобразуемый объект <see cref="T:System.Windows.Int32Rect" />.
              </param>
      <param name="destinationType">
                Тип для преобразования <see cref="T:System.Windows.Int32Rect" /> для.
              </param>
      <returns>
              Объект, созданный из это преобразование <see cref="T:System.Windows.Int32Rect" />.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  Генерируется, если <paramref name="value" /> является <see langword="null" /> или не <see cref="T:System.Windows.Int32Rect" />, или если <paramref name="destinationType" /> не является одним из допустимых типов для преобразования.
                </exception>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary>
              Вызывается для указания, что модальный поток более не является модальным.
            </summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary>
              Вызывается для указания, что поток является модальным.
            </summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary>
              Вызывается для указания, что поток бездействует.
            </summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary>
              Указывает, что доступно новое сообщение для возможной обработки.
            </summary>
      <param name="msg">
                Сообщение и связанные с ним данные.
              </param>
      <returns>
              Значение <see langword="true" />, если один из модулей, прослушивающих цикл сообщений, обработал сообщение.
               Владелец цикла сообщений должен игнорировать это сообщение.
               Значение <see langword="false" />, если сообщение не обработано.
               В этом случае владелец конвейера сообщений должен вызывать Win32 функция TranslateMessage следуют DispatchMessage. </returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary>
              Возвращает значение, указывающее, имеет ли приемник или один из содержащихся в нем компонентов фокус.
            </summary>
      <returns>
              <see langword="true" /> Если приемник или один из его дочерних компонентов имеет фокус; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>
              Вызывается, когда вызывается одна из мнемоник (клавиш доступа) данного приемника.
            </summary>
      <param name="msg">
                Сообщение для назначенный и связанных данных.
                 Не изменяйте структуру этого сообщения.
                 Он передается по ссылке только из соображений производительности.
              </param>
      <param name="modifiers">
                Клавиши-модификаторы.
              </param>
      <returns>
              <see langword="true" /> Если сообщение обработано; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary>
              Регистрирует <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> интерфейса автономной компонента.
            </summary>
      <param name="sink">
                <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> Приемника компонента автономной.
              </param>
      <returns>
              <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> Узел автономной компонента.
            </returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary>
              Устанавливает фокус на первую или последнюю позицию табуляции приемника.
            </summary>
      <param name="request">
                Указывает, должен быть установлен фокус на первой или последней позиции табуляции.
              </param>
      <returns>
              <see langword="true" /> Если фокус установлен, как запрашивалось; <see langword="false" />, если не позиций табуляции.
            </returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>
              Обрабатывает ввод с клавиатуры на уровне сообщений keydown.
            </summary>
      <param name="msg">
                Сообщение и связанные с ними данные.
                 Не изменяйте эту структуру.
                 Он передается по ссылке только из соображений производительности.
              </param>
      <param name="modifiers">
                Клавиши-модификаторы.
              </param>
      <returns>
              <see langword="true" /> Если сообщение обработано данной реализацией метода; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>
              Обрабатывает входящие сообщения WM_CHAR, WM_SYSCHAR, WM_DEADCHAR и WM_SYSDEADCHAR перед <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> вызывается.
            </summary>
      <param name="msg">
                Сообщение и связанные с ними данные.
                 Не изменяйте эту структуру.
                 Он передается по ссылке только из соображений производительности.
              </param>
      <param name="modifiers">
                Клавиши-модификаторы.
              </param>
      <returns>
              <see langword="true" /> Если сообщение было обработано и <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> не должен быть вызван; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary>
              Вызывается размещаемым компонентом, когда он был достигнут его последней позиции табуляции, когда больше нет элементов для вкладки.
            </summary>
      <param name="request">
                Указывает, должен быть установлен фокус на первой или последней позиции табуляции.
              </param>
      <returns>
              Если этот метод возвращает <see langword="true" />, узел переместил фокус на другой компонент.
               Если этот метод возвращает <see langword="false" />, фокус находится на вызывающий компонент.
               Компонент должен «обтекает» и установить фокус на его первую позицию табуляции.
            </returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary>
              Отменяет регистрацию дочернего приемника ввода от клавиатуры этого сайта.
            </summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>
              Получает события от централизованного диспетчера событий.
            </summary>
      <param name="managerType">
                Тип <see cref="T:System.Windows.WeakEventManager" /> вызов этого метода.
              </param>
      <param name="sender">
                Объект, вызвавший событие.
              </param>
      <param name="e">
                Данные события.
              </param>
      <returns>
              <see langword="true" /> Если прослушиватель обработал событие.
               Он рассматривается как ошибка, <see cref="T:System.Windows.WeakEventManager" /> Обработка в WPF для регистрации прослушивателя для события, которое не обрабатывает прослушивателя.
               Независимо от того, метод должен вернуть <see langword="false" /> при получении события, которое не распознать или обработать.
            </returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary>
              Определяет, равны ли два экземпляра <see cref="T:System.Windows.LocalValueEntry" />.
            </summary>
      <param name="obj">
                Объект <see cref="T:System.Windows.LocalValueEntry" />, с которым сравнивается текущий объект <see cref="T:System.Windows.LocalValueEntry" />.
              </param>
      <returns>
              Это <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> реализация сравнивает значения <see cref="P:System.Windows.LocalValueEntry.Property" />, и потенциально сравнивает значения <see cref="P:System.Windows.LocalValueEntry.Value" />.
              <see cref="P:System.Windows.LocalValueEntry.Property" /> Компонент <see cref="T:System.Windows.LocalValueEntry" /> является типом значения, поэтому всегда будет поразрядного сравнения.
               Для <see cref="P:System.Windows.LocalValueEntry.Value" /> компонента, эта реализация использует поразрядного сравнения, если он является типом значения.
               Для локально заданных свойств ссылочного типа, поведение перекладывается на механизмы определения равенства данного типа, так как оно использует внутреннее ==-оператор двух значений.
               По умолчанию, это было бы ссылочное равенство значений и, следовательно, равенство весь <see cref="T:System.Windows.LocalValueEntry" /> стал бы равенство ссылок.
            </returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary>
              Возвращает хэш-код для модуля чтения данных <see cref="T:System.Windows.LocalValueEntry" />.
            </summary>
      <returns>
              32-разрядное целое значение со знаком.
            </returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary>
              Сравнивает заданный <see cref="T:System.Windows.LocalValueEntry" /> экземпляры, чтобы определить, одинаковы ли они.
            </summary>
      <param name="obj1">
                Первый экземпляр для сравнения.
              </param>
      <param name="obj2">
                Второй экземпляр для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="obj1" /> <see cref="T:System.Windows.LocalValueEntry" /> равен <paramref name="obj2" /> <see cref="T:System.Windows.LocalValueEntry" />; в противном случае — <see langword="false" />.  
            </returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary>
              Сравнивает заданный <see cref="T:System.Windows.LocalValueEnumerator" /> экземпляры, чтобы определить, различаются ли они.
            </summary>
      <param name="obj1">
                Первый экземпляр для сравнения.
              </param>
      <param name="obj2">
                Второй экземпляр для сравнения.
              </param>
      <returns>
              Эта реализация сравнивает значения <see cref="P:System.Windows.LocalValueEntry.Property" /> и <see cref="P:System.Windows.LocalValueEntry.Value" /> компонентов <see cref="T:System.Windows.LocalValueEntry" />.
              <see cref="P:System.Windows.LocalValueEntry.Property" /> Компонент <see cref="T:System.Windows.LocalValueEntry" /> всегда является типом значения, поэтому это сравнение всегда будет поразрядного сравнения.
               Для <see cref="P:System.Windows.LocalValueEntry.Value" /> компонента, эта реализация использует поразрядного сравнения, если он является типом значения.
            
              Для локально заданных свойств ссылочного типа, поведение перекладывается на механизмы определения равенства данного типа, так как оно использует <see langword="==" /> оператор по двум внутри значения.
               По умолчанию это ссылочное равенство значений.
            </returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary>
              Определяет, является ли предоставленный <see cref="T:System.Windows.LocalValueEnumerator" /> эквивалентен следующему <see cref="T:System.Windows.LocalValueEnumerator" />.
            </summary>
      <param name="obj">
                Объект <see cref="T:System.Windows.LocalValueEnumerator" />, с которым сравнивается текущий объект <see cref="T:System.Windows.LocalValueEnumerator" />.
              </param>
      <returns>
              Значение <see langword="true" />, если указанный объект <see cref="T:System.Windows.LocalValueEnumerator" /> равен текущему объекту <see cref="T:System.Windows.LocalValueEnumerator" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary>
              Возвращает хэш-код для текущего объекта <see cref="T:System.Windows.LocalValueEnumerator" />.
            </summary>
      <returns>
              Хэш-код в виде 32-разрядного целого числа.
            </returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary>
              Перемещает перечислитель к следующему элементу коллекции.
            </summary>
      <returns>
              Значение <see langword="true" />, если перечислитель был успешно перемещен к следующему элементу; значение <see langword="false" />, если перечислитель достиг конца коллекции.
            </returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary>
              Сравнивает два заданных <see cref="T:System.Windows.LocalValueEnumerator" /> объекты совпадают.
            </summary>
      <param name="obj1">
                Первый из сравниваемых объектов.
              </param>
      <param name="obj2">
                Второй из сравниваемых объектов.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> равен <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary>
              Сравнивает два указанных <see cref="T:System.Windows.LocalValueEnumerator" /> объектов, чтобы определить, является ли они не совпадают.
            </summary>
      <param name="obj1">
                Первый из сравниваемых объектов.
              </param>
      <param name="obj2">
                Второй из сравниваемых объектов.
              </param>
      <returns>
              Значение <see langword="true" />, если эти экземпляры не равны; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary>
              Устанавливает перечислитель в его начальное положение, т. е. перед первым элементом коллекции.
            </summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />.
            </summary>
      <param name="designerSerializationOptions">
                Указывает, как должно быть сериализовано свойство.
              </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="designerSerializationOptions" /> не является допустимым значением <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />.
                </exception>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.InternalTypeHelper" />.
            </summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary>
              При переопределении в производном (созданном) классе присоединяет делегата обработчика событий к внутреннему событию.
            </summary>
      <param name="eventInfo">
                Сведения о событии для события (информация об отражении CLR).
              </param>
      <param name="target">
                Целевой объект, которому присоединен обработчик.
              </param>
      <param name="handler">
                Обработчик событий.
              </param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary>
              При переопределении в производном (созданном) классе создает делегат события, ссылки на метод обработчика не являющиеся открытыми.
            </summary>
      <param name="delegateType">
                <see cref="T:System.Type" /> Делегата.
              </param>
      <param name="target">
                Целевой объект, которому присоединен обработчик.
              </param>
      <param name="handler">
                Имя обработчика реализации.
              </param>
      <returns>
              Ссылка на делегат.
            </returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary>
              При переопределении в производном (созданном) классе создает экземпляр внутреннего типа.
            </summary>
      <param name="type">
                Создаваемый тип <see cref="T:System.Type" />.
              </param>
      <param name="culture">
                Сведения о культуре.
              </param>
      <returns>
              Созданный экземпляр.
            </returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary>
              При переопределении в производном (созданном) классе получает значение внутреннего свойства целевого объекта
            </summary>
      <param name="propertyInfo">
                Сведения о свойстве для свойства.
              </param>
      <param name="target">
                Объект, содержащий значение нужного свойства.
              </param>
      <param name="culture">
                Сведения о культуре.
              </param>
      <returns>
              Значение свойства.
            </returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary>
              При переопределении в производном (созданном) классе задает значение внутреннего свойства целевого объекта.
            </summary>
      <param name="propertyInfo">
                Сведения о свойстве для свойства.
              </param>
      <param name="target">
                Объект, содержащий значение нужного свойства.
              </param>
      <param name="value">
                Задаваемое значение.
              </param>
      <param name="culture">
                Сведения о культуре.
              </param>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary>
              Предоставляет обработку расширений разметки, которые обеспечивают значения свойств.
               Не используйте для .NET Framework 4 реализации; см. примечания в <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.
            </summary>
      <param name="property">
                Имя целевого свойства.
              </param>
      <param name="markupExtension">
                Экземпляр расширения разметки входящих данных.
              </param>
      <param name="serviceProvider">
                Можно предоставить дополнительные службы, которые должны выполняться во время обработки данных расширения разметки для значения свойства.
              </param>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary>
              При переопределении в производном классе назначает корневого контекста для <see cref="T:System.Windows.Markup.ValueSerializer" /> классы.
            </summary>
      <param name="context">
                <see cref="T:System.Windows.Markup.IValueSerializerContext" /> Для назначения для корневого контекста.
              </param>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ServiceProviders" />.
            </summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary>
              Добавляет службу в список.
            </summary>
      <param name="serviceType">
                Тип службы новой службы.
              </param>
      <param name="service">
                Класс реализации службы.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="serviceType" /> или <paramref name="service" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Предпринята попытка добавить службу, которая уже существует в словаре.
                </exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary>
              Возвращает объект службы указанного типа.
            </summary>
      <param name="serviceType">
                Тип объекта службы для получения.
              </param>
      <returns>
              Реализация службы для типа <paramref name="serviceType" />.
               Может быть <see langword="null" /> Если отсутствует служба хранятся для типа <paramref name="serviceType" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" />.
            </summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, если преобразование из заданного <see cref="T:System.String" /> к экземпляру <see cref="T:System.Windows.Media.Matrix" /> возможно.
            </summary>
      <param name="value">
                Строка для оценки для преобразования.
              </param>
      <param name="context">
                Сведения о контексте используется для преобразования.
              </param>
      <returns>
              Значение <see langword="true" />, если значение можно преобразовать; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Определяет, если экземпляр <see cref="T:System.Windows.Media.Matrix" /> можно преобразовать в <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Экземпляр <see cref="T:System.Windows.Media.Matrix" /> для оценки для преобразования.
              </param>
      <param name="context">
                Сведения о контексте используется для преобразования.
              </param>
      <returns>
              Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.
            </returns>
      <exception cref="T:System.ArgumentException">
                  Происходит при <paramref name="value" /> не <see cref="T:System.Windows.Media.Int32Collection" />.
                </exception>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="value">
                <see cref="T:System.String" /> значение для преобразования в <see cref="T:System.Windows.Media.Matrix" />.
              </param>
      <param name="context">
                Сведения о контексте используется для преобразования.
              </param>
      <returns>
              Новый экземпляр <see cref="T:System.Windows.Media.Matrix" /> на основе предоставленного <paramref name="value" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>
              Преобразует экземпляр <see cref="T:System.Windows.Media.Matrix" /> для <see cref="T:System.String" />.
            </summary>
      <param name="value">
                Экземпляр <see cref="T:System.Windows.Media.Matrix" /> для оценки для преобразования.
              </param>
      <param name="context">
                Сведения о контексте используется для преобразования.
              </param>
      <returns>
              A <see cref="T:System.String" /> представление переданного <see cref="T:System.Windows.Media.Matrix" /> объекта.
            </returns>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />.
            </summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
               Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="m11">
                Новый коэффициент <see cref="P:System.Windows.Media.Matrix.M11" /> структуры <see cref="T:System.Windows.Media.Matrix" />.
              </param>
      <param name="m12">
                Новый коэффициент <see cref="P:System.Windows.Media.Matrix.M12" /> структуры <see cref="T:System.Windows.Media.Matrix" />.
              </param>
      <param name="m21">
                Новый коэффициент <see cref="P:System.Windows.Media.Matrix.M21" /> структуры <see cref="T:System.Windows.Media.Matrix" />.
              </param>
      <param name="m22">
                Новый коэффициент <see cref="P:System.Windows.Media.Matrix.M22" /> структуры <see cref="T:System.Windows.Media.Matrix" />.
              </param>
      <param name="offsetX">
                Новый коэффициент <see cref="P:System.Windows.Media.Matrix.OffsetX" /> структуры <see cref="T:System.Windows.Media.Matrix" />.
              </param>
      <param name="offsetY">
                Новый коэффициент <see cref="P:System.Windows.Media.Matrix.OffsetY" /> структуры <see cref="T:System.Windows.Media.Matrix" />.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary>
               Добавляет указанный <see cref="T:System.Windows.Media.Matrix" /> структуры этого <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="matrix">
                <see cref="T:System.Windows.Media.Matrix" /> Структуры для добавления к этому <see cref="T:System.Windows.Media.Matrix" /> структуры.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary>
               Определяет ли указанный <see cref="T:System.Object" /> — <see cref="T:System.Windows.Media.Matrix" /> структуру, идентичную это <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="o">
                Сравниваемый шаблон <see cref="T:System.Object" />.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="o" /> является <see cref="T:System.Windows.Media.Matrix" /> структуру, идентичную это <see cref="T:System.Windows.Media.Matrix" /> структуры; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary>
               Определяет, является ли указанный <see cref="T:System.Windows.Media.Matrix" /> Структура совпадает с данным экземпляром.
            </summary>
      <param name="value">
                Экземпляр <see cref="T:System.Windows.Media.Matrix" /> для сравнения с данным экземпляром.
              </param>
      <returns>
              <see langword="true" /> Если экземпляры равны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>
               Определяет, являются ли два заданных <see cref="T:System.Windows.Media.Matrix" /> структуры являются идентичными.
            </summary>
      <param name="matrix1">
                Первая структура <see cref="T:System.Windows.Media.Matrix" /> для сравнения.
              </param>
      <param name="matrix2">
                Вторая структура <see cref="T:System.Windows.Media.Matrix" /> для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="matrix1" /> и <paramref name="matrix2" /> совпадают; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary>
               Возвращает хэш-код данной структуры <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <returns>
              Хэш-код данного экземпляра.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary>
               Обращает матрицу <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="T:System.Windows.Media.Matrix" /> Структура необратима.
                </exception>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>
               Умножает <see cref="T:System.Windows.Media.Matrix" /> структуры другим <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="trans1">
                Первый <see cref="T:System.Windows.Media.Matrix" /> структуры для умножения.
              </param>
      <param name="trans2">
                Второй <see cref="T:System.Windows.Media.Matrix" /> структуры для умножения.
              </param>
      <returns>
              Результат умножения <paramref name="trans1" /> на <paramref name="trans2" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>
               Определяет, являются ли два заданных <see cref="T:System.Windows.Media.Matrix" /> структуры являются идентичными.
            </summary>
      <param name="matrix1">
                Первая структура <see cref="T:System.Windows.Media.Matrix" /> для сравнения.
              </param>
      <param name="matrix2">
                Вторая структура <see cref="T:System.Windows.Media.Matrix" /> для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="matrix1" /> и <paramref name="matrix2" /> совпадают; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>
               Определяет, являются ли два заданных <see cref="T:System.Windows.Media.Matrix" /> структуры не совпадают.
            </summary>
      <param name="matrix1">
                Первая структура <see cref="T:System.Windows.Media.Matrix" /> для сравнения.
              </param>
      <param name="matrix2">
                Вторая структура <see cref="T:System.Windows.Media.Matrix" /> для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="matrix1" /> и <paramref name="matrix2" /> не совпадают; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>
               Умножает <see cref="T:System.Windows.Media.Matrix" /> структуры другим <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="trans1">
                Первый <see cref="T:System.Windows.Media.Matrix" /> структуры для умножения.
              </param>
      <param name="trans2">
                Второй <see cref="T:System.Windows.Media.Matrix" /> структуры для умножения.
              </param>
      <returns>
              Результат умножения <paramref name="trans1" /> на <paramref name="trans2" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary>
               Преобразует <see cref="T:System.String" /> представление матрицы в эквивалентную <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="source">
                <see cref="T:System.String" /> Представление матрицы.
              </param>
      <returns>
              Эквивалент <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary>
               Добавляет указанный <see cref="T:System.Windows.Media.Matrix" /> структурой на это <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="matrix">
                <see cref="T:System.Windows.Media.Matrix" /> Структуры, чтобы добавить к этому <see cref="T:System.Windows.Media.Matrix" /> структуры.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary>
               Применяет поворот на указанный угол вокруг начала координат этого <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="angle">
                Угол поворота.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary>
              Поворачивает эту матрицу относительно заданной точке.
            </summary>
      <param name="angle">
                Угол (в градусах) поворота данной матрицы.
              </param>
      <param name="centerX">
                Координата x точки, вокруг которой выполняется поворот данной матрицы.
              </param>
      <param name="centerY">
                Координата y точки, вокруг которой выполняется поворот данной матрицы.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary>
              Добавляет поворот указанного угла в заданной точке этого <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="angle">
                Угол поворота в градусах.
              </param>
      <param name="centerX">
                Координата x центра поворота.
              </param>
      <param name="centerY">
                Координата y центра поворота.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary>
               Добавляет поворот на указанный угол <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="angle">
                Угол поворота в начало.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary>
               Добавляет указанный вектор масштабирования к этому <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="scaleX">
                Коэффициент масштаба <see cref="T:System.Windows.Media.Matrix" /> вдоль оси x.
              </param>
      <param name="scaleY">
                Коэффициент масштаба <see cref="T:System.Windows.Media.Matrix" /> по оси y.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary>
              Масштабирует это <see cref="T:System.Windows.Media.Matrix" /> на указанную величину вокруг указанной точки.
            </summary>
      <param name="scaleX">
                Величина, на которую масштаба <see cref="T:System.Windows.Media.Matrix" /> вдоль оси x.
              </param>
      <param name="scaleY">
                Величина, на которую масштаба <see cref="T:System.Windows.Media.Matrix" /> по оси y.
              </param>
      <param name="centerX">
                Координата x центра операции масштабирования.
              </param>
      <param name="centerY">
                Координата по оси y от точки center операции масштабирования.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary>
              Добавляет указанный масштаб о заданной точке этого <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="scaleX">
                Коэффициент масштабирования по оси x.
              </param>
      <param name="scaleY">
                Коэффициент масштабирования по оси y.
              </param>
      <param name="centerX">
                Координата x точки, о котором выполняется операция масштабирования.
              </param>
      <param name="centerY">
                Координата y точки, о котором выполняется операция масштабирования.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary>
               Добавляет указанный вектор масштабирования к этому <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="scaleX">
                Коэффициент масштаба <see cref="T:System.Windows.Media.Matrix" /> структуры вдоль оси x.
              </param>
      <param name="scaleY">
                Коэффициент масштаба <see cref="T:System.Windows.Media.Matrix" /> структуры по оси y.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary>
               Эта ситуация изменилась <see cref="T:System.Windows.Media.Matrix" /> структуры в единичной матрицей.
            </summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary>
               Добавляет искажение указанного градусов в x и y измерений к этому <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="skewX">
                Угол по оси x, в котором это наклон <see cref="T:System.Windows.Media.Matrix" />.
              </param>
      <param name="skewY">
                Угол по оси y, в котором это наклон <see cref="T:System.Windows.Media.Matrix" />.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary>
               Добавляет искажение указанного градусов в x и y измерений к этому <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="skewX">
                Угол по оси x, в котором это наклон <see cref="T:System.Windows.Media.Matrix" />.
              </param>
      <param name="skewY">
                Угол по оси y, в котором это наклон <see cref="T:System.Windows.Media.Matrix" />.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>
              Форматирует значение текущего экземпляра, используя указанный формат.
            </summary>
      <param name="format">
                Используемый формат.
              
                -или- 
              
                Пустая (null) ссылка (<see langword="Nothing" /> в Visual Basic) для использования формата по умолчанию, заданного для типа реализации <see cref="T:System.IFormattable" />.
              </param>
      <param name="provider">
                Поставщик для использования формата значения.
              
                -или- 
              
                Пустая (null) ссылка (<see langword="Nothing" /> в Visual Basic) для получения сведений о числовом формате из параметра текущего языка операционной системы.
              </param>
      <returns>
              Значение текущего экземпляра в указанном формате.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary>
               Создает <see cref="T:System.String" /> представление этого <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <returns>
              A <see cref="T:System.String" /> содержащий <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, и <see cref="P:System.Windows.Media.Matrix.OffsetY" /> значения этого <see cref="T:System.Windows.Media.Matrix" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary>
               Создает <see cref="T:System.String" /> представление этого <see cref="T:System.Windows.Media.Matrix" /> структуру с языком и региональными параметрами информацию о форматировании.
            </summary>
      <param name="provider">
                Языком и региональными параметрами информацию о форматировании.
              </param>
      <returns>
              A <see cref="T:System.String" /> содержащий <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, и <see cref="P:System.Windows.Media.Matrix.OffsetY" /> значения этого <see cref="T:System.Windows.Media.Matrix" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary>
              Преобразует указанную точку с <see cref="T:System.Windows.Media.Matrix" /> и возвращает результат.
            </summary>
      <param name="point">
                Точка для преобразования.
              </param>
      <returns>
              Результат преобразования <paramref name="point" /> этим <see cref="T:System.Windows.Media.Matrix" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary>
              Преобразует указанные точки, это <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="points">
                Точки для преобразования.
                 Исходные точки в массиве заменяются их преобразованными значениями.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary>
              Преобразует заданный вектор в этом <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="vector">
                Преобразуемый вектор.
              </param>
      <returns>
              Результат преобразования <paramref name="vector" /> этим <see cref="T:System.Windows.Media.Matrix" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary>
              Преобразует заданных векторов, это <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="vectors">
                Векторы для преобразования.
                 Исходные векторы в массиве заменяются их преобразованными значениями.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary>
               Добавляет это перевод заданными смещениями <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="offsetX">
                Величина смещения это <see cref="T:System.Windows.Media.Matrix" /> вдоль оси x.
              </param>
      <param name="offsetY">
                Величина смещения это <see cref="T:System.Windows.Media.Matrix" /> по оси y.
              </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary>
               Добавляет преобразование заданного смещения к этому <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="offsetX">
                Величина смещения это <see cref="T:System.Windows.Media.Matrix" /> вдоль оси x.
              </param>
      <param name="offsetY">
                Величина смещения это <see cref="T:System.Windows.Media.Matrix" /> по оси y.
              </param>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Media.MatrixConverter" />.
            </summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, можно ли преобразовать объект из определенного типа в экземпляр <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="context">
                Контекстная информация типа.
              </param>
      <param name="sourceType">
                Тип источника, которое вычисляется для преобразования.
              </param>
      <returns>
              <see langword="true" /> Если тип можно преобразовать <see cref="T:System.Windows.Media.Matrix" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, будет ли экземпляр <see cref="T:System.Windows.Media.Matrix" /> можно преобразовать в другой тип.
            </summary>
      <param name="context">
                Контекстная информация типа.
              </param>
      <param name="destinationType">
                Это требуемый тип <see cref="T:System.Windows.Media.Matrix" /> вычисляется для преобразования.
              </param>
      <returns>
              <see langword="true" /> Если этот <see cref="T:System.Windows.Media.Matrix" /> можно преобразовать в <paramref name="destinationType" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              Пытается преобразовать указанный объект в <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="context">
                Контекстная информация типа.
              </param>
      <param name="culture">
                Сведения <see cref="T:System.Globalization.CultureInfo" /> преобразуемого типа.
              </param>
      <param name="value">
                Преобразуемый объект.
              </param>
      <returns>
              <see cref="T:System.Windows.Media.Matrix" /> Из преобразования <paramref name="value" />.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  Указанный объект имеет значение null или является типом, который не может быть преобразован в <see cref="T:System.Windows.Media.Matrix" />.
                </exception>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              Пытается преобразовать <see cref="T:System.Windows.Media.Matrix" /> для указанного типа.
            </summary>
      <param name="context">
                Контекстная информация типа.
              </param>
      <param name="culture">
                Сведения <see cref="T:System.Globalization.CultureInfo" /> преобразуемого типа.
              </param>
      <param name="value">
                Преобразуемый объект <see cref="T:System.Windows.Media.Matrix" />.
              </param>
      <param name="destinationType">
                Тип для преобразования <see cref="T:System.Windows.Media.Matrix" /> для.
              </param>
      <returns>
              Объект, созданный из это преобразование <see cref="T:System.Windows.Media.Matrix" />.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="value" /> Имеет значение null или не <see cref="T:System.Windows.Media.Matrix" />, или <paramref name="destinationType" /> не является типом допустимое преобразование.
                </exception>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.NameScope" />.
            </summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
              Добавляет элемент в коллекцию.
            </summary>
      <param name="item">
                A <see cref="T:System.Collections.Generic.KeyValuePair`2" />  (ключ <see cref="T:System.String" />, значение <see cref="T:System.Object" />), представляющий сопоставление имен для добавления в область видимости имен XAML.
              </param>
      <exception cref="T:System.ArgumentException">
                  Одного или обоих этих компонентов <paramref name="item" /> являются <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary>
              Добавляет элемент в коллекцию.
            </summary>
      <param name="key">
                Строковый ключ, которое является именем сопоставлении области видимости имен XAML для добавления.
              </param>
      <param name="value">
                Значение объекта, являющееся сопоставлении области видимости имен XAML, чтобы добавить ссылку на объект.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="key" /> или <paramref name="value" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary>
              Удаляет все элементы из коллекции.
            </summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
              Определяет, содержит ли коллекция указанный элемент.
            </summary>
      <param name="item">
                Элемент для поиска в коллекции, указанного как <see cref="T:System.Collections.Generic.KeyValuePair`2" />  (ключ <see cref="T:System.String" />, значение <see cref="T:System.Object" />).
              </param>
      <returns>
              <see langword="true" /> Если указанный <see cref="T:System.Collections.Generic.KeyValuePair`2" /> определяет существующее сопоставление в этом <see cref="T:System.Windows.NameScope" /> .
              <see langword="false" /> Если указанный <see cref="T:System.Collections.Generic.KeyValuePair`2" /> не существует в текущем <see cref="T:System.Windows.NameScope" />.
            </returns>
      <exception cref="T:System.ArgumentException">
                  Свойство <paramref name="key" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary>
              Возвращает ли указанное имя уже существует в этом <see cref="T:System.Windows.NameScope" />.
            </summary>
      <param name="key">
                Ключ строки для поиска.
              </param>
      <returns>
              <see langword="true" /> Если указанный <paramref name="key" /> определяет имя существующего сопоставления в этом <see cref="T:System.Windows.NameScope" />.
              <see langword="false" /> Если указанный <paramref name="key" /> не существует в текущем <see cref="T:System.Windows.NameScope" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="key" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>
              Копирует элементы коллекции в массив начиная с определенного индекса в массиве.
            </summary>
      <param name="array">
                Одномерный массив, в котором назначения для элементов, копируемых из коллекции массива должна начинаться с нуля.
              </param>
      <param name="arrayIndex">
                Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.
              </param>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary>
              Возвращает соответствующий объект в области имен XAML, поддерживаемой данным <see cref="T:System.Windows.NameScope" />, на основании заданной строки имени.
            </summary>
      <param name="name">
                Часть имени существующего сопоставления для извлекаемой части объекта.
              </param>
      <returns>
              Запрошенный объект, который сопоставляется с <paramref name="name" />.
               Может возвращать <see langword="null" />, если параметр <paramref name="name" /> был предоставлен в виде <see langword="null" /> или пустой строки, или если соответствующий объект найден.
            </returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary>
              Предоставляет метод доступа get присоединенного свойства для присоединенного свойства <see cref="P:System.Windows.NameScope.NameScope" />.
            </summary>
      <param name="dependencyObject">
                Объект, из которого возвращается область имен XAML.
              </param>
      <returns>
              Область имен XAML как экземпляр <see cref="T:System.Windows.Markup.INameScope" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="dependencyObject" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary>
              Регистрирует новую пару "имя-объект" в текущем пространстве имен XAML.
            </summary>
      <param name="name">
                Имя, используемое для сопоставления указанного объекта.
              </param>
      <param name="scopedElement">
                Объект для сопоставления с заданным именем.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Параметр <paramref name="name" /> или <paramref name="scopedElement" /> был предоставлен в виде <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="name" /> был предоставлен в виде пустой строки.
                
                  -или-
                
                  Предоставленный параметр <paramref name="name" /> был отклонен средством синтаксического анализа, так как он содержит символы, недопустимые для имени XAML.
                
                  -или-
                
                  Предоставленный параметр <paramref name="name" /> приведет к регистрации дубликата имени.
                </exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
              Удаляет указанный объект из коллекции.
            </summary>
      <param name="item">
                Объект, удаляемый из коллекции, указанного как <see cref="T:System.Collections.Generic.KeyValuePair`2" />  (ключ <see cref="T:System.String" />, значение <see cref="T:System.Object" />).
              </param>
      <returns>
              <see langword="true" /> Если элемент был успешно удален из коллекции, в противном случае <see langword="false" />.
               Также возвращает <see langword="false" /> если элемент не найден в коллекции.
            </returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary>
              Удаляет из коллекции сопоставление для заданного имени.
            </summary>
      <param name="key">
                Строковый ключ, которое является именем сопоставлении области видимости имен XAML для удаления.
              </param>
      <returns>
              <see langword="true" /> Если элемент был успешно удален из коллекции, в противном случае <see langword="false" />.
               Также возвращает <see langword="false" /> если элемент не найден в коллекции.
            </returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary>
              Предоставляет метод доступа set присоединенного свойства для присоединенного свойства <see cref="P:System.Windows.NameScope.NameScope" />.
            </summary>
      <param name="dependencyObject">
                Объект, для которого необходимо изменить область имен XAML.
              </param>
      <param name="value">
                Новая область имен XAML, полученная с помощью приведения к интерфейсу.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="dependencyObject" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>
              Возвращает перечислитель, который осуществляет итерацию по коллекции.
            </summary>
      <returns>
              Перечислитель, который осуществляет перебор коллекции.
            </returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              Возвращает перечислитель, который осуществляет итерацию по коллекции.
            </summary>
      <returns>
              Перечислитель, который осуществляет перебор коллекции.
            </returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary>
              Возвращает значение, связанное с заданным ключом.
            </summary>
      <param name="key">
                Ключ значения, которое необходимо получить.
              </param>
      <param name="value">
                При возвращении данного метода содержит значение, связанное с указанным ключом, если ключ найден; в противном случае — пустой объект.
                 Этот параметр передается неинициализированным.
              </param>
      <returns>
              значение true, если <see cref="T:System.Windows.NameScope" /> содержит сопоставление для указано как имя <paramref name="key" />.
               В противном случае — значение false.
            </returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary>
              Удаляет сопоставление имени и объекта из области имен XAML.
            </summary>
      <param name="name">
                Имя удаляемого сопоставления.
              </param>
      <exception cref="T:System.ArgumentException">
                  Параметр <paramref name="name" /> был предоставлен в виде пустой строки.
                
                  -или-
                
                  Предоставленный <paramref name="name" /> не зарегистрирован.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="name" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary>
              Создает новый <see cref="T:System.Windows.Point" /> структуру, содержащую по указанным координатам.
            </summary>
      <param name="x">
                Координата по оси x нового <see cref="T:System.Windows.Point" /> структуры.
              </param>
      <param name="y">
                Координата по оси y нового <see cref="T:System.Windows.Point" /> структуры.
              </param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary>
              Добавляет <see cref="T:System.Windows.Vector" /> для <see cref="T:System.Windows.Point" /> и возвращает результат в виде <see cref="T:System.Windows.Point" /> структуры.
            </summary>
      <param name="point">
                <see cref="T:System.Windows.Point" /> Структуру для добавления.
              </param>
      <param name="vector">
                <see cref="T:System.Windows.Vector" /> Структуру для добавления.
              </param>
      <returns>
              Возвращает сумму <paramref name="point" /> и <paramref name="vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary>
              Определяет ли указанный <see cref="T:System.Object" /> — <see cref="T:System.Windows.Point" /> и содержит ли он же координаты, как <see cref="T:System.Windows.Point" />.
            </summary>
      <param name="o">
                Сравниваемый шаблон <see cref="T:System.Object" />.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="o" /> — <see cref="T:System.Windows.Point" /> и содержит тот же <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> значения, что это <see cref="T:System.Windows.Point" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary>
              Сравнивает два <see cref="T:System.Windows.Point" /> структур на равенство.
            </summary>
      <param name="value">
                Точка для сравнения с данным экземпляром.
              </param>
      <returns>
              <see langword="true" /> Если оба <see cref="T:System.Windows.Point" /> структуры содержат одинаковый <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> значения; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary>
              Сравнивает два <see cref="T:System.Windows.Point" /> структур на равенство.
            </summary>
      <param name="point1">
                Первая точка для сравнения.
              </param>
      <param name="point2">
                Вторая точка для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="point1" /> и <paramref name="point2" /> содержат одинаковый <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> значения; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary>
              Возвращает хэш-код для модуля чтения данных <see cref="T:System.Windows.Point" />.
            </summary>
      <returns>
              Хэш-код для этого <see cref="T:System.Windows.Point" /> структуры.
            </returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary>
              Преобразует указанный <see cref="T:System.Windows.Point" /> структуры с помощью указанного <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <param name="point">
                Точка для преобразования.
              </param>
      <param name="matrix">
                Матрица преобразования.
              </param>
      <returns>
              Преобразованная точка.
            </returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary>
              Смещение точек <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> координаты на заданные значения.
            </summary>
      <param name="offsetX">
                Величина смещения точки
              
                <see cref="P:System.Windows.Point.X" /> Координата.
              </param>
      <param name="offsetY">
                Величина смещения
              
                точки <see cref="P:System.Windows.Point.Y" /> координации.
              </param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary>
              Преобразует указанный <see cref="T:System.Windows.Point" /> указанным <see cref="T:System.Windows.Vector" /> и возвращает результат.
            </summary>
      <param name="point">
                Преобразуемая точка.
              </param>
      <param name="vector">
                Величина, на которое смещается <paramref name="point" />.
              </param>
      <returns>
              Результат перемещения заданной точки на заданный вектор.
            </returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary>
              Сравнивает два <see cref="T:System.Windows.Point" /> структур на равенство.
            </summary>
      <param name="point1">
                Первая структура <see cref="T:System.Windows.Point" /> для сравнения.
              </param>
      <param name="point2">
                Вторая структура <see cref="T:System.Windows.Point" /> для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если оба <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> координаты <paramref name="point1" /> и <paramref name="point2" /> равны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary>
              Создает <see cref="T:System.Windows.Size" /> Структура с <see cref="P:System.Windows.Size.Width" /> равно этой точки <see cref="P:System.Windows.Point.X" /> значение и <see cref="P:System.Windows.Size.Height" /> равно этой точки <see cref="P:System.Windows.Point.Y" /> значение.
            </summary>
      <param name="point">
                Точки для преобразования.
              </param>
      <returns>
              A <see cref="T:System.Windows.Size" /> Структура с <see cref="P:System.Windows.Size.Width" /> равно этой точки <see cref="P:System.Windows.Point.X" /> значение и <see cref="P:System.Windows.Size.Height" /> равно этой точки <see cref="P:System.Windows.Point.Y" /> значение.
            </returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary>
              Создает <see cref="T:System.Windows.Vector" /> Структура с <see cref="P:System.Windows.Vector.X" /> значение, равное количеству точек <see cref="P:System.Windows.Point.X" /> значение и <see cref="P:System.Windows.Vector.Y" /> значение, равное количеству точек <see cref="P:System.Windows.Point.Y" /> значение.
            </summary>
      <param name="point">
                Точки для преобразования.
              </param>
      <returns>
              Вектор с <see cref="P:System.Windows.Vector.X" /> значение, равное количеству точек <see cref="P:System.Windows.Point.X" /> значение и <see cref="P:System.Windows.Vector.Y" /> значение, равное количеству точек <see cref="P:System.Windows.Point.Y" /> значение.
            </returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary>
              Сравнивает два <see cref="T:System.Windows.Point" /> структуры на неравенство.
            </summary>
      <param name="point1">
                Первая точка для сравнения.
              </param>
      <param name="point2">
                Вторая точка для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="point1" /> и <paramref name="point2" /> имеют различные <see cref="P:System.Windows.Point.X" /> или <see cref="P:System.Windows.Point.Y" /> координирует; <see langword="false" /> Если <paramref name="point1" /> и <paramref name="point2" /> с одинаковым <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> координаты.
            </returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary>
              Преобразует указанный <see cref="T:System.Windows.Point" /> указанным <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="point">
                Точка для преобразования.
              </param>
      <param name="matrix">
                Матрица преобразования.
              </param>
      <returns>
              Результат преобразования заданной точки с помощью заданной матрицы.
            </returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary>
              Вычитает указанный <see cref="T:System.Windows.Point" /> из другого указанного <see cref="T:System.Windows.Point" /> и возвращает разницу как <see cref="T:System.Windows.Vector" />.
            </summary>
      <param name="point1">
                Точка, от которой <paramref name="point2" /> вычитается.
              </param>
      <param name="point2">
                Точка для вычитания из <paramref name="point1" />.
              </param>
      <returns>
              Разница между <paramref name="point1" /> и <paramref name="point2" />.
            </returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary>
              Вычитает указанный <see cref="T:System.Windows.Vector" /> из указанного <see cref="T:System.Windows.Point" /> и возвращает полученный в результате <see cref="T:System.Windows.Point" />.
            </summary>
      <param name="point">
                Точка, от которой <paramref name="vector" /> вычитается.
              </param>
      <param name="vector">
                Вектор, который вычитается из <paramref name="point1" />
              </param>
      <returns>
              Разница между <paramref name="point" /> и <paramref name="vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary>
              Создает <see cref="T:System.Windows.Point" /> из указанного <see cref="T:System.String" />.
            </summary>
      <param name="source">
                Строковое представление точки.
              </param>
      <returns>
              Эквивалент <see cref="T:System.Windows.Point" /> структуры.
            </returns>
      <exception cref="T:System.FormatException">
                  <paramref name="source" /> не состоит из двух значений типа double, разделенных запятыми или пробелами.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="source" /> не содержит два числа.
                
                  -или-
                
                  <paramref name="source" /> содержит слишком много разделителей.
                </exception>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary>
              Вычитает указанный <see cref="T:System.Windows.Point" /> из другого указанного <see cref="T:System.Windows.Point" /> и возвращает разницу как <see cref="T:System.Windows.Vector" />.
            </summary>
      <param name="point1">
                Точка, от которой <paramref name="point2" /> вычитается.
              </param>
      <param name="point2">
                Точка для вычитания из <paramref name="point1" />.
              </param>
      <returns>
              Разница между <paramref name="point1" /> и <paramref name="point2" />.
            </returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary>
              Вычитает указанный <see cref="T:System.Windows.Vector" /> из указанного <see cref="T:System.Windows.Point" /> и возвращает полученный в результате <see cref="T:System.Windows.Point" />.
            </summary>
      <param name="point">
                Точка, от которой <paramref name="vector" /> вычитается.
              </param>
      <param name="vector">
                <paramref name="vector" /> Вычитаемое <paramref name="point" />.
              </param>
      <returns>
              Разница между <paramref name="point" /> и <paramref name="vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>
              Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.
               Описание этого члена см. в разделе <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.
            </summary>
      <param name="format">
                Строка, задающая формат для использования.
              
                -или- 
              
                <see langword="null" /> для использования стандартного формата, определенного для типа <see cref="T:System.IFormattable" /> реализации.
              </param>
      <param name="provider">
                <see langword="IFormatProvider" /> Для форматирования значения.
              
                -или- 
              
                <see langword="null" /> Для получения сведений о форматировании чисел из текущих локальных настроек операционной системы.
              </param>
      <returns>
              Строка, содержащая значение текущего экземпляра в указанном формате.
            </returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary>
              Создает <see cref="T:System.String" /> представление этого <see cref="T:System.Windows.Point" />.
            </summary>
      <returns>
              A <see cref="T:System.String" /> содержащий <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> значения этого <see cref="T:System.Windows.Point" /> структуры.
            </returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary>
              Создает <see cref="T:System.String" /> представление этого <see cref="T:System.Windows.Point" />.
            </summary>
      <param name="provider">
                Языком и региональными параметрами информацию о форматировании.
              </param>
      <returns>
              A <see cref="T:System.String" /> содержащий <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> значения этого <see cref="T:System.Windows.Point" /> структуры.
            </returns>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.PointConverter" />.
            </summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, можно ли преобразовать объект из заданного типа в экземпляр <see cref="T:System.Windows.Point" />.
            </summary>
      <param name="context">
                Описывает контекстную информацию типа.
              </param>
      <param name="sourceType">
                Тип источника, которое вычисляется для преобразования.
              </param>
      <returns>
              <see langword="true" /> Если тип можно преобразовать <see cref="T:System.Windows.Point" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, будет ли экземпляр <see cref="T:System.Windows.Point" /> можно преобразовать в другой тип.
            </summary>
      <param name="context">
                Описывает контекстную информацию типа.
              </param>
      <param name="destinationType">
                Это требуемый тип <see cref="T:System.Windows.Point" /> вычисляется для преобразования.
              </param>
      <returns>
              <see langword="true" /> Если этот <see cref="T:System.Windows.Point" /> можно преобразовать в <paramref name="destinationType" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              Пытается преобразовать указанный объект в <see cref="T:System.Windows.Point" />.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения, необходимые для преобразования.
              </param>
      <param name="culture">
                Региональные особенности следует учитывать при выполнении преобразования.
              </param>
      <param name="value">
                Преобразуемый объект.
              </param>
      <returns>
              <see cref="T:System.Windows.Point" /> Из преобразования <paramref name="value" />.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  Возникает, если указанный объект равен NULL или является типом, который не может быть преобразован в <see cref="T:System.Windows.Point" />.
                </exception>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              Пытается преобразовать <see cref="T:System.Windows.Point" /> для указанного типа.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения, необходимые для преобразования.
              </param>
      <param name="culture">
                Региональные особенности следует учитывать при выполнении преобразования.
              </param>
      <param name="value">
                Преобразуемый объект <see cref="T:System.Windows.Point" />.
              </param>
      <param name="destinationType">
                Тип для преобразования <see cref="T:System.Windows.Point" /> для.
              </param>
      <returns>
              Объект, созданный из это преобразование <see cref="T:System.Windows.Point" />.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  Генерируется, если <paramref name="value" /> является <see langword="null" /> или не <see cref="T:System.Windows.Point" />, или если <paramref name="destinationType" /> не является одним из допустимых типов для преобразования.
                </exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary>
               Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyMetadata" />.
            </summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary>
               Инициализирует новый экземпляр <see cref="T:System.Windows.PropertyMetadata" /> класса указанное значение по умолчанию для свойства зависимостей, будут применены эти метаданные.
            </summary>
      <param name="defaultValue">
                Значение по умолчанию, чтобы задать для свойства зависимостей, обычно предоставляется как значение определенного типа.
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="defaultValue" /> не может быть присвоено значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; см. примечания.
                </exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary>
               Инициализирует новый экземпляр <see cref="T:System.Windows.PropertyMetadata" /> класса указанное значение по умолчанию и <see cref="T:System.Windows.PropertyChangedCallback" /> Справочник по реализации.
            </summary>
      <param name="defaultValue">
                Значение по умолчанию свойства зависимостей, обычно как значение определенного типа.
              </param>
      <param name="propertyChangedCallback">
                Ссылка на реализацию обработчика, который должен вызываться при каждом изменении значения свойства в системе свойств.
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="defaultValue" /> не может быть присвоено значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; см. примечания.
                </exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.PropertyMetadata" /> класса с указанным значением по умолчанию и обратные вызовы.
            </summary>
      <param name="defaultValue">
                Значение по умолчанию свойства зависимостей, обычно как значение определенного типа.
              </param>
      <param name="propertyChangedCallback">
                Ссылка на реализацию обработчика, который должен вызываться при каждом изменении значения свойства в системе свойств.
              </param>
      <param name="coerceValueCallback">
                Ссылка на реализацию обработчика, который вызывается каждый раз, когда система свойств вызывает <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> для этого свойства.
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="defaultValue" /> не может быть присвоено значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; см. примечания.
                </exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary>
               Инициализирует новый экземпляр <see cref="T:System.Windows.PropertyMetadata" /> с заданным <see cref="T:System.Windows.PropertyChangedCallback" /> Справочник по реализации.
            </summary>
      <param name="propertyChangedCallback">
                Ссылка на реализацию обработчика, который должен вызываться при каждом изменении значения свойства в системе свойств.
              </param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary>
              Совмещает эти метаданные с основными.
            </summary>
      <param name="baseMetadata">
                Основные метаданные для совмещения с значения данного экземпляра.
              </param>
      <param name="dp">
                Свойство зависимостей, к которому применены эти метаданные.
              </param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary>
              Вызывается, когда применены эти метаданные свойства, которое указывает, что метаданные запечатан.
            </summary>
      <param name="dp">
                Свойство зависимостей, к которому был применен метаданных.
              </param>
      <param name="targetType">
                Тип, связанный с этими метаданными, если это метаданные для конкретного типа.
                 Если это метаданные по умолчанию, это значение является пустой ссылкой.
              </param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Rect" /> с указанным координатам x, координата y, ширину и высоту структуры.
            </summary>
      <param name="x">
                Координата по оси X верхнего левого угла прямоугольника.
              </param>
      <param name="y">
                Координата по оси Y верхнего левого угла прямоугольника.
              </param>
      <param name="width">
                Ширина прямоугольника.
              </param>
      <param name="height">
                Высота прямоугольника.
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="width" /> имеет отрицательное значение.
                
                  -или-
                
                  <paramref name="height" /> имеет отрицательное значение.
                </exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Rect" /> структуру, которая является достаточно велик, чтобы вместить двумя заданными точками.
            </summary>
      <param name="point1">
                Первая точка, которую должен включать новый прямоугольник.
              </param>
      <param name="point2">
                Вторая точка, которую должен включать новый прямоугольник.
              </param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Rect" /> Структура, которая имеет расположение указанного верхнего левого угла и заданными шириной и высотой.
            </summary>
      <param name="location">
                Точка, которая определяет расположение верхнего левого угла прямоугольника.
              </param>
      <param name="size">
                A <see cref="T:System.Windows.Size" /> Структура, которая задает ширину и высоту прямоугольника.
              </param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Rect" /> структуру, которая является достаточно велик, чтобы вместить указанную точку и сумму указанной точки и заданный вектор.
            </summary>
      <param name="point">
                Должен содержать первой точки прямоугольника.
              </param>
      <param name="vector">
                Величина смещения указанной точки.
                 Полученный прямоугольник будет достаточно большим, чтобы включать обе точки.
              </param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Rect" /> Структура, которая имеет указанный размер и координаты (0,0).
            </summary>
      <param name="size">
                A <see cref="T:System.Windows.Size" /> Структура, которая задает ширину и высоту прямоугольника.
              </param>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary>
              Указывает, включает ли прямоугольник указанным координатам x и y.
            </summary>
      <param name="x">
                Координата по оси x проверяемой точки.
              </param>
      <param name="y">
                Координата по оси y проверяемой точки.
              </param>
      <returns>
              <see langword="true" /> Если (<paramref name="x" />, <paramref name="y" />) является прямоугольником, в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary>
              Указывает, включает ли прямоугольник указанную точку.
            </summary>
      <param name="point">
                Точка для проверки.
              </param>
      <returns>
              <see langword="true" /> Если прямоугольник содержит указанную точку; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary>
              Указывает, включает ли прямоугольник указанный прямоугольник.
            </summary>
      <param name="rect">
                Прямоугольник для проверки.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="rect" /> полностью содержится прямоугольником; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary>
              Указывает, равен ли указанный объект текущему прямоугольнику.
            </summary>
      <param name="o">
                Объект, сравниваемый с текущим прямоугольником.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="o" /> является <see cref="T:System.Windows.Rect" /> и имеет те же <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" /> значения в текущем прямоугольнике; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary>
              Указывает, равен ли указанный прямоугольник с текущим прямоугольником.
            </summary>
      <param name="value">
                Прямоугольник для сравнения с текущим прямоугольником.
              </param>
      <returns>
              <see langword="true" /> Если указанный прямоугольник имеет те же <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" /> значения в текущем прямоугольнике; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary>
              Указывает, равны ли указанные прямоугольники.
            </summary>
      <param name="rect1">
                Первый прямоугольник для сравнения.
              </param>
      <param name="rect2">
                Второй прямоугольник для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если прямоугольников с одинаковым <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" /> значения; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary>
              Создает хэш-код для прямоугольника.
            </summary>
      <returns>
              Хэш-код для текущего <see cref="T:System.Windows.Rect" /> структуры.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary>
              Увеличивает или уменьшает прямоугольник, используя указанные значения ширины и высоты, во всех направлениях.
            </summary>
      <param name="width">
                Степень увеличения или уменьшения левой и правой стороны прямоугольника.
              </param>
      <param name="height">
                Степень увеличения или уменьшения верхней и нижней стороны прямоугольника.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Этот метод вызывается на <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary>
              Создает прямоугольник, который получается в результате увеличения или уменьшения указанного прямоугольника заданные ширину и высоту значения во всех направлениях.
            </summary>
      <param name="rect">
                <see cref="T:System.Windows.Rect" /> Структуры для изменения.
              </param>
      <param name="width">
                Степень увеличения или уменьшения левой и правой стороны прямоугольника.
              </param>
      <param name="height">
                Степень увеличения или уменьшения верхней и нижней стороны прямоугольника.
              </param>
      <returns>
              Полученный прямоугольник.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="rect" /> — <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary>
              Возвращает прямоугольник, который получается в результате увеличения указанного прямоугольника по заданному <see cref="T:System.Windows.Size" />, во всех направлениях.
            </summary>
      <param name="rect">
                <see cref="T:System.Windows.Rect" /> Структуры для изменения.
              </param>
      <param name="size">
                Указывает степень расширения прямоугольника.
                <see cref="T:System.Windows.Size" /> Структуры <see cref="P:System.Windows.Size.Width" /> свойство указывает степень увеличения в прямоугольник <see cref="P:System.Windows.Rect.Left" /> и <see cref="P:System.Windows.Rect.Right" /> Свойства.
                <see cref="T:System.Windows.Size" /> Структуры <see cref="P:System.Windows.Size.Height" /> свойство указывает степень увеличения в прямоугольник <see cref="P:System.Windows.Rect.Top" /> и <see cref="P:System.Windows.Rect.Bottom" /> Свойства.
              </param>
      <returns>
              Полученный прямоугольник.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="rect" /> — <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary>
              Расширяет прямоугольник, используя указанный <see cref="T:System.Windows.Size" />, во всех направлениях.
            </summary>
      <param name="size">
                Указывает степень расширения прямоугольника.
                <see cref="T:System.Windows.Size" /> Структуры <see cref="P:System.Windows.Size.Width" /> свойство указывает степень увеличения в прямоугольник <see cref="P:System.Windows.Rect.Left" /> и <see cref="P:System.Windows.Rect.Right" /> Свойства.
                <see cref="T:System.Windows.Size" /> Структуры <see cref="P:System.Windows.Size.Height" /> свойство указывает степень увеличения в прямоугольник <see cref="P:System.Windows.Rect.Top" /> и <see cref="P:System.Windows.Rect.Bottom" /> Свойства.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Этот метод вызывается на <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary>
              Находит пересечение текущего прямоугольника и указанного прямоугольника и сохраняет результат в текущем прямоугольнике.
            </summary>
      <param name="rect">
                Прямоугольник для пересечения с текущим прямоугольником.
              </param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary>
              Возвращает пересечение указанных прямоугольников.
            </summary>
      <param name="rect1">
                Первый прямоугольник для сравнения.
              </param>
      <param name="rect2">
                Второй прямоугольник для сравнения.
              </param>
      <returns>
              Пересечение двух прямоугольников или <see cref="P:System.Windows.Rect.Empty" /> Если пересечение отсутствует.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary>
              Показывает, пересекается ли указанный прямоугольник с текущим прямоугольником.
            </summary>
      <param name="rect">
                Прямоугольник для проверки.
              </param>
      <returns>
              <see langword="true" /> Если указанный прямоугольник пересекается с текущим прямоугольником. в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary>
              Перемещение прямоугольника на заданные значения горизонтальной и вертикальной.
            </summary>
      <param name="offsetX">
                Сумма смещения прямоугольника по горизонтали.
              </param>
      <param name="offsetY">
                Сумма смещения прямоугольника по вертикали.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Этот метод вызывается на <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary>
              Возвращает прямоугольник, со смещением от указанного прямоугольника с помощью указанной суммы горизонтальной и вертикальной.
            </summary>
      <param name="rect">
                Необходимо переместить прямоугольник.
              </param>
      <param name="offsetX">
                Горизонтальное смещение нового прямоугольника.
              </param>
      <param name="offsetY">
                Вертикальное смещение нового прямоугольника.
              </param>
      <returns>
              Полученный прямоугольник.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Свойство <paramref name="rect" /> имеет значение <see cref="P:System.Windows.Rect.Empty" />.
                </exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary>
              Возвращает прямоугольник, смещения указанного прямоугольника, используя заданный вектор.
            </summary>
      <param name="rect">
                Исходный прямоугольник.
              </param>
      <param name="offsetVector">
                Вектор, который указывает горизонтальное и вертикальное смещение нового прямоугольника.
              </param>
      <returns>
              Полученный прямоугольник.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Свойство <paramref name="rect" /> имеет значение <see cref="P:System.Windows.Rect.Empty" />.
                </exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary>
              Перемещает прямоугольник на заданный вектор.
            </summary>
      <param name="offsetVector">
                Вектор, который показывает суммы горизонтального и вертикального смещения прямоугольника.
              </param>
      <exception cref="T:System.InvalidOperationException">
                  Этот метод вызывается на <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary>
              Проверяет точное равенство двух прямоугольников.
            </summary>
      <param name="rect1">
                Первый прямоугольник для сравнения.
              </param>
      <param name="rect2">
                Второй прямоугольник для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если прямоугольников с одинаковым <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" /> значения; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary>
              Проверяет неравенство двух прямоугольников.
            </summary>
      <param name="rect1">
                Первый прямоугольник для сравнения.
              </param>
      <param name="rect2">
                Второй прямоугольник для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если же нет прямоугольников <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" /> значения; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary>
              Создает новый прямоугольник из заданного строкового представления.
            </summary>
      <param name="source">
                Строковое представление в прямоугольной области, в форме «x, y, ширина, высота».
              </param>
      <returns>
              Полученный прямоугольник.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary>
              Умножает размер текущего прямоугольника указанного x и y значения.
            </summary>
      <param name="scaleX">
                Коэффициент масштабирования по оси x.
              </param>
      <param name="scaleY">
                Коэффициент масштабирования по оси y.
              </param>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>
              Форматирует значение текущего экземпляра, используя указанный формат.
            </summary>
      <param name="format">
                Используемый формат.
              
                -или- 
              
                Пустая (null) ссылка (<see langword="Nothing" /> в Visual Basic) для использования формата по умолчанию, заданного для типа реализации <see cref="T:System.IFormattable" />.
              </param>
      <param name="provider">
                Поставщик для использования формата значения.
              
                -или- 
              
                Пустая (null) ссылка (<see langword="Nothing" /> в Visual Basic) для получения сведений о числовом формате из параметра текущего языка операционной системы.
              </param>
      <returns>
              Строковое представление прямоугольника.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary>
              Возвращает строковое представление прямоугольника.
            </summary>
      <returns>
              Строковое представление текущего прямоугольника.
               Строка имеет следующий вид: «<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />».
            </returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary>
              Возвращает строковое представление прямоугольника с помощью указанного поставщика формата.
            </summary>
      <param name="provider">
                Языком и региональными параметрами информацию о форматировании.
              </param>
      <returns>
              Строковое представление текущего прямоугольника, которое определяется указанным поставщиком формата.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary>
              Преобразовывает прямоугольник с использованием заданной матрицы.
            </summary>
      <param name="matrix">
                Матрица, которая определяет применяемое преобразование.
              </param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary>
              Возвращает прямоугольник, который получается в результате применения заданной матрицы в заданном прямоугольнике.
            </summary>
      <param name="rect">
                Прямоугольник, который является основой для преобразования.
              </param>
      <param name="matrix">
                Матрица, которая определяет применяемое преобразование.
              </param>
      <returns>
              Прямоугольник, который получается из операции.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary>
              Увеличивает текущий прямоугольник достаточно точно содержит заданную точку.
            </summary>
      <param name="point">
                Для включения точка.
              </param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary>
              Увеличивает текущий прямоугольник ровно настолько, чтобы включить указанный прямоугольник.
            </summary>
      <param name="rect">
                Прямоугольник для включения.
              </param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary>
              Создает прямоугольник, который достаточно велик, чтобы включить указанный прямоугольник и указанную точку.
            </summary>
      <param name="rect">
                Прямоугольник для включения.
              </param>
      <param name="point">
                Для включения точка.
              </param>
      <returns>
              Прямоугольник, который достаточно велик, чтобы вместить указанный прямоугольник и указанную точку.
            </returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary>
              Создает прямоугольник, который достаточно велик, чтобы вместить двух указанных прямоугольников.
            </summary>
      <param name="rect1">
                Первый прямоугольник для включения.
              </param>
      <param name="rect2">
                Чтобы включить второй прямоугольник.
              </param>
      <returns>
              Полученный прямоугольник.
            </returns>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.RectConverter" />.
            </summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, можно ли преобразовать объект из заданного типа в экземпляр <see cref="T:System.Windows.Rect" />.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения, необходимые для преобразования.
              </param>
      <param name="sourceType">
                Тип источника, которое вычисляется для преобразования.
              </param>
      <returns>
              <see langword="true" /> Если тип можно преобразовать <see cref="T:System.Windows.Rect" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, является ли <see cref="T:System.Windows.Rect" /> можно преобразовать в указанный тип.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения, необходимые для преобразования.
              </param>
      <param name="destinationType">
                Это требуемый тип <see cref="T:System.Windows.Rect" /> вычисляется для преобразования.
              </param>
      <returns>
              <see langword="true" /> Если <see cref="T:System.Windows.Rect" /> можно преобразовать в <paramref name="destinationType" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              Пытается преобразовать указанный объект в <see cref="T:System.Windows.Rect" />.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения, необходимые для преобразования.
              </param>
      <param name="culture">
                Региональные особенности, учитываемые при преобразовании.
              </param>
      <param name="value">
                Преобразуемый объект.
              </param>
      <returns>
              <see cref="T:System.Windows.Rect" /> Из преобразования <paramref name="value" />.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  Возникает, если указанный объект равен NULL или является типом, который не может быть преобразован в <see cref="T:System.Windows.Rect" />.
                </exception>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
               Пытается преобразовать <see cref="T:System.Windows.Rect" /> для указанного типа.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения, необходимые для преобразования.
              </param>
      <param name="culture">
                Региональные особенности, учитываемые при выполнении преобразования.
              </param>
      <param name="value">
                Преобразуемый объект <see cref="T:System.Windows.Rect" />.
              </param>
      <param name="destinationType">
                Тип для преобразования <see cref="T:System.Windows.Rect" /> для.
              </param>
      <returns>
              Объект, созданный из это преобразование <see cref="T:System.Windows.Rect" />.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  Свойство <paramref name="value" /> имеет значение <see langword="null" />.
                
                  -или- 
                
                  <paramref name="value" /> не является объектом <see cref="T:System.Windows.Rect" />.
                
                  -или- 
                
                  <paramref name="destinationType" /> Не является одним из допустимых типов для преобразования.
                </exception>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Size" /> структуры и присваивает его первоначальный <paramref name="width" /> и <paramref name="height" />.
            </summary>
      <param name="width">
                Начальная ширина экземпляра <see cref="T:System.Windows.Size" />.
              </param>
      <param name="height">
                Начальная высота экземпляра <see cref="T:System.Windows.Size" />.
              </param>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary>
              Сравнивает объект с экземпляром <see cref="T:System.Windows.Size" /> на равенство.
            </summary>
      <param name="o">
                Сравниваемый шаблон <see cref="T:System.Object" />.
              </param>
      <returns>
              <see langword="true" /> Если размеры равны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary>
              Сравнивает значение экземпляра <see cref="T:System.Windows.Size" /> на равенство.
            </summary>
      <param name="value">
                Размер, который требуется сравнить с текущим экземпляром <see cref="T:System.Windows.Size" />.
              </param>
      <returns>
              Значение <see langword="true" />, если экземпляры <see cref="T:System.Windows.Size" /> равны; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary>
              Сравнивает два экземпляра <see cref="T:System.Windows.Size" /> на равенство.
            </summary>
      <param name="size1">
                Первый экземпляр <see cref="T:System.Windows.Size" /> для сравнения.
              </param>
      <param name="size2">
                Второй экземпляр <see cref="T:System.Windows.Size" /> для сравнения.
              </param>
      <returns>
              Значение <see langword="true" />, если экземпляры <see cref="T:System.Windows.Size" /> равны; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary>
              Получает хэш-код для этого экземпляра <see cref="T:System.Windows.Size" />.
            </summary>
      <returns>
              Хэш-код этого экземпляра <see cref="T:System.Windows.Size" />.
            </returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary>
              Сравнивает два экземпляра <see cref="T:System.Windows.Size" /> на равенство.
            </summary>
      <param name="size1">
                Первый экземпляр <see cref="T:System.Windows.Size" /> для сравнения.
              </param>
      <param name="size2">
                Второй экземпляр <see cref="T:System.Windows.Size" /> для сравнения.
              </param>
      <returns>
              значение true, если два экземпляра <see cref="T:System.Windows.Size" /> равны; в противном случае <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary>
              Явным образом преобразует экземпляр <see cref="T:System.Windows.Size" /> к экземпляру <see cref="T:System.Windows.Point" />.
            </summary>
      <param name="size">
                <see cref="T:System.Windows.Size" /> Преобразуемое значение.
              </param>
      <returns>
              Значение <see cref="T:System.Windows.Point" /> равно значение данного экземпляра <see cref="T:System.Windows.Size" />.
            </returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary>
              Явным образом преобразует экземпляр <see cref="T:System.Windows.Size" /> к экземпляру <see cref="T:System.Windows.Vector" />.
            </summary>
      <param name="size">
                <see cref="T:System.Windows.Size" /> Преобразуемое значение.
              </param>
      <returns>
              Значение <see cref="T:System.Windows.Vector" /> равно значение данного экземпляра <see cref="T:System.Windows.Size" />.
            </returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary>
              Сравнивает два экземпляра <see cref="T:System.Windows.Size" /> на неравенство.
            </summary>
      <param name="size1">
                Первый экземпляр <see cref="T:System.Windows.Size" /> для сравнения.
              </param>
      <param name="size2">
                Второй экземпляр <see cref="T:System.Windows.Size" /> для сравнения.
              </param>
      <returns>
              <see langword="true" /> Если экземпляры <see cref="T:System.Windows.Size" /> не равны; в противном случае <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary>
              Возвращает экземпляр <see cref="T:System.Windows.Size" /> из преобразованного <see cref="T:System.String" />.
            </summary>
      <param name="source">
                A <see cref="T:System.String" /> значение для синтаксического анализа для <see cref="T:System.Windows.Size" /> значение.
              </param>
      <returns>
              Экземпляр <see cref="T:System.Windows.Size" />.
            </returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>
              Данный тип или член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.
            </summary>
      <param name="format">
                 Используемый формат.
              </param>
      <param name="provider">
                 Поставщик для использования формата значения.
              </param>
      <returns>
               Значение текущего экземпляра в указанном формате.
            </returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary>
              Возвращает <see cref="T:System.String" /> представляющий это <see cref="T:System.Windows.Size" /> объекта.
            </summary>
      <returns>
              Объект <see cref="T:System.String" /> ширина и высота.
            </returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary>
              Возвращает <see cref="T:System.String" /> представляющий этот экземпляр <see cref="T:System.Windows.Size" />.
            </summary>
      <param name="provider">
                Объект, который предоставляет способ управления форматированием.
              </param>
      <returns>
              Объект <see cref="T:System.String" /> представляющий это <see cref="T:System.Windows.Size" /> объекта.
            </returns>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.SizeConverter" />.
            </summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, можно ли преобразовать класс из заданного типа в экземпляр <see cref="T:System.Windows.Size" />.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения о компоненте.
              </param>
      <param name="sourceType">
                Определяет тип данных, чтобы проверить возможность преобразования.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="sourceType" /> можно преобразовать в экземпляр <see cref="T:System.Windows.Size" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, будет ли экземпляр <see cref="T:System.Windows.Size" /> можно преобразовать в другой тип.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения о компоненте.
              </param>
      <param name="destinationType">
                Определяет тип данных, чтобы проверить возможность преобразования.
              </param>
      <returns>
              <see langword="true" /> Если этот экземпляр <see cref="T:System.Windows.Size" /> можно преобразовать в <paramref name="destinationType" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              Пытается преобразовать указанный объект в экземпляр <see cref="T:System.Windows.Size" />.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения о компоненте.
              </param>
      <param name="culture">
                Сведения о культуре, следует учитывать при преобразовании.
              </param>
      <param name="value">
                Исходный объект, который преобразуется.
              </param>
      <returns>
              Экземпляр <see cref="T:System.Windows.Size" /> именно из преобразованный <paramref name="source" />.
            </returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              Пытается преобразовать экземпляр <see cref="T:System.Windows.Size" /> к указанному типу.
            </summary>
      <param name="context">
                Предоставляет контекстные сведения о компоненте.
              </param>
      <param name="culture">
                Сведения о культуре, следует учитывать при преобразовании.
              </param>
      <param name="value">
                Экземпляр <see cref="T:System.Windows.Size" /> для преобразования.
              </param>
      <param name="destinationType">
                Тип, экземпляр объекта <see cref="T:System.Windows.Size" /> преобразуется.
              </param>
      <returns>
              Объект, созданный из преобразованного экземпляр <see cref="T:System.Windows.Size" />.
            </returns>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="value" /> — <see langword="null" /> или не является экземпляром <see cref="T:System.Windows.Size" />, или если <paramref name="destinationType" /> не является одним из типов назначения.
                </exception>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.SplashScreen" /> класса с заданной сборки ресурсов.
            </summary>
      <param name="resourceAssembly">
                Сборка, содержащая внедренный ресурс.
              </param>
      <param name="resourceName">
                Имя внедренного ресурса.
              </param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.SplashScreen" /> класса с указанным ресурсом.
            </summary>
      <param name="resourceName">
                Имя внедренного ресурса.
              </param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary>
              Закрывает экран-заставка.
            </summary>
      <param name="fadeoutDuration">
                Объект <see cref="T:System.TimeSpan" /> указывающее, сколько времени потребуется для экран-заставка после запуска операции закрытия.
              </param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary>
              Отображение экрана-заставки.
            </summary>
      <param name="autoClose">
                <see langword="true" /> Чтобы автоматически закрыть заставку; <see langword="false" /> вручную закрыть экран-заставка.
              </param>
      <exception cref="T:System.IO.IOException">
                  Не удалось найти ресурс, указанный в конструкторе.
                </exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary>
              Отображение экрана-заставки.
            </summary>
      <param name="autoClose">
                <see langword="true" /> Чтобы автоматически закрыть заставку; <see langword="false" /> вручную закрыть экран-заставка.
              </param>
      <param name="topMost">
                <see langword="true" /> Если окна экрана-заставки должен использоваться стиль WS_EX_TOPMOST; в противном случае <see langword="false" />.
              </param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary>
              Выполняет указанный делегат асинхронно с указанными аргументами в потоке, <see cref="T:System.Windows.Threading.Dispatcher" /> был создан.
            </summary>
      <param name="method">
                Делегат метода, принимающий параметры, заданные в <paramref name="args" />, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="args">
                Массив объектов, передаваемых в качестве аргументов указанному методу.
                 Может иметь значение <see langword="null" />.
              </param>
      <returns>
              Объект, который возвращается сразу после <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> вызывается, который может использоваться для взаимодействия с делегатом как ожидающие выполнения события очереди.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>
              Выполняет указанный делегат асинхронно с указанными аргументами, с указанным приоритетом в потоке, <see cref="T:System.Windows.Threading.Dispatcher" /> был создан.
            </summary>
      <param name="method">
                Делегат метода, принимающий параметры, заданные в <paramref name="args" />, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="args">
                Массив объектов, передаваемых в качестве аргументов указанному методу.
                 Может иметь значение <see langword="null" />.
              </param>
      <returns>
              Объект, который возвращается сразу после <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> вызывается, который может использоваться для взаимодействия с делегатом как ожидающие выполнения события очереди.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary>
              Выполняет указанный делегат асинхронно в определенной последовательности в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="method">
                Делегат метода, который не принимает аргументы, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <returns>
              Объект, который возвращается сразу после <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> вызывается, который может использоваться для взаимодействия с делегатом как ожидающие выполнения события очереди.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="method" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="priority" /> не является допустимым <see cref="T:System.Windows.Threading.DispatcherPriority" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary>
              Выполняет указанный делегат асинхронно в определенной последовательности и с заданным аргументом в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="method">
                Делегат метода, который принимает один аргумент, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="arg">
                Объект, передаваемый в качестве аргумента указанному методу.
              </param>
      <returns>
              Объект, который возвращается сразу после <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> вызывается, который может использоваться для взаимодействия с делегатом как ожидающие выполнения события очереди.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="method" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="priority" /> не является допустимым <see cref="T:System.Windows.Threading.DispatcherPriority" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary>
              Выполняет указанный делегат асинхронно в указанный приоритет, используя заданный массив аргументов в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="method">
                Делегат метода, принимающий несколько аргументов, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="arg">
                Объект, передаваемый в качестве аргумента указанному методу.
              </param>
      <param name="args">
                Массив объектов, передаваемых в качестве аргументов указанному методу.
              </param>
      <returns>
              Объект, который возвращается сразу после <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> вызывается, который может использоваться для взаимодействия с делегатом как ожидающие выполнения в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="method" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <see cref="T:System.Windows.Threading.DispatcherPriority" /> не является допустимым приоритет.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary>
              Инициирует завершение работы <see cref="T:System.Windows.Threading.Dispatcher" /> асинхронно.
            </summary>
      <param name="priority">
                Приоритет, с которого начинается остановка диспетчера.
              </param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary>
              Определяет, является ли вызывающий поток потока, связанного с этим <see cref="T:System.Windows.Threading.Dispatcher" />.
            </summary>
      <returns>
              <see langword="true" /> Если вызывающий поток является поток, связанный с этим <see cref="T:System.Windows.Threading.Dispatcher" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary>
              Отключает обработку <see cref="T:System.Windows.Threading.Dispatcher" /> очереди.
            </summary>
      <returns>
              Структура, используемая для повторного включения.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary>
              Запросы на выход для всех фреймов, включая вложенные.
            </summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary>
              Возвращает <see cref="T:System.Windows.Threading.Dispatcher" /> для заданного потока.
            </summary>
      <param name="thread">
                Поток для получения <see cref="T:System.Windows.Threading.Dispatcher" /> из.
              </param>
      <returns>
              Диспетчер для <paramref name="thread" />.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary>
              Выполняет указанную <see cref="T:System.Action" /> синхронно в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary>
              Выполняет указанную <see cref="T:System.Action" /> синхронно с указанным приоритетом в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <param name="priority">
                Приоритет, который определяет, в каком порядке указанный обратный вызов выполняется относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" />.
              </param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>
              Выполняет указанную <see cref="T:System.Action" /> синхронно с указанным приоритетом в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <param name="priority">
                Приоритет, который определяет, в каком порядке указанный обратный вызов выполняется относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" />.
              </param>
      <param name="cancellationToken">
                Объект, указывающий, следует ли отменить действие.
              </param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary>
              Выполняет указанную <see cref="T:System.Action" /> синхронно с указанным приоритетом в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <param name="priority">
                Приоритет, который определяет, в каком порядке указанный обратный вызов выполняется относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" />.
              </param>
      <param name="cancellationToken">
                Объект, указывающий, следует ли отменить действие.
              </param>
      <param name="timeout">
                Минимальное время ожидания для запуска операции.
              </param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary>
              Синхронно выполняет указанный делегат с указанными аргументами в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="method">
                Делегат метода, принимающий параметры, заданные в <paramref name="args" />, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="args">
                Массив объектов, передаваемых в качестве аргументов указанному методу.
                 Может иметь значение <see langword="null" />.
              </param>
      <returns>
              Возвращаемое значение от вызываемого делегата или <see langword="null" /> Если делегат не имеет возвращаемого значения.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary>
              Синхронно выполняет указанный делегат в течение заданного промежутка времени с указанным приоритетом с указанными аргументами в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="method">
                Делегат метода, принимающий параметры, заданные в <paramref name="args" />, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="timeout">
                Максимальное время ожидания завершения операции.
              </param>
      <param name="args">
                Массив объектов, передаваемых в качестве аргументов указанному методу.
                 Может иметь значение <see langword="null" />.
              </param>
      <returns>
              Возвращаемое значение от вызываемого делегата или <see langword="null" /> Если делегат не имеет возвращаемого значения.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>
              Синхронно выполняет указанный делегат в течение заданного промежутка времени с указанным приоритетом с указанными аргументами в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="method">
                Делегат метода, принимающий параметры, заданные в <paramref name="args" />, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="timeout">
                Максимальное время ожидания завершения операции.
              </param>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="args">
                Массив объектов, передаваемых в качестве аргументов указанному методу.
                 Может иметь значение <see langword="null" />.
              </param>
      <returns>
              Возвращаемое значение от вызываемого делегата или <see langword="null" /> Если делегат не имеет возвращаемого значения.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>
              Синхронно выполняет указанный делегат в определенной последовательности с указанными аргументами в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="method">
                Делегат метода, принимающий параметры, заданные в <paramref name="args" />, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="args">
                Массив объектов, передаваемых в качестве аргументов указанному методу.
                 Может иметь значение <see langword="null" />.
              </param>
      <returns>
              Возвращаемое значение от вызываемого делегата или <see langword="null" /> Если делегат не имеет возвращаемого значения.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary>
              Выполняет указанный делегат синхронно с указанным приоритетом в потоке, на котором <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="method">
                Делегат метода, который не принимает аргументы, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <returns>
              Возвращаемое значение от вызываемого делегата или <see langword="null" /> Если делегат не имеет возвращаемого значения.
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="priority" /> равно <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="priority" /> не является допустимым приоритет.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="method" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary>
              Выполняет указанный делегат в определенной последовательности с заданным аргументом синхронно в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="method">
                Делегат метода, который принимает один аргумент, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="arg">
                Объект, передаваемый в качестве аргумента указанному методу.
              </param>
      <returns>
              Возвращаемое значение от вызываемого делегата или <see langword="null" /> Если делегат не имеет возвращаемого значения.
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="priority" /> равно <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="priority" /> не является допустимым приоритет.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="method" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary>
              Синхронно выполняет указанный делегат в определенной последовательности с указанными аргументами в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="method">
                Делегат метода, принимающий несколько аргументов, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="arg">
                Объект, передаваемый в качестве аргумента указанному методу.
              </param>
      <param name="args">
                Массив объектов, передаваемых в качестве аргументов указанному методу.
              </param>
      <returns>
              Возвращаемое значение от вызываемого делегата или <see langword="null" /> Если делегат не имеет возвращаемого значения.
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="priority" /> равно <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="priority" /> не является допустимым приоритет.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="method" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary>
              Выполняет указанный делегат синхронно в указанный приоритет, используя указанное время ожидания в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> был создан.
            </summary>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="timeout">
                Максимальное время ожидания завершения операции.
              </param>
      <param name="method">
                Делегат метода, который не принимает аргументы, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <returns>
              Возвращаемое значение от вызываемого делегата или <see langword="null" /> Если делегат не имеет возвращаемого значения.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary>
              Выполняет указанный делегат в определенной последовательности с заданным аргументом синхронно в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="timeout">
                Максимальное время ожидания завершения операции.
              </param>
      <param name="method">
                Делегат метода, принимающий несколько аргументов, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="arg">
                Объект, передаваемый в качестве аргумента указанному методу.
                 Это может быть значение <see langword="null" />, если аргументы не требуются.
              </param>
      <returns>
              Возвращаемое значение от вызываемого делегата или <see langword="null" /> Если делегат не имеет возвращаемого значения.
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="priority" /> равно <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="priority" /> не является допустимым приоритет.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="method" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary>
              Синхронно выполняет указанный делегат в определенной последовательности с указанными аргументами в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="priority">
                Приоритет относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди событий, указанный метод вызывается.
              </param>
      <param name="timeout">
                Максимальное время ожидания завершения операции.
              </param>
      <param name="method">
                Делегат метода, принимающий несколько аргументов, который помещается в <see cref="T:System.Windows.Threading.Dispatcher" /> очередь событий.
              </param>
      <param name="arg">
                Объект, передаваемый в качестве аргумента указанному методу.
              </param>
      <param name="args">
                Массив объектов, передаваемых в качестве аргументов указанному методу.
              </param>
      <returns>
              Возвращаемое значение от вызываемого делегата или <see langword="null" /> Если делегат не имеет возвращаемого значения.
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="priority" /> равно <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="priority" /> не является допустимым <see cref="T:System.Windows.Threading.DispatcherPriority" />.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="method" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary>
              Выполняет указанную <see cref="T:System.Func`1" /> синхронно в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <typeparam name="TResult">
                Тип возвращаемого значения, указанного делегата.
              </typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary>
              Выполняет указанную <see cref="T:System.Func`1" /> синхронно с указанным приоритетом в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <param name="priority">
                Приоритет, который определяет, в каком порядке указанный обратный вызов выполняется относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" />.
              </param>
      <typeparam name="TResult">
                Тип возвращаемого значения, указанного делегата.
              </typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>
              Выполняет указанную <see cref="T:System.Func`1" /> синхронно с указанным приоритетом в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <param name="priority">
                Приоритет, который определяет, в каком порядке указанный обратный вызов выполняется относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" />.
              </param>
      <param name="cancellationToken">
                Объект, который указывает, следует ли отменить операцию.
              </param>
      <typeparam name="TResult">
                Тип возвращаемого значения, указанного делегата.
              </typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary>
              Выполняет указанную <see cref="T:System.Func`1" /> синхронно с указанным приоритетом в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <param name="priority">
                Приоритет, который определяет, в каком порядке указанный обратный вызов выполняется относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" />.
              </param>
      <param name="cancellationToken">
                Объект, который указывает, следует ли отменить операцию.
              </param>
      <param name="timeout">
                Минимальное время ожидания для запуска операции.
              </param>
      <typeparam name="TResult">
                Тип возвращаемого значения, указанного делегата.
              </typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary>
              Выполняет указанную <see cref="T:System.Action" /> асинхронно в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <returns>
              Объект, который возвращается сразу после <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> вызывается, который может использоваться для взаимодействия с делегатом как ожидающие выполнения события очереди.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary>
              Выполняет указанную <see cref="T:System.Action" /> асинхронно в определенной последовательности в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <param name="priority">
                Приоритет, который определяет, в каком порядке указанный обратный вызов выполняется относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" />.
              </param>
      <returns>
              Объект, который возвращается сразу после <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> вызывается, который может использоваться для взаимодействия с делегатом как ожидающие выполнения события очереди.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>
              Выполняет указанную <see cref="T:System.Action" /> асинхронно в определенной последовательности в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <param name="priority">
                Приоритет, который определяет, в каком порядке указанный обратный вызов выполняется относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" />.
              </param>
      <param name="cancellationToken">
                Объект, указывающий, следует ли отменить действие.
              </param>
      <returns>
              Объект, который возвращается сразу после <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> вызывается, который может использоваться для взаимодействия с делегатом как ожидающие выполнения события очереди.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary>
              Выполняет указанную <see cref="T:System.Func`1" /> асинхронно в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <typeparam name="TResult">
                Тип возвращаемого значения, указанного делегата.
              </typeparam>
      <returns>
              Объект, который возвращается сразу после <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> вызывается, который может использоваться для взаимодействия с делегатом как ожидающие выполнения события очереди.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary>
              Выполняет указанную <see cref="T:System.Func`1" /> асинхронно в определенной последовательности в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <param name="priority">
                Приоритет, который определяет, в каком порядке указанный обратный вызов выполняется относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" />.
              </param>
      <typeparam name="TResult">
                Тип возвращаемого значения, указанного делегата.
              </typeparam>
      <returns>
              Объект, который возвращается сразу после <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> вызывается, который может использоваться для взаимодействия с делегатом как ожидающие выполнения события очереди.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary>
              Выполняет указанную <see cref="T:System.Func`1" /> синхронно с указанным приоритетом в потоке <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <param name="callback">
                Делегат, вызываемый через dispatcher.
              </param>
      <param name="priority">
                Приоритет, который определяет, в каком порядке указанный обратный вызов выполняется относительно других отложенных операций в <see cref="T:System.Windows.Threading.Dispatcher" />.
              </param>
      <param name="cancellationToken">
                Объект, который указывает, следует ли отменить операцию.
              </param>
      <typeparam name="TResult">
                Тип возвращаемого значения, указанного делегата.
              </typeparam>
      <returns>
              Объект, который возвращается сразу после <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> вызывается, который может использоваться для взаимодействия с делегатом как ожидающие выполнения события очереди.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary>
              Запускает процесс завершения работы <see cref="T:System.Windows.Threading.Dispatcher" /> синхронно.
            </summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary>
              Входит в цикл выполнения.
            </summary>
      <param name="frame">
                Фрейм для обработки диспетчером.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="frame" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> равно <see langword="true" />
                
                  -или-
                
                  <paramref name="frame" /> выполняется на другом <see cref="T:System.Windows.Threading.Dispatcher" />.
                
                  -или-
                
                  Диспетчер отключен.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary>
              Помещает в очередь событий фрейма главного выполнения <see cref="T:System.Windows.Threading.Dispatcher" />.
            </summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary>
              Определяет, является ли указанный <see cref="T:System.Windows.Threading.DispatcherPriority" /> является допустимым приоритет.
            </summary>
      <param name="priority">
                Приоритет для проверки.
              </param>
      <param name="parameterName">
                Строка, которая возвращается исключение, возникающее, если приоритет является недопустимым.
              </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="priority" /> не является допустимым <see cref="T:System.Windows.Threading.DispatcherPriority" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary>
              Определяет, имеет ли вызывающий поток доступ к этому <see cref="T:System.Windows.Threading.Dispatcher" />.
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  Вызывающий поток не имеет доступа к этому <see cref="T:System.Windows.Threading.Dispatcher" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary>
              Создает объект типа awaitable, который асинхронно передает управление обратно в текущий dispatcher и предоставляет возможность для обработки других событий диспетчером.
            </summary>
      <returns>
              Объект типа awaitable, который асинхронно передает управление обратно в текущий dispatcher и предоставляет возможность для обработки других событий диспетчером.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary>
              Создает объект типа awaitable, который асинхронно передает управление обратно в текущий dispatcher и предоставляет возможность для обработки других событий диспетчером.
                Работа, возникающее, когда управление возвращается в код, ожидающий результат выполнения этого метода планируется с указанным приоритетом.
            </summary>
      <param name="priority">
                Приоритет, с которой необходимо планировать продолжения.
              </param>
      <returns>
              Объект типа awaitable, который асинхронно передает управление обратно в текущий dispatcher и предоставляет возможность для обработки других событий диспетчером.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherFrame" />.
            </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Threading.DispatcherFrame" /> класса, с помощью заданного закройте флаг запроса.
            </summary>
      <param name="exitWhenRequested">
                Указывает ли данный кадр завершит работу, когда запрашивается завершение работы всех фреймов.
              </param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" />.
            </summary>
      <param name="operation">
                Операция, связанная с событием.
              </param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherObject" />.
            </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary>
              Определяет, имеет ли вызывающий поток доступ к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.
            </summary>
      <returns>
              <see langword="true" /> Если вызывающий поток имеет доступ к этому объекту; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary>
              Обеспечивает, что вызывающий поток имеет доступ к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  вызывающий поток не имеет доступа к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary>
              Отменяет операцию.
            </summary>
      <returns>
              <see langword="true" /> Если операция была прервана; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary>
              Возвращает объект, который получает уведомление при завершении асинхронной операции.
            </summary>
      <returns>
              Объект, который получает уведомление при завершении асинхронной операции.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary>
              Начинает операцию, которая связана с этим <see cref="T:System.Windows.Threading.DispatcherOperation" />.
            </summary>
      <returns>
              Значение <see langword="null" /> во всех случаях.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary>
              Ожидает завершения операции
            </summary>
      <returns>
              Состояние операции.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> равно <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.
                    Это может произойти при ожидании операции, которая уже выполняется в том же потоке.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary>
              Ожидает завершения операции в указанный период времени.
            </summary>
      <param name="timeout">
                Максимальный период времени ожидания.
              </param>
      <returns>
              Состояние операции.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> равно <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.
                    Это может произойти при ожидании операции, которая уже выполняется в том же потоке.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary>
              Возвращает объект, который ждет асинхронную операцию, которая возвращает результат.
            </summary>
      <returns>
              Объект, который ждет асинхронную операцию, которая возвращает результат.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary>
              Начинает операцию, которая связана с этим <see cref="T:System.Windows.Threading.DispatcherOperation" />.
            </summary>
      <returns>
              Результат операции.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary>
              Возвращает объект, который ожидает завершения асинхронной задачи.
            </summary>
      <returns>
              Объект, который ожидает завершения асинхронной задачи.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary>
              Прекращает ожидание завершения асинхронной задачи.
            </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary>
              Задает действие, выполняемое при <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" /> объект прекращает ожидание завершения асинхронной задачи.
            </summary>
      <param name="continuation">
                Действие, выполняемое при завершении операции ожидания.
              </param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary>
              Возобновляет работу диспетчера.
            </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary>
              Определяет ли указанный <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> объект идентичен <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> объекта.
            </summary>
      <param name="obj">
                Объект, который необходимо проверить на равенство.
              </param>
      <returns>
              <see langword="true" /> Если указанный объект равен данном <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> объекта; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary>
              Получает хэш-код для данного экземпляра.
            </summary>
      <returns>
              Подписанный хэш-код в виде 32-разрядного целого числа.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary>
              Определяет равенство двух объектов <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />.
            </summary>
      <param name="left">
                Первый из сравниваемых объектов.
              </param>
      <param name="right">
                Второй из сравниваемых объектов.
              </param>
      <returns>
              <see langword="true" /> Если <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> равны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary>
              Определяет неравенство двух <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> объекты не равны.
            </summary>
      <param name="left">
                Первый из сравниваемых объектов.
              </param>
      <param name="right">
                Второй из сравниваемых объектов.
              </param>
      <returns>
              <see langword="true" /> Если <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> объекты не равны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> класса с использованием текущего <see cref="T:System.Windows.Threading.Dispatcher" />.
            </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> с помощью заданного класса <see cref="T:System.Windows.Threading.Dispatcher" />.
            </summary>
      <param name="dispatcher">
                <see cref="T:System.Windows.Threading.Dispatcher" /> Чтобы связать это <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> с.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="dispatcher" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> с помощью заданного класса <see cref="T:System.Windows.Threading.Dispatcher" />.
            </summary>
      <param name="dispatcher">
                <see cref="T:System.Windows.Threading.Dispatcher" /> Чтобы связать это <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> с.
              </param>
      <param name="priority">
                Приоритет, используемый для отправки и учет методы обратного вызова.
              </param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary>
              Создает копию данного объекта <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.
            </summary>
      <returns>
              Копия данного контекста синхронизации.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary>
              Асинхронно вызывает функцию обратного вызова в контексте синхронизации.
            </summary>
      <param name="d">
                Делегат, который вызывается.
              </param>
      <param name="state">
                Передаваемый делегату объект.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="d" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary>
              Синхронно вызывает функцию обратного вызова в контексте синхронизации.
            </summary>
      <param name="d">
                Делегат, который вызывается.
              </param>
      <param name="state">
                Передаваемый делегату объект.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="d" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary>
              Ожидает получения сигнала всеми элементами заданного массива или любым из его элементов.
            </summary>
      <param name="waitHandles">
                Массив, содержащий собственные дескрипторы операционной системы.
              </param>
      <param name="waitAll">
                Значение <see langword="true" /> для ожидания всех дескрипторов; <see langword="false" /> для ожидания любого дескриптора.
              </param>
      <param name="millisecondsTimeout">
                Время ожидания в миллисекундах или <see cref="F:System.Threading.Timeout.Infinite" /> (-1) для неограниченного времени ожидания.
              </param>
      <returns>
              Индекс объекта, удовлетворившего операцию ожидания, в массиве.
            </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherTimer" />.
            </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Threading.DispatcherTimer" /> класс, который использует указанный интервал времени, приоритету, обработчик событий и <see cref="T:System.Windows.Threading.Dispatcher" />.
            </summary>
      <param name="interval">
                Период времени между тактами.
              </param>
      <param name="priority">
                Приоритет, с которым следует вызывать таймер.
              </param>
      <param name="callback">
                Обработчик событий, который вызывается, когда <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> событием.
              </param>
      <param name="dispatcher">
                С которым связан dispatcher таймера.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="dispatcher" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="callback" /> имеет значение <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  Параметр <paramref name="interval" /> имеет значение меньше 0 или больше <see cref="F:System.Int32.MaxValue" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Threading.DispatcherTimer" /> класс, который обрабатывает события таймера с указанным приоритетом.
            </summary>
      <param name="priority">
                Приоритет, с которым следует вызывать таймер.
              </param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.Threading.DispatcherTimer" /> класс, который выполняется на указанный <see cref="T:System.Windows.Threading.Dispatcher" /> с указанным приоритетом.
            </summary>
      <param name="priority">
                Приоритет, с которым следует вызывать таймер.
              </param>
      <param name="dispatcher">
                С которым связан dispatcher таймера.
              </param>
      <exception cref="T:System.ArgumentNullException">
                  Свойство <paramref name="dispatcher" /> имеет значение <see langword="null" />.
                </exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary>
              Запускает <see cref="T:System.Windows.Threading.DispatcherTimer" />.
            </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary>
              Останавливает <see cref="T:System.Windows.Threading.DispatcherTimer" />.
            </summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary>
              Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Vector" />.
            </summary>
      <param name="x">
                <see cref="P:System.Windows.Vector.X" />-Смещение нового <see cref="T:System.Windows.Vector" />.
              </param>
      <param name="y">
                <see cref="P:System.Windows.Vector.Y" />-Смещение нового <see cref="T:System.Windows.Vector" />.
              </param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary>
              Преобразует указанную точку по заданному вектору и возвращает результат в виде точки.
            </summary>
      <param name="vector">
                Степень перемещения заданной точки.
              </param>
      <param name="point">
                Преобразуемая точка.
              </param>
      <returns>
              Результат перевода <paramref name="point" /> по <paramref name="vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary>
              Складывает два вектора и возвращает результат в виде <see cref="T:System.Windows.Vector" /> структуры.
            </summary>
      <param name="vector1">
                Первый складываемый вектор.
              </param>
      <param name="vector2">
                Второй складываемый вектор.
              </param>
      <returns>
              Сумма <paramref name="vector1" /> и <paramref name="vector2" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary>
              Возвращает угол в градусах, между двух заданных векторов.
            </summary>
      <param name="vector1">
                Первой оцениваемый вектор.
              </param>
      <param name="vector2">
                Второй оцениваемый вектор.
              </param>
      <returns>
              Угол в градусах, между <paramref name="vector1" /> и <paramref name="vector2" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary>
              Вычисляет векторное произведение двух векторов.
            </summary>
      <param name="vector1">
                Первой оцениваемый вектор.
              </param>
      <param name="vector2">
                Второй оцениваемый вектор.
              </param>
      <returns>
              Векторное произведение <paramref name="vector1" /> и <paramref name="vector2" />.
               Следующая формула используется для расчета перекрестное произведение:
            
              (Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary>
              Вычисляет определитель двух векторов.
            </summary>
      <param name="vector1">
                Первой оцениваемый вектор.
              </param>
      <param name="vector2">
                Второй оцениваемый вектор.
              </param>
      <returns>
              Определитель <paramref name="vector1" /> и <paramref name="vector2" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary>
              Делит заданный вектор на заданный скаляр и возвращает результат в виде <see cref="T:System.Windows.Vector" />.
            </summary>
      <param name="vector">
                Структура вектора для деления.
              </param>
      <param name="scalar">
                Величина, на которую <paramref name="vector" /> состоит из.
              </param>
      <returns>
              Результат деления <paramref name="vector" /> на <paramref name="scalar" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary>
              Определяет ли указанный <see cref="T:System.Object" /> — <see cref="T:System.Windows.Vector" /> структуры, и если да, является ли он имеет те же <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> значения как данного вектора.
            </summary>
      <param name="o">
                Сравниваемый вектор.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="o" /> является <see cref="T:System.Windows.Vector" /> и имеет те же <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> значения, что и данный вектор; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary>
               Сравнивает два вектора на равенство.
            </summary>
      <param name="value">
                Вектор, который необходимо сравнить с данным вектором.
              </param>
      <returns>
              <see langword="true" /> Если <paramref name="value" /> имеет те же <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> значения, что и данный вектор; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary>
              Сравнивает два вектора на равенство.
            </summary>
      <param name="vector1">
                Первый сравниваемый вектор.
              </param>
      <param name="vector2">
                Второй сравниваемый вектор.
              </param>
      <returns>
              <see langword="true" /> Если t он <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> компоненты <paramref name="vector1" /> и <paramref name="vector2" /> равны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary>
              Возвращает хэш-код данного вектора.
            </summary>
      <returns>
              Хэш-код данного экземпляра.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary>
               Умножает указанный скаляр на заданный вектор и возвращает полученный в результате <see cref="T:System.Windows.Vector" />.
            </summary>
      <param name="scalar">
                Скаляр-множитель.
              </param>
      <param name="vector">
                Умножаемый вектор.
              </param>
      <returns>
              Результат умножения <paramref name="scalar" /> на <paramref name="vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary>
               Умножает заданный вектор на заданный скаляр и возвращает полученный в результате <see cref="T:System.Windows.Vector" />.
            </summary>
      <param name="vector">
                Умножаемый вектор.
              </param>
      <param name="scalar">
                Скаляр-множитель.
              </param>
      <returns>
              Результат умножения <paramref name="vector" /> на <paramref name="scalar" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary>
              Преобразует координатном пространстве заданного вектора, используя указанный <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="vector">
                Преобразуемая векторная структура.
              </param>
      <param name="matrix">
                Преобразование, применяемое к <paramref name="vector" />.
              </param>
      <returns>
              Результат преобразования <paramref name="vector" /> по <paramref name="matrix" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary>
              Вычисляет скалярное произведение двух указанного вектора и возвращает результат в виде <see cref="T:System.Double" />.
            </summary>
      <param name="vector1">
                Первый вектор для умножения.
              </param>
      <param name="vector2">
                Вторая Структура вектора для умножения.
              </param>
      <returns>
              A <see cref="T:System.Double" /> содержащий скалярное произведение <paramref name="vector1" /> и <paramref name="vector2" />, который рассчитывается по следующей формуле:
            
               (vector1.X * vector2.X) + (vector1.Y * vector2.Y) 
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary>
              Инвертирует данного вектора.
               Вектор имеет ту же величину, но его направление теперь является противоположностью.
            </summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary>
               Нормализует данный вектор.
            </summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary>
               Перемещает точку на заданный вектор и возвращает результат в виде точки.
            </summary>
      <param name="vector">
                Вектор, используемый для преобразования <paramref name="point" />.
              </param>
      <param name="point">
                Преобразуемая точка.
              </param>
      <returns>
              Результат перевода <paramref name="point" /> по <paramref name="vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary>
              Складывает два вектора и возвращает результат в виде вектора.
            </summary>
      <param name="vector1">
                Первый складываемый вектор.
              </param>
      <param name="vector2">
                Второй складываемый вектор.
              </param>
      <returns>
              Сумма <paramref name="vector1" /> и <paramref name="vector2" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary>
               Делит заданный вектор на заданный скаляр и возвращает результирующий вектор.
            </summary>
      <param name="vector">
                Вектор, который необходимо разделить.
              </param>
      <param name="scalar">
                Скаляр, на который <paramref name="vector" /> будут разделены.
              </param>
      <returns>
              Результат деления <paramref name="vector" /> на <paramref name="scalar" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary>
               Сравнивает два вектора на равенство.
            </summary>
      <param name="vector1">
                Первый сравниваемый вектор.
              </param>
      <param name="vector2">
                Второй сравниваемый вектор.
              </param>
      <returns>
              <see langword="true" /> Если <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> компоненты <paramref name="vector1" /> и <paramref name="vector2" /> равны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary>
              Создает <see cref="T:System.Windows.Point" /> с <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> значения данного вектора.
            </summary>
      <param name="vector">
                Преобразуемый вектор.
              </param>
      <returns>
              Точка с <see cref="P:System.Windows.Point.X" />- и <see cref="P:System.Windows.Point.Y" />-равно значения координат <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> значения смещения <paramref name="vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary>
              Создает <see cref="T:System.Windows.Size" /> смещений данного вектора.
            </summary>
      <param name="vector">
                Преобразуемый вектор.
              </param>
      <returns>
              Объект <see cref="T:System.Windows.Size" /> с <see cref="P:System.Windows.Size.Width" /> равно абсолютному значению данного вектора <see cref="P:System.Windows.Vector.X" /> свойство и <see cref="P:System.Windows.Size.Height" /> равно абсолютному значению данного вектора <see cref="P:System.Windows.Vector.Y" /> свойство.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary>
              Сравнивает два вектора на наличие неравенства.
            </summary>
      <param name="vector1">
                Первый сравниваемый вектор.
              </param>
      <param name="vector2">
                Второй сравниваемый вектор.
              </param>
      <returns>
              <see langword="true" /> Если <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> компоненты <paramref name="vector1" /> и <paramref name="vector2" /> различны; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary>
               Умножает указанный скаляр на заданный вектор и возвращает результирующий вектор.
            </summary>
      <param name="scalar">
                Скаляр-множитель.
              </param>
      <param name="vector">
                Умножаемый вектор.
              </param>
      <returns>
              Результат умножения <paramref name="scalar" /> на <paramref name="vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary>
              Умножает заданный вектор на заданный скаляр и возвращает результирующий вектор.
            </summary>
      <param name="vector">
                Умножаемый вектор.
              </param>
      <param name="scalar">
                Скаляр-множитель.
              </param>
      <returns>
              Результат умножения <paramref name="vector" /> на <paramref name="scalar" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary>
               Преобразует пространство координат заданного вектора, используя указанный <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <param name="vector">
                Преобразуемый вектор.
              </param>
      <param name="matrix">
                Преобразование, применяемое к <paramref name="vector" />.
              </param>
      <returns>
              Результат преобразования <paramref name="vector" /> по <paramref name="matrix" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary>
               Вычисляет скалярное произведение двух заданных векторных структур и возвращает результат в виде <see cref="T:System.Double" />.
            </summary>
      <param name="vector1">
                Первый вектор для умножения.
              </param>
      <param name="vector2">
                Второй вектор для умножения.
              </param>
      <returns>
              Возвращает <see cref="T:System.Double" /> содержащий скалярное произведение <paramref name="vector1" /> и <paramref name="vector2" />, который рассчитывается по следующей формуле:
            
              vector1.X * vector2.X + vector1.Y * vector2.Y
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary>
              Вычитает один указанный вектор из другого.
            </summary>
      <param name="vector1">
                Вектор, из которого <paramref name="vector2" /> вычитается.
              </param>
      <param name="vector2">
                Вектор, который вычитается из <paramref name="vector1" />.
              </param>
      <returns>
              Разница между <paramref name="vector1" /> и <paramref name="vector2" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary>
              Преобразует заданный вектор в отрицательный.
            </summary>
      <param name="vector">
                Вектор, преобразуемый в отрицательный.
              </param>
      <returns>
              Вектор с <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> противоположные значения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> значения <paramref name="vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary>
              Преобразует строковое представление вектора в эквивалентную <see cref="T:System.Windows.Vector" /> структуры.
            </summary>
      <param name="source">
                Строковое представление объекта vector.
              </param>
      <returns>
              Эквивалент <see cref="T:System.Windows.Vector" /> структуры.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary>
              Вычитает заданный вектор из другого заданного вектора.
            </summary>
      <param name="vector1">
                Вектор, из которого <paramref name="vector2" /> вычитается.
              </param>
      <param name="vector2">
                Вектор, который вычитается из <paramref name="vector1" />.
              </param>
      <returns>
              Разница между <paramref name="vector1" /> и <paramref name="vector2" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>
              Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.
               Описание этого члена см. в разделе <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.
            </summary>
      <param name="format">
                Строка, задающая формат для использования.
              
                -или- 
              
                <see langword="null" /> для использования стандартного формата, определенного для типа <see cref="T:System.IFormattable" /> реализации.
              </param>
      <param name="provider">
                <see langword="IFormatProvider" /> Для форматирования значения.
              
                -или- 
              
                <see langword="null" /> Для получения сведений о форматировании чисел из текущих локальных настроек операционной системы.
              </param>
      <returns>
              Строка, содержащая значение текущего экземпляра в указанном формате.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary>
              Возвращает строковое представление <see cref="T:System.Windows.Vector" /> структуры.
            </summary>
      <returns>
              Строка, представляющая <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> значения этого <see cref="T:System.Windows.Vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary>
              Возвращает строковое представление <see cref="T:System.Windows.Vector" /> структуру с заданной информацией форматирования.
            </summary>
      <param name="provider">
                Языком и региональными параметрами информацию о форматировании.
              </param>
      <returns>
              Строка, представляющая <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> значения этого <see cref="T:System.Windows.Vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary>
              Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Vector" />.
            </summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Указывает, можно ли преобразовать объект из заданного типа в экземпляр <see cref="T:System.Windows.Vector" />.
            </summary>
      <param name="context">
                Описывает контекстную информацию типа.
              </param>
      <param name="sourceType">
                Источник <see cref="T:System.Type" /> запрашиваемый для поддержки преобразования.
              </param>
      <returns>
              <see langword="true" /> Если объекты заданного типа можно преобразовать в <see cref="T:System.Windows.Vector" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              Определяет, является ли экземпляры <see cref="T:System.Windows.Vector" /> можно преобразовать в указанный тип.
            </summary>
      <param name="context">
                Описывает контекстную информацию типа.
              </param>
      <param name="destinationType">
                Это требуемый тип <see cref="T:System.Windows.Vector" /> вычисляется для преобразования.
              </param>
      <returns>
              <see langword="true" /> Если экземпляры <see cref="T:System.Windows.Vector" /> можно преобразовать в <paramref name="destinationType" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              Преобразует указанный объект в <see cref="T:System.Windows.Vector" />.
            </summary>
      <param name="context">
                Описывает контекстную информацию типа.
              </param>
      <param name="culture">
                Описывает <see cref="T:System.Globalization.CultureInfo" /> преобразуемого типа.
              </param>
      <param name="value">
                Преобразуемый объект.
              </param>
      <returns>
              <see cref="T:System.Windows.Vector" /> Из преобразования <paramref name="value" />.
            </returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
               Преобразует указанный <see cref="T:System.Windows.Vector" /> для указанного типа.
            </summary>
      <param name="context">
                Описывает контекстную информацию типа.
              </param>
      <param name="culture">
                Описывает <see cref="T:System.Globalization.CultureInfo" /> преобразуемого типа.
              </param>
      <param name="value">
                Преобразуемый объект <see cref="T:System.Windows.Vector" />.
              </param>
      <param name="destinationType">
                Тип для преобразования <see cref="T:System.Windows.Vector" /> для.
              </param>
      <returns>
              Объект, созданный из это преобразование <see cref="T:System.Windows.Vector" />.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary>
              Инициализирует значения базового класса при использовании в качестве инициализатора конструктором производного класса.
            </summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary>
              Доставляет управляемое событие к каждому прослушивателю.
            </summary>
      <param name="sender">
                Объект, в котором обрабатывается событие.
              </param>
      <param name="args">
                <see cref="T:System.EventArgs" /> Содержащий данные события для события для доставки.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary>
              Доставляет управляемое событие к каждому прослушивателю из предоставленного списка.
            </summary>
      <param name="sender">
                Объект, в котором обрабатывается событие.
              </param>
      <param name="args">
                Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.
              </param>
      <param name="list">
                Предоставленный <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary>
              Возвращает <see cref="T:System.Windows.WeakEventManager" /> используемую для указанного типа.
            </summary>
      <param name="managerType">
                Тип, который нужно получить <see cref="T:System.Windows.WeakEventManager" /> для.
              </param>
      <returns>
              Сопоставление <see cref="T:System.Windows.WeakEventManager" /> реализации.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
            </summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.WeakEventManager.ListenerList" /> класса с указанной начальной емкостью.
            </summary>
      <param name="capacity">
                Число элементов, которые следует разместить в исходном списке.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary>
              Добавляет <see cref="T:System.Windows.IWeakEventListener" /> объект <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
            </summary>
      <param name="listener">
                Добавляемый элемент прослушиватель для <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary>
              Добавляет обработчик событий для <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
            </summary>
      <param name="handler">
                Чтобы добавить обработчик событий <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary>
              Объявляет список используется.
               Это предотвращает прямые изменения списка во время выполнения итерации элементов списка.
            </summary>
      <returns>
              <see langword="true" /> Если список уже объявлен как используемый; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary>
              Создает модифицируемый клон данного объекта <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
            </summary>
      <returns>
              Изменяемая копия текущего объекта.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary>
              Копирует текущий <see cref="T:System.Windows.WeakEventManager.ListenerList" /> для указанного <see cref="T:System.Windows.WeakEventManager.ListenerList" />
            </summary>
      <param name="newList">
                Объект для копирования.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary>
              Доставляет управляемое событие к каждому прослушивателю в <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
            </summary>
      <param name="sender">
                Объект, создавший событие.
              </param>
      <param name="args">
                Объект, содержащий данные о событии.
              </param>
      <param name="managerType">
                Тип <see cref="T:System.Windows.WeakEventManager" /> который вызывает этот метод.
              </param>
      <returns>
              <see langword="true" /> Если какие-либо в прослушиватели <see cref="T:System.Windows.WeakEventManager.ListenerList" /> ссылаться на объект, который был мусора собранные; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary>
              Разблокирует заблокированный инициировано состояние <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />.
            </summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary>
              Проверяет, является ли предоставленный список используется и если да, задает ссылочный параметр списка на копию этого списка, а не оригинал.
            </summary>
      <param name="list">
                Список для проверки состояния использования и потенциального копирования.
              </param>
      <returns>
              <see langword="true" /> Если указанный список использовался во время вызова и, следовательно, <paramref name="list" /> ссылку на параметр был сброшен на копию.
              <see langword="false" /> Если указанный список не использовался, в этом случае <paramref name="list" /> означает оставление ссылки на параметр.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary>
              Удаляет все записи из списка, в которых базовая цель ссылки является пустой ссылкой.
            </summary>
      <returns>
              Возвращает <see langword="true" /> если какие-либо записи были удаляется, в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary>
              Удаляет первое вхождение элемента прослушиватель из <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
            </summary>
      <param name="listener">
                Удаляемый элемент.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary>
              Удаляет обработчик событий из <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
            </summary>
      <param name="handler">
                Обработчик событий для удаления из <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary>
              Инициализирует новый экземпляр класса <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.
            </summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary>
              Инициализирует новый экземпляр <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> класса с указанной начальной емкостью.
            </summary>
      <param name="capacity">
                Число элементов, которые следует разместить в исходном списке.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary>
              Создает модифицируемый клон данного объекта <see cref="T:System.Windows.WeakEventManager.ListenerList" />, делая глубокие копии значений.
            </summary>
      <returns>
              Изменяемая копия текущего объекта.
               Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клонированного объекта будет содержать значение <see langword="false" />, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта содержало значение <see langword="true" />.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary>
              Доставляет управляемое событие к каждому прослушивателю в <see cref="T:System.Windows.WeakEventManager.ListenerList`1" />.
            </summary>
      <param name="sender">
                Объект, создавший событие.
              </param>
      <param name="e">
                Объект, содержащий данные о событии.
              </param>
      <param name="managerType">
                Тип <see cref="T:System.Windows.WeakEventManager" /> который вызывает этот метод.
              </param>
      <returns>
              <see langword="true" /> Если какие-либо в прослушиватели <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> ссылаться на объект, который был мусора собранные; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary>
              Возвращает новый объект для хранения слушателей события.
            </summary>
      <returns>
              Новый объект для хранения слушателей события.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary>
              Добавляет указанный делегат в качестве обработчика событий для указанного источника.
            </summary>
      <param name="source">
                Исходный объект, который подписан делегата обработчика.
              </param>
      <param name="handler">
                Делегат, который обрабатывает событие, вызываемое <paramref name="source" />.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary>
              Добавляет указанный прослушиватель к указанному источнику для управляемого события.
            </summary>
      <param name="source">
                Источник для присоединения прослушивателей.
              </param>
      <param name="listener">
                Класс прослушивания (который должен реализовывать <see cref="T:System.Windows.IWeakEventListener" />).
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary>
              Удаляет ранее добавленный обработчик из указанного источника.
            </summary>
      <param name="source">
                Удаляет обработчик из источника.
              </param>
      <param name="handler">
                Делегат, удаляемый из <paramref name="source" />.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary>
              Удаляет ранее добавленный прослушиватель из указанного источника.
            </summary>
      <param name="source">
                Источник, из которого удаляются прослушиватели.
              </param>
      <param name="listener">
                Класс прослушивания (который должен реализовывать <see cref="T:System.Windows.IWeakEventListener" />).
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary>
              Удаляет неактивные записи прослушивателя из списка для указанного источника данных.
               Возвращает <see langword="true" /> если некоторые записи были фактически удалены из списка.
            </summary>
      <param name="source">
                Источник для прослушиваемых событий.
              </param>
      <param name="data">
                Данные для проверки.
                 Этот объект должен быть <see cref="T:System.Windows.WeakEventManager.ListenerList" /> реализации.
              </param>
      <param name="purgeAll">
                <see langword="true" /> Чтобы остановить прослушивание <paramref name="source" />, и полностью удалить все записи из <paramref name="data" />.
              </param>
      <returns>
              <see langword="true" /> Если некоторые записи были фактически удалены; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary>
              Удаляет все прослушиватели для заданного источника.
            </summary>
      <param name="source">
                Источник для удаления информации о прослушивателях.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary>
              Запросы, что выполняется очистка ненужных записей из базового списка прослушивателей на поток с низким приоритетом.
            </summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary>
              Задает текущий диспетчер для заданного типа диспетчера.
            </summary>
      <param name="managerType">
                Тип задается новый диспетчер событий.
              </param>
      <param name="manager">
                Новый диспетчер событий.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary>
              При переопределении в производном классе начинает прослушивание управляемого события.
               После <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" /> сначала вызывается метод, диспетчер должен находиться в состоянии вызова <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> или <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" /> обрабатывается каждый раз, когда соответствующее событие из указанного источника.
            </summary>
      <param name="source">
                Источник, прослушивание.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary>
              При переопределении в производном классе прекращает прослушивание указанного источника для управляемого события.
            </summary>
      <param name="source">
                Чтобы остановить прослушивание на источник.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary>
              Добавляет указанный обработчик событий для указанного события.
            </summary>
      <param name="source">
                Исходный объект, который вызывает указанное событие.
              </param>
      <param name="eventName">
                Имя для подписки на событие.
              </param>
      <param name="handler">
                Делегат, обрабатывающий событие.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary>
              Возвращает новый объект для хранения слушателей события.
            </summary>
      <returns>
              Новый объект для хранения слушателей события.
            </returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary>
              Удаляет заданный обработчик событий из указанного события.
            </summary>
      <param name="source">
                Исходный объект, который вызывает указанное событие.
              </param>
      <param name="eventName">
                Имя события для удаления из обработчика.
              </param>
      <param name="handler">
                Делегат, удаляемый
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary>
              Начинает прослушивание событий в указанном объекте.
            </summary>
      <param name="source">
                Объект, событие.
              </param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary>
              Отключает прослушивание событий в указанном объекте.
            </summary>
      <param name="source">
                Объект, событие.
              </param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary>
              Получает или задает значение, указывающее, следует ли отменить событие.
            </summary>
      <returns>
              Значение <see langword="true" />, если событие следует отменить; в противном случае — значение <see langword="false" />.
               Значение по умолчанию — <see langword="false" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Если значение <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> равно <see langword="false" />.
                </exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary>
              Возвращает значение, которое указывает, можно ли отменить событие.
            </summary>
      <returns>
              Значение <see langword="true" />, если событие можно отменить; в противном случае — значение <see langword="false" />.
               Значение по умолчанию — <see langword="true" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary>
              Возвращает коллекцию атрибутов для этого элемента.
            </summary>
      <returns>
              <see cref="T:System.ComponentModel.AttributeCollection" /> Коллекция атрибутов.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary>
              Возвращает имя категории, к которому принадлежит член, как указано в <see cref="T:System.ComponentModel.CategoryAttribute" />.
            </summary>
      <returns>
              Имя категории, к которой принадлежит элемент.
               Если не <see cref="T:System.ComponentModel.CategoryAttribute" />, категории по умолчанию присваивается имя категории <see langword="Misc" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary>
              Возвращает тип компонента, с которым связано это свойство.
            </summary>
      <returns>
              Объект <see cref="T:System.Type" /> представляющий тип компонента, к этому свойству.
               При <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> или <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> вызывается, объект может быть экземпляр данного типа.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary>
              Возвращает преобразователь типов для этого свойства.
            </summary>
      <returns>
              Объект <see cref="T:System.ComponentModel.TypeConverter" /> используемый для преобразования <see cref="T:System.Type" /> этого свойства.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary>
              Возвращает идентификатор для свойства зависимостей.
            </summary>
      <returns>
              Идентификатор для свойства зависимостей.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary>
              Возвращает описание элемента, как указано в <see cref="T:System.ComponentModel.DescriptionAttribute" />.
            </summary>
      <returns>
              Описание элемента.
               Если не <see cref="T:System.ComponentModel.DescriptionAttribute" />, свойство имеет значение по умолчанию — пустая строка («»).
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary>
              Возвращает или задает обратный вызов, который конструкторами для изменения эффективного значения свойства зависимостей перед сохранением его значения в обработчике свойств зависимостей.
            </summary>
      <returns>
              Обратный вызов, который конструкторами для изменения эффективного значения свойства зависимостей перед сохранением его значения в обработчике свойств зависимостей.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary>
              Получает значение, указывающее, этот элемент должен устанавливаться только во время разработки, как указано в <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.
            </summary>
      <returns>
              <see langword="true" /> Если этот элемент должен устанавливаться только во время разработки; <see langword="false" /> Если элемент может быть задан во время выполнения.
               Если не <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, возвращает значение по умолчанию, равное <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary>
              Возвращает имя, которое может отображаться в окне, например в окне "Свойства".
            </summary>
      <returns>
              Имя, отображаемое для свойства.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary>
              Возвращает значение, которое указывает, зарегистрировано ли свойство в качестве присоединенного свойства и используется ли оно путем присоединенного использования.
            </summary>
      <returns>
              Значение <see langword="true" />, если свойство является присоединенным свойством; в противном случае значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary>
              Возвращает значение, указывающее значение <see cref="T:System.ComponentModel.BrowsableAttribute" /> Свойства.
            </summary>
      <returns>
              <see langword="true" /> Если <see cref="T:System.ComponentModel.BrowsableAttribute" /> было указано на свойство, в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary>
              Возвращает значение, указывающее, является ли это свойство должно быть локализовано, как указано в <see cref="T:System.ComponentModel.LocalizableAttribute" />.
            </summary>
      <returns>
              <see langword="true" /> Если элемент отмечен атрибутом <see cref="T:System.ComponentModel.LocalizableAttribute" /> конструктор значение true; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary>
              Возвращает значение, указывающее, является ли это свойство доступно только для чтения.
            </summary>
      <returns>
              <see langword="true" /> Если свойство доступно только для чтения; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary>
              Получает метаданные, связанные с этим свойством зависимостей.
            </summary>
      <returns>
              Метаданные свойства зависимостей
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary>
              Получает представленный тип <see cref="T:System.Type" /> свойства зависимостей.
            </summary>
      <returns>
              Тип <see cref="T:System.Type" /> зависимого свойства.
            </returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary>
              Указывает уведомления об изменении значения этого свойства могут инициироваться вне дескриптора свойства, такие как из компонента, или вносить ли уведомления только получаются из прямых вызовов <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.
            </summary>
      <returns>
              <see langword="true" /> Если уведомления для этого свойства могут инициироваться вне дескриптора свойства, например в самом компоненте.
              <see langword="false" /> Если уведомления только исходят из прямых вызовов <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary>
              Возвращает или задает пользовательское средство сравнения, которое сортирует группы, используя объект, реализующий <see cref="T:System.Collections.IComparer" />.
            </summary>
      <returns>
               Пользовательское средство сравнения, которое сортирует группы, используя объект, реализующий <see cref="T:System.Collections.IComparer" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary>
              Возвращает коллекцию имен, которые используются для инициализации группы набором подгрупп с заданными именами.
            </summary>
      <returns>
              Коллекция имен, которые используются для инициализации группы набором подгрупп с указанными именами.
            </returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary>
              Получает коллекцию критериев сортировки для сортировки групп.
            </summary>
      <returns>
              Коллекция критериев сортировки для сортировки групп.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary>
              Получает значение, показывающее, поддерживает ли это представление фильтрацию с помощью свойства <see cref="P:System.ComponentModel.ICollectionView.Filter" />.
            </summary>
      <returns>
              Значение <see langword="true" />, если это представление поддерживает фильтрацию; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary>
              Получает значение, показывающее, поддерживает ли это представление группирование с помощью свойства <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />.
            </summary>
      <returns>
              Значение <see langword="true" />, если это представление поддерживает группирование; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary>
              Возвращает значение, показывающее, поддерживает ли это представление сортировку с помощью свойства <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />.
            </summary>
      <returns>
              Значение <see langword="true" />, если это представление поддерживает сортировку; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary>
              Получает или задает сведения о языке и региональных параметрах для всех операций представления, которые могут зависеть от языка и региональных параметров, таких как сортировка.
            </summary>
      <returns>
              Язык и региональные параметры для использования при сортировке.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary>
              Возвращает текущий элемент в представлении.
            </summary>
      <returns>
              Текущий элемент представления или значение <see langword="null" />, если текущий элемент отсутствует.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary>
              Получает порядковый номер элемента <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в представлении.
            </summary>
      <returns>
              Порядковый номер элемента <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в представлении.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary>
              Возвращает или задает метод обратного вызова, который используется для определения того, подходит ли элемент для включения в представление.
            </summary>
      <returns>
              Метод, который используется для определения того, подходит ли элемент для включения в представление.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary>
              Возвращает коллекцию объектов <see cref="T:System.ComponentModel.GroupDescription" />, описывающих, как элементы коллекции группируются в представлении.
            </summary>
      <returns>
              Коллекция объектов <see cref="T:System.ComponentModel.GroupDescription" />, описывающих, каким образом в представлении группируются элементы коллекции.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary>
              Возвращает группы верхнего уровня.
            </summary>
      <returns>
              Доступная только для чтения коллекция групп верхнего уровня или значение <see langword="null" />, если такие группы отсутствуют.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary>
              Возвращает значение, показывающее, находится ли элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> за концом коллекции.
            </summary>
      <returns>
              Возвращает значение <see langword="true" />, если элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> представления находится за концом коллекции; в противном случае возвращает значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary>
              Возвращает значение, указывающее, находится ли элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> после начала коллекции.
            </summary>
      <returns>
              Значение <see langword="true" />, если элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> представления находится после начала коллекции; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary>
              Возвращает значение, показывающее, пусто ли полученное представление.
            </summary>
      <returns>
              Значение <see langword="true" />, если полученное представление пусто. В противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary>
              Возвращает коллекцию объектов <see cref="T:System.ComponentModel.SortDescription" />, которые описывают, как элементы в коллекции сортируются в представлении.
            </summary>
      <returns>
              Коллекция объектов <see cref="T:System.ComponentModel.SortDescription" />, описывающих, как элементы коллекции сортируются в представлении.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary>
              Возвращает базовую коллекцию.
            </summary>
      <returns>
              Объект <see cref="T:System.Collections.IEnumerable" />, являющийся базовой коллекцией.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary>
              Получает значение, указывающее, поддерживает ли представление коллекции включение или выключение фильтрации данных в режиме реального времени.
            </summary>
      <returns>
              Значение <see langword="true" />, если представление коллекции поддерживает динамическое включение или выключение фильтрации; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary>
              Возвращает значение, указывающее, поддерживает ли представление коллекции преобразования группирования данных в режиме реального времени или отключить.
            </summary>
      <returns>
              <see langword="true" /> Если представление коллекции поддерживает группирование, динамической Включение и отключение; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary>
              Возвращает значение, указывающее, поддерживает ли представление коллекции Включение сортировки данных в режиме реального времени.
            </summary>
      <returns>
              <see langword="true" /> Если представление коллекции поддерживает включение динамической сортировку и отключение; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary>
              Возвращает или задает значение, указывающее, включена ли фильтрация данных в режиме реального времени.
            </summary>
      <returns>
              <see langword="true" /> Если включена фильтрация данных в режиме реального времени. <see langword="false" /> Если не включена динамическая фильтрация; <see langword="null" /> Если не определить, реализует ли представление коллекции динамической фильтрации.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary>
              Возвращает или задает значение, указывающее, включено ли группирование данных в режиме реального времени.
            </summary>
      <returns>
              <see langword="true" /> Если группирование данных в режиме реального времени включено; <see langword="false" /> Если не включено группирование, динамической; <see langword="null" /> Если не определить, реализует ли представление коллекции live группировки.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary>
              Возвращает или задает значение, указывающее, включена ли сортировка в режиме реального времени.
            </summary>
      <returns>
              <see langword="true" /> Если сортировка данных в режиме реального времени включено; <see langword="false" /> Если не включена динамическая Сортировка; <see langword="null" /> Если не определить, реализует ли представление коллекции быстрой сортировки.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary>
              Возвращает коллекцию строк, которые определяют свойства, которые участвуют в фильтрации данных в режиме реального времени.
            </summary>
      <returns>
              Коллекция строк, которые определяют свойства, которые участвуют в фильтрации данных в режиме реального времени.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary>
              Возвращает коллекцию строк, определяющие свойства, участвующих в группировании данных в режиме реального времени.
            </summary>
      <returns>
              Коллекция строк, укажите свойства, участвующих в группировании данных в режиме реального времени.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary>
              Возвращает коллекцию строк, которые определяют свойства, которые участвуют в сортировка данных в режиме реального времени.
            </summary>
      <returns>
              Коллекция строк, определяющих свойства, которые участвуют в сортировке данных в режиме реального времени.
            </returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary>
              Возвращает значение, указывающее, можно ли добавить новый элемент в коллекцию.
            </summary>
      <returns>
              Значение <see langword="true" />, если в коллекцию можно добавить новый элемент; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary>
              Возвращает значение, указывающее, может ли представление коллекции отклонить отложенные изменения и восстановить исходные значения изменяемого объекта.
            </summary>
      <returns>
              Значение <see langword="true" />, если представление коллекции может отклонить отложенные изменения и восстановить исходные значения изменяемого объекта. В противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary>
              Возвращает значение, указывающее, можно ли удалить элемент из коллекции.
            </summary>
      <returns>
              Значение <see langword="true" />, если элемент можно удалить из коллекции; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary>
              Возвращает элемент, добавляемый во время текущей транзакции добавления.
            </summary>
      <returns>
              Добавляемый элемент, если свойство <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> имеет значение <see langword="true" />. В противном случае — значение <see langword="null" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary>
              Возвращает изменяемый элемент коллекции.
            </summary>
      <returns>
              Элемент в коллекции, если <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> является <see langword="true" />; в противном случае — <see langword="null" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary>
              Возвращает значение, указывающее, выполняется ли в данный момент транзакция добавления.
            </summary>
      <returns>
              Значение <see langword="true" />, если выполняется транзакция добавления. В противном случае значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary>
              Возвращает значение, указывающее, выполняется ли в данный момент транзакция изменения.
            </summary>
      <returns>
              Значение <see langword="true" />, если выполняется транзакция изменения. В противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary>
              Возвращает или задает положение местозаполнителя нового элемента в представлении коллекции.
            </summary>
      <returns>
              Одно из значений перечисления, которое задает положение местозаполнителя нового элемента в представлении коллекции.
            </returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary>
              Возвращает значение, указывающее, можно добавить указанный объект в коллекцию.
            </summary>
      <returns>
              <see langword="true" /> Если указанный объект можно добавить в коллекцию; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary>
              Возвращает коллекцию, содержащую сведения о свойствах, доступных для элементов в коллекции.
            </summary>
      <returns>
              Коллекция, содержащая сведения о свойствах, доступных для элементов в коллекции.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary>
              Получите объект, содержащий дополнительные сведения о свойстве.
            </summary>
      <returns>
              Объект, содержащий дополнительные сведения о свойстве.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary>
              Возвращает имя свойства.
            </summary>
      <returns>
              Имя свойства.
            </returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary>
              Возвращает тип свойства.
            </summary>
      <returns>
              Тип свойства.
            </returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary>
              Получает параметры фильтра это <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут .NET Framework. 
            </summary>
      <returns>
              Параметры фильтра свойств.
            </returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary>
              Получает или задает значение, указывающее порядок, в котором должна выполняться сортировка.
            </summary>
      <returns>
              Значение <see cref="T:System.ComponentModel.ListSortDirection" />, указывающее порядок, в котором должна выполняться сортировка.
            </returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary>
              Получает значение, указывающее, находится ли данный объект в неизменяемом состоянии.
            </summary>
      <returns>
              Значение <see langword="true" />, если объект используется; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary>
              Получает или задает имя свойства, используемого в качестве условия сортировки.
            </summary>
      <returns>
              Значение по умолчанию — null.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary>
              Возвращает источник трассировки анимации.
            </summary>
      <returns>
              Источник трассировки анимации.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary>
              Возвращает источник трассировки привязки данных.
            </summary>
      <returns>
              Источник трассировки привязки данных.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary>
              Получает источник трассировки свойства зависимости.
            </summary>
      <returns>
              Источник трассировки свойства зависимости.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary>
              Возвращает источник трассировки документа.
            </summary>
      <returns>
              Источник трассировки документа.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary>
              Возвращает источник трассировки Freezable.
            </summary>
      <returns>
              Источник трассировки Freezable.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary>
              Источник трассировки узла возвращает hwnd.
            </summary>
      <returns>
              Источник трассировки узла hwnd.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary>
              Возвращает источник трассировки разметки.
            </summary>
      <returns>
              Источник трассировки разметки.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary>
              Возвращает источник трассировки области имен.
            </summary>
      <returns>
              Источник трассировки области имен.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary>
              Возвращает источник трассировки словаря ресурсов.
            </summary>
      <returns>
              Источник трассировки словаря ресурсов.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary>
              Получает источник трассировки перенаправленного события.
            </summary>
      <returns>
              Источник трассировки перенаправленного события.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary>
              Возвращает источник трассировки оболочки.
            </summary>
      <returns>
              Источник трассировки оболочки.
            </returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.TraceLevel">
      <summary>
              Возвращает или задает значение, указывающее уровень детализации для трассировки конкретного объекта.
            </summary>
      <returns>
              A <see cref="T:System.Diagnostics.PresentationTraceLevel" /> значение, указывающее уровень детализации для трассировки конкретного объекта.
            </returns>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>
              Возвращает имя файла, вызвавшего <see cref="T:System.IO.FileFormatException" />.
            </summary>
      <returns>
              Объект <see cref="T:System.Uri" /> представляющая имя файла, вызвавшего исключение.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary>
              Возвращает значение, указывающее, открыт ли файл с доступом для чтения, записи или оба.
            </summary>
      <returns>
              <see cref="T:System.IO.FileAccess" /> Значение, использованное для открытия файла.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary>
              Получает основные свойства пакета (например, заголовок и тема) права управляемого документа.
            </summary>
      <returns>
              <see cref="T:System.IO.Packaging.PackageProperties" /> Для пакета.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary>
              Возвращает права управления сведениями, хранящимися в <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />в частности, <see cref="T:System.Security.RightsManagement.PublishLicense" /> и <see cref="T:System.Security.RightsManagement.UseLicense" />s, хранящихся в составной файл OLE, в которой содержатся управления правами защищенного пакета
            </summary>
      <returns>
              <see cref="T:System.IO.Packaging.RightsManagementInformation" /> Для пакета.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary>
              Возвращает объект, предоставляющий доступ к потокам составного файла вне зашифрованного пакета.
            </summary>
      <returns>
              Объект <see cref="T:System.IO.Packaging.StorageInfo" /> представляет потоками в составном файле OLE, находящихся за пределами зашифрованный пакет.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>
              Получает доступ к файлам, параметр пакета.
            </summary>
      <returns>
              Один из <see cref="T:System.IO.FileAccess" /> значения: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, или <see cref="F:System.IO.FileAccess.ReadWrite" />.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>
              Получает основные свойства пакета.
            </summary>
      <returns>
              Основные свойства пакета.
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  Пакет не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary>
              Получает параметр внедрения сертификата X.509.
            </summary>
      <returns>
              Одно из значений <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />, определяющее параметр для цифровой подписи.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary>
              Возвращает или задает цифровой подписи XML.
            </summary>
      <returns>
              Цифровой подписи XML.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary>
              Возвращает <see cref="T:System.IO.Packaging.PackagePart" /> содержащий сигнатуру.
            </summary>
      <returns>
              Часть пакета, содержащая подпись.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary>
              Получает URI строку, которая идентифицирует тип подписи. </summary>
      <returns>
              A URI строку, которая идентифицирует тип подписи.
               Значение по умолчанию — <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary>
              Возвращает зашифрованное хэш-значение <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.
            </summary>
      <returns>
              Массив байтов, содержащий зашифрованное хэш-значение <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary>
              Возвращает коллекцию всех <see cref="T:System.IO.Packaging.PackagePart" /> объектов подписанные данной подписью.
            </summary>
      <returns>
              Коллекция, содержащая все части пакета, подписанные данной подписью.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary>
              Получает список <see cref="T:System.IO.Packaging.PackageRelationship" /> частей, которые были подписаны с помощью подписи.
            </summary>
      <returns>
              Список <see cref="T:System.IO.Packaging.PackageRelationship" /> частей, которые были подписаны с помощью подписи.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary>
              Получает сертификат X.509 подписывающего лица.
            </summary>
      <returns>
              Цифровой сертификат подписывающего лица или значение <see langword="null" />, если сертификат не сохранен в пакете <see cref="T:System.IO.Packaging.Package" />.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary>
              Возвращает дату и время создания подписи.
            </summary>
      <returns>
              Дата и время создания подписи.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary>
              Возвращает формат даты и времени, возвращаемый <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> свойство.
            </summary>
      <returns>
              Формат даты и времени, возвращаемый <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> свойство.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> была удалена.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary>
              Возвращает или задает параметр внедрения сертификата X.509, который используется методом <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> для цифровой подписи частей пакета.
            </summary>
      <returns>
              Одно из значений <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary>
              Получает URI строку, которая идентифицирует алгоритм хэширования по умолчанию, используемый для создания и проверки подписи.
            </summary>
      <returns>
              A URI строку, которая идентифицирует алгоритм хэширования по умолчанию, используемый для создания и проверки подписи.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary>
              Возвращает или задает URI идентификатор <see cref="T:System.Security.Cryptography.HashAlgorithm" /> экземпляр, используемый для создания и проверки сигнатур.
            </summary>
      <returns>
              <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> URI Идентификатор <see cref="T:System.Security.Cryptography.HashAlgorithm" /> экземпляр, используемый для создания и проверки сигнатур. 
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  В строке URI для установки является <see langword="null" />.
                </exception>
      <exception cref="T:System.ArgumentException">
                  Строка для URI значение является пустым.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary>
              Возвращает значение, указывающее, содержит ли пакет всех подписей.
            </summary>
      <returns>
              <see langword="true" /> Если пакет содержит подписи; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary>
              Возвращает или задает дескриптор родительского окна для отображения диалогового окна выбора сертификата.
            </summary>
      <returns>
              Дескриптор родительского окна для отображения диалогового окна выбора сертификата.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary>
              Возвращает универсальный идентификатор ресурса (URI) части источника подписи.
            </summary>
      <returns>
              
                URI Части источника подписи.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary>
              Возвращает тип связи источника подписи по умолчанию.
            </summary>
      <returns>
              Тип связи источника подписи по умолчанию.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary>
              Возвращает коллекцию всех подписей, содержащихся в пакете.
            </summary>
      <returns>
              Коллекция всех <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> объектов.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary>
              Возвращает или задает формат даты и времени, используемый для создания подписи <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.
            </summary>
      <returns>
              Формат даты и времени, используемый для создания подписи <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary>
              Возвращает словарь, содержащий все определенные <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> и связанный с ним XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> идентификатор. 
            </summary>
      <returns>
              Словарь, содержащий все определенные <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> и связанный с ним XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> идентификатор. 
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>
              Получает параметр сжатия потока содержимого части.
            </summary>
      <returns>
              Параметр сжатия потока содержимого части.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>
              Возвращает MIME тип содержимого потока.
            </summary>
      <returns>
              
                MIME Тип потока данных содержимого части.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                
                  -или-
                
                  Строка, возвращаемая производного класса <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> метод пуст.
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>
              Возвращает родительский объект <see cref="T:System.IO.Packaging.Package" /> части.
            </summary>
      <returns>
              Родительский пакет части.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>
              Возвращает URI части.
            </summary>
      <returns>
              
                URI Части относительно корневого каталога пакета.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Элемент был удален.
                
                  -или-
                
                  <see cref="P:System.IO.Packaging.PackagePart.Package" /> Не открыт (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" /> был вызван).
                </exception>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>
              При переопределении в производном классе Возвращает или задает категорию <see cref="T:System.IO.Packaging.Package" />.
            </summary>
      <returns>
              Категория содержимого, которое содержится в <see cref="T:System.IO.Packaging.Package" />.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>
              При переопределении в производном классе Возвращает или задает значение, представляющее состояние <see cref="T:System.IO.Packaging.Package" />.
            </summary>
      <returns>
              Состояние <see cref="T:System.IO.Packaging.Package" /> содержимого.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>
              При переопределении в производном классе Возвращает или задает значение, представляющее тип содержимого, которое содержится в <see cref="T:System.IO.Packaging.Package" />.
            </summary>
      <returns>
              Тип данных, содержащихся в <see cref="T:System.IO.Packaging.Package" />.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>
              При переопределении в производном классе Возвращает или задает дату и время <see cref="T:System.IO.Packaging.Package" /> был создан.
            </summary>
      <returns>
              Дата и время <see cref="T:System.IO.Packaging.Package" /> была изначально создана.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>
              При переопределении в производном классе Возвращает или задает значение, которое идентифицирует лицо или сущность, создавшую объект <see cref="T:System.IO.Packaging.Package" /> и его содержимого.
            </summary>
      <returns>
              Лица или сущности, создавшей <see cref="T:System.IO.Packaging.Package" /> и его содержимого.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>
              При переопределении в производном классе Возвращает или задает описание содержимого в <see cref="T:System.IO.Packaging.Package" />.
            </summary>
      <returns>
              Описание содержимого, содержащихся в <see cref="T:System.IO.Packaging.Package" />.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>
              При переопределении в производном классе Возвращает или задает значение, которое однозначно идентифицирует <see cref="T:System.IO.Packaging.Package" /> и его содержимого.
            </summary>
      <returns>
              Значение, которое однозначно идентифицирует <see cref="T:System.IO.Packaging.Package" /> и его содержимого.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>
              При переопределении в производном классе Возвращает или задает значение, которое определяет разделенный набор ключевых слов для поддержки поиска и индексирования <see cref="T:System.IO.Packaging.Package" /> и его содержимого.
            </summary>
      <returns>
              Разделенный набор ключевых слов для поддержки поиска и индексирования <see cref="T:System.IO.Packaging.Package" /> и содержимого.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>
              При переопределении в производном классе Возвращает или задает значение, определяющее язык <see cref="T:System.IO.Packaging.Package" /> содержимого.
            </summary>
      <returns>
              Значение, определяющее <see cref="T:System.IO.Packaging.Package" /> язык содержимого.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>
              При переопределении в производном классе Возвращает или задает значение, которое идентифицирует пользователя, последним изменившего <see cref="T:System.IO.Packaging.Package" /> содержимого.
            </summary>
      <returns>
              Пользователь, который последним изменил <see cref="T:System.IO.Packaging.Package" /> содержимого.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>
              При переопределении в производном классе Возвращает или задает дату и время <see cref="T:System.IO.Packaging.Package" /> последней печати содержимого.
            </summary>
      <returns>
              Дата и время <see cref="T:System.IO.Packaging.Package" /> последней печати содержимого.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>
              При переопределении в производном классе Возвращает или задает дату и время <see cref="T:System.IO.Packaging.Package" /> дату последнего изменения.
            </summary>
      <returns>
              Дата и время <see cref="T:System.IO.Packaging.Package" /> дату последнего изменения.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>
              При переопределении в производном классе Возвращает или задает номер редакции <see cref="T:System.IO.Packaging.Package" />.
            </summary>
      <returns>
              Номер редакции <see cref="T:System.IO.Packaging.Package" />.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>
              При переопределении в производном классе Возвращает или задает тему <see cref="T:System.IO.Packaging.Package" /> содержимого.
            </summary>
      <returns>
              Что касается <see cref="T:System.IO.Packaging.Package" /> содержимого.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>
              При переопределении в производном классе Возвращает или задает имя, присвоенное <see cref="T:System.IO.Packaging.Package" /> и его содержимого.
            </summary>
      <returns>
              Имя, присвоенное <see cref="T:System.IO.Packaging.Package" /> и его содержимого.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>
              При переопределении в производном классе Возвращает или задает номер версии <see cref="T:System.IO.Packaging.Package" />.
            </summary>
      <returns>
              Номер версии <see cref="T:System.IO.Packaging.Package" />.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>
              Возвращает строку, которая идентифицирует связь.
            </summary>
      <returns>
              Строка, определяющая связь.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>
              Возвращает <see cref="T:System.IO.Packaging.Package" /> содержащий эту связь.
            </summary>
      <returns>
              Пакет, содержащий эту связь.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>
              Возвращает уточненное имя типа связи.
            </summary>
      <returns>
              Имя типа с указанием связи.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>
              Возвращает URI пакета или части — владельца связи.
            </summary>
      <returns>
              
                URI Из <see cref="T:System.IO.Packaging.Package" /> или <see cref="T:System.IO.Packaging.PackagePart" /> которому принадлежит отношение.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>
              Получает значение, указывающее, является ли целевой объект отношения <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> для <see cref="T:System.IO.Packaging.Package" />.
            </summary>
      <returns>
              Значение перечисления, указывающее, ссылается ли <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> на ресурс <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> для <see cref="T:System.IO.Packaging.Package" />.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>
              Получает URI целевого ресурса отношения.
            </summary>
      <returns>
              
                URI целевого ресурса.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>
              Возвращает Выбор критериев, заданных для <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> конструктор.
            </summary>
      <returns>
              На основе критериев выбора <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> из <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> или <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> для указанного <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> конструктор.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>
              Возвращает <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> для указанного <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> конструктор.
            </summary>
      <returns>
              Тип селектора <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> или <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> для указанного <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> конструктор.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>
              Возвращает корневой пакет URI («/») или часть <see cref="P:System.IO.Packaging.PackagePart.Uri" /> для указанного <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> Конструктор владельцем отношения.
            </summary>
      <returns>
              Корневой пакета URI («/») или части <see cref="P:System.IO.Packaging.PackagePart.Uri" /> для указанного <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> Конструктор владельцем отношения.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary>
              Возвращает или задает <see cref="T:System.Security.RightsManagement.CryptoProvider" /> для доступа к пакету права управления поток зашифрованных данных.
            </summary>
      <returns>
              <see cref="T:System.Security.RightsManagement.CryptoProvider" /> Доступа к данным управления правами.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary>
               Получает проверяемую цифровую подпись.
            </summary>
      <returns>
              Цифровая подпись.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary>
               Получает ошибку проверки подписи.
            </summary>
      <returns>
              Ошибка проверки подписи.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary>
              Возвращает имя хранилища.
            </summary>
      <returns>
              Имя данного хранилища.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary>
              Возвращает <see cref="T:System.IO.Packaging.CompressionOption" /> для потока.
            </summary>
      <returns>
              Значение параметра сжатия для потока пакета.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary>
              Возвращает <see cref="T:System.IO.Packaging.EncryptionOption" /> для потока.
            </summary>
      <returns>
              Значение параметра шифрования для потока пакета.
            </returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary>
              Возвращает имя потока.
            </summary>
      <returns>
              Имя данного потока.
            </returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>
              Получает текущее значение уровня разрешений для аудио.
            </summary>
      <returns>
              Уровень разрешений для аудио.
            </returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>
              Получает текущее значение уровня разрешений для изображений.
            </summary>
      <returns>
              Уровень разрешений для изображений.
            </returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>
              Получает текущее значение уровня разрешений для видео.
            </summary>
      <returns>
              Уровень разрешений для мультимедиа.
            </returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>
              Возвращает или задает уровень разрешений для аудио для <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.
            </summary>
      <returns>
              Состояние объекта <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.
            </returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>
              Получает или задает уровень разрешений изображения для <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.
            </summary>
      <returns>
              Состояние объекта <see cref="T:System.Security.Permissions.MediaPermissionImage" />.
            </returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>
              Возвращает или задает уровень разрешений видео для <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.
            </summary>
      <returns>
              Состояние объекта <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.
            </returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>
              Получает или задает текущее значение уровня разрешения веб-браузера.
            </summary>
      <returns>
              Текущее значение уровня разрешения веб-браузера.
            </returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>
              Возвращает или задает текущий уровень разрешения веб-браузера для <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />.
            </summary>
      <returns>
              Состояние текущего уровня разрешения для веб-браузера.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary>
              Возвращает <see cref="T:System.Security.RightsManagement.ContentRight" /> которой предоставлено.
            </summary>
      <returns>
              Право доступа, предоставленных <see cref="P:System.Security.RightsManagement.ContentGrant.User" />, как указано в <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" /> конструктора.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary>
              Возвращает пользователя, который будет предоставлен доступ <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.
            </summary>
      <returns>
              Пользователь, доступ <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> предоставляется, как указано в <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" /> конструктора.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary>
              Возвращает дату и время начала, предоставленный <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> начинается.
            </summary>
      <returns>
              Начало даты и времени, предоставленный <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> начинается, или <see cref="T:System.DateTime" />.<see cref="F:System.DateTime.MinValue" /> Если является ограничение не начала.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary>
              Возвращает дату и время окончания предоставленный <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> истечения срока действия.
            </summary>
      <returns>
              Конец даты и времени, предоставленный <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> истечения срока действия или <see cref="T:System.DateTime" />.<see cref="F:System.DateTime.MaxValue" /> Если нет конца ограничений.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary>
              Возвращает экземпляр «Любой» <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя.
            </summary>
      <returns>
              Экземпляр «Любой» <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary>
              Возвращает <see cref="T:System.Security.RightsManagement.AuthenticationType" /> для указанного <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> конструктор.
            </summary>
      <returns>
              <see cref="T:System.Security.RightsManagement.AuthenticationType" /> Для указанного <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> конструктор.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary>
              Возвращает имя пользователя или группы, указанные для <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> конструктор.
            </summary>
      <returns>
              Имя пользователя или группы, указанные для <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> конструктор.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary>
              Возвращает экземпляр «Владелец» <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя.
            </summary>
      <returns>
              Экземпляр «Владелец» <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary>
              Возвращает размер блока шифра в байтах.
            </summary>
      <returns>
              Размер блока шифра в байтах.
                Размер блока по умолчанию для Стандарт AES (Advanced Encryption Standard) равно 8.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary>
              Получает коллекцию со списком прошедшие проверку и предоставленные пользователю права.
            </summary>
      <returns>
              Набор прав, прошедшие проверку и, предоставляются пользователю.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary>
              Возвращает значение, указывающее, имеет ли пользователь права для расшифровки.
            </summary>
      <returns>
              true Если <see cref="T:System.Security.RightsManagement.UseLicense" /> предоставляет права пользователя для расшифровки; в противном случае — false.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary>
              Возвращает значение, указывающее, имеет ли пользователь права для шифрования.
            </summary>
      <returns>
              true Если <see cref="T:System.Security.RightsManagement.UseLicense" /> предоставляет права пользователя для шифрования; в противном случае — false.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary>
              Возвращает значение, указывающее, является ли <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> и <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> могут принимать размеры длина блока буферов, которые различаются.
            </summary>
      <returns>
              true Если передаваемый буфер <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> может быть различной длины из буфера, переданного в <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; в противном случае — false Если переданные буферы <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> и <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> должен быть точно одинаковую длину.
                Для Стандарт AES (Advanced Encryption Standard) значение по умолчанию — true.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary>
              Получает описание языкового стандарта.
            </summary>
      <returns>
              Описание языкового стандарта.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary>
              Возвращает имя языкового стандарта.
            </summary>
      <returns>
              Имя языкового стандарта.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary>
              Возвращает созданный издателем идентификатор содержимого.
            </summary>
      <returns>
              Созданный издателем идентификатор содержимого.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary>
              Возвращает имя контакта, соответствующее автору или издателю содержимого.
            </summary>
      <returns>
              Имя контакта, соответствующее автору или издателю содержимого.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary>
              Получает контакт URI автору или издателю содержимого.
            </summary>
      <returns>
              Контакт универсальный идентификатор ресурса (URI) автору или издателю содержимого.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary>
              Возвращает URI для получения <see cref="T:System.Security.RightsManagement.UseLicense" />.
            </summary>
      <returns>
              
                URI Для получения <see cref="T:System.Security.RightsManagement.UseLicense" />.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary>
              Возвращает <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> сообщение об ошибке.
            </summary>
      <returns>
              Код ошибки для ошибки.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary>
              Возвращает <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> при <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> был создан.
            </summary>
      <returns>
              Манифест приложения, заданный для <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> метод при <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> создается.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary>
              Возвращает пользователя или группы пользователей, указанное при <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> был создан.
            </summary>
      <returns>
              Пользователь или группа пользователей, для <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> метода при <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> был создан.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary>
              Получает или задает созданный издателем идентификатор содержимого.
            </summary>
      <returns>
              Созданный издателем управляемый правами идентификатор содержимого.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary>
              Возвращает коллекцию пользователей, назначенные права.
            </summary>
      <returns>
              Коллекция назначенный пользователь права, предоставленные данной лицензией.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary>
              Возвращает коллекцию пар имя и описание.
            </summary>
      <returns>
              Коллекция пар имя и описание.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary>
              Возвращает или задает владельца содержимого.
            </summary>
      <returns>
              Пользователь, владеющий опубликованного содержимого.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary>
              Возвращает или задает имя контакта, соответствующее автору или издателю содержимого.
            </summary>
      <returns>
              Имя контакта, соответствующее автору или издателю содержимого.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary>
              Возвращает или задает контакт URI автору или издателю содержимого.
            </summary>
      <returns>
              Контакт универсальный идентификатор ресурса (URI) автору или издателю содержимого.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary>
              Возвращает словарь данных приложения, содержащий пары ключ/значение, переданные из публикующего приложения в приложение, которое их использует.
            </summary>
      <returns>
              Словарь данных приложения, содержащий пары ключ/значение, переданные из публикующего приложения в приложение, которое их использует.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary>
              Возвращает созданный издателем идентификатор содержимого.
            </summary>
      <returns>
              Созданный издателем идентификатор содержимого.
            </returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary>
              Возвращает владельца лицензии.
            </summary>
      <returns>
              Владелец лицензии.
            </returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary>
              Возвращает базовый тип, определяющий область использования присоединенного свойства, в котором применяется Атрибут .NET Framework.
            </summary>
      <returns>
              Запрошенный <see cref="T:System.Type" />.
            </returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary>
              Возвращает уникальный идентификатор для этого <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Атрибут .NET Framework. 
            </summary>
      <returns>
              Объект, который является уникальным идентификатором для <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.
            </returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary>
              Возвращает тип  Атрибут .NET Framework также должны быть применены для класса.
            </summary>
      <returns>
                Атрибут .NET Framework Типа.
            </returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary>
              Возвращает или задает значение, указывающее, является ли сведения о <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> сохраненного <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.
            </summary>
      <returns>
              <see langword="true" /> Если сведения о <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> сохраняется <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary>
              Определяет, каким образом диспетчер реагирует на сбои, возникающие при запросах на обработку.
            </summary>
      <returns>
              Значение, которое определяет, каким образом диспетчер реагирует на сбои.
            </returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary>
              Возвращает или задает значение, указывающее, является ли <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> метод помещает делегаты в очередь dispatcher, или если делегат вызывается напрямую.
            </summary>
      <returns>
              <see langword="true" /> Если <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> метод помещает делегаты в очередь dispatcher или если делегат напрямую вызывается; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary>
              Возвращает или задает значение, указывающее, является ли один <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> используется для нескольких операций диспетчера.
            </summary>
      <returns>
              значение true, если один <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> будет использоваться для нескольких операций dispatcher; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary>
              Возвращает базовый объект данных.
            </summary>
      <returns>
              Значение типа <see cref="T:System.Object" />, представляющее базовый объект данных.
            </returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary>
              Возвращает или задает текущий <see cref="T:System.Windows.Threading.Dispatcher" /> объект ИП поток будет использовать.
            </summary>
      <returns>
              Текущий <see cref="T:System.Windows.Threading.Dispatcher" /> объект ИП поток будет использовать.
               По умолчанию это <see cref="T:System.Windows.Threading.Dispatcher" /> объект, связанный с потоком, на котором был создан этот экземпляр.
            </returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary>
              Получает ошибку в последней операции запроса.
            </summary>
      <returns>
              Значение типа <see cref="T:System.Exception" /> именно ошибки в последней операции запроса или <see langword="null" /> Если ошибок не было.
            </returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary>
              Возвращает или задает значение, указывающее, следует ли заблокирована либо задержана автоматическая загрузка данных.
            </summary>
      <returns>
              <see langword="false" /> Чтобы предотвратить или задержана автоматическая загрузка данных. в противном случае — <see langword="true" />.
               Значение по умолчанию — <see langword="true" />.
            </returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary>
              Возвращает значение, указывающее, существует ли необработанных <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> используется.
            </summary>
      <returns>
              <see langword="true" /> При наличии незавершенных <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> используется; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary>
              Возвращает <see cref="T:System.Windows.DependencyObjectType" /> оболочки CLR типа этого экземпляра. </summary>
      <returns>
              A <see cref="T:System.Windows.DependencyObjectType" /> оболочки CLR типа этого экземпляра.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary>
              Возвращает значение, указывающее ли этот экземпляр в данный момент запечатанным (только для чтения).
            </summary>
      <returns>
              <see langword="true" /> Если этот экземпляр запечатан; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary>
              Возвращает <see cref="T:System.Windows.DependencyObjectType" /> немедленно базового класса текущего <see cref="T:System.Windows.DependencyObjectType" />.
            </summary>
      <returns>
              Тип базового класса.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary>
              Возвращает отсчитываемый от нуля уникальный идентификатор для операций поиска массива постоянного времени.
            </summary>
      <returns>
              Внутренний идентификатор.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary>
              Получает имя представленного среда CLR Тип системы.
            </summary>
      <returns>
              Имя представленного CLR Тип системы.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary>
               Возвращает среда CLR системный тип, представленный этим <see cref="T:System.Windows.DependencyObjectType" />.
            </summary>
      <returns>
              
                CLR Системный тип, представленный этим <see cref="T:System.Windows.DependencyObjectType" />.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary>
              Возвращает метаданные свойства зависимостей по умолчанию.
            </summary>
      <returns>
              По умолчанию метаданные свойства зависимостей.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary>
              Возвращает внутреннее сгенерированное значение, уникальным образом идентифицирует свойство зависимостей.
            </summary>
      <returns>
              Уникальный числовой идентификатор.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary>
              Возвращает имя свойства зависимостей.
            </summary>
      <returns>
              Имя свойства.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary>
              Получает тип объекта, зарегистрировавшего свойство зависимостей в системе свойств или добавившего себя в качестве владельца свойства.
            </summary>
      <returns>
              Тип объекта, зарегистрировавшего свойство или добавившего себя в качестве владельца свойства.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary>
              Возвращает тип, который использует свойство зависимостей для его значения.
            </summary>
      <returns>
              <see cref="T:System.Type" /> Значения свойства.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary>
              Возвращает значение, которое указывает, определен ли свойство зависимостей в этом <see cref="T:System.Windows.DependencyProperty" /> экземпляр — это свойство зависимости только для чтения.
            </summary>
      <returns>
              <see langword="true" /> Если свойство зависимости только для чтения; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary>
              Возвращает обратный вызов для проверки значения для свойства зависимостей.
            </summary>
      <returns>
              Обратный вызов проверки значение для этого свойства зависимости, указанные для <paramref name="validateValueCallback" /> параметр в исходной регистрации свойства зависимостей.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary>
              Возвращает значение свойства после изменения.
            </summary>
      <returns>
              Значение свойства после изменения.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary>
              Возвращает значение свойства перед изменением.
            </summary>
      <returns>
              Значение свойства перед изменением.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary>
              Возвращает идентификатор для свойства зависимостей, где произошло изменение значения.
            </summary>
      <returns>
              Поле идентификатора свойства зависимостей, в котором произошло изменение значения.
            </returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary>
              Возвращает идентификатор свойства зависимостей, связанных с данным идентификатором свойства зависимостей специализированные только для чтения.
            </summary>
      <returns>
              Соответствующий идентификатор свойства зависимостей.
            </returns>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary>
              Возвращает значение, которое указывает, можно ли сделать объект неизменяемым.
            </summary>
      <returns>
              Значение <see langword="true" />, если текущий объект можно сделать неизменяемым или если он уже является неизменяемым; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary>
              Получает значение, указывающее, доступен ли объект для изменения в настоящее время.
            </summary>
      <returns>
              Значение <see langword="true" />, если объект заморожен и не может быть изменен; значение <see langword="false" />, если объект может быть изменен.
            </returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary>
              Получает направление обхода.
            </summary>
      <returns>
              Одно из значений перечисления, направление обхода.
            </returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary>
               Возвращает или задает значение, указывающее, достигнут ли конец дочерние элементы, которые могут иметь фокус на перемещение фокуса.
            </summary>
      <returns>
              <see langword="true" /> Если этот обход был достигнут конец дочерние элементы, которые могут иметь фокус; в противном случае — <see langword="false" />.
               Значение по умолчанию — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary>
              Возвращает пустой прямоугольник специальное значение, которое представляет прямоугольник без расположения или области.
            </summary>
      <returns>
              Пустой прямоугольник без расположения или области.
            </returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary>
              Возвращает значение, указывающее, является ли <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" /> Свойства <see cref="T:System.Windows.Int32Rect" /> больше, чем 0.
            </summary>
      <returns>
              значение true, если <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" /> Свойства <see cref="T:System.Windows.Int32Rect" /> больше 0; в противном случае — <paramref name="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary>
              Возвращает или задает высоту прямоугольника.
            </summary>
      <returns>
              Высота прямоугольника.
               Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary>
              Возвращает значение, указывающее, является ли пустой прямоугольник.
            </summary>
      <returns>
              true если прямоугольник является пустой; в противном случае — false.
               Значение по умолчанию — true.
            </returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary>
              Получает или задает ширину прямоугольника.
            </summary>
      <returns>
              Ширина прямоугольника.
               Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary>
              Получает или задает координату по оси X левого верхнего угла прямоугольника.
            </summary>
      <returns>
              Координата по оси X верхнего левого угла прямоугольника.
               Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary>
              Получает или задает координату по оси Y левого верхнего угла прямоугольника.
            </summary>
      <returns>
              Координата по оси Y верхнего левого угла прямоугольника.
               Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary>
              Получает последнее созданное сообщение.
            </summary>
      <returns>
              Последнее сообщение.
            </returns>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary>
              Получает значение, указывающее, является ли поток модальным.
            </summary>
      <returns>
              Значение <see langword="true" />, если поток является модальным; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary>
              Возвращает или задает ссылку на контейнер компонента <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> интерфейса.
            </summary>
      <returns>
              Ссылку на контейнер <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> интерфейса.
            </returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary>
              Возвращает приемник ввода от клавиатуры, связанный с этим узлом.
            </summary>
      <returns>
              Текущий узел <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> интерфейса.
            </returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary>
              Возвращает или задает дескриптор окна (HWND) окна, Оконная процедура получает сообщение.
            </summary>
      <returns>
              Дескриптор окна (HWND).
            </returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary>
              Возвращает или задает <paramref name="lParam" /> значение, которое указывает Дополнительные сведения о сообщении.
               Точный смысл зависит от значения <see cref="P:System.Windows.Interop.MSG.message" /> элемента.
            </summary>
      <returns>
              <paramref name="lParam" /> Значение для сообщения.
            </returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary>
              Возвращает или задает идентификатор сообщения.
            </summary>
      <returns>
              Идентификатор сообщения.
            </returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary>
              Возвращает или задает координату x позиции курсора на экране, когда сообщение было отправлено.
            </summary>
      <returns>
              Координата x позиции курсора.
            </returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary>
              Возвращает или задает координату y позиции курсора на экране, когда сообщение было отправлено.
            </summary>
      <returns>
              Координата y позиции курсора.
            </returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary>
              Возвращает или задает время, по которому сообщение отправлено.
            </summary>
      <returns>
              Время передачи сообщения.
            </returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary>
              Возвращает или задает <paramref name="wParam" /> значение для сообщения, который указывает Дополнительные сведения о сообщении.
               Точный смысл зависит от значения сообщения.
            </summary>
      <returns>
              <paramref name="wParam" /> Значение для сообщения.
            </returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary>
              Получает идентификатор для локально заданного свойства зависимостей, представленного данной записью.
            </summary>
      <returns>
              Идентификатор для локально заданного свойства зависимостей.
            </returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary>
              Возвращает значение локально заданного свойства зависимостей.
            </summary>
      <returns>
              Значение локально заданного свойства зависимостей в виде объекта.
            </returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary>
              Возвращает число элементов, представленных в коллекции.
            </summary>
      <returns>
              Количество элементов в коллекции.
            </returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary>
              Получает текущий элемент в коллекции.
            </summary>
      <returns>
              Текущий <see cref="T:System.Windows.LocalValueEntry" /> в коллекции.
            </returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary>
              Описание этих членов см. в разделе <see cref="P:System.Collections.IEnumerator.Current" />.
            </summary>
      <returns>
              Текущий элемент в коллекции.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary>
              Возвращает <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> к атрибуту.
            </summary>
      <returns>
              Параметр сериализации как значение перечисления.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary>
              При переопределении в производном классе, возвращает атрибуты, связанные с этим <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.
            </summary>
      <returns>
              Коллекция атрибутов.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary>
              При переопределении в производном классе, возвращает экземпляр объекта, представленного этим <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.
            </summary>
      <returns>
              Экземпляр объекта
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary>
              При переопределении в производном классе возвращает тип <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> экземпляра.
            </summary>
      <returns>
              Тип объекта.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary>
              При переопределении в производном классе, возвращает свойства этого <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> экземпляр, который должен быть записан XAML.
            </summary>
      <returns>
              Свойства.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary>
              При переопределении в производном классе, возвращает атрибуты, связанные с этим <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.
            </summary>
      <returns>
              Коллекция атрибутов.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary>
              При переопределении в производном классе получает <see cref="T:System.Windows.DependencyProperty" /> идентификатор для свойства разметки, если это свойство реализуется как свойство зависимостей
            </summary>
      <returns>
              Идентификатор для свойства зависимостей.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary>
              При переопределении в производном классе определяет, является ли это <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> является прикрепленное <see cref="T:System.Windows.DependencyProperty" />.
            </summary>
      <returns>
              <see langword="true" /> Если прикрепленное свойство <see cref="T:System.Windows.DependencyProperty" />; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary>
              При переопределении в производном классе определяет, является ли это <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> является составным.
            </summary>
      <returns>
              <see langword="true" /> Это свойство является составного свойства; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary>
              При переопределении в производном классе определяет, является ли это <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> представляет аргументом конструктора.
            </summary>
      <returns>
              <see langword="true" /> Если это свойство представляет аргумент конструктора; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary>
              При переопределении в производном классе определяет, является ли это <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> представляет прямое содержимое коллекции элементов.
            </summary>
      <returns>
              <see langword="true" /> Если свойство представляет непосредственное содержимое; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary>
              При переопределении в производном классе определяет, является ли это <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> представляет ключ, используемый <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> для хранения элементов в словаре.
            </summary>
      <returns>
              <see langword="true" /> Если это свойство представляет ключ; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary>
              При переопределении в производном классе определяет, является ли это <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> представляет текст, который передается в преобразователь типов для создания экземпляра свойства или если нужно использовать конструктор.
            </summary>
      <returns>
              <see langword="true" />, если это <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> представляет строку; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary>
              При переопределении в производном классе, возвращает элементы, составляющие значение данного свойства.
            </summary>
      <returns>
              Элементы, составляющие значение данного свойства.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary>
              При переопределении в производном классе возвращает имя, которое используется для диагностики и сообщения об ошибках.
            </summary>
      <returns>
              Имя свойства идентификатора.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary>
              При переопределении в производном классе, возвращает <see cref="T:System.ComponentModel.PropertyDescriptor" /> для свойства разметки.
            </summary>
      <returns>
              Дескриптор свойства.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary>
              При переопределении в производном классе возвращает тип CLR свойства.
            </summary>
      <returns>
              Тип CLR.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary>
              При переопределении в производном классе, возвращает строковое значение <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.
            </summary>
      <returns>
              Строковое значение.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary>
              При переопределении в производном классе возвращает набор типов, это <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> будет ссылаться при сериализации его значения в виде строки.
            </summary>
      <returns>
              Набор типов.
            </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary>
              При переопределении в производном классе, возвращает текущее значение <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.
            </summary>
      <returns>
              Текущее значение.
            </returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary>
               Возвращает определитель это <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <returns>
              Определитель это <see cref="T:System.Windows.Media.Matrix" />.
            </returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary>
               Возвращает значение, указывающее, является ли это <see cref="T:System.Windows.Media.Matrix" /> структура является обратимой.
            </summary>
      <returns>
              <see langword="true" />Если <see cref="T:System.Windows.Media.Matrix" /> является обратимой; в противном случае <see langword="false" />.
               Значение по умолчанию — <see langword="true" />.
            </returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary>
               Возвращает удостоверение <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
      <returns>
              Единичная матрица.
            </returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary>
               Возвращает значение, указывающее, является ли это <see cref="T:System.Windows.Media.Matrix" /> Структура является единичной матрицей.
            </summary>
      <returns>
              <see langword="true" /> Если <see cref="T:System.Windows.Media.Matrix" /> Структура — единичная матрица; в противном случае — <see langword="false" />.
               Значение по умолчанию — <see langword="true" />.
            </returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary>
              Возвращает или задает значение первой строки и первого столбца <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <returns>
              Значение первой строки и первого столбца <see cref="T:System.Windows.Media.Matrix" />.
               Значение по умолчанию — 1.
            </returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary>
               Возвращает или задает значение первой строки и второго столбца этого <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <returns>
              Значение первой строки и второго столбца этого <see cref="T:System.Windows.Media.Matrix" />.
               Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary>
               Возвращает или задает значение из второй строки и первого столбца <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <returns>
              Значение второй строки и первого столбца <see cref="T:System.Windows.Media.Matrix" />.
               Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary>
              Возвращает или задает значение из второй строки и второго столбца этого <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <returns>
              Значение второй строки и второго столбца этого <see cref="T:System.Windows.Media.Matrix" /> структуры.
               Значение по умолчанию — 1.
            </returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary>
              Возвращает или задает значение на пересечении третьей строки и первого столбца <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <returns>
              Значение на пересечении третьей строки и первого столбца <see cref="T:System.Windows.Media.Matrix" /> структуры.
               Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary>
              Возвращает или задает значение третьей строки и второго столбца этого <see cref="T:System.Windows.Media.Matrix" /> структуры.
            </summary>
      <returns>
              Значение третьей строки и второго столбца этого <see cref="T:System.Windows.Media.Matrix" /> структуры.
               Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary>
              Возвращает количество элементов в коллекции сопоставленные имена в этом <see cref="T:System.Windows.NameScope" />.
            </summary>
      <returns>
              Количество элементов в коллекции.
            </returns>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary>
              Возвращает значение, указывающее, является ли коллекция доступной только для чтения.
            </summary>
      <returns>
              Всегда возвращает значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary>
              Возвращает или задает элемент с указанным ключом.
            </summary>
      <param name="key">
                Имя строки для XAML сопоставления для получения или задания имени.
              </param>
      <returns>
              Значение объекта, сопоставленное имени XAML, как <paramref name="key" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="key" /> предоставляется как <see langword="null" />.
                
                  -или-
                
                  <paramref name="value" /> предоставляется в качестве <see langword="null" /> для заданной операции.
                </exception>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary>
              Возвращает коллекцию ключей в <see cref="T:System.Windows.NameScope" /> словаря.
            </summary>
      <returns>
              Коллекция ключей в <see cref="T:System.Windows.NameScope" /> словаря.
            </returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary>
              Возвращает или задает вложенные динамически <see cref="T:System.Windows.NameScope" /> экземпляров.
            </summary>
      <returns>
              Присоединенная область видимости имен на определенном объекте.
            </returns>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary>
              Возвращает коллекцию значений в <see cref="T:System.Windows.NameScope" /> словаря.
            </summary>
      <returns>
              Коллекция значений в <see cref="T:System.Windows.NameScope" /> словаря.
            </returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary>
              Возвращает или задает <see cref="P:System.Windows.Point.X" />-координации значение этого <see cref="T:System.Windows.Point" /> структуры.
            </summary>
      <returns>
              <see cref="P:System.Windows.Point.X" />-Координации значение этого <see cref="T:System.Windows.Point" /> структуры.
                Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary>
              Возвращает или задает <see cref="P:System.Windows.Point.Y" />-координации значение <see cref="T:System.Windows.Point" />.
            </summary>
      <returns>
              <see cref="P:System.Windows.Point.Y" />-Координации значение этого <see cref="T:System.Windows.Point" /> структуры.
                Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary>
              Возвращает или задает ссылку на <see cref="T:System.Windows.CoerceValueCallback" /> реализацию, указанного в метаданных.
            </summary>
      <returns>
              A <see cref="T:System.Windows.CoerceValueCallback" /> Справочник по реализации.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Невозможно задать свойство метаданных после того, как оно применено к ориентации свойства зависимостей.
                </exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary>
               Возвращает или задает значение по умолчанию свойства зависимостей.
            </summary>
      <returns>
              Значение свойства по умолчанию.
               Значение по умолчанию в экземпляре <see cref="T:System.Windows.PropertyMetadata" />, созданное с помощью конструктора без параметров, будет <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; см. раздел "Примечания".
            </returns>
      <exception cref="T:System.ArgumentException">
                  Невозможно задать значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> при создании; см. раздел "Примечания".
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  Невозможно задать свойство метаданных после того, как оно применено к ориентации свойства зависимостей.
                </exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary>
              Возвращает значение, определяющее, была ли применена метаданных свойству определенным образом, что приводит к запрету этого экземпляра метаданных.
            </summary>
      <returns>
              <see langword="true" /> Если экземпляр метаданных является неизменяемым; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary>
              Возвращает или задает ссылку на <see cref="T:System.Windows.PropertyChangedCallback" /> реализацию, указанного в метаданных.
            </summary>
      <returns>
              A <see cref="T:System.Windows.PropertyChangedCallback" /> Справочник по реализации.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  Невозможно задать свойство метаданных после того, как оно применено к ориентации свойства зависимостей.
                </exception>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary>
              Возвращает нижнюю сторону прямоугольника по оси y.
            </summary>
      <returns>
              Координата по оси y нижней стороны прямоугольника.
               Если прямоугольник пуст, значение равно <see cref="F:System.Double.NegativeInfinity" /> .
            </returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary>
              Получает положение нижнего левого угла прямоугольника 
            </summary>
      <returns>
              Позиция левого нижнего угла прямоугольника.
            </returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary>
              Получает положение нижнего правого угла прямоугольника.
            </summary>
      <returns>
              Положение нижнего правого угла прямоугольника.
            </returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary>
              Возвращает специальное значение, которое представляет прямоугольник без расположения или области.
            </summary>
      <returns>
              Пустой прямоугольник, который имеет <see cref="P:System.Windows.Rect.X" /> и <see cref="P:System.Windows.Rect.Y" /> значения свойств <see cref="F:System.Double.PositiveInfinity" />, и имеет <see cref="P:System.Windows.Rect.Width" /> и <see cref="P:System.Windows.Rect.Height" /> значения свойств <see cref="F:System.Double.NegativeInfinity" />.
            </returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary>
              Возвращает или задает высоту прямоугольника.
            </summary>
      <returns>
              Положительное число, представляющее высоту прямоугольника.
               Значение по умолчанию — 0.
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Windows.Rect.Height" /> присвоено отрицательное значение.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Windows.Rect.Height" /> Установите на <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary>
              Возвращает значение, указывающее, является ли прямоугольник <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
            </summary>
      <returns>
              <see langword="true" /> Если прямоугольник <see cref="P:System.Windows.Rect.Empty" /> прямоугольник; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary>
              Возвращает значение по оси x левой стороны прямоугольника.
            </summary>
      <returns>
              Координата по оси x левой стороны прямоугольника.
            </returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary>
              Возвращает или задает позицию верхнего левого угла прямоугольника.
            </summary>
      <returns>
              Позиция верхнего левого угла прямоугольника.
               Значение по умолчанию — (0, 0).
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Windows.Rect.Location" /> Установите на <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary>
              Возвращает значение по оси x правой стороны прямоугольника.
            </summary>
      <returns>
              Координата по оси x правой стороны прямоугольника.
            </returns>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary>
              Возвращает или задает ширину и высоту прямоугольника.
            </summary>
      <returns>
              A <see cref="T:System.Windows.Size" /> Структура, которая задает ширину и высоту прямоугольника.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Windows.Rect.Size" /> Установите на <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary>
              Возвращает координату по оси y верхней стороны прямоугольника.
            </summary>
      <returns>
              Координата по оси y верхней стороны прямоугольника.
            </returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary>
              Получает положение верхнего левого угла прямоугольника.
            </summary>
      <returns>
              Позиция верхнего левого угла прямоугольника.
            </returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary>
              Возвращает позицию в правом верхнем углу прямоугольника.
            </summary>
      <returns>
              Позиция верхнего правого угла прямоугольника.
            </returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary>
              Получает или задает ширину прямоугольника.
            </summary>
      <returns>
              Положительное число, которое представляет ширину прямоугольника.
               Значение по умолчанию — 0.
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Windows.Rect.Width" /> присвоено отрицательное значение.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Windows.Rect.Width" /> Установите на <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary>
              Возвращает или задает значение по оси x левой стороны прямоугольника.
            </summary>
      <returns>
              Координата по оси x левой стороны прямоугольника.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Windows.Rect.X" /> Установите на <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary>
              Возвращает или задает верхнюю сторону прямоугольника по оси y.
            </summary>
      <returns>
              По оси y верхней стороны прямоугольника.
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Windows.Rect.Y" /> Установите на <see cref="P:System.Windows.Rect.Empty" /> прямоугольник.
                </exception>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary>
              Возвращает значение, которое представляет статический пустой <see cref="T:System.Windows.Size" />.
            </summary>
      <returns>
              Пустой экземпляр <see cref="T:System.Windows.Size" />.
            </returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary>
              Возвращает или задает <see cref="P:System.Windows.Size.Height" /> данного экземпляра <see cref="T:System.Windows.Size" />.
            </summary>
      <returns>
              <see cref="P:System.Windows.Size.Height" /> Данного экземпляра <see cref="T:System.Windows.Size" />.
               Значение по умолчанию — 0.
               Значение не может быть отрицательным.
            </returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary>
              Возвращает значение, указывающее, является ли этот экземпляр <see cref="T:System.Windows.Size" /> является <see cref="P:System.Windows.Size.Empty" />.
            </summary>
      <returns>
              <see langword="true" /> Если этот экземпляр размер <see cref="P:System.Windows.Size.Empty" />; в противном случае <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary>
              Возвращает или задает <see cref="P:System.Windows.Size.Width" /> данного экземпляра <see cref="T:System.Windows.Size" />.
            </summary>
      <returns>
              <see cref="P:System.Windows.Size.Width" /> Данного экземпляра <see cref="T:System.Windows.Size" />.
               Значение по умолчанию — 0.
               Значение не может быть отрицательным.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary>
              Возвращает <see cref="T:System.Windows.Threading.Dispatcher" /> для потока в данный момент и создает новый <see cref="T:System.Windows.Threading.Dispatcher" /> Если еще не связаны с потоком.
            </summary>
      <returns>
              Диспетчер, связанный с текущим потоком.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary>
              Определяет, является ли <see cref="T:System.Windows.Threading.Dispatcher" /> завершения завершает работу.
            </summary>
      <returns>
              <see langword="true" /> Если диспетчер завершил процесс остановки; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary>
              Определяет, является ли <see cref="T:System.Windows.Threading.Dispatcher" /> завершает работу.
            </summary>
      <returns>
              <see langword="true" /> Если <see cref="T:System.Windows.Threading.Dispatcher" /> начал завершает работу; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary>
              Получает коллекцию обработчиков, которые предоставляют дополнительную информацию о <see cref="T:System.Windows.Threading.Dispatcher" />.
            </summary>
      <returns>
              Обработчики, связанный с этим <see cref="T:System.Windows.Threading.Dispatcher" />.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary>
              Получает поток, это <see cref="T:System.Windows.Threading.Dispatcher" /> связан.
            </summary>
      <returns>
              Поток.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary>
              <see cref="T:System.Windows.Threading.Dispatcher" /> Связанных с этим событием.
            </summary>
      <returns>
              Диспетчер.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary>
              Возвращает или задает значение, указывающее, является ли это <see cref="T:System.Windows.Threading.DispatcherFrame" /> следует продолжить.
            </summary>
      <returns>
              <see langword="true" /> Если фрейм должен продолжить работу; в противном случае — <see langword="false" />.
                Значение по умолчанию — <see langword="true" />.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary>
              Возвращает <see cref="T:System.Windows.Threading.Dispatcher" /> связанных с этим событием.
            </summary>
      <returns>
              <see cref="T:System.Windows.Threading.Dispatcher" /> Связанных с этим событием.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary>
              Возвращает <see cref="T:System.Windows.Threading.DispatcherOperation" /> связанных с этим событием.
            </summary>
      <returns>
              Операция.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary>
              Возвращает <see cref="T:System.Windows.Threading.Dispatcher" /> это <see cref="T:System.Windows.Threading.DispatcherObject" /> связан.
            </summary>
      <returns>
              Диспетчер.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary>
              Возвращает <see cref="T:System.Windows.Threading.Dispatcher" /> операция была проведена.
            </summary>
      <returns>
              Диспетчер.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary>
              Возвращает или задает приоритет операции в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди.
            </summary>
      <returns>
              Приоритет делегата в очереди.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary>
              Возвращает результат операции по ее завершении.
            </summary>
      <returns>
              Результат операции - или - <see langword="null" /> Если операция не завершена.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary>
              Возвращает текущее состояние операции...
            </summary>
      <returns>
              Состояние операции.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary>
              Возвращает <see cref="T:System.Threading.Tasks.Task`1" /> представляющий текущую операцию.
            </summary>
      <returns>
              Объект, представляющий текущую операцию.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary>
              Возвращает результат операции по ее завершении.
            </summary>
      <returns>
              Результат операции.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary>
              Возвращает <see cref="T:System.Threading.Tasks.Task`1" /> представляющий текущую операцию.
            </summary>
      <returns>
              Объект, представляющий текущую операцию.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary>
              Возвращает значение, указывающее, завершена ли асинхронная задача.
            </summary>
      <returns>
              Значение <see langword="false" /> во всех случаях.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary>
              Возвращает объект <see cref="T:System.Windows.Threading.Dispatcher" />, связанный с этим объектом <see cref="T:System.Windows.Threading.DispatcherTimer" />.
            </summary>
      <returns>
              Диспетчер.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary>
              Возвращает или задает период времени между тактами таймера.
            </summary>
      <returns>
              Период времени между тактами.
               Значение по умолчанию — 00:00:00.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="interval" /> меньше 0 или больше, чем <see cref="F:System.Int32.MaxValue" /> миллисекунд.
                </exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary>
              Возвращает или задает значение, которое показывает, запущен ли таймер.
            </summary>
      <returns>
              <see langword="true" /> Если таймер включен; в противном случае — <see langword="false" />.
                Значение по умолчанию — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary>
              Возвращает или задает объект данных, определяемых пользователем.
            </summary>
      <returns>
              Определенные пользователем данные.
                Значение по умолчанию — <see langword="null" />.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary>
              Возвращает исключение, возникшее при выполнении кода с помощью диспетчера.
            </summary>
      <returns>
              Исключение.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary>
              Возвращает или задает событие исключение было обработано.
            </summary>
      <returns>
              <see langword="true" /> Если исключение было обработано; в противном случае — <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary>
              Возвращает исключение, возникшее при выполнении кода с помощью диспетчера.
            </summary>
      <returns>
              Исключение.
            </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary>
              Возвращает или задает исключение должны перехватываться и обработчики событий.
            </summary>
      <returns>
              <see langword="true" /> Если <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> события, в противном случае; <see langword="false" />.
                Значение по умолчанию — <see langword="true" />.
            </returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary>
              Возвращает длину данного вектора.
            </summary>
      <returns>
              Длина данного вектора.
            </returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary>
              Возвращает квадрат длины данного вектора.
            </summary>
      <returns>
              Квадрат <see cref="P:System.Windows.Vector.Length" /> данного вектора.
            </returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary>
              Возвращает или задает <see cref="P:System.Windows.Vector.X" /> компонента данного вектора.
            </summary>
      <returns>
              <see cref="P:System.Windows.Vector.X" /> Компонент данного вектора.
               Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary>
              Возвращает или задает <see cref="P:System.Windows.Vector.Y" /> компонента данного вектора.
            </summary>
      <returns>
              <see cref="P:System.Windows.Vector.Y" /> Компонент данного вектора.
               Значение по умолчанию — 0.
            </returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary>
              Возвращает или задает данные, сохраняемые для указанного источника.
            </summary>
      <param name="source">
                Отсчитываемый от нуля индекс запрошенного источника.
              </param>
      <returns>
              Данные, сохраняемые диспетчером для данного источника.
            </returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary>
              Возвращает число элементов, содержащихся в списке <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
            </summary>
      <returns>
              Количество элементов, содержащихся в коллекции <see cref="T:System.Windows.WeakEventManager.ListenerList" />.
            </returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary>
              Возвращает значение, представляющее пустой список с целью сравнения.
            </summary>
      <returns>
              Представление пустого списка.
            </returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary>
              Возвращает значение, объявляет ли это <see cref="T:System.Windows.WeakEventManager.ListenerList" />  пуст.
            </summary>
      <returns>
              Значение <see langword="true" />, если список пуст; в противном случае — значение <see langword="false" />.
            </returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary>
              Возвращает или задает элемент конкретного прослушивателя в <see cref="T:System.Windows.WeakEventManager.ListenerList" /> .
            </summary>
      <param name="index">
                Отсчитываемый от нуля индекс прослушивателя в списке.
              </param>
      <returns>
              Элемент, индекс или пустая ссылка, если элемент не был по этому индексу.
            </returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary>
              Устанавливает блокировку чтения для базовой таблицы данных и возвращает <see cref="T:System.IDisposable" />.
            </summary>
      <returns>
              Объект, который может использоваться для установки блокировки на члены таблицы данных и затем соответствующим образом удаляется с <see langword="using" /> построения.
            </returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary>
              Устанавливает блокировку на запись для базовой таблицы данных и возвращает<see cref="T:System.IDisposable" />.
            </summary>
      <returns>
              Объект, который может использоваться для установки блокировки на члены таблицы данных и затем соответствующим образом удаляется с <see langword="using" /> построения.
            </returns>
    </member>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary>
              Предоставляет <see cref="T:System.Windows.WeakEventManager" /> реализацию, чтобы шаблон «прослушиватель слабых событий» можно использовать для присоединения прослушивателей для <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> события.
            </summary>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary>
              Предоставляет <see cref="T:System.Windows.WeakEventManager" /> реализацию, чтобы шаблон «прослушиватель слабых событий» можно использовать для присоединения прослушивателей для <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> события.
            </summary>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary>
              Предоставляет сведения для события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.
            </summary>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary>
              Представляет метод, обрабатывающий событие <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" />.
            </summary>
      <param name="sender">
                Объект, создавший событие.
              </param>
      <param name="e">
                Сведения о событии.
              </param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary>
              Предоставляет <see cref="T:System.Windows.WeakEventManager" /> реализацию, чтобы шаблон «прослушиватель слабых событий» можно использовать для присоединения прослушивателей для <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> события.
            </summary>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary>
              Предоставляет расширение <see cref="T:System.ComponentModel.PropertyDescriptor" />, учитывающее дополнительные характеристики свойства зависимостей.
            </summary>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary>
              Предоставляет <see cref="T:System.Windows.WeakEventManager" /> реализацию, чтобы прослушиватель шаблон слабых событий можно использовать для присоединения прослушивателей для <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> события.
            </summary>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary>
              Предоставляет абстрактный базовый класс для типов, которые описывают, как разделить элементы в коллекции на группы.
            </summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary>
              Предоставляет в коллекциях функциональные возможности управления текущими записями, пользовательской сортировки, фильтрации и группирования.
            </summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary>
              Интерфейс, позволяющий реализовывать коллекции для создания представления соответствующих данных.
               Как правило пользовательский код не вызывает методы для этого интерфейса.
            </summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary>
              Определяет свойства, которые обеспечивает сортировку, группирование и фильтрацию <see cref="T:System.Windows.Data.CollectionView" /> в режиме реального времени.
            </summary>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary>
              Определяет методы и свойства, которые <see cref="T:System.Windows.Data.CollectionView" /> реализует для предоставления коллекции возможностей редактирования.
            </summary>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary>
              Определяет методы и свойства, <see cref="T:System.Windows.Data.CollectionView" /> реализует указано добавления элементов определенного типа.
            </summary>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary>
              Определяет свойство, которое содержит сведения о свойствах объекта.
            </summary>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary>
              Содержит сведения о свойстве.
            </summary>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary>
              Указывает, имеется ли в коллекции заполнитель нового элемента.
            </summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary>
              Заполнитель нового элемента в коллекции не используется.
               Позиция добавляемых элементов зависит от базовой коллекции.
                Обычно они добавляются в конец коллекции.
            </summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary>
              Заполнитель нового элемента находится в начале коллекции.
                Новые элементы располагаются в начале коллекции после заполнителя нового элемента.
            </summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary>
              Заполнитель нового элемента находится в конце коллекции.
               Новые элементы добавляются в конец коллекции перед заполнителем нового элемента.
            </summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary>
              Предоставляет <see cref="T:System.Windows.WeakEventManager" /> реализацию, чтобы шаблон «прослушиватель слабых событий» можно использовать для присоединения прослушивателей для <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> события.
            </summary>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary>
              Указывает, какие свойства должны выводиться дескрипторами типов, например методом <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />.
            </summary>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary>
              Указывает, какие свойства должны выводиться дескрипторами типов, например методом <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />.
               Это перечисление используется для указания значения свойства <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" />.
            </summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary>
              Никакие свойства не возвращаются.
            </summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary>
              Возвращаются только свойства, которые являются недопустимыми в текущем контексте объекта.
               См. заметки.
            </summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary>
              Возвращаются только свойства, для которых в текущий момент заданы локальные значения.
            </summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary>
              Возвращаются только свойства, локальные значения которых не заданы, или не имеющие свойств, заданных во внешнем хранилище выражений (таком как привязка или отложенный ресурс).
            </summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary>
              Возвращаются все свойства, допустимые для данного объекта в текущей области.
               См. заметки.
            </summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary>
              Возвращаются все свойства.
            </summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary>
              Определяет направление и имя свойства для использования в качестве условия сортировки коллекции.
            </summary>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary>
              Представляет коллекцию объектов <see cref="T:System.ComponentModel.SortDescription" />.
            </summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary>
              Описывает уровень детализации для трассировки конкретного объекта.
            </summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary>
              Выполняет трассировку доступны дополнительные сведения отсутствуют.
            </summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary>
              Выполняет трассировку некоторой дополнительной информацией.
            </summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary>
              Выполняет трассировку среднего объема дополнительной информации.
            </summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary>
              Выполняет трассировку всей дополнительной информации.
            </summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary>
              Обеспечивает поддержку трассировки отладки, специально предназначенной для приложений Windows Presentation Foundation (WPF).
            </summary>
    </member>
    <member name="T:System.IO.FileFormatException">
      <summary>
              Исключение, возникающее, если входной файл или поток данных, который должен соответствовать определенной спецификации формата файла, сформирован неверно.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary>
              Определяет место хранения сертификата X.509, используемого для подписи.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary>
              Сертификат внедрен в свою часть <see cref="T:System.IO.Packaging.PackagePart" />.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary>
              Сертификат внедрен в часть <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" />, созданную для добавляемой подписи.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary>
              Сертификат не внедрен в пакет.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>
              Задает уровень сжатия для содержимого, хранящегося в <see cref="T:System.IO.Packaging.PackagePart" />.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>
              Сжатие отключено.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>
              Сжатие, обеспечивающее оптимальный баланс между размером и производительностью.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>
              Сжатие, обеспечивающее оптимальный размер.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>
              Сжатие оптимизирован для производительности.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>
              Сжатие оптимизированы для повышения производительности.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary>
              Представляет составной файл OLE, содержащий зашифрованный пакет.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>
              Задает параметр шифрования для частей в <see cref="T:System.IO.Packaging.Package" />.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>
              Без шифрования.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>
              Шифрование поддерживается службой управления правами.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary>
              Представляет метод, обрабатывающий <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" /> именно возникает при <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> обнаруживает недопустимую подпись.
            </summary>
      <param name="sender">
                Указан неправильный <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> источник события.
              </param>
      <param name="e">
                Данные события.
              </param>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>
              Представляет контейнер, который может хранить несколько объектов данных.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary>
              Представляет цифровую подпись, которая применяется к набору частей и отношений пакета.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary>
              Предоставляет служебный класс для создания и проверки цифровых подписей в <see cref="T:System.IO.Packaging.Package" />.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>
              Предоставляет базовый класс для элементов, сохраненные в <see cref="T:System.IO.Packaging.Package" />.
                Это абстрактный класс.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>
              Представляет коллекцию объектов <see cref="T:System.IO.Packaging.PackagePart" />.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>
              Представляет основные свойства <see cref="T:System.IO.Packaging.Package" />.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>
              Представляет ассоциацию между источником <see cref="T:System.IO.Packaging.Package" /> или <see cref="T:System.IO.Packaging.PackagePart" />, и целевой объект, который может быть <see cref="T:System.IO.Packaging.PackagePart" /> или внешний ресурс.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>
              Представляет коллекцию <see cref="T:System.IO.Packaging.PackageRelationship" /> элементы, которые принадлежат данной <see cref="T:System.IO.Packaging.PackagePart" /> или <see cref="T:System.IO.Packaging.Package" />.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>
              Определяет <see cref="T:System.IO.Packaging.PackageRelationship" /> критерии для выбора уровня пакета или уровня части связей.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>
              Указывает тип отбора, используемый для сопоставления и возвращают <see cref="T:System.IO.Packaging.PackageRelationship" /> Выбранные через <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>
              <see cref="T:System.IO.Packaging.PackageRelationship" /> флажки, с <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>
              <see cref="T:System.IO.Packaging.PackageRelationship" /> флажки, с <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>
              Предоставляет служебные методы для составления и анализа объектов URI пакета.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary>
              Представляет сведения об управлении цифровыми правами (DRM), которые хранятся в <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary>
               Указывает аргументы события, передаваемые <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary>
              Предоставляет доступ и сведения для управления хранилищ данных в <see cref="T:System.IO.Packaging.Package" />.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary>
              Предоставляет доступ и информацию для обработки потоков ввода-вывода в <see cref="T:System.IO.Packaging.Package" />.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>
              Указывает, является ли целевой <see cref="T:System.IO.Packaging.PackageRelationship" /> внутри или за пределами <see cref="T:System.IO.Packaging.Package" />.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>
              Связь указывает на часть, находящуюся внутри пакета.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>
              Связь указывает ресурса, находящегося вне пакета.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary>
              Указывает результат проверки сертификата или подписи.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary>
              Проверка пройдена успешно.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary>
              Недопустимая подпись.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary>
              Сертификат X.509 недоступен для проверки подписи.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary>
              Сертификат X.509 недействителен.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary>
              Не найдена ссылочная связь с подписью.
            </summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary>
              Указанный пакет или часть не имеет подписи.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>
              Реализует производный подкласс абстрактного <see cref="T:System.IO.Packaging.Package" /> базового класса, <see cref="T:System.IO.Packaging.ZipPackage" /> класс использует в качестве контейнера хранилища ZIP-архиве.
               Этот класс не наследуется.
            </summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>
              Представляет собой часть, которая хранится в <see cref="T:System.IO.Packaging.ZipPackage" />.
            </summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
              <see cref="T:System.Security.Permissions.MediaPermission" /> описывает набор разрешений безопасности, который управляет возможностью работы мультимедиа (звука, изображений и видео) в приложении Windows Presentation Foundation (WPF) с частичным доверием.
            </summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>
              Разрешает применять действия безопасности для <see cref="T:System.Security.Permissions.MediaPermission" /> к коду с помощью декларативной безопасности.
            </summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>
              Указывает уровень разрешения для аудио.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>
              Разрешение, запрещающее воспроизведение всех аудиозаписей.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>
              Разрешение, недоступном для воспроизведения аудио файлов, расположенных на исходном узле приложения.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>
              Разрешение, допускающее безопасное, ограниченные воспроизведения звука, предполагающее запрет на потоковый доступ к файлу изображения.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>
              Разрешение, допускающее воспроизведение аудиозаписей без ограничений.
            </summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>
              Задает уровень разрешений для изображений.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>
              Разрешение, запрещающее отображение всех изображений.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>
              Разрешение, которое разрешает отображение изображений, расположенных на исходном узле приложения.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>
              Разрешение, допускающее безопасное, ограниченные отображение изображений, предполагающее запрет на потоковый доступ к файлу изображения.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>
              Разрешение на неограниченное отображение изображений.
            </summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>
              Задает уровень разрешений для видео.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>
              Разрешение, запрещающее воспроизведение видео.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>
              Разрешение, недоступном для воспроизведения видео файлов, расположенных на исходном узле приложения.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>
              Разрешение, допускающее безопасное, ограниченные воспроизведения видео, предполагающее запрет на потоковый доступ к файлу изображения.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>
              Разрешение, допускающее воспроизведение видео без ограничений.
            </summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>
              Объект <see cref="T:System.Security.Permissions.WebBrowserPermission" /> контролирует возможность создания элемента управления WebBrowser.
            </summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>
              Разрешает применять действия безопасности для <see cref="T:System.Security.Permissions.WebBrowserPermission" /> к коду с помощью декларативной безопасности.
            </summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>
              Задает уровень разрешений для веб-браузера.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>
              Веб-обозреватель не может перемещать фреймы в HTML.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>
              Веб-обозреватель может безопасно перемещать фреймы в HTML, но с некоторыми ограничениями.
            </summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>
              Веб-обозреватель, можно перейти без ограничений.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary>
              Задает метод проверки подлинности управления правами.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary>
              Проверка подлинности Windows в среде корпоративного домена.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary>
              Проверка подлинности Windows Live ID.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary>
              Проверка подлинности Windows либо проверка подлинности Windows Live ID.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary>
              Неявная проверка подлинности любого запрашивающего пользователя.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary>
              Представляет право, предоставленное пользователю для доступа к информации в документе с управляемыми правами.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary>
              Задает права, которые могут быть предоставлены пользователям для доступа к содержимому в документе с управлением правами.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary>
              Пользователь может просматривать защищенное содержимое.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary>
              Пользователь может изменять и шифровать защищенное содержимое.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary>
              Пользователь может печатать защищенное содержимое.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary>
              Пользователь может извлекать (копировать и вставлять) защищенное содержимое.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary>
              Пользователь может управлять программируемым доступом к защищенному содержимому.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary>
              Пользователь является владельцем содержимого.
                Владелец может редактировать и шифровать защищенное содержимое, а также расшифровывать подписанный <see cref="T:System.Security.RightsManagement.PublishLicense" />.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary>
              Пользователь может расшифровывать и просматривать права, указанные в подписанном <see cref="T:System.Security.RightsManagement.PublishLicense" />.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary>
              Пользователь может переадресовывать защищенное содержимое другому пользователю.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary>
              Пользователь может отвечать отправителю защищенного содержимого.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary>
              Пользователь может отвечать всем получателям защищенного содержимого.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary>
              Пользователь может добавлять цифровую подпись в защищенное содержимое.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary>
              Пользователь может редактировать документ, содержащий защищенное содержимое.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary>
              Пользователь может экспортировать защищенное содержимое.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary>
              Представляет пользователя или группу пользователей для предоставления доступа к содержимому с управлением правами.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary>
              Предоставляет службы управления правами для шифрования и расшифровки защищенного содержимого.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary>
              Представляет неизменяемую (доступную только для чтения) пару строк "Имя" и "Описание".
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary>
              Представляет подписанную управляемую правами лицензию на публикацию.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary>
              Представляет ошибку, когда не удается успешно завершить операцию управления правами.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary>
              Указывает ошибочные состояния, которые могут произойти при выполнении операции по управлению правами.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary>
              Операция завершена успешно.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary>
              Недопустимая структура лицензии в одном из сертификатов.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary>
              При создании связанной лицензии указана лицензия на выпуск, а не лицензия на использование.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary>
              Не удается проверить подписанный цифровой сертификат на управление правами.
               (Возможно, подписанный сертификат подделан.)
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary>
              Шифрование запрещено.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary>
              Текущий пользователь не имеет прав доступа к защищенному содержимому.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary>
              Неправильная версия управления правами.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary>
              Указан недопустимый тип кодирования.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary>
              Указано недопустимое числовое значение.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary>
              Указан недопустимый тип алгоритма.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary>
              Не удается загрузить <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary>
              Не удается загрузить <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary>
              Создано слишком много экземпляров <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary>
              Переданный тип объекта не совместим с этой операцией.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary>
              Не удалось выполнить операцию библиотеки.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary>
              Указанный субъект не может быть включен.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary>
              Отсутствуют некоторые сведения.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary>
              Передана недопустимая константа.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary>
              Указанный в паре "ключ-значение" тип ключа не поддерживается.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary>
              Запрошенная операция шифрования не поддерживается.
               Например, передан объект шифрования RMS, используемый для расшифровки.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary>
              Обнаружен перевод часов назад.
               Не удается получить доступ к защищенному содержимому.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary>
              Экземпляры запрашиваемого атрибута не существуют.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary>
              Произошла неизвестная ошибка.
                Также возникает, когда приложение выполняется в режиме отладки.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary>
              Определенный период времени для защищенного содержимого истек; доступ больше не разрешен.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary>
              Цепь сертификатов управления правами разорвана.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary>
              Текущий пользователь не имеет прав доступа к защищенному содержимому.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary>
              Операция нарушает политику манифеста управления правами.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary>
              Текущий пользователь не имеет прав доступа к защищенному содержимому.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary>
              Текущий пользователь не имеет прав доступа к защищенному содержимому.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary>
              Текущий пользователь не имеет прав доступа к защищенному содержимому.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary>
              Текущий пользователь не имеет прав доступа к защищенному содержимому.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary>
              Указанный ресурс не содержится ни в одном узле WORK этой лицензии.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary>
              Условие доступа не соответствует разрешающему субъекту, переданному привязке.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary>
              Текущий пользователь не удовлетворяет условиям, определенным в лицензионном соглашении.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary>
              Разрешающий субъект не соответствует субъекту, определенному в лицензионном соглашении.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary>
              Текущий компьютер не определен в удостоверении группы управления правами.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary>
              Указанный подключаемый модуль библиотеки не поддерживается.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary>
              Для лицензии требуется получить новый список отзыва.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary>
              Текущий пользователь не имеет прав доступа к защищенному содержимому.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary>
              Недопустимая среда или недопустимый дескриптор разрешающего субъекта.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary>
              Определенный период времени для защищенного содержимого истек; доступ больше не разрешен.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary>
              Указанная группа прав отсутствует в лицензионном соглашении.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary>
              Лицензионное соглашение не содержит узлы WORK.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary>
              По указанному индексу не существует лицензий или сертификатов.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary>
              Лицензионное соглашение не удалось получить с сервера управления правами.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary>
              Идентификатор содержимого в лицензии не соответствует идентификатору содержимого для сеанса хранения лицензии.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary>
              Число сертификатов превысило максимально допустимое.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary>
              Защищенное содержимое повреждено.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary>
              Запрошенная операция уже выполняется.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary>
              Для сеанса клиента не указано имя пользователя.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary>
              Указанная лицензия не найдена.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary>
              Управление правами не может подключиться к URI сервера лицензирования.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary>
              Требуемая лицензия недоступна.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary>
              Перед активацией пользователя необходимо активировать компьютер.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary>
              Не активирован пользователь или не предоставлен сертификат учетной записи службы управления правами (RAC), а в хранилище лицензий нет сертификата, соответствующего лицензии, связанной с этим сеансом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary>
              Сбой службы управления правами; службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary>
              Асинхронная операция отменена или произошла неустранимая ошибка.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary>
              Достигнута максимальная квота лицензионных соглашений на сервере лицензирования.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary>
              Возможная ошибка проверки подлинности (ошибка HTTP 401) в ответ на интернет-запрос.
               Или текущий пользователь не имеет действительных учетных данных домена при попытке активации пользователя без уведомления.
               Или сервер сертификации не находится в локальной сети или в доверенной зоне сайтов при попытке активации пользователя без уведомления.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary>
              Сбой операции установки.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary>
              Идентификатор оборудования (HID), используемый при попытке активации компьютера, имеет неправильный формат.
               Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary>
              Если выполняется запрос на активацию компьютера или сертификата учетной записи прав, ответ <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" /> обозначает, что приложение должно передать <see langword="null" /> в качестве значения для параметра ActServInfo.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary>
              Сбой проверки адреса электронной почты сервера RMS.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary>
              Определенный период времени для защищенного содержимого истек; доступ больше не разрешен.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary>
              Текущий пользователь не найден в Active Directory (AD) для сертификации при проверке подлинности Windows.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary>
              Содержимое управления правами повреждено.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary>
              Сервер управления правами не разрешает временную сертификацию текущего пользователя.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary>
              Элемент, удаление которого запрошено, не существует.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary>
              Указанные метаданные не удалось установить.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary>
              Не заданы сведения об отзыве сертификата или лицензии.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary>
              Указанные сведения о времени являются недопустимыми.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary>
              Запрашиваемое право не указано при публикации содержимого с помощью службы управления правами.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary>
              Учетные данные текущего пользователя не пригодны для получения лицензии.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary>
              Шаблон служб управления правами содержит одну или несколько ошибок.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary>
              Указанная в паре "ключ-значение" длина ключа недопустима.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary>
              Определенный в шаблоне выдачи лицензии период авторизации истек; доступ больше не разрешен.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary>
              Идентификатор оборудования (HID), используемый при попытке активации компьютера, является недопустимым.
               Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary>
              Не удается проверить адрес электронной почты пользователя.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary>
              Не удается открыть или опубликовать содержимое с ограниченными разрешениями, так как обнаружен отладчик.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary>
              Указанный путь реестра является недопустимым.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary>
              Службы управления правами не настроены надлежащим образом.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary>
              Указанный параметр уже установлен.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary>
              Документ не содержит лицензию владельца.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary>
              Представляет безопасный сеанс клиента для активации пользователей, привязки лицензии и других операций управления правами.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary>
              Представляет неподписанный управляемый правами объект <see cref="T:System.Security.RightsManagement.PublishLicense" /> или неподписанный шаблон <see cref="T:System.Security.RightsManagement.PublishLicense" />.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary>
              Представляет лицензию, позволяющую получить доступ к содержимому, защищенному системой управления правами.
            </summary>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary>
              Задает тип сертификата учетной записи прав для запроса активации управления правами пользователя.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary>
              Постоянный сертификат учетной записи управления правами.
            </summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary>
              Временный сертификат учетной записи управления правами.
            </summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary>
              Предоставляет базовый класс для атрибутов Атрибуты .NET Framework, которые сообщают об области использования присоединенных свойств.
            </summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary>
              Указывает, что присоединенное свойство отображается только для элементов, которые являются производными от указанного типа.
            </summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary>
              Указывает, что присоединенное свойство можно просмотреть только в элементе, который также имеет другой указанный Атрибут .NET Framework, примененный к его определению класса.
            </summary>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary>
              Содержит свойства, которые определяют, как должны вести себя приложение относительно новых функций WPF, которые находятся в сборке WindowsBase.
            </summary>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary>
              Предоставляет набор значений, который описывает, каким образом диспетчер реагирует на сбои, возникающие при обработке запроса.
            </summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary>
              Продолжить после сбоя.
            
              Это значение по умолчанию.
               Оно определяет поведение диспетчера Windows Presentation Foundation, предшествующего .NET Framework 4.7.1.
               При выборе этого параметра диспетчер может перестать отвечать.
            </summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary>
              Создание исключения.
            
              Этот параметр сразу же привлекает внимание разработчика приложений к проблеме.
            </summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary>
              Сбросить состояние диспетчера, чтобы в следующий раз попробовать другой запрос, когда он будет необходим.
            
              Хотя этот параметр может иногда устранять проблему зависания, он не поддерживает обычное время обработки, что может иметь важное значение.
               Выбор этого параметра может привести к непредвиденному поведению.
            </summary>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary>
              Предоставляет шаблон для метода, вызываемого при оценке значения свойства зависимостей или приведение специально запрошен.
            </summary>
      <param name="d">
                Объект, содержащий свойство.
                 При вызове функции обратного вызова, система свойств передает это значение.
              </param>
      <param name="baseValue">
                Новое значение свойства до применения операции запрета.
              </param>
      <returns>
              Приведенное значение (с соответствующим типом).
            </returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary>
              Преобразует экземпляры <see cref="T:System.String" /> в и из экземпляров <see cref="T:System.Windows.Int32Rect" />.
            </summary>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary>
              Преобразует экземпляры <see cref="T:System.String" /> в и из экземпляров <see cref="T:System.Windows.Point" />.
            </summary>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary>
              Преобразует экземпляры <see cref="T:System.String" /> в и из экземпляров <see cref="T:System.Windows.Rect" />.
            </summary>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary>
              Преобразует экземпляры <see cref="T:System.String" /> в и из экземпляров <see cref="T:System.Windows.Size" />.
            </summary>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary>
              Преобразует экземпляры <see cref="T:System.String" /> в и из экземпляров <see cref="T:System.Windows.Vector" />.
            </summary>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary>
              Общий базовый класс и контракт для объектов <see cref="T:System.Windows.Data.DataSourceProvider" />, являющихся фабриками, выполняющими некоторые запросы для получения отдельного объекта или списка объектов, которые можно использовать в качестве объектов источника привязки.
            </summary>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary>
              Представляет объект, участвующий в системе свойств зависимостей.
            </summary>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary>
              Реализует базовый тип кэша для всех <see cref="T:System.Windows.DependencyObject" /> производных типов.
            </summary>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary>
              Представляет свойство, которое можно задать с помощью методов, например стили, привязки данных, анимации и наследование.
            </summary>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary>
              Предоставляет данные для различных событий изменения свойств.
               Обычно такие события сообщают об изменениях действительных значений в свойстве зависимостей только для чтения.
               Другой вариант использования — в реализации <see cref="T:System.Windows.PropertyChangedCallback" />.
            </summary>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary>
              Представляет метод, обрабатывающий события, которое вызывается при изменении <see cref="T:System.Windows.DependencyProperty" /> в определенной реализации <see cref="T:System.Windows.DependencyObject" />.
            </summary>
      <param name="sender">
                Источник события.
              </param>
      <param name="e">
                Данные события.
              </param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary>
              Предоставляет идентификатор свойства зависимостей для ограниченного доступа записи к свойство зависимости только для чтения.
            </summary>
    </member>
    <member name="T:System.Windows.Expression">
      <summary>
              Данный тип обеспечивает поддержку инфраструктуры Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования в коде.
            </summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary>
              Преобразует экземпляры <see cref="T:System.Windows.Expression" />  в и из других типов.
            </summary>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary>
              Определяет объект, имеющий изменяемое состояние и состояние только для чтения (зафиксированное).
               Классы, производные от <see cref="T:System.Windows.Freezable" />, предоставляют подробные уведомления об изменениях, могут быть неизменяемыми и могут копировать себя.
            </summary>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary>
              Указывает направление в пользовательский интерфейс попытка запроса на изменение фокуса.
               Направление либо основано на последовательности табуляции или относительно направления в макете.
            </summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary>
              Перемещение фокуса к следующему элементу фокус в последовательности табуляции.
               Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.
            </summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary>
              Перемещение фокуса к предыдущей фокус элементу в последовательности табуляции.
               Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.
            </summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary>
              Перемещение фокуса на первый элемент фокус в последовательности табуляции.
               Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.
            </summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary>
              Перемещение фокуса на последний элемент фокус в последовательности табуляции.
               Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.
            </summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary>
              Перемещение фокуса к другому элементу, способному слева от выделенного элемента.
            </summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary>
              Перемещение фокуса к другому элементу, способному справа от выделенного элемента.
            </summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary>
              Перемещение фокуса к другому элементу, способному вверх от выделенного элемента.
            </summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary>
              Перемещение фокуса к другому элементу, способному вниз от выделенного элемента.
            </summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary>
              Задает возможные значения клавиш на клавиатуре.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary>
              Нет нажатых клавиш.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary>
              Клавиша "Отмена".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary>
              Клавиша BACKSPACE.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary>
              Клавиша TAB.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary>
              Клавиша перевода строки.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary>
              Клавиша CLEAR.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary>
              Клавиша RETURN.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary>
              Клавиша ВВОД.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary>
              Клавиша паузы.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary>
              Клавиша CAPS LOCK.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary>
              Клавиша CAPS LOCK.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary>
              Клавиша режима "Кана" редактора метода ввода.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary>
              Клавиша режима "Хангыль" редактора метода ввода.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary>
              Клавиша режима "Джунджа" редактора метода ввода.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary>
              Клавиша режима "Последний" редактора метода ввода.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary>
              Клавиша режима "Ханджа" редактора метода ввода.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary>
              Клавиша режима "Кандзи" редактора метода ввода.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary>
              Клавиша ESC.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary>
              Клавиша преобразования в редакторе метода ввода.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary>
              Клавиша без преобразования в редакторе метода ввода.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary>
              Клавиша принятия в редакторе метода ввода.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary>
              Запрос на изменение режима редактора метода ввода.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary>
              Клавиша ПРОБЕЛ.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary>
              Клавиша PAGE UP.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary>
              Клавиша PAGE UP.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary>
              Клавиша PAGE DOWN.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary>
              Клавиша PAGE DOWN.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary>
              Клавиша END.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary>
              Клавиша HOME.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary>
              Клавиша СТРЕЛКА ВЛЕВО.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary>
              Клавиша СТРЕЛКА ВВЕРХ.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary>
              Клавиша СТРЕЛКА ВПРАВО.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary>
              Клавиша СТРЕЛКА ВНИЗ.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary>
              Клавиша "Выбрать".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary>
              Клавиша "Печать".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary>
              Клавиша "Выполнить".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary>
              Клавиша PRINT SCREEN.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary>
              Клавиша PRINT SCREEN.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary>
              Клавиша INSERT.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary>
              Клавиша DELETE.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary>
              Клавиша справки.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary>
              Клавиша 0 (нуль).
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary>
              Клавиша 1 (один).
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary>
              Клавиша 2.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary>
              Клавиша 3.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary>
              Клавиша 4.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary>
              Клавиша 5.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary>
              Клавиша 6.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary>
              Клавиша 7.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary>
              Клавиша 8.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary>
              Клавиша 9.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary>
              Клавиша A.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary>
              Клавиша B.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary>
              Клавиша C.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary>
              Клавиша D.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary>
              Клавиша E.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary>
              Клавиша F.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary>
              Клавиша G.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary>
              Клавиша H.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary>
              Клавиша I.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary>
              Клавиша J.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary>
              Клавиша K.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary>
              Клавиша L.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary>
              Клавиша M.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary>
              Клавиша N.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary>
              Клавиша O.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary>
              Клавиша P.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary>
              Клавиша Q.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary>
              Клавиша R.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary>
              Клавиша S.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary>
              Клавиша T.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary>
              Клавиша U.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary>
              Клавиша V.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary>
              Клавиша W.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary>
              Клавиша X.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary>
              Клавиша Y.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary>
              Клавиша Z.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary>
              Левая клавиша с логотипом Windows (клавиатура Microsoft Natural Keyboard).
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary>
              Правая клавиша с логотипом Windows (клавиатура Microsoft Natural Keyboard).
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary>
              Клавиша приложения (клавиатура Microsoft Natural Keyboard).
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary>
              Клавиша перевода компьютера в спящий режим.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary>
              Клавиша 0 на цифровой клавиатуре.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary>
              Клавиша 1 на цифровой клавиатуре.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary>
              Клавиша 2 на цифровой клавиатуре.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary>
              Клавиша 3 на цифровой клавиатуре.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary>
              Клавиша 4 на цифровой клавиатуре.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary>
              Клавиша 5 на цифровой клавиатуре.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary>
              Клавиша 6 на цифровой клавиатуре.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary>
              Клавиша 7 на цифровой клавиатуре.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary>
              Клавиша 8 на цифровой клавиатуре.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary>
              Клавиша 9 на цифровой клавиатуре.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary>
              Клавиша умножения.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary>
              Клавиша сложения.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary>
              Клавиша разделителя.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary>
              Клавиша вычитания.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary>
              Клавиша десятичного разделителя.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary>
              Клавиша деления.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary>
              Клавиша F1.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary>
              Клавиша F2.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary>
              Клавиша F3.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary>
              Клавиша F4.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary>
              Клавиша F5.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary>
              Клавиша F6.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary>
              Клавиша F7.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary>
              Клавиша F8.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary>
              Клавиша F9.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary>
              Клавиша F10.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary>
              Клавиша F11.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary>
              Клавиша F12.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary>
              Клавиша F13.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary>
              Клавиша F14.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary>
              Клавиша F15.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary>
              Клавиша F16.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary>
              Клавиша F17.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary>
              Клавиша F18.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary>
              Клавиша F19.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary>
              Клавиша F20.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary>
              Клавиша F21.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary>
              Клавиша F22.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary>
              Клавиша F23.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary>
              Клавиша F24.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary>
              Клавиша NUM LOCK.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary>
              Клавиша SCROLL LOCK.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary>
              Левая клавиша SHIFT.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary>
              Правая клавиша SHIFT.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary>
              Левая клавиша CTRL.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary>
              Правая клавиша CTRL.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary>
              Левая клавиша ALT.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary>
              Правая клавиша ALT.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary>
              Клавиша браузера "Назад".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary>
              Клавиша браузера "Вперед".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary>
              Клавиша браузера "Обновить".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary>
              Клавиша браузера "Остановить".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary>
              Клавиша браузера "Поиск".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary>
              Клавиша браузера "Избранное".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary>
              Клавиша браузера "Главная".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary>
              Клавиша выключения звука.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary>
              Клавиша уменьшения громкости.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary>
              Клавиша увеличения громкости.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary>
              Клавиша "Следующая запись".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary>
              Клавиша "Предыдущая запись".
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary>
              Клавиша остановки воспроизведения.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary>
              Клавиша приостановки воспроизведения.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary>
              Клавиша запуска почты.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary>
              Клавиша выбора мультимедиа.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary>
              Клавиша запуска приложения 1.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary>
              Клавиша запуска приложения 2.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary>
              Клавиша OEM 1.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary>
              Клавиша OEM с точкой с запятой.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary>
              Клавиша OEM со сложением.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary>
              Клавиша OEM с запятой.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary>
              Клавиша OEM с минусом.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary>
              Клавиша OEM с точкой.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary>
              Клавиша OEM 2.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary>
              Клавиша OEM с вопросительным знаком.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary>
              Клавиша OEM 3.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary>
              Клавиша OEM с тильдой.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary>
              Клавиша ABNT_C1 (Бразилия).
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary>
              Клавиша ABNT_C2 (Бразилия).
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary>
              Клавиша OEM 4.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary>
              Клавиша OEM с открывающими скобками.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary>
              Клавиша OEM 5.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary>
              Клавиша OEM с вертикальной чертой.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary>
              Клавиша OEM 6.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary>
              Клавиша OEM с закрывающими скобками.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary>
              Клавиша OEM 7.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary>
              Клавиша OEM с кавычками.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary>
              Клавиша OEM 8.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary>
              Клавиша OEM 102.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary>
              Клавиша OEM с обратной косой чертой.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary>
              Специальная клавиша, маскирующая фактическую клавишу, обрабатываемую редактором метода ввода.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary>
              Специальный клавиша, маскирующая фактическую клавишу, обрабатываемую в качестве системной клавиши.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary>
              Клавиша OEM ATTN.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary>
              Клавиша DBE_ALPHANUMERIC.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary>
              Клавиша OEM FINISH.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary>
              Клавиша DBE_KATAKANA.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary>
              Клавиша OEM COPY.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary>
              Клавиша DBE_HIRAGANA.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary>
              Клавиша OEM AUTO.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary>
              Клавиша DBE_SBCSCHAR.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary>
              Клавиша OEM ENLW.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary>
              Клавиша DBE_DBCSCHAR.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary>
              Клавиша OEM BACKTAB.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary>
              Клавиша DBE_ROMAN.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary>
              Клавиша ATTN.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary>
              Клавиша DBE_NOROMAN.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary>
              Клавиша CRSEL.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary>
              Клавиша DBE_ENTERWORDREGISTERMODE.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary>
              Клавиша EXSEL.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary>
              Клавиша DBE_ENTERIMECONFIGMODE.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary>
              Клавиша ERASE EOF.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary>
              Клавиша DBE_FLUSHSTRING.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary>
              Клавиша ВОСПРОИЗВЕСТИ.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary>
              Клавиша DBE_CODEINPUT.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary>
              Клавиша МАСШТАБ.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary>
              Клавиша DBE_NOCODEINPUT.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary>
              Константа, зарезервированная для будущего использования.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary>
              Клавиша DBE_DETERMINESTRING.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary>
              Клавиша PA1.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary>
              Клавиша DBE_ENTERDLGCONVERSIONMODE.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary>
              Клавиша OEM очистки.
            </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary>
              Клавиша используется вместе с другой клавишей для создания одного объединенного символа.
            </summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary>
              Преобразует <see cref="T:System.Windows.Input.Key" /> в и из других типов объектов.
            </summary>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary>
              Предоставляет статические методы для преобразования между Win32 виртуальной ключи и WPF <see cref="T:System.Windows.Input.Key" /> перечисления. 
            </summary>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary>
              Преобразует экземпляры <see cref="T:System.String" /> в и из экземпляров <see cref="T:System.Windows.Input.Key" />.
            </summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary>
              Задает набор клавиш.
            </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary>
              Модификаторы нажаты.
            </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary>
              Клавиша ALT.
            </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary>
              Клавиша CTRL.
            </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary>
              Клавиша SHIFT.
            </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary>
              Клавиша с эмблемой Windows.
            </summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary>
              Преобразует <see cref="T:System.Windows.Input.ModifierKeys" /> в и из других типов объектов.
            </summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary>
              Преобразует экземпляры <see cref="T:System.String" /> в и из экземпляров <see cref="T:System.Windows.Input.ModifierKeys" />.
            </summary>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary>
              Представляет запрос на перемещение фокуса на другой элемент управления.
            </summary>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary>
              Описывает ширину, высоту и расположение целого прямоугольника.
            </summary>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary>
              Преобразует экземпляры других типов в и из <see cref="T:System.Windows.Int32Rect" />.
            </summary>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary>
              Разрешает совместное управление конвейером сообщений между Win32 и WPF в сценариях взаимодействия.
            </summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary>
              Предоставляет приемник клавиатуры для компонентов, которыми управляет переходов, клавиш и мнемоник между границами взаимодействия и между HWND.
               Этот интерфейс реализует управление сообщениями от клавиатуры в WPF-Win32 сценарии взаимодействия.
            </summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary>
              Управляет фокусом ввода в контейнере.
                Этот интерфейс реализует управление сообщениями от клавиатуры в WPF-Win32 сценарии взаимодействия.
            </summary>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary>
              Содержит информацию сообщения из очереди сообщений потока.
            </summary>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary>
              Представляет метод, обрабатывающий события <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" /> и <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />.
            </summary>
      <param name="msg">
                Структура с данными сообщения.
              </param>
      <param name="handled">
                <see langword="true" />, если сообщение обработано. В противном случае — <see langword="false" />.
              </param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary>
              Обеспечивает поддержку прослушивания событий для классов, которые ожидают, что для получения событий через шаблон WeakEvent и <see cref="T:System.Windows.WeakEventManager" />.
            </summary>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary>
              Представляет идентификатор свойства и значение свойства для локально заданного свойства зависимостей.
            </summary>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary>
              Обеспечивает поддержку перечисления для локальных значений всех свойств зависимостей, которые существуют в <see cref="T:System.Windows.DependencyObject" />.
            </summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary>
              Указывает, как должно быть сериализовано свойство.
            </summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary>
              Свойство должно быть сериализовано как атрибут.
            </summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary>
              Задает для свойства флаги сериализации.
            </summary>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary>
              Абстрактный класс используется внутренне компилятором WPF XAML для поддержки использование внутренних типов.
            </summary>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary>
              Предоставляет механизм, при котором типы можно объявить, что они могут получать выражение (или другой класс) из расширения разметки, где выводом является другой тип свойства не целевое свойство.
               Не используйте для .NET Framework 4 реализации; см. примечания.
            </summary>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary>
              Абстрактный класс, представляющий объект, который может использоваться для перемещения по дереву объектов.
            </summary>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary>
              Абстрактный класс, предоставляющий описание свойств для использования при написании разметки, инкапсулирующей доступ к свойствам и их значениям.
            </summary>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary>
              Обеспечивает реализацию для <see cref="T:System.IServiceProvider" /> интерфейса с помощью методов, позволяющих добавлять службы.
            </summary>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary>
              Преобразует экземпляры <see cref="T:System.String" /> в и из экземпляров <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary>
              Позволяет WPF приложений для отключения точек на дюйм (dpi) поддержка для всех элементов пользовательского интерфейса.
            </summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary>
               Представляет матрицу аффинного преобразования 3 x 3, используемую для преобразований в пространстве Двумерный.
            </summary>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary>
              Преобразует экземпляры других типов в и из <see cref="T:System.Windows.Media.Matrix" />.
            </summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary>
              Реализует базовую поддержку WPF для методов <see cref="T:System.Windows.Markup.INameScope" />, которые сохраняют или извлекают сопоставления "имя-объект" в определенную область имен XAML.
               Добавляет поддержку присоединенных свойств для упрощения динамического получения или задания имен области имен XAML на уровне элемента...
            </summary>
    </member>
    <member name="T:System.Windows.Point">
      <summary>
              Представляет пару координат X и Y в двухмерном пространстве.
            </summary>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary>
              Преобразует экземпляры других типов в и из <see cref="T:System.Windows.Point" />.
            </summary>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary>
              Представляет обратный вызов, который вызывается при изменении действующего значения свойства зависимостей.
            </summary>
      <param name="d">
                Объект <see cref="T:System.Windows.DependencyObject" />, в котором свойство имеет измененное значение.
              </param>
      <param name="e">
                Данные события, выдаваемые любым событием, которое отслеживает изменения действующего значения данного свойства.
              </param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary>
              Определяет некоторые аспекты поведения свойства зависимостей применительно к определенному типу, включая условия, в которых оно было зарегистрировано.
            </summary>
    </member>
    <member name="T:System.Windows.Rect">
      <summary>
              Описывает ширину, высоту и расположение прямоугольника.
            </summary>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary>
              Преобразует экземпляры других типов и экземпляров <see cref="T:System.Windows.Rect" />.
            </summary>
    </member>
    <member name="T:System.Windows.Size">
      <summary>
              Реализует структуру, которая используется для описания <see cref="T:System.Windows.Size" /> объекта.
            </summary>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary>
              Преобразует экземпляры других типов и экземпляров <see cref="T:System.Windows.Size" /> класса.
            </summary>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary>
              Содержит начальный экран приложения Windows Presentation Foundation (WPF).
            </summary>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary>
              Предоставляет службы для управления очередью рабочих элементов для потока.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary>
              Предоставляет данные события для <see cref="T:System.Windows.Threading.Dispatcher" /> связанных событий.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary>
              Представляет цикл выполнения в <see cref="T:System.Windows.Threading.Dispatcher" />.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary>
              Предоставляет данные события для <see cref="T:System.Windows.Threading.DispatcherHooks" /> события.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary>
              Представляет метод, обрабатывающий <see cref="T:System.Windows.Threading.DispatcherHooks" /> связанных событий.
            </summary>
      <param name="sender">
                Источник события.
              </param>
      <param name="e">
                Данные события.
              </param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary>
              Предоставляет дополнительную информацию о <see cref="T:System.Windows.Threading.Dispatcher" /> обработки.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary>
              Представляет объект, связанный с <see cref="T:System.Windows.Threading.Dispatcher" />.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary>
              Представляет объект, который используется для взаимодействия с операцией, которая была учтена <see cref="T:System.Windows.Threading.Dispatcher" /> очереди.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary>
              Представляет объект, который используется для взаимодействия с операцией, которая была учтена <see cref="T:System.Windows.Threading.Dispatcher" /> очереди и содержит <see cref="T:System.Threading.Tasks.Task`1" />.
            </summary>
      <typeparam name="TResult">
                Тип, возвращаемый <see cref="T:System.Threading.Tasks.Task`1" />.
              </typeparam>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary>
              Представляет делегат для использования в операциях диспетчера.
            </summary>
      <param name="arg">
                Аргумент, переданный в обратный вызов.
              </param>
      <returns>
              Объект, возвращенный обратным вызовом.
            </returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary>
              Описывает возможные значения состояния <see cref="T:System.Windows.Threading.DispatcherOperation" />.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary>
              Операция находится в состоянии ожидания и еще не <see cref="T:System.Windows.Threading.Dispatcher" /> очереди.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary>
              Операция была прервана.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary>
              Операция завершена.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary>
              Операция начала выполнения, но не завершена.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary>
              Описывает приоритеты, в которых можно вызвать операции посредством <see cref="T:System.Windows.Threading.Dispatcher" />.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary>
              Значением перечисления является -1.
                Это недопустимый приоритет.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary>
              Значение перечисления — 0.
                Операции не обрабатываются.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary>
              Значение перечисления, которое равно 1.
                Операции обрабатываются, когда система бездействует.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary>
              Значение перечисления — 2.
                Операции обрабатываются, когда приложение бездействует.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary>
              Значением перечисления является 3.
                Операции обрабатываются после завершения фоновых операций.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary>
              Значение перечисления — 4.
                Операции обрабатываются после завершения всех остальных операций, кроме простаивающего.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary>
              Значение перечисления, которое равно 5.
                Операции обрабатываются с тем же приоритетом, как ввод.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary>
              Значение перечисления — 6.
                Операции обрабатываются после завершения макета и отрисовки, но перед обработкой элементов с приоритетом ввода обслуживаются.
               В частности, это используется при вызове события Loaded.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary>
              Значение перечисления — 7.
                Операции обрабатываются с тем же приоритетом, как визуализации.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary>
              Значение перечисления — 8.
                Операции обрабатываются с тем же приоритетом, что и привязка данных.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary>
              Значение перечисления, которое равно 9.
                Операции обрабатываются с обычным приоритетом.
                Это типичный приоритет приложений.
            </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary>
              Значение перечисления — 10.
                Операции обрабатываются перед другими асинхронными операциями.
                Это наивысший приоритет.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary>
              Представляет объект типа awaitable, асинхронно передает управление обратно в текущий dispatcher и предоставляет возможность для обработки других событий диспетчером
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary>
              Представляет объект, который ожидает завершения асинхронной задачи.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary>
              Представляет объект Dispatcher, когда он находится в состоянии отключения и предоставляет средства для повторного включения.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary>
              Предоставляет контекст синхронизации для Windows Presentation Foundation (WPF).
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary>
              Таймер, который интегрирован в <see cref="T:System.Windows.Threading.Dispatcher" /> очереди, которая обрабатывается в течение указанного интервала времени и с указанным приоритетом.
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary>
              Предоставляет данные для <see cref="T:System.Windows.Threading.Dispatcher" /> <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> событий. 
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary>
              Представляет метод, обрабатывающий событие <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.
            </summary>
      <param name="sender">
                Источник события.
              </param>
      <param name="e">
                Данные события.
              </param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary>
              Предоставляет данные для <see cref="T:System.Windows.Threading.Dispatcher" /> <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> событий. 
            </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary>
              Представляет метод, обрабатывающий событие <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.
            </summary>
      <param name="sender">
                Источник события.
              </param>
      <param name="e">
                Данные события.
              </param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary>
              Представляет метод, используемый как обратный вызов, проверяющий фактическое значение свойства зависимостей.
            </summary>
      <param name="value">
                Значение, подлежащий проверке.
              </param>
      <returns>
              Значение <see langword="true" />, если значение проверено; значение <see langword="false" />, если отправленное значение недопустимо.
            </returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary>
              Представляет смещение в Двумерный пространства.
            </summary>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary>
               Преобразует экземпляры других типов в и из <see cref="T:System.Windows.Vector" />.
            </summary>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary>
              Предоставляет базовый класс для диспетчера событий, используемого в шаблон слабых событий.
               Диспетчер добавляет и удаляет прослушиватели для событий (или обратных вызовов), которые также используют этот шаблон.
            </summary>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary>
              Предоставляет список встроенных коллекций для хранения прослушивателей для <see cref="T:System.Windows.WeakEventManager" />.
            </summary>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary>
              Список строго типизированную коллекцию для хранения прослушивателей для <see cref="T:System.Windows.WeakEventManager" />.
               Этот класс определяет тип параметра для данных события, который используется.
            </summary>
      <typeparam name="TEventArgs">
                Тип, содержащий данные события.
              </typeparam>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary>
              Предоставляет типобезопасную <see cref="T:System.Windows.WeakEventManager" /> позволяет указать обработчик событий для использования с шаблоном «прослушиватель слабых событий».
               Этот класс определяет параметр типа источника события и параметр типа для данных события, который используется.
            </summary>
      <typeparam name="TEventSource">
                Тип, который вызывает событие.
              </typeparam>
      <typeparam name="TEventArgs">
                Тип, содержащий данные события.
              </typeparam>
    </member>
  </members>
</doc>