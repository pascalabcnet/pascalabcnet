<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.Linq</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Linq.Extensions">
      <summary>Содержит методы расширения LINQ to XML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Возвращает коллекцию элементов, содержащую предков каждого узла в исходной коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий предков каждого узла в исходной коллекции.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XNode" />, содержащий исходную коллекцию.</param>
      <typeparam name="T">Тип объектов в <paramref name="source" /> с ограничением до <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary>Возвращает отфильтрованную коллекцию элементов, содержащую предков каждого узла в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий предков каждого узла в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XNode" />, содержащий исходную коллекцию.</param>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
      <typeparam name="T">Тип объектов в <paramref name="source" /> с ограничением до <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Возвращает коллекцию элементов, которые содержат каждый элемент в исходной коллекции и предков каждого элемента в исходной коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий каждый элемент в исходной коллекции и предков каждого элемента в исходной коллекции.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий исходную коллекцию.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Возвращает отфильтрованную коллекцию элементов, содержащую каждый элемент в исходной коллекции и предков каждого элемента в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий каждый элемент в исходной коллекции и предков каждого элемента в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий исходную коллекцию.</param>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Возвращает коллекцию атрибутов каждого элемента в исходной коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XAttribute" />, содержащий атрибуты каждого элемента в исходной коллекции.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий исходную коллекцию.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Возвращает отфильтрованную коллекцию атрибутов каждого элемента в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XAttribute" />, содержащий отфильтрованную коллекцию атрибутов каждого элемента в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий исходную коллекцию.</param>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Возвращает коллекцию подчиненных узлов каждого документа и элемента в исходной коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XNode" /> подчиненных узлов каждого документа и элемента в исходной коллекции.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XContainer" />, содержащий исходную коллекцию.</param>
      <typeparam name="T">Тип объектов в <paramref name="source" /> с ограничением до <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Возвращает коллекцию узлов, содержащую каждый элемент в исходной коллекции и подчиненные узлы каждого элемента в исходной коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XNode" />, содержащий каждый элемент в исходной коллекции и подчиненные узлы каждого элемента в исходной коллекции.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий исходную коллекцию.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Возвращает коллекцию элементов, содержащую подчиненные элементы каждого элемента и документа в исходной коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий подчиненные элементы каждого элемента и документа в исходной коллекции.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XContainer" />, содержащий исходную коллекцию.</param>
      <typeparam name="T">Тип объектов в <paramref name="source" /> с ограничением до <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary>Возвращает отфильтрованную коллекцию элементов, содержащую подчиненные элементы каждого элемента и документа в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий подчиненные элементы каждого элемента и документа в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XContainer" />, содержащий исходную коллекцию.</param>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
      <typeparam name="T">Тип объектов в <paramref name="source" /> с ограничением до <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>Возвращает коллекцию элементов, содержащую каждый элемент в исходной коллекции и подчиненные элементы каждого элемента в исходной коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий каждый элемент в исходной коллекции и подчиненные элементы каждого элемента в исходной коллекции.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий исходную коллекцию.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>Возвращает отфильтрованную коллекцию элементов, содержащую каждый элемент в исходной коллекции и подчиненные элементы каждого элемента в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий каждый элемент в исходной коллекции и подчиненные элементы каждого элемента в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий исходную коллекцию.</param>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Возвращает коллекцию дочерних элементов каждого элемента и документа в исходной коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" /> дочерних элементов каждого элемента или документа в исходной коллекции.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий исходную коллекцию.</param>
      <typeparam name="T">Тип объектов в <paramref name="source" /> с ограничением до <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary>Возвращает отфильтрованную коллекцию дочерних элементов каждого элемента и документа в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" /> дочерних элементов каждого элемента и документа в исходной коллекции.В коллекцию включаются только те элементы, которые обладают соответствующим <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий исходную коллекцию.</param>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
      <typeparam name="T">Тип объектов в <paramref name="source" /> с ограничением до <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Возвращает коллекцию узлов, содержащую все узлы в исходной коллекции, отсортированные в порядке следования документов.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XNode" />, содержащий все узлы в исходной коллекции, отсортированные в порядке следования документов.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XNode" />, содержащий исходную коллекцию.</param>
      <typeparam name="T">Тип объектов в <paramref name="source" /> с ограничением до <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Возвращает коллекцию дочерних узлов каждого документа и элемента в исходной коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XNode" /> дочерних узлов каждого документа и элемента в исходной коллекции.</returns>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XNode" />, содержащий исходную коллекцию.</param>
      <typeparam name="T">Тип объектов в <paramref name="source" /> с ограничением до <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
      <summary>Удаление каждого атрибута в исходной коллекции из родительского элемента.</summary>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XAttribute" />, содержащий исходную коллекцию.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Удаление каждого узла в исходной коллекции из родительского узла.</summary>
      <param name="source">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XNode" />, содержащий исходную коллекцию.</param>
      <typeparam name="T">Тип объектов в <paramref name="source" /> с ограничением до <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.Linq.LoadOptions">
      <summary>Указывает возможности загрузки, анализируя XML. </summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.None">
      <summary>Не сохраняет незначительные пробелы или загружает базовый URI и информацию строки.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.PreserveWhitespace">
      <summary>Сохраняет незначительные пробелы при анализе.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetBaseUri">
      <summary>Запрашивает информацию о базовом URI из <see cref="T:System.Xml.XmlReader" /> и делает ее доступной через свойство <see cref="P:System.Xml.Linq.XObject.BaseUri" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetLineInfo">
      <summary>Запрашивает информацию о строке из <see cref="T:System.Xml.XmlReader" /> и делает ее доступной через свойства на <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.ReaderOptions">
      <summary>Определяет, нужно ли пропускать дубликаты пространств имен при загрузке объекта <see cref="T:System.Xml.Linq.XDocument" /> с помощью <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.None">
      <summary>Не указаны параметры объекта чтения.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.OmitDuplicateNamespaces">
      <summary>Пропускать дубликаты пространств имен при загрузке <see cref="T:System.Xml.Linq.XDocument" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.SaveOptions">
      <summary>Указывает возможности сериализации.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.None">
      <summary>Форматирование (отступ) XML при сериализации.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.DisableFormatting">
      <summary>Сохранение всех незначительных пробелов при сериализации.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces">
      <summary>Удаление дубликатов объявлений пространств имен при сериализации.</summary>
    </member>
    <member name="T:System.Xml.Linq.XAttribute">
      <summary>Представляет атрибут XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Linq.XAttribute" /> из другого объекта <see cref="T:System.Xml.Linq.XAttribute" />. </summary>
      <param name="other">Объект <see cref="T:System.Xml.Linq.XAttribute" /> для копирования.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="other" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Linq.XAttribute" /> из указанного имени и значения. </summary>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> атрибута.</param>
      <param name="value">
        <see cref="T:System.Object" />, содержащий значение атрибута.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> или <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.EmptySequence">
      <summary>Получение пустой коллекции атрибутов.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XAttribute" />, содержащий пустую коллекцию.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
      <summary>Определяет, является ли этот атрибут объявлением пространства имен.</summary>
      <returns>Значение true, если этот атрибут является объявлением пространства имен, иначе значение false.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Name">
      <summary>Получение развернутого имени этого атрибута.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XName" />, содержащий имя атрибута.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NextAttribute">
      <summary>Получение следующего атрибута родительского элемента.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XAttribute" />, содержащий следующий атрибут родительского элемента.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NodeType">
      <summary>Получение типа для данного узла.</summary>
      <returns>Тип узла.Для объектов <see cref="T:System.Xml.Linq.XAttribute" /> этим значением является <see cref="F:System.Xml.XmlNodeType.Attribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
      <summary>Приведение значения этого атрибута <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.DateTime" />.</summary>
      <returns>
        <see cref="T:System.DateTime" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">
        <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTime" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTime" />, включающего содержимое этого <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.DateTime" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Decimal" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Decimal" />, включающего содержимое этого <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Double" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Double" />, включающего содержимое этого <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
      <summary>Приведение значения этого атрибута <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Decimal" />.</summary>
      <returns>
        <see cref="T:System.Decimal" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">
        <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
      <summary>Приведение значения этого атрибута <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>
        <see cref="T:System.DateTimeOffset" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">
        <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
      <summary>Приведение значения этого атрибута <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Guid" />.</summary>
      <returns>
        <see cref="T:System.Guid" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">
        <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Guid" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Guid" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Guid" />, включающего содержимое этого <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Guid" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.TimeSpan" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.TimeSpan" />, включающего содержимое этого <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.TimeSpan" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTimeOffset" />, включающего содержимое этого <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.DateTimeOffset" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
      <summary>Приведение значения этого атрибута <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.TimeSpan" />.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">
        <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.TimeSpan" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
      <summary>Приведение значения этого атрибута <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Double" />.</summary>
      <returns>
        <see cref="T:System.Double" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">
        <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Int32" />.</summary>
      <returns>Объект <see cref="T:System.Int32" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Int32" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Int32" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для объекта <see cref="T:System.Int32" />, включающего содержимое этого атрибута <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
      <summary>Приведение значения этого атрибута <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.UInt32" />.</summary>
      <returns>
        <see cref="T:System.UInt32" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">
        <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.UInt32" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.String" />.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий данные этого атрибута <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">
        <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
      <summary>Приведение значения этого атрибута <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Boolean" />.</summary>
      <returns>
        <see cref="T:System.Boolean" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">
        <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Boolean" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для объекта <see cref="T:System.Boolean" />, включающего содержимое этого атрибута <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Boolean" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt32" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt32" />, включающего содержимое этого <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.UInt32" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt64" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt64" />, включающего содержимое этого <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.UInt64" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
      <summary>Приведение значения этого атрибута <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Single" />.</summary>
      <returns>
        <see cref="T:System.Single" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">
        <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Single" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Single" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Single" />, включающего содержимое этого <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Single" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Int64" />.</summary>
      <returns>Объект <see cref="T:System.Int64" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Int64" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Int64" />, включающего содержимое этого <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">Атрибут <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.Int64" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
      <summary>Приведение значения этого атрибута <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.UInt64" />.</summary>
      <returns>
        <see cref="T:System.UInt64" />, содержащий данные <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="attribute">
        <see cref="T:System.Xml.Linq.XAttribute" /> для приведения к <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException">Атрибут не содержит допустимое значение <see cref="T:System.UInt64" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="attribute" /> — null.</exception>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.PreviousAttribute">
      <summary>Получение предыдущего атрибута родительского элемента.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XAttribute" />, содержащий предыдущий атрибут родительского элемента.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.Remove">
      <summary>Удаление атрибута из родительского элемента.</summary>
      <exception cref="T:System.InvalidOperationException">Родительский элемент имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
      <summary>Задание значения этого атрибута.</summary>
      <param name="value">Значение, которое следует назначить этому атрибуту.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> является <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.ToString">
      <summary>Преобразование текущего объекта <see cref="T:System.Xml.Linq.XAttribute" /> к строковому представлению.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий представление атрибута в тексте XML и его значение.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Value">
      <summary>Возвращает или задает значение этого атрибута.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий значение атрибута.</returns>
      <exception cref="T:System.ArgumentNullException">При установке <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="T:System.Xml.Linq.XCData">
      <summary>Представляет текстовый узел, содержащий CDATA. </summary>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class. </summary>
      <param name="value">Строка, содержащая значение узла <see cref="T:System.Xml.Linq.XCData" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XCData" /> class. </summary>
      <param name="other">узел <see cref="T:System.Xml.Linq.XCData" />, из которого требуется выполнять копирование.</param>
    </member>
    <member name="P:System.Xml.Linq.XCData.NodeType">
      <summary>Получает тип узла для этого узла.</summary>
      <returns>Тип узла.Для объектов <see cref="T:System.Xml.Linq.XCData" /> это значение — <see cref="F:System.Xml.XmlNodeType.CDATA" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
      <summary>Записывает этот объект CDATA в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.Linq.XComment">
      <summary>Представляет комментарий XML. </summary>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XComment" /> с указанным содержимым строки. </summary>
      <param name="value">Строка, содержащая значение нового объекта <see cref="T:System.Xml.Linq.XComment" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> равен null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XComment" /> из существующего узла комментария. </summary>
      <param name="other">узел <see cref="T:System.Xml.Linq.XComment" />, из которого нужно копировать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="other" /> равен null.</exception>
    </member>
    <member name="P:System.Xml.Linq.XComment.NodeType">
      <summary>Получает тип узла для этого узла.</summary>
      <returns>Тип узла.Для объектов <see cref="T:System.Xml.Linq.XComment" />, этим значением является <see cref="F:System.Xml.XmlNodeType.Comment" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XComment.Value">
      <summary>Получает или задает значение строки этого комментария.</summary>
      <returns>
        <see cref="T:System.String" /> содержит значение строки этого комментария.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> равен  null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
      <summary>Запишите этот комментарий на <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.Linq.XContainer">
      <summary>Представляет узел, который может содержать другие узлы.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object)">
      <summary>Adds the specified content as children of this <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content">Объект содержимого, включающий простое содержимое или коллекцию объектов содержимого, подлежащих добавлению.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object[])">
      <summary>Adds the specified content as children of this <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content">Список параметров объектов содержимого.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
      <summary>Добавляет заданное содержимое как первые дочерние элементы данного документа или элемента.</summary>
      <param name="content">Объект содержимого, включающий простое содержимое или коллекцию объектов содержимого, подлежащих добавлению.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
      <summary>Добавляет заданное содержимое как первые дочерние элементы данного документа или элемента.</summary>
      <param name="content">Список параметров объектов содержимого.</param>
      <exception cref="T:System.InvalidOperationException">Родительский элемент является null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XContainer.CreateWriter">
      <summary>Создает <see cref="T:System.Xml.XmlWriter" />, который можно использовать для добавления узлов в <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlWriter" /> который готов принять содержимое для записи.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XContainer.DescendantNodes">
      <summary>Возвращает коллекцию подчиненных узлов для документа или элемента в порядке следования документов.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />
        <see cref="T:System.Xml.Linq.XNode" /> содержащий подчиненные узлы <see cref="T:System.Xml.Linq.XContainer" /> в порядке следования документов.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants">
      <summary>Возвращает коллекцию подчиненных узлов для данного документа или элемента в порядке следования документов.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />
        <see cref="T:System.Xml.Linq.XElement" /> содержащий подчиненные элементы <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
      <summary>Возвращает фильтрованную коллекцию подчиненных узлов для данного документа или элемента в порядке следования документов.Только элементы, обладающие совпадающим <see cref="T:System.Xml.Linq.XName" />, входят в состав коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />
        <see cref="T:System.Xml.Linq.XElement" />, содержащий подчиненные элементы <see cref="T:System.Xml.Linq.XContainer" />, которые соответствуют заданному <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
      <summary>Получает первый (в порядке следования документа) дочерний элемент с заданным <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" />, который соответствует заданному <see cref="T:System.Xml.Linq.XName" /> или null.</returns>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements">
      <summary>Возвращает коллекцию дочерних элементов для данного документа или элемента в порядке следования документа.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />
        <see cref="T:System.Xml.Linq.XElement" />, содержащий дочерние элементы данного <see cref="T:System.Xml.Linq.XContainer" /> в порядке следования документа.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
      <summary>Возвращает фильтрованную коллекцию дочерних элементов для данного документа или элемента в порядке следования документа.Только элементы, обладающие совпадающим <see cref="T:System.Xml.Linq.XName" />, входят в состав коллекции.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />
        <see cref="T:System.Xml.Linq.XElement" />, содержащий дочерние элементы данного <see cref="T:System.Xml.Linq.XContainer" />, который имеет совпадающий <see cref="T:System.Xml.Linq.XName" /> в порядке следования документа.</returns>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
    </member>
    <member name="P:System.Xml.Linq.XContainer.FirstNode">
      <summary>Получает первый дочерний узел от данного узла.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNode" />, содержащий первый дочерний узел <see cref="T:System.Xml.Linq.XContainer" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Xml.Linq.XContainer.LastNode">
      <summary>Получает последний дочерний узел от данного узла.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNode" />, содержащий последний дочерний узел <see cref="T:System.Xml.Linq.XContainer" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Nodes">
      <summary>Возвращает коллекцию дочерних узлов для данного документа или элемента в порядке следования документа.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />
        <see cref="T:System.Xml.Linq.XNode" />, содержащий содержимое данного <see cref="T:System.Xml.Linq.XContainer" /> в порядке следования документа.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.RemoveNodes">
      <summary>Удаляет дочерние элементы из данного документа или элемента.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
      <summary>Заменяет дочерние узлы данного документа или элемента заданным содержимым.</summary>
      <param name="content">Объект содержимого, включающий простое содержимое или коллекцию объектов содержимого, которые заменяют дочерние узлы.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
      <summary>Заменяет дочерние узлы данного документа или элемента заданным содержимым.</summary>
      <param name="content">Список параметров объектов содержимого.</param>
    </member>
    <member name="T:System.Xml.Linq.XDeclaration">
      <summary>Представляет объявление XML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XDeclaration" /> с указанной версией, кодированием и автономным статусом.</summary>
      <param name="version">Версия XML, обычно "1.0".</param>
      <param name="encoding">Кодирование для документа XML.</param>
      <param name="standalone">Строка, содержащая "да" или "нет", которая указывает, является ли XML автономным или требует решения внешней сущности.</param>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XDeclaration" /> class from another <see cref="T:System.Xml.Linq.XDeclaration" /> object. </summary>
      <param name="other">
        <see cref="T:System.Xml.Linq.XDeclaration" /> используется для инициализации этого объекта <see cref="T:System.Xml.Linq.XDeclaration" />.</param>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Encoding">
      <summary>Возвращает или задает кодирование для этого документа.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий имя страницы кода для этого документа.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Standalone">
      <summary>Возвращает или задает отдельное свойство для этого документа.</summary>
      <returns>
        <see cref="T:System.String" /> содержит отдельное свойство для этого документа.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.ToString">
      <summary>Представляет объявление как отформатированную строку.</summary>
      <returns>
        <see cref="T:System.String" /> содержит отформатированную строку XML.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Version">
      <summary>Возвращает или задает версию свойства для этого документа.</summary>
      <returns>
        <see cref="T:System.String" /> содержит версию свойства для этого документа.</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocument">
      <summary>Представляет документ XML. </summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XDocument" />. </summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XDocument" /> с указанным содержимым.</summary>
      <param name="content">Список параметров объектов содержимого для добавления к этому документу.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XDocument" /> с указанным <see cref="T:System.Xml.Linq.XDeclaration" /> и содержимым.</summary>
      <param name="declaration">
        <see cref="T:System.Xml.Linq.XDeclaration" /> для документа.</param>
      <param name="content">Содержимое документа.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XDocument" /> из существующего объекта <see cref="T:System.Xml.Linq.XDocument" />.</summary>
      <param name="other">Объект <see cref="T:System.Xml.Linq.XDocument" />, который будет копироваться.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Declaration">
      <summary>Возвращает или задает объявление XML для этого документа.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XDeclaration" />, который содержит объявление XML для этого документа.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.DocumentType">
      <summary>Получает определение типа документов (DTD) для этого документа.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XDocumentType" />, который содержит DTD для этого документа.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.Linq.XDocument" /> с помощью указанного потока.</summary>
      <returns>Объект <see cref="T:System.Xml.Linq.XDocument" />, который считывает содержащиеся в потоке данные. </returns>
      <param name="stream">Поток, содержащий XML-данные.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary>Создает новый экземпляр<see cref="T:System.Xml.Linq.XDocument" />, используя указанный поток и при необходимости оставляя пустое пространство, задавая базовый URI и сохраняя сведения о строках.</summary>
      <returns>Объект <see cref="T:System.Xml.Linq.XDocument" />, который считывает содержащиеся в потоке данные.</returns>
      <param name="stream">Поток, содержащий данные XML.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" />, указывающий, следует ли загружать базовый URI и сведения о строках.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
      <summary>Создает новый <see cref="T:System.Xml.Linq.XDocument" /> из <see cref="T:System.IO.TextReader" />. </summary>
      <returns>Объект <see cref="T:System.Xml.Linq.XDocument" />, включающий содержимое указанного <see cref="T:System.IO.TextReader" />.</returns>
      <param name="textReader">Объект <see cref="T:System.IO.TextReader" />, включающий содержимое для <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary>Создает новый <see cref="T:System.Xml.Linq.XDocument" /> из <see cref="T:System.IO.TextReader" />, при необходимости оставляя пустое пространство, задавая базовый URI и сохраняя сведения о строках.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XDocument" />, который содержит XML, прочитанный из указанного <see cref="T:System.IO.TextReader" />.</returns>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" />, включающий содержимое для <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" />, который определяет поведение пустого пространства и необходимость загрузки базового URI и сведений о строках.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String)">
      <summary>Создает новый <see cref="T:System.Xml.Linq.XDocument" /> из файла. </summary>
      <returns>
        <see cref="T:System.Xml.Linq.XDocument" />, который включает содержимое указанного файла.</returns>
      <param name="uri">Строка URI, ссылающаяся на файл для загрузки в новый <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Создает новый <see cref="T:System.Xml.Linq.XDocument" /> из файла, при необходимости оставляя пустое пространство, задавая базовый URI и сохраняя сведения о строках.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XDocument" />, который включает содержимое указанного файла.</returns>
      <param name="uri">Строка URI, ссылающаяся на файл для загрузки в новый <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" />, который определяет поведение пустого пространства и необходимость загрузки базового URI и сведений о строках.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
      <summary>Создает новый <see cref="T:System.Xml.Linq.XDocument" /> из <see cref="T:System.Xml.XmlReader" />. </summary>
      <returns>
        <see cref="T:System.Xml.Linq.XDocument" />, включающий содержимое указанного <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />, включающий содержимое для <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary>Загружает <see cref="T:System.Xml.Linq.XElement" /> из <see cref="T:System.Xml.XmlReader" />, при необходимости задавая базовый URI и сохраняя сведения о строках.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XDocument" />, который содержит XML, прочитанный из указанного <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />, который будет читаться для содержимого <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" />, указывающий, следует ли загружать базовый URI и сведения о строках.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.NodeType">
      <summary>Получает тип данного узла.</summary>
      <returns>Тип узла.Для объектов <see cref="T:System.Xml.Linq.XDocument" /> этим значением является <see cref="F:System.Xml.XmlNodeType.Document" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String)">
      <summary>Создает новый <see cref="T:System.Xml.Linq.XDocument" /> из строки.</summary>
      <returns>Объект <see cref="T:System.Xml.Linq.XDocument" />, заполненный из строки, которая содержит XML-код.</returns>
      <param name="text">Строка, содержащая XML.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Создает новый <see cref="T:System.Xml.Linq.XDocument" /> из строки, при необходимости оставляя пустое пространство, задавая базовый URI и сохраняя сведения о строках.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XDocument" />, заполненный из строки, которая содержит XML.</returns>
      <param name="text">Строка, содержащая XML.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" />, который определяет поведение пустого пространства и необходимость загрузки базового URI и сведений о строках.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Root">
      <summary>Получает корневой элемент дерева XML для этого документа.</summary>
      <returns>Корневой <see cref="T:System.Xml.Linq.XElement" /> дерева XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
      <summary>Выводит этот элемент <see cref="T:System.Xml.Linq.XDocument" /> в указанный поток <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Поток для вывода <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary>Выводит данный элемент <see cref="T:System.Xml.Linq.XDocument" /> в указанный поток <see cref="T:System.IO.Stream" />, при необходимости задавая форматирование.</summary>
      <param name="stream">Поток для вывода <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options">Объект <see cref="T:System.Xml.Linq.SaveOptions" />, задающий форматирование.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
      <summary>Сериализует данный <see cref="T:System.Xml.Linq.XDocument" /> для <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">Объект <see cref="T:System.IO.TextWriter" />, в который будет записан объект <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary>Сериализует данный <see cref="T:System.Xml.Linq.XDocument" /> для <see cref="T:System.IO.TextWriter" />, при необходимости выключая форматирование.</summary>
      <param name="textWriter">Объект <see cref="T:System.IO.TextWriter" /> для вывода XML-кода.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.SaveOptions" />, указывающий поведение форматирования.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String)">
      <summary>Сериализует данный <see cref="T:System.Xml.Linq.XDocument" /> для файла.</summary>
      <param name="fileName">Строка, которая содержит имя файла.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary>Сериализует данный <see cref="T:System.Xml.Linq.XDocument" /> для файла, при необходимости выключая форматирование.</summary>
      <param name="fileName">Строка, которая содержит имя файла.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.SaveOptions" />, указывающий поведение форматирования.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
      <summary>Сериализует данный <see cref="T:System.Xml.Linq.XDocument" /> для <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />, в который будет записан <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
      <summary>Записывает данный документ в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в который будет вести запись этот метод.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.Linq.XDocumentType">
      <summary>Представляет определение типа документов XML (DTD). </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class. </summary>
      <param name="name">
        <see cref="T:System.String" />, содержащий определенное имя DTD, совпадающее с определенным именем корневого элемента документа XML.</param>
      <param name="publicId">
        <see cref="T:System.String" />, в котором содержится открытый идентификатор внешнего открытого DTD.</param>
      <param name="systemId">
        <see cref="T:System.String" />, в котором содержится системный идентификатор внешнего частного DTD.</param>
      <param name="internalSubset">
        <see cref="T:System.String" /> содержит внутреннее подмножество для внутреннего DTD.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Xml.Linq.XDocumentType" /> из другого объекта <see cref="T:System.Xml.Linq.XDocumentType" />.</summary>
      <param name="other">Объект <see cref="T:System.Xml.Linq.XDocumentType" />, из которого нужно копировать.</param>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.InternalSubset">
      <summary>Получает или задает внутреннее подмножество для этого Определения типа документа (DTD).</summary>
      <returns>
        <see cref="T:System.String" /> содержит внутреннее подмножество для этого Определения типа документа (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.Name">
      <summary>Получает или задает имя для этого Определения типа документа (DTD).</summary>
      <returns>
        <see cref="T:System.String" /> содержит имя для этого Определения типа документа (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.NodeType">
      <summary>Получение типа для данного узла.</summary>
      <returns>Тип узла.Для объектов <see cref="T:System.Xml.Linq.XDocumentType" /> этим значением является <see cref="F:System.Xml.XmlNodeType.DocumentType" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.PublicId">
      <summary>Получает или задает открытый идентификатор для этого Определения типа документа (DTD).</summary>
      <returns>
        <see cref="T:System.String" /> содержит открытый идентификатор для этого Определения типа документа (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.SystemId">
      <summary>Получает или задает системный идентификатор для этого Определения типа документа (DTD).</summary>
      <returns>
        <see cref="T:System.String" /> содержит системный идентификатор для этого Определения типа документа (DTD).</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary>Запишите этот <see cref="T:System.Xml.Linq.XDocumentType" /> на <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.Linq.XElement">
      <summary>Представление элемента XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
      <summary>Инициализирует новый экземпляр  класса <see cref="T:System.Xml.Linq.XElement" /> из другого объекта <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="other">Объект <see cref="T:System.Xml.Linq.XElement" /> для копирования.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Linq.XElement" /> с указанным именем. </summary>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" />, содержащий имя элемента.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XElement" /> с указанным именем и содержимым.</summary>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" />, содержащий имя элемента.</param>
      <param name="content">Содержимое элемента.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XElement" /> с указанным именем и содержимым.</summary>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" />, содержащий имя элемента.</param>
      <param name="content">Начальное содержимое элемента.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
      <summary>Инициализируется новый экземпляр класса <see cref="T:System.Xml.Linq.XElement" /> из объекта <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="other">
        <see cref="T:System.Xml.Linq.XStreamingElement" />, содержащий неизвестные запросы, итерации которых будут выполнены для содержимого <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf">
      <summary>Возвращает коллекцию элементов, содержащих этот элемент и предшественников этого элемента. </summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" /> элементов, содержащих этот элемент и предшественников этого элемента. </returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
      <summary>Возвращает фильтрованную коллекцию элементов, содержащих этот элемент и предшественников этого элемента.В коллекцию включаются только элементы, соответствующие <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий этот элемент и предшественников этого элемента.В коллекцию включаются только элементы, соответствующие <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
      <summary>Возвращает <see cref="T:System.Xml.Linq.XAttribute" /> этого <see cref="T:System.Xml.Linq.XElement" />, имеющий указанное <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XAttribute" />, имеющий указанное <see cref="T:System.Xml.Linq.XName" />; null, если не существует атрибута с указанным именем.</returns>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" />
        <see cref="T:System.Xml.Linq.XAttribute" /> для получения.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes">
      <summary>Возвращает коллекцию атрибутов этого элемента.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XAttribute" /> атрибутов этого элемента.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
      <summary>Возвращает фильтрованную коллекцию атрибутов этого элемента.В коллекцию включаются только элементы, соответствующие <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XAttribute" />, содержащий атрибуты этого элемента.В коллекцию включаются только элементы, соответствующие <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
      <summary>Возвращает коллекцию узлов, содержащих этот элемент и все узлы-потомки этого элемента в порядке следования документов.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XNode" />, содержащий этот элемент и все узлы-потомки этого элемента в порядке следования документов.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf">
      <summary>Возвращает коллекцию элементов, содержащих этот элемент и все элементы-потомки этого элемента в порядке следования документов.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий этот элемент и все элементы-потомки этого элемента в порядке следования документов.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
      <summary>Возвращает фильтрованную коллекцию элементов, содержащих этот элемент и все элементы-потомки этого элемента в порядке следования документов.В коллекцию включаются только элементы, соответствующие <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий этот элемент и все элементы-потомки этого элемента в порядке следования документов.В коллекцию включаются только элементы, соответствующие <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.EmptySequence">
      <summary>Получает пустую коллекцию элементов.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащий пустую коллекцию.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.FirstAttribute">
      <summary>Получает первый атрибут элемента.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XAttribute" />, содержащий первый атрибут этого элемента.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetDefaultNamespace">
      <summary>Получает по умолчанию <see cref="T:System.Xml.Linq.XNamespace" /> для <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNamespace" />, содержащий используемое по умолчанию пространство имен для <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
      <summary>Получает пространство имен, связанное с определенным префиксом для <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNamespace" /> для пространства имен, связанного с префиксом для <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="prefix">Строка, содержащая префикс пространства имен для поиска.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
      <summary>Получает префикс, связанный с пространством имен для <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая префикс пространства имен.</returns>
      <param name="ns">
        <see cref="T:System.Xml.Linq.XNamespace" /> для просмотра.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasAttributes">
      <summary>Получает значение, которое показывает, имеет ли этот элемент минимум один атрибут.</summary>
      <returns>true если этот элемент имеет минимум один атрибут; в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasElements">
      <summary>Получает значение, которое показывает, имеет ли этот элемент минимум один дочерний элемент.</summary>
      <returns>true если этот элемент имеет минимум один дочерний элемент; в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.IsEmpty">
      <summary>Получает значение, которое показывает, что данный элемент не имеет содержимого.</summary>
      <returns>true, если данный элемент не имеет содержимого; в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.LastAttribute">
      <summary>Получает последний атрибут элемента.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XAttribute" />, содержащий последний атрибут этого элемента.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.Linq.XElement" /> с помощью указанного потока.</summary>
      <returns>Объект <see cref="T:System.Xml.Linq.XElement" />, который используется для чтения содержащихся в потоке данных.</returns>
      <param name="stream">Поток, содержащий XML-данные.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary>Создает новый экземпляр<see cref="T:System.Xml.Linq.XElement" />, используя указанный поток и при необходимости оставляя пустое пространство, задавая базовый URI и сохраняя сведения о строках.</summary>
      <returns>Объект <see cref="T:System.Xml.Linq.XElement" />, который используется для чтения содержащихся в потоке данных.</returns>
      <param name="stream">Поток, содержащий данные XML.</param>
      <param name="options">Объект <see cref="T:System.Xml.Linq.LoadOptions" />, указывающий, следует ли загружать базовый URI и сведения о строках.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
      <summary>Загружает <see cref="T:System.Xml.Linq.XElement" /> из <see cref="T:System.IO.TextReader" />. </summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" />, содержащий XML, считанный из указанного <see cref="T:System.IO.TextReader" />.</returns>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> будет прочтен для содержимого <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary>Загружает <see cref="T:System.Xml.Linq.XElement" /> из <see cref="T:System.IO.TextReader" />, по требованию сохраняя пустое пространство сведения о строке. </summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" />, содержащий XML, считанный из указанного <see cref="T:System.IO.TextReader" />.</returns>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> будет прочтен для содержимого <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" />, указывающий поведение пустого пространства и необходимость загрузки базового URI и сведений о строке.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String)">
      <summary>Загружает <see cref="T:System.Xml.Linq.XElement" /> из файла.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" />, содержащий содержимое указанного файла.</returns>
      <param name="uri">Строка URI ссылается на файл для загрузки в новый <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Загружает <see cref="T:System.Xml.Linq.XElement" /> из файла, по требованию сохраняет пустое пространство, задает базовый URI и сведения о строке.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" />, содержащий данные указанного файла.</returns>
      <param name="uri">Строка URI ссылается на файл для загрузки в <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" />, указывающий поведение пустого пространства и необходимость загрузки базового URI и сведений о строке.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
      <summary>Загружает <see cref="T:System.Xml.Linq.XElement" /> из <see cref="T:System.Xml.XmlReader" />. </summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" />, содержащий XML, считанный из указанного <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> будет прочтен для содержимого <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary>Загружает <see cref="T:System.Xml.Linq.XElement" /> из <see cref="T:System.Xml.XmlReader" />, по требованию сохраняет пустое пространство, задает базовый URI и сведения о строке.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" />, содержащий XML, считанный из указанного <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> будет прочтен для содержимого <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" />, указывающий поведение пустого пространства и необходимость загрузки базового URI и сведений о строке.</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.Name">
      <summary>Получает или задает имя элемента.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XName" />, содержащий имя элемента.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.NodeType">
      <summary>Получение типа для данного узла.</summary>
      <returns>Тип узла.Для объектов <see cref="T:System.Xml.Linq.XElement" /> этим значением является <see cref="F:System.Xml.XmlNodeType.Element" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Decimal" />.</summary>
      <returns>
        <see cref="T:System.Decimal" />, содержащий данные <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Decimal" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Decimal" />, содержащий данные этого элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.DateTime" />.</summary>
      <returns>
        <see cref="T:System.DateTime" />, содержащий данные <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Single" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Single" />, содержащий данные этого элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Single" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Double" />.</summary>
      <returns>
        <see cref="T:System.Double" />, содержащий данные <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Double" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Double" />, содержащий данные этого элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTime" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTime" />, содержащий данные элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.DateTime" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.TimeSpan" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.TimeSpan" />, содержащий данные элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.TimeSpan" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Guid" />.</summary>
      <returns>
        <see cref="T:System.Guid" />, содержащий данные <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Guid" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Guid" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Guid" />, содержащий данные этого элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Guid" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XAttribute" /> к <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>
        <see cref="T:System.DateTimeOffset" />, содержащий данные <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTimeOffset" />, содержащий данные <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">
        <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.DateTimeOffset" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.TimeSpan" />.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />, содержащий данные <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.TimeSpan" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Int32" />.</summary>
      <returns>Объект <see cref="T:System.Int32" />, содержащий данные элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Int32" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Int32" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Int32" />, содержащий данные этого элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Int32" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Int32" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.UInt32" />.</summary>
      <returns>
        <see cref="T:System.UInt32" />, содержащий данные <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.UInt32" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.String" />.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий данные элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">
        <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Boolean" />.</summary>
      <returns>
        <see cref="T:System.Boolean" />, содержащий данные <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Boolean" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Boolean" />, содержащий данные этого <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Boolean" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.UInt64" />.</summary>
      <returns>
        <see cref="T:System.UInt64" />, содержащий данные <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.UInt64" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
      <summary>Приведение значения этого <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt64" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt64" />, содержащий данные этого элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.UInt64" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Single" />.</summary>
      <returns>
        <see cref="T:System.Single" />, содержащий данные <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Single" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt32" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt32" />, содержащий данные этого элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.UInt32" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Int64" />.</summary>
      <returns>Объект <see cref="T:System.Int64" />, содержащий данные элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="element" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
      <summary>Приведение значения <see cref="T:System.Xml.Linq.XElement" /> к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Int64" />.</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> для <see cref="T:System.Int64" />, содержащий данные этого элемента <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement" /> для приведения к <see cref="T:System.Nullable`1" /> для <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException">Элемент не содержит допустимое значение <see cref="T:System.Int64" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String)">
      <summary>Загрузка <see cref="T:System.Xml.Linq.XElement" /> из строки, содержащей XML.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" /> заполнен из строки, содержащей XML.</returns>
      <param name="text">
        <see cref="T:System.String" />, содержащая XML.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary>Загрузка <see cref="T:System.Xml.Linq.XElement" /> из строки, содержащей XML, по требованию сохраняет пустое пространство и сведения о строке.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" /> заполнен из строки, содержащей XML.</returns>
      <param name="text">
        <see cref="T:System.String" />, содержащая XML.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.LoadOptions" />, указывающий поведение пустого пространства и необходимость загрузки базового URI и сведений о строке.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAll">
      <summary>Удаление узлов и атрибутов из <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAttributes">
      <summary>Удаляет атрибуты <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
      <summary>Заменяет дочерние узлы и атрибуты этого элемента указанным содержимым.</summary>
      <param name="content">Содержимое, которое заменит дочерние узлы и атрибуты элемента.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
      <summary>Заменяет дочерние узлы и атрибуты этого элемента указанным содержимым.</summary>
      <param name="content">Список параметров объектов содержимого.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
      <summary>Заменяет атрибуты этого элемента на указанное содержимое.</summary>
      <param name="content">Содержимое, которое заменит атрибуты этого элемента.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
      <summary>Заменяет атрибуты этого элемента на указанное содержимое.</summary>
      <param name="content">Список параметров объектов содержимого.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
      <summary>Выводит этот элемент <see cref="T:System.Xml.Linq.XElement" /> в указанный поток <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Поток для вывода <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary>Выводит данный элемент <see cref="T:System.Xml.Linq.XElement" /> в указанный поток <see cref="T:System.IO.Stream" />, при необходимости задавая форматирование.</summary>
      <param name="stream">Поток для вывода <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options">Объект <see cref="T:System.Xml.Linq.SaveOptions" />, определяющий форматирование.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
      <summary>Сериализовать этот элемент для <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" />, который будет записан в <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary>Сериализовать этот элемент для <see cref="T:System.IO.TextWriter" />, по требованию отключая форматирование.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" />, в который выводится XML.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.SaveOptions" />, указывающий поведение форматирования.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String)">
      <summary>Сериализовать этот элемент для файла.</summary>
      <param name="fileName">
        <see cref="T:System.String" />, содержащий имя файла.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary>Сериализовать этот элемент для файла, по требованию отключая форматирование.</summary>
      <param name="fileName">
        <see cref="T:System.String" />, содержащий имя файла.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.SaveOptions" />, указывающий поведение форматирования.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
      <summary>Сериализовать этот элемент для <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />, который будет записан в <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
      <summary>Устанавливает значение атрибута, добавляет или удаляет атрибут. </summary>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" />, содержащий имя изменяемого атрибута.</param>
      <param name="value">Значение, присвоенное атрибуту.Атрибут удален, если значение null.В противном случае, значение преобразовано в строковое представление и назначено свойству <see cref="P:System.Xml.Linq.XAttribute.Value" /> атрибута.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> является экземпляром <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
      <summary>Задает значение дочернего элемента, добавляет или удаляет дочерний элемент.</summary>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" />, содержащий имя изменяемого дочернего элемента.</param>
      <param name="value">Значение, присвоенное дочернему элементу.Дочерний элемент удален, если значение null.В противном случае, значение преобразовано в строковое представление и назначено свойству <see cref="P:System.Xml.Linq.XElement.Value" /> дочернего элемента.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> является экземпляром <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetValue(System.Object)">
      <summary>Задает значение этого элемента.</summary>
      <param name="value">Значение, присвоенное этому элементу.Значение преобразовано в строковое представление и назначено свойству <see cref="P:System.Xml.Linq.XElement.Value" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> является <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Получает определение схемы XML, которое описывает представление XML этого объекта.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" />, описывающая представление XML объекта, полученного из метода <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и включенного в метод <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Создает объект из представления XML.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />, из которого десериализуется объект.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Преобразует объект в представление XML.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />, в который сериализуется этот объект.</param>
    </member>
    <member name="P:System.Xml.Linq.XElement.Value">
      <summary>Получает или задает сцепленное текстовое содержимое этого элемента.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий все текстовое содержимое этого элемента.Если существует несколько текстовых узлов, они будут связаны.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Записать этот элемент в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />, в который этот метод будет записывать.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.Linq.XName">
      <summary>Представляет имя элемента или атрибута XML. </summary>
    </member>
    <member name="M:System.Xml.Linq.XName.Equals(System.Object)">
      <summary>Определяет, является ли указанное <see cref="T:System.Xml.Linq.XName" /> равным данному <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>true, если указанный <see cref="T:System.Xml.Linq.XName" /> равен текущему <see cref="T:System.Xml.Linq.XName" />; в ином случае — false.</returns>
      <param name="obj">The <see cref="T:System.Xml.Linq.XName" /> to compare to the current <see cref="T:System.Xml.Linq.XName" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String)">
      <summary>Вызывает объект <see cref="T:System.Xml.Linq.XName" /> из развернутого имени.</summary>
      <returns>Объект <see cref="T:System.Xml.Linq.XName" /> сконструирован из развернутого имени.</returns>
      <param name="expandedName">
        <see cref="T:System.String" /> содержит развернутое имя XML в формате {namespace}localname.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String,System.String)">
      <summary>Вызывает объект <see cref="T:System.Xml.Linq.XName" /> из локального имени и пространства имен.</summary>
      <returns>Объект <see cref="T:System.Xml.Linq.XName" />, созданный из указанного локального имени и пространства имен.</returns>
      <param name="localName">Локальное (неопределенное) имя.</param>
      <param name="namespaceName">Пространство имен XML.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.GetHashCode">
      <summary>Gets a hash code for this <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>An <see cref="T:System.Int32" /> that contains the hash code for the <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.LocalName">
      <summary>Вызывает локальную (неопределенную) часть имени.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий локальную (неопределенную) часть имени.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.Namespace">
      <summary>Вызывает часть пространства имен полностью определенного имени.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNamespace" />, содержит часть имени пространства имен.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.NamespaceName">
      <summary>Возвращает URI <see cref="T:System.Xml.Linq.XNamespace" /> для этого <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>Возвращает URI <see cref="T:System.Xml.Linq.XNamespace" /> для этого <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary>Returns a value indicating whether two instances of <see cref="T:System.Xml.Linq.XName" /> are equal.</summary>
      <returns>true, если <paramref name="left" /> и <paramref name="right" /> равны; в ином случае — false.</returns>
      <param name="left">Первый <see cref="T:System.Xml.Linq.XName" /> для сравнения.</param>
      <param name="right">Второй объект <see cref="T:System.Xml.Linq.XName" /> для сравнения.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName">
      <summary>Преобразует строку, отформатированную как развернутое имя XML (то есть {namespace}localname), в объект <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Linq.XName" /> сконструирован из развернутого имени.</returns>
      <param name="expandedName">Строка, содержащая развернутое имя XML в формате {namespace}localname.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary>Returns a value indicating whether two instances of <see cref="T:System.Xml.Linq.XName" /> are not equal.</summary>
      <returns>true, если <paramref name="left" /> и <paramref name="right" /> не равны; в ином случае — false.</returns>
      <param name="left">Первый <see cref="T:System.Xml.Linq.XName" /> для сравнения.</param>
      <param name="right">Второй объект <see cref="T:System.Xml.Linq.XName" /> для сравнения.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.System#IEquatable{T}#Equals(System.Xml.Linq.XName)">
      <summary>Показывает, является ли текущий <see cref="T:System.Xml.Linq.XName" /> равным указанному <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>true, если этот <see cref="T:System.Xml.Linq.XName" /> равен указанному <see cref="T:System.Xml.Linq.XName" />, в ином случае — false.</returns>
      <param name="other">The <see cref="T:System.Xml.Linq.XName" /> to compare with this <see cref="T:System.Xml.Linq.XName" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize the target object.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</param>
      <param name="context">Конечный объект (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />) для этой сериализации.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.ToString">
      <summary>Возвращает развернутое имя XML в формате {namespace}localname.</summary>
      <returns>
        <see cref="T:System.String" /> содержит развернутое имя XML в формате {namespace}localname.</returns>
    </member>
    <member name="T:System.Xml.Linq.XNamespace">
      <summary>Представляет пространство имен XML.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
      <summary>Определяет, является ли указанное пространство имен <see cref="T:System.Xml.Linq.XNamespace" /> эквивалентным текущему пространству имен <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns>
        <see cref="T:System.Boolean" /> показывает, является ли указанное <see cref="T:System.Xml.Linq.XNamespace" /> эквивалентным текущему <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
      <param name="obj">
        <see cref="T:System.Xml.Linq.XNamespace" /> для сравнения с текущим <see cref="T:System.Xml.Linq.XNamespace" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Get(System.String)">
      <summary>Вызывает <see cref="T:System.Xml.Linq.XNamespace" /> для указанного Uniform Resource Identifier (URI).</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNamespace" /> создан из указанного URI.</returns>
      <param name="namespaceName">
        <see cref="T:System.String" /> содержит пространство имен URI.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetHashCode">
      <summary>Вызывает хэш-код для данного <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns>
        <see cref="T:System.Int32" /> содержит хэш-код для <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetName(System.String)">
      <summary>Возвращает объект <see cref="T:System.Xml.Linq.XName" />, созданный из этого<see cref="T:System.Xml.Linq.XNamespace" />, и указанное локальное имя.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XName" />, созданный из этого  <see cref="T:System.Xml.Linq.XNamespace" />, и указанное локальное имя.</returns>
      <param name="localName">
        <see cref="T:System.String" /> содержит локальное имя.</param>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.NamespaceName">
      <summary>Вызывает Uniform Resource Identifier (URI) этого пространства имен.</summary>
      <returns>
        <see cref="T:System.String" /> содержит URI пространства имен.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.None">
      <summary>Вызывает объект <see cref="T:System.Xml.Linq.XNamespace" />, не соответствующий какому-либо пространству имен.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNamespace" /> не соответствует пространству имен.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
      <summary>Объединяет объект <see cref="T:System.Xml.Linq.XNamespace" /> с локальным именем для создания <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>Новое <see cref="T:System.Xml.Linq.XName" /> сконструировано из пространства имен и локального имени.</returns>
      <param name="ns">
        <see cref="T:System.Xml.Linq.XNamespace" /> содержит пространство имен.</param>
      <param name="localName">
        <see cref="T:System.String" /> содержит локальное имя.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary>Возвращает значение, показывающее, эквивалентны ли два экземпляра <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns>
        <see cref="T:System.Boolean" /> показывает, являются ли <paramref name="left" /> и <paramref name="right" /> эквивалентными.</returns>
      <param name="left">Первый <see cref="T:System.Xml.Linq.XNamespace" /> для сравнения.</param>
      <param name="right">Второй <see cref="T:System.Xml.Linq.XNamespace" /> для сравнения.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
      <summary>Преобразует строку, содержащую Uniform Resource Identifier (URI), в <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNamespace" /> создан из строки URI.</returns>
      <param name="namespaceName">
        <see cref="T:System.String" /> содержит пространство имен URI.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary>Возвращает значение, позволяющее определить, действительно ли два экземпляра <see cref="T:System.Xml.Linq.XNamespace" /> неэквивалентны.</summary>
      <returns>
        <see cref="T:System.Boolean" /> показывает, являются ли <paramref name="left" /> и <paramref name="right" /> неэквивалентными.</returns>
      <param name="left">Первый <see cref="T:System.Xml.Linq.XNamespace" /> для сравнения.</param>
      <param name="right">Второй <see cref="T:System.Xml.Linq.XNamespace" /> для сравнения.</param>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.ToString">
      <summary>Возвращает URI этого <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns>URI этого <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xml">
      <summary>Вызывает объект <see cref="T:System.Xml.Linq.XNamespace" />, соответствующий XML URI (http://www.w3.org/XML/1998/namespace).</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNamespace" />, соответствующий XML URI (http://www.w3.org/XML/1998/namespace).</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xmlns">
      <summary>Вызывает объект <see cref="T:System.Xml.Linq.XNamespace" />, соответствующий xmlns URI (http://www.w3.org/2000/xmlns/).</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNamespace" /> соответствует xmlns URI (http://www.w3.org/2000/xmlns/).</returns>
    </member>
    <member name="T:System.Xml.Linq.XNode">
      <summary>Представляет абстрактное понятие узла (элемент, примечание, тип документа, инструкция по обработке или текстовый узел) в дереве XML.  </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)">
      <summary>Добавляет указанное содержимое непосредственно после данного узла.</summary>
      <param name="content">Объект содержимого, содержащий простое содержимое или коллекцию объектов содержимого для добавления после данного узла.</param>
      <exception cref="T:System.InvalidOperationException">Родительский элемент является null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])">
      <summary>Добавляет указанное содержимое непосредственно после данного узла.</summary>
      <param name="content">Список параметров объектов содержимого.</param>
      <exception cref="T:System.InvalidOperationException">Родительский элемент является null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)">
      <summary>Добавляет указанное содержимое непосредственно перед данным узлом.</summary>
      <param name="content">Объект содержимого, содержащий простое содержимое или коллекцию объектов содержимого для добавления перед данным узлом.</param>
      <exception cref="T:System.InvalidOperationException">Родительский элемент является null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])">
      <summary>Добавляет указанное содержимое непосредственно перед данным узлом.</summary>
      <param name="content">Список параметров объектов содержимого.</param>
      <exception cref="T:System.InvalidOperationException">Родительский элемент является null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors">
      <summary>Возвращает коллекцию элементов предков данного узла.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий <see cref="T:System.Xml.Linq.XElement" /> элементов предков данного узла.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)">
      <summary>Возвращает отфильтрованную коллекцию элементов предков данного узла.В коллекцию включаются только элементы, обладающие соответствующим <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий <see cref="T:System.Xml.Linq.XElement" /> элементов предков данного узла.В коллекцию включаются только элементы, обладающие соответствующим <see cref="T:System.Xml.Linq.XName" />.узлы в возвращаемой коллекции идут в обратном документном порядке.Этот метод использует отложенное выполнение.</returns>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Сравнивает два узла с целью определения их относительного порядка документа XML.</summary>
      <returns>int, содержащий значение 0, если узлы равны; значение -1, если <paramref name="n1" /> перед <paramref name="n2" />, значение 1, если <paramref name="n1" /> после <paramref name="n2" />.</returns>
      <param name="n1">Первый <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</param>
      <param name="n2">Второй <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</param>
      <exception cref="T:System.InvalidOperationException">Два узла не используют совместно общего предка.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader">
      <summary>Создает <see cref="T:System.Xml.XmlReader" /> для данного узла.</summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" />, который может использоваться для считывания данного узла и его вложений.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)">
      <summary>Создает объект <see cref="T:System.Xml.XmlReader" /> с характеристиками, заданными параметром <paramref name="readerOptions" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="readerOptions">Объект <see cref="T:System.Xml.Linq.ReaderOptions" />, определяющий, нужно ли пропускать дубликаты пространств имен.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Сравнивает значения двух узлов, включая значения всех подчиненных узлов.</summary>
      <returns>true, если узлы равны, в противном случае false.</returns>
      <param name="n1">Первый объект <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</param>
      <param name="n2">Второй объект <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</param>
    </member>
    <member name="P:System.Xml.Linq.XNode.DocumentOrderComparer">
      <summary>Получает компаратор, который может сравнить относительную позицию двух узлов.</summary>
      <returns>Объект <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" />, который может сравнить относительное положение двух узлов.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf">
      <summary>Возвращает коллекцию родственных элементов после данного узла в документном порядке.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий <see cref="T:System.Xml.Linq.XElement" />, родственных элементов после данного узла в документном порядке.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)">
      <summary>Возвращает отфильтрованную коллекцию родственных элементов после данного узла в документном порядке.В коллекцию включаются только элементы, обладающие соответствующим <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий <see cref="T:System.Xml.Linq.XElement" />, родственных элементов после данного узла в документном порядке.В коллекцию включаются только элементы, обладающие соответствующим <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf">
      <summary>Возвращает коллекцию родственных элементов перед данным узлом в документном порядке.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий <see cref="T:System.Xml.Linq.XElement" />, родственных элементов перед данным узлом в документном порядке.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)">
      <summary>Возвращает отфильтрованную коллекцию родственных элементов перед данным узлом в документном порядке.В коллекцию включаются только элементы, обладающие соответствующим <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий <see cref="T:System.Xml.Linq.XElement" />, родственных элементов перед данным узлом в документном порядке.В коллекцию включаются только элементы, обладающие соответствующим <see cref="T:System.Xml.Linq.XName" />.</returns>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" /> для соответствия.</param>
    </member>
    <member name="P:System.Xml.Linq.XNode.EqualityComparer">
      <summary>Получает компаратор, который сравнивает два узла для проверки равенства значений.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNodeEqualityComparer" />, который сравнивает два узла для проверки равенства значений.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)">
      <summary>Определяет, появляется ли текущий узел после указанного узла при документном порядке.</summary>
      <returns>true, если данный узел появляется после указанного узла, в противном случае false.</returns>
      <param name="node">
        <see cref="T:System.Xml.Linq.XNode" /> для сравнения для документного порядка.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)">
      <summary>Определяет, появляется ли текущий узел перед указанным узлом при документном порядке.</summary>
      <returns>true, если данный узел появляется перед указанным узлом, в противном случае false.</returns>
      <param name="node">
        <see cref="T:System.Xml.Linq.XNode" /> для сравнения для документного порядка.</param>
    </member>
    <member name="P:System.Xml.Linq.XNode.NextNode">
      <summary>Получает следующий родственный узел данного узла.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNode" />, содержащий следующий родственный узел.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesAfterSelf">
      <summary>Возвращает коллекцию родственных узлов после данного узла в документном порядке.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий <see cref="T:System.Xml.Linq.XNode" />, родственных узлов после данного узла в документном порядке.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesBeforeSelf">
      <summary>Возвращает коллекцию родственных узлов перед данным узлом в документном порядке.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, принадлежащий <see cref="T:System.Xml.Linq.XNode" />, родственных узлов перед данным узлом в документном порядке.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.PreviousNode">
      <summary>Получает предыдущий родственный узел данного узла.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNode" />, содержащий предыдущий родственный узел.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)">
      <summary>Создает <see cref="T:System.Xml.Linq.XNode" /> из <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XNode" />, содержащий узел и его потомков, которые были считаны из считывателя.Тип среды выполнения узла определяется типом узла (<see cref="P:System.Xml.Linq.XObject.NodeType" />) первого узла в считывателе.</returns>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> размещается в узле для считывания в данный <see cref="T:System.Xml.Linq.XNode" />.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не позиционируется в определенном типе узла.</exception>
      <exception cref="T:System.Xml.XmlException">Базовый <see cref="T:System.Xml.XmlReader" /> вызывает исключение.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XNode.Remove">
      <summary>Удаляет данный узел из родительского объекта.</summary>
      <exception cref="T:System.InvalidOperationException">Родительский элемент является null.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)">
      <summary>Заменяет данный узел на указанное содержимое.</summary>
      <param name="content">Содержимое для замены в узле.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])">
      <summary>Заменяет данный узел на указанное содержимое.</summary>
      <param name="content">Список параметров нового содержимого.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString">
      <summary>Возвращает предназначенный для данного узла XML.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий предназначенный XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)">
      <summary>Возвращает XML для данного узла, дополнительно отключая форматирование.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая XML.</returns>
      <param name="options">
        <see cref="T:System.Xml.Linq.SaveOptions" />, указывающий поведение форматирования.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
      <summary>Записывает данный узел в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />, в который данный метод выполняет запись.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.Linq.XNodeDocumentOrderComparer">
      <summary>Содержит функциональные возможности для сравнения узлов по порядку их документов.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" />. </summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Сравнивает два узла для определения их относительного порядка документов.</summary>
      <returns>
        <see cref="T:System.Int32" /> содержит 0, если узлы эквивалентны; -1, если <paramref name="x" /> предшествует <paramref name="y" />; и 1, если <paramref name="x" /> находится после <paramref name="y" />.</returns>
      <param name="x">Первый <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</param>
      <param name="y">Второй <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</param>
      <exception cref="T:System.InvalidOperationException">Два узла не используют совместно общего предка.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>Сравнивает два узла для определения их относительного порядка документов.</summary>
      <returns>
        <see cref="T:System.Int32" /> содержит 0, если узлы эквивалентны; -1, если <paramref name="x" /> предшествует <paramref name="y" />; и 1, если <paramref name="x" /> находится после <paramref name="y" />.</returns>
      <param name="x">Первый <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</param>
      <param name="y">Второй <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</param>
      <exception cref="T:System.InvalidOperationException">Два узла не используют совместно общего предка.</exception>
      <exception cref="T:System.ArgumentException">Два узла не извлечены из <see cref="T:System.Xml.Linq.XNode" />.</exception>
    </member>
    <member name="T:System.Xml.Linq.XNodeEqualityComparer">
      <summary>Сравнивает узлы, чтобы определить — эквивалентны ли они.Этот класс не может быть наследован.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XNodeEqualityComparer" />. </summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary>Сравнивает значения двух узлов.</summary>
      <returns>
        <see cref="T:System.Boolean" />, показывающий — эквивалентны ли узлы.</returns>
      <param name="x">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
      <param name="y">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)">
      <summary>Возвращает хэш-код, основанный на <see cref="T:System.Xml.Linq.XNode" />.</summary>
      <returns>
        <see cref="T:System.Int32" /> содержит основанный на некотором значении хэш-код для узла.</returns>
      <param name="obj">
        <see cref="T:System.Xml.Linq.XNode" /> для хэширования.</param>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <summary>Сравнивает значения двух узлов.</summary>
      <returns>true, если узлы эквивалентны, в ином случае — false.</returns>
      <param name="x">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
      <param name="y">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</param>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <summary>Возвращает хэш-код, основанный на значении узла.</summary>
      <returns>
        <see cref="T:System.Int32" /> содержит основанный на некотором значении хэш-код для узла.</returns>
      <param name="obj">узел для хэширования.</param>
    </member>
    <member name="T:System.Xml.Linq.XObject">
      <summary>Представление узла или атрибута в XML-дереве. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
      <summary>Добавление объекта в список примечаний данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="annotation">
        <see cref="T:System.Object" />, содержащий добавляемое примечание.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation``1">
      <summary>Получение первого объекта примечаний заданного типа из данного <see cref="T:System.Xml.Linq.XObject" />. </summary>
      <returns>Первый объект примечаний, который соответствует заданному типу, или null, если примечаний заданного типа нет.</returns>
      <typeparam name="T">Тип извлекаемого примечания.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation(System.Type)">
      <summary>Получение первого объекта примечаний заданного типа из данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>
        <see cref="T:System.Object" />, который содержит первый объект примечаний, который соответствует заданному типу, или null, если примечаний заданного типа нет.</returns>
      <param name="type">
        <see cref="T:System.Type" /> извлекаемого примечания.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations``1">
      <summary>Получение коллекции примечаний заданного типа для данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />, содержащий добавляемые примечания <see cref="T:System.Xml.Linq.XObject" />.</returns>
      <typeparam name="T">Тип извлекаемого примечания.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations(System.Type)">
      <summary>Получение коллекции примечаний заданного типа для данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />
        <see cref="T:System.Object" />, содержащий примечания, которые соответствуют заданному типу для данного <see cref="T:System.Xml.Linq.XObject" />.</returns>
      <param name="type">
        <see cref="T:System.Type" /> извлекаемого примечания.</param>
    </member>
    <member name="P:System.Xml.Linq.XObject.BaseUri">
      <summary>Получение базового URI для данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий базовый URI для данного <see cref="T:System.Xml.Linq.XObject" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changed">
      <summary>Возникновение в случае изменения данного <see cref="T:System.Xml.Linq.XObject" /> или одного из его подчиненных элементов.</summary>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changing">
      <summary>Возникновение в случае возможного изменения данного <see cref="T:System.Xml.Linq.XObject" /> или одного из его подчиненных элементов.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObject.Document">
      <summary>Получение <see cref="T:System.Xml.Linq.XDocument" /> для данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>The <see cref="T:System.Xml.Linq.XDocument" /> for this <see cref="T:System.Xml.Linq.XObject" />. </returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.NodeType">
      <summary>Получение типа узла для данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>Тип узла для данного <see cref="T:System.Xml.Linq.XObject" />. </returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.Parent">
      <summary>Получение родительского <see cref="T:System.Xml.Linq.XElement" /> данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>The parent <see cref="T:System.Xml.Linq.XElement" /> of this <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
      <summary>Удаление примечаний заданного типа из данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T">Тип удаляемых примечаний.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
      <summary>Удаление примечаний заданного типа из данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> удаляемых примечаний.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
      <summary>Получение значения, указывающего, есть ли у данного <see cref="T:System.Xml.Linq.XObject" /> сведения строки.</summary>
      <returns>true, если <see cref="T:System.Xml.Linq.XObject" /> имеет сведения строки, в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
      <summary>Получения номера строки, которую базовый <see cref="T:System.Xml.XmlReader" /> сообщил для данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>
        <see cref="T:System.Int32" />, содержащий номер строки, сообщенный <see cref="T:System.Xml.XmlReader" /> для данного <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
      <summary>Получения номера позиции, которую базовый <see cref="T:System.Xml.XmlReader" /> сообщил для данного <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns>
        <see cref="T:System.Int32" />, содержащий номер позиции, сообщенный <see cref="T:System.Xml.XmlReader" /> для данного <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObjectChange">
      <summary>Указывает тип события, когда событие происходит для <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Add">
      <summary>
        <see cref="T:System.Xml.Linq.XObject" /> был или будет добавлен к <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Remove">
      <summary>
        <see cref="T:System.Xml.Linq.XObject" /> был или будет удален из <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Name">
      <summary>
        <see cref="T:System.Xml.Linq.XObject" /> был или будет переименован.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Value">
      <summary>Значение <see cref="T:System.Xml.Linq.XObject" /> было или будет изменено.Дополнительно это событие вызывается сериализацией пустого элемента (или из пустого тега в пару тегов "начало/окончание" или наоборот).</summary>
    </member>
    <member name="T:System.Xml.Linq.XObjectChangeEventArgs">
      <summary>Предоставление данных для <see cref="E:System.Xml.Linq.XObject.Changing" /> и событий <see cref="E:System.Xml.Linq.XObject.Changed" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Linq.XObjectChangeEventArgs" />. </summary>
      <param name="objectChange">
        <see cref="T:System.Xml.Linq.XObjectChange" />, который содержит аргументы событий для событий LINQ to XML.</param>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Add">
      <summary>Аргумент события для события изменения <see cref="F:System.Xml.Linq.XObjectChange.Add" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Name">
      <summary>Аргумент события для события изменения <see cref="F:System.Xml.Linq.XObjectChange.Name" />.</summary>
    </member>
    <member name="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange">
      <summary>Gets the type of change.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XObjectChange" />, который содержит тип изменения.</returns>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Remove">
      <summary>Аргумент события для события изменения <see cref="F:System.Xml.Linq.XObjectChange.Remove" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Value">
      <summary>Аргумент события для события изменения <see cref="F:System.Xml.Linq.XObjectChange.Value" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.XProcessingInstruction">
      <summary>Представляет инструкцию по обработке XML. </summary>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class. </summary>
      <param name="target">
        <see cref="T:System.String" />, содержащий конечное приложение для <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <param name="data">Строковые данные для этого <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="target" /> или <paramref name="data" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> не соответствует ограничениям имени XML.</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class. </summary>
      <param name="other">The <see cref="T:System.Xml.Linq.XProcessingInstruction" /> node to copy from.</param>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Data">
      <summary>Получает или задает строковое значение инструкции по обработке.</summary>
      <returns>
        <see cref="T:System.String" /> содержит строковое значение инструкции по обработке.</returns>
      <exception cref="T:System.ArgumentNullException">Строка <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.NodeType">
      <summary>Получение типа для данного узла.</summary>
      <returns>Тип узла.Для объектов <see cref="T:System.Xml.Linq.XProcessingInstruction" /> этим значением является <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Target">
      <summary>Получает или задает строку, содержащую конечное приложение для инструкции по обработке.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий конечное приложение для инструкции по обработке.</returns>
      <exception cref="T:System.ArgumentNullException">Строка <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> не соответствует ограничениям имени XML.</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary>Запись инструкции по обработке в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> для записи этой инструкции по обработке.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.Linq.XStreamingElement">
      <summary>Представляет элементы в дереве XML, поддерживающем отложенный потоковый выход.</summary>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Linq.XElement" /> на основе заданного объекта <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" />, содержащий имя элемента.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XStreamingElement" /> с указанным именем и содержимым.</summary>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" />, содержащий имя элемента.</param>
      <param name="content">Содержимое элемента.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Linq.XStreamingElement" /> с указанным именем и содержимым.</summary>
      <param name="name">
        <see cref="T:System.Xml.Linq.XName" />, содержащий имя элемента.</param>
      <param name="content">Содержимое элемента.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object)">
      <summary>Добавляет указанное содержимое в качестве дочернего для данного элемента <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content">Содержимое для добавления к потоковому элементу.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])">
      <summary>Добавляет указанное содержимое в качестве дочернего для данного элемента <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content">Содержимое для добавления к потоковому элементу.</param>
    </member>
    <member name="P:System.Xml.Linq.XStreamingElement.Name">
      <summary>Получает или задает имя данного потокового элемента.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XName" />, содержащий имя данного потокового элемента.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)">
      <summary>Выводит этот элемент <see cref="T:System.Xml.Linq.XStreamingElement" /> в указанный поток <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Поток для вывода <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary>Выводит данный элемент <see cref="T:System.Xml.Linq.XStreamingElement" /> в указанный поток <see cref="T:System.IO.Stream" />, при необходимости задавая форматирование.</summary>
      <param name="stream">Поток для вывода <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options">Объект <see cref="T:System.Xml.Linq.SaveOptions" />, определяющий форматирование.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)">
      <summary>Сериализует данный потоковый элемент в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" />, в который будет записан <see cref="T:System.Xml.Linq.XStreamingElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary>Сериализует данный потоковый элемент в <see cref="T:System.IO.TextWriter" />, дополнительно отключая форматирование.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> для вывода в него XML.</param>
      <param name="options">
        <see cref="T:System.Xml.Linq.SaveOptions" />, указывающий поведение форматирования.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String)">
      <summary>Сериализует данный потоковый элемент в файл.</summary>
      <param name="fileName">
        <see cref="T:System.String" />, содержащий имя файла.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary>Сериализует данный потоковый элемент в файл, дополнительно отключая форматирование.</summary>
      <param name="fileName">
        <see cref="T:System.String" />, содержащий имя файла.</param>
      <param name="options">Объект <see cref="T:System.Xml.Linq.SaveOptions" />, определяющий форматирование.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)">
      <summary>Сериализует данный потоковый элемент в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в который будет записан элемент <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString">
      <summary>Возвращает форматированный (с отступом) XML для данного потокового элемента.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий предназначенный XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)">
      <summary>Возвращает XML для данного потокового элемента, дополнительно отключая форматирование.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая XML.</returns>
      <param name="options">
        <see cref="T:System.Xml.Linq.SaveOptions" />, указывающий поведение форматирования.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Записывает данный потоковый элемент в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в который будет вести запись этот метод.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.Linq.XText">
      <summary>Представляет текстовый узел. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XText" /> class. </summary>
      <param name="value">
        <see cref="T:System.String" />, содержащий значение узла <see cref="T:System.Xml.Linq.XText" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Linq.XText" /> class from another <see cref="T:System.Xml.Linq.XText" /> object.</summary>
      <param name="other">узел <see cref="T:System.Xml.Linq.XText" /> для выполнения копирования из него.</param>
    </member>
    <member name="P:System.Xml.Linq.XText.NodeType">
      <summary>Получает тип узла для этого узла.</summary>
      <returns>Тип узла.Для объектов <see cref="T:System.Xml.Linq.XText" /> данное значение является <see cref="F:System.Xml.XmlNodeType.Text" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XText.Value">
      <summary>Получает или задает значение данного узла.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий значение данного узла.</returns>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
      <summary>Записывает данный узел в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.Schema.Extensions">
      <summary>Данный класс включает методы расширения LINQ to XML для проверки XSD. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
      <summary>Получает набор сведений после проверки схемы (PSVI) для проверенного атрибута.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />, содержащий набор сведений после проверки схемы для <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
      <param name="source">Ранее проверенный <see cref="T:System.Xml.Linq.XAttribute" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
      <summary>Получает набор сведений после проверки схемы (PSVI) для проверенного элемента.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />, содержащий набор сведений после проверки схемы для <see cref="T:System.Xml.Linq.XElement" />.</returns>
      <param name="source">Ранее проверенный <see cref="T:System.Xml.Linq.XElement" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Этот метод проверяет <see cref="T:System.Xml.Linq.XAttribute" /> на соответствие указанным <see cref="T:System.Xml.Schema.XmlSchemaObject" /> и <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source">Проверяемый <see cref="T:System.Xml.Linq.XAttribute" />.</param>
      <param name="partialValidationType">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />, задающий проверяемое поддерево.</param>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />, соответствие которому требуется проверить.</param>
      <param name="validationEventHandler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> для события, которое происходит, когда читатель встречает ошибки проверки.При значении null генерируется исключение возникновения ошибок проверки.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Генерируется для ошибок проверки XSD.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>Проверяет <see cref="T:System.Xml.Linq.XAttribute" /> на соответствие указанным <see cref="T:System.Xml.Schema.XmlSchemaObject" /> и <see cref="T:System.Xml.Schema.XmlSchemaSet" />, с возможностью заполнения дерева XML набором сведений после проверки схемы (PSVI).</summary>
      <param name="source">Проверяемый <see cref="T:System.Xml.Linq.XAttribute" />.</param>
      <param name="partialValidationType">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />, задающий проверяемое поддерево.</param>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />, соответствие которому требуется проверить.</param>
      <param name="validationEventHandler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> для события, которое происходит, когда читатель встречает ошибки проверки.При значении null генерируется исключение возникновения ошибок проверки.</param>
      <param name="addSchemaInfo">
        <see cref="T:System.Boolean" />, указывающий, требуется ли заполнение набором сведений после проверки схемы (PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Генерируется для ошибок проверки XSD.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Этот метод проверяет соответствие <see cref="T:System.Xml.Linq.XDocument" /> спецификации XSD в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source">Проверяемый документ <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> для проверки на соответствие.</param>
      <param name="validationEventHandler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> для события, которое происходит, когда читатель встречает ошибки проверки.При значении null генерируется исключение возникновения ошибок проверки.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Генерируется для ошибок проверки XSD.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>Проверяет <see cref="T:System.Xml.Linq.XDocument" /> на соответствие XSD в <see cref="T:System.Xml.Schema.XmlSchemaSet" /> с возможностью заполнения дерева XML набором сведений после проверки схемы (PSVI).</summary>
      <param name="source">Проверяемый документ <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />, соответствие которому требуется проверить.</param>
      <param name="validationEventHandler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> для события, которое происходит, когда читатель встречает ошибки проверки.При значении null генерируется исключение возникновения ошибок проверки.</param>
      <param name="addSchemaInfo">
        <see cref="T:System.Boolean" />, указывающий, требуется ли заполнение набором сведений после проверки схемы (PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Генерируется для ошибок проверки XSD.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Этот метод проверяет поддерево <see cref="T:System.Xml.Linq.XElement" /> на соответствие указанным <see cref="T:System.Xml.Schema.XmlSchemaObject" /> и <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source">Проверяемый <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="partialValidationType">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />, задающий проверяемое поддерево.</param>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />, соответствие которому требуется проверить.</param>
      <param name="validationEventHandler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> для события, которое происходит, когда читатель встречает ошибки проверки.При значении null генерируется исключение возникновения ошибок проверки.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Генерируется для ошибок проверки XSD.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>Проверяет поддерево <see cref="T:System.Xml.Linq.XElement" /> на соответствие указанным <see cref="T:System.Xml.Schema.XmlSchemaObject" /> и <see cref="T:System.Xml.Schema.XmlSchemaSet" />, с возможностью заполнения дерева XML набором сведений после проверки схемы (PSVI).</summary>
      <param name="source">Проверяемый <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="partialValidationType">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />, задающий проверяемое поддерево.</param>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />, соответствие которому требуется проверить.</param>
      <param name="validationEventHandler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> для события, которое происходит, когда читатель встречает ошибки проверки.При значении null генерируется исключение возникновения ошибок проверки.</param>
      <param name="addSchemaInfo">
        <see cref="T:System.Boolean" />, указывающий, требуется ли заполнение набором сведений после проверки схемы (PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Генерируется для ошибок проверки XSD.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Xml.XPath.Extensions">
      <summary>Этот класс содержит методы расширения LINQ to XML, позволяющие вычислять выражения XPath.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)">
      <summary>Создает <see cref="T:System.Xml.XPath.XPathNavigator" /> для <see cref="T:System.Xml.Linq.XNode" />.</summary>
      <returns>An <see cref="T:System.Xml.XPath.XPathNavigator" /> that can process XPath queries.</returns>
      <param name="node">An <see cref="T:System.Xml.Linq.XNode" /> that can process XPath queries.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)">
      <summary>Создает <see cref="T:System.Xml.XPath.XPathNavigator" /> для <see cref="T:System.Xml.Linq.XNode" />.<see cref="T:System.Xml.XmlNameTable" /> обеспечивает более эффективную обработку выражений XPath.</summary>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNavigator" />, который может обрабатывать запросы XPath.</returns>
      <param name="node">
        <see cref="T:System.Xml.Linq.XNode" />, который может обработать запрос XPath.</param>
      <param name="nameTable">
        <see cref="T:System.Xml.XmlNameTable" /> для использования <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)">
      <summary>Вычисляет выражение XPath.</summary>
      <returns>Объект, который может содержать bool, double, string или <see cref="T:System.Collections.Generic.IEnumerable`1" />. </returns>
      <param name="node">
        <see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</param>
      <param name="expression">
        <see cref="T:System.String" />, содержащая выражение XPath.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Вычисляет выражение XPath, разрешая префиксы пространств имен с помощью указанного <see cref="T:System.Xml.IXmlNamespaceResolver" />.</summary>
      <returns>Объект, содержащий результат вычисления выражения.Объект может иметь тип bool, double, string или <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
      <param name="node">
        <see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</param>
      <param name="expression">
        <see cref="T:System.String" />, содержащая выражение XPath.</param>
      <param name="resolver">
        <see cref="T:System.Xml.IXmlNamespaceResolver" /> для префиксов пространств имен в выражении XPath.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)">
      <summary>Выбирает <see cref="T:System.Xml.Linq.XElement" /> с помощью выражения XPath.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" /> или null.</returns>
      <param name="node">
        <see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</param>
      <param name="expression">
        <see cref="T:System.String" />, содержащая выражение XPath.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Выбирает <see cref="T:System.Xml.Linq.XElement" /> с помощью выражения XPath, разрешая префиксы пространства имен с помощью указанного <see cref="T:System.Xml.IXmlNamespaceResolver" />.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" /> или null.</returns>
      <param name="node">
        <see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</param>
      <param name="expression">
        <see cref="T:System.String" />, содержащая выражение XPath.</param>
      <param name="resolver">
        <see cref="T:System.Xml.IXmlNamespaceResolver" /> для префиксов пространств имен в выражении XPath.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)">
      <summary>Выбирает коллекцию элементов с помощью выражения XPath.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащего выбранные элементы.</returns>
      <param name="node">
        <see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</param>
      <param name="expression">
        <see cref="T:System.String" />, содержащая выражение XPath.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Выбирает коллекцию элементов с помощью выражения XPath, разрешая префиксы пространства имен с помощью указанного <see cref="T:System.Xml.IXmlNamespaceResolver" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> для <see cref="T:System.Xml.Linq.XElement" />, содержащего выбранные элементы.</returns>
      <param name="node">
        <see cref="T:System.Xml.Linq.XNode" />, в котором вычисляется выражение XPath.</param>
      <param name="expression">
        <see cref="T:System.String" />, содержащая выражение XPath.</param>
      <param name="resolver">
        <see cref="T:System.Xml.IXmlNamespaceResolver" /> для префиксов пространств имен в выражении XPath.</param>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>