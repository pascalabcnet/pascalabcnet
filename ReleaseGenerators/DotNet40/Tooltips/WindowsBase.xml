<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary>Предоставляет реализацию <see cref="T:System.Windows.WeakEventManager" /> таким образом, что пользователь может использовать шаблон "слабого прослушивателя событий" для присоединения прослушивателей для события <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary>Adds the specified listener to the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event of the specified source.</summary>
      <param name="source">Объект с событием.</param>
      <param name="listener">The object to add as a listener.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary>Removes the specified listener from the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event of the specified source.</summary>
      <param name="source">Объект с событием.</param>
      <param name="listener">Удаляемый прослушиватель.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary>Begins listening for the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event on the specified source.</summary>
      <param name="source">Объект с событием.</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary>Stops listening for the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> event on the specified source.</summary>
      <param name="source">Объект с событием.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary>Предоставляет реализацию <see cref="T:System.Windows.WeakEventManager" /> таким образом, что пользователь может использовать шаблон "слабого прослушивателя событий" для присоединения прослушивателей для события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Adds the specified listener to the <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> event of the specified source.</summary>
      <param name="source">Объект с событием.</param>
      <param name="listener">The object to add as a listener.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Removes the specified listener from the <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> event of the specified source.</summary>
      <param name="source">Объект с событием.</param>
      <param name="listener">Удаляемый прослушиватель.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary>Begins listening for the <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> event on the specified source.</summary>
      <param name="source">Объект с событием.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary>Stops listening for the <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> event on the specified source.</summary>
      <param name="source">Объект с событием.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary>Предоставляет сведения для события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> class with the specified <paramref name="isCancelable" /> value.</summary>
      <param name="isCancelable">Значение, показывающее, является ли событие отменяемым.</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary>Получает или задает значение, показывающее, отменять ли событие.</summary>
      <returns>Значение true, если событие следует отменить, в противном случае — значение false.The default value is false.</returns>
      <exception cref="T:System.InvalidOperationException">Если значение <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> равно false.</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary>Возвращает значение, показывающее, является ли событие отменяемым.</summary>
      <returns>Значение true, если событие является отменяемым, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" />.</summary>
      <param name="sender">Объект, вызвавший событие.</param>
      <param name="e">Сведения о событии.</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary>Предоставляет реализацию <see cref="T:System.Windows.WeakEventManager" /> таким образом, что пользователь может использовать шаблон "слабого прослушивателя событий" с целью присоединения прослушивателей для события <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" />.</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Adds the specified listener to the <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> event of the specified source.</summary>
      <param name="source">Объект с событием.</param>
      <param name="listener">The object to add as a listener.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary>Removes the specified listener from the <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> event of the specified source.</summary>
      <param name="source">Объект с событием.</param>
      <param name="listener">Удаляемый прослушиватель.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary>Begins listening for the <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> event on the specified source.</summary>
      <param name="source">Объект с событием.</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary>Stops listening for the <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> event on the specified source.</summary>
      <param name="source">Объект с событием.</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary>Обеспечивает расширение <see cref="T:System.ComponentModel.PropertyDescriptor" />, учитывающее дополнительные характеристики для свойства зависимостей.</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary>Позволяет уведомить другие объекты об изменении этого свойства. </summary>
      <param name="component">Компонент, для которого нужно добавить обработчик.</param>
      <param name="handler">Делегат, добавляемый в качестве прослушивателя.</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary>Возвращает коллекцию атрибутов для этого элемента.</summary>
      <returns>Коллекция атрибутов <see cref="T:System.ComponentModel.AttributeCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary>Возвращает признак, показывающий, меняет ли сброс объекта его значение.</summary>
      <returns>Значение true, если сброс компонента изменяет его значение; в противном случае — значение false.</returns>
      <param name="component">Компонент для проверки на возможность сброса. </param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary>Возвращает имя категории, к которой принадлежит элемент, в соответствии с атрибутом <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
      <returns>Имя категории, к которой принадлежит элемент.Если атрибут <see cref="T:System.ComponentModel.CategoryAttribute" /> отсутствует, имя категории устанавливается в соответствии с категорией по умолчанию, Misc.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary>Возвращает тип компонента, с которым связано это свойство.</summary>
      <returns>Объект <see cref="T:System.Type" /> представляющий тип компонента, с которым связано это свойство.При вызове метода <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> или <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> заданный объект может быть экземпляром этого типа.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary>Возвращает преобразователь типов для этого свойства.</summary>
      <returns>Преобразователь <see cref="T:System.ComponentModel.TypeConverter" />, используемый для преобразования типа <see cref="T:System.Type" /> этого свойства.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary>Возвращает идентификатор свойства зависимостей.</summary>
      <returns>Идентификатор свойства зависимостей.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary>Возвращает описание элемента, как указано атрибутом <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
      <returns>Описание члена.Если атрибут <see cref="T:System.ComponentModel.DescriptionAttribute" /> отсутствует, для свойства устанавливается значение по умолчанию, равное пустой строке ("").</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary>Возвращает или задает обратный вызов, используемый конструкторами для изменения эффективного значения свойства зависимостей перед сохранением его значения в обработчике свойств зависимостей.</summary>
      <returns>Обратный вызов, используемый конструкторами для изменения эффективного значения свойства зависимостей перед сохранением его значения в обработчике свойств зависимостей.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary>Возвращает значение, показывающее, должен ли этот элемент устанавливаться только во время разработки, как указано атрибутом <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <returns>Значение true, если элемент должен устанавливаться только во время разработки; значение false, если возможна установка элемента во время выполнения.Если атрибут <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> отсутствует, возвращаемое значение является значением по умолчанию, равным false.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary>Возвращает имя, которое может быть отражено в окне, например в окне "Свойства".</summary>
      <returns>Отображаемое имя свойства.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary>Сравнивает два экземпляра <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> на равенство.</summary>
      <returns>Значение true, если значения эквивалентны; в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для сравнения с текущим экземпляром. </param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary>Возвращает дескриптор <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для предоставленного имени свойства.</summary>
      <returns>Запрошенный дескриптор <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
      <param name="name">Зарегистрированное имя свойства зависимостей или вложенного свойства зависимостей.</param>
      <param name="ownerType">Тип <see cref="T:System.Type" /> объекта, которому принадлежит определение свойства.</param>
      <param name="targetType">Тип <see cref="T:System.Type" /> объекта, для которого нужно задать свойство.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary>Возвращает дескриптор <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для предоставленного имени свойства.</summary>
      <returns>Запрошенный дескриптор <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
      <param name="name">Зарегистрированное имя свойства зависимостей или вложенного свойства зависимостей.</param>
      <param name="ownerType">Тип <see cref="T:System.Type" /> объекта, которому принадлежит определение свойства.</param>
      <param name="targetType">Тип <see cref="T:System.Type" /> объекта, для которого нужно задать свойство.</param>
      <param name="ignorePropertyType">Указывает пропустить тип свойства.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary>Возвращает <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для предоставленного дескриптора <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <returns>Если свойство, описанное параметром <paramref name="property" />, является свойством зависимостей, возвращает допустимый дескриптор <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.В противном случае возвращает дескриптор null<see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</returns>
      <param name="property">Проверяемый дескриптор <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary>Возвращает дескриптор <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для предоставленного свойства зависимостей и целевого типа.</summary>
      <returns>Дескриптор <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> для предоставленного свойства зависимостей.</returns>
      <param name="dependencyProperty">Идентификатор для свойства зависимостей.</param>
      <param name="targetType">Тип объекта, для которого устанавливается свойство.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary>Возвращает <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</summary>
      <returns>Коллекция <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> со свойствами, соответствующими заданным атрибутам для заданного компонента.</returns>
      <param name="instance">Компонент, свойства которого нужно возвратить.</param>
      <param name="filter">Массив типа <see cref="T:System.Attribute" />, используемый как фильтр. </param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary>Возвращает редактор заданного типа.</summary>
      <returns>Экземпляр запрошенного типа редактора или null, если редактор не найден.</returns>
      <param name="editorBaseType">Базовый тип редактора, применяемый, чтобы различать многочисленные редакторы, которые поддерживает свойство. </param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary>Возвращает хэш-код для этого <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</summary>
      <returns>Хэш-код, являющийся 32-разрядным целым числом со знаком. </returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary>Возвращает текущее значение свойства компонента.</summary>
      <returns>Запрошенное значение.</returns>
      <param name="component">Экземпляр компонента.</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary>Возвращает значение, показывающее, зарегистрировано ли свойство как вложенное свойство зависимостей и используется ли оно путем присоединенного использования.</summary>
      <returns>Значение true, если свойство является вложенным свойством зависимостей; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary>Возвращает значение, показывающее значение атрибута <see cref="T:System.ComponentModel.BrowsableAttribute" /> для свойства.</summary>
      <returns>Значение true, если для свойства было задан атрибут <see cref="T:System.ComponentModel.BrowsableAttribute" />; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary>Возвращает значение, показывающее, должно ли быть локализовано это свойство (в соответствии с атрибутом <see cref="T:System.ComponentModel.LocalizableAttribute" />).</summary>
      <returns>Значение true, если элемент помечен конструктором <see cref="T:System.ComponentModel.LocalizableAttribute" />, с помощью значения "true", в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary>Возвращает значение, показывающее, является ли это свойство доступным только для чтения.</summary>
      <returns>Значение true, если свойство доступно только для чтения, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary>Возвращает метаданные, связанные со свойством зависимостей.</summary>
      <returns>Метаданные свойства зависимостей.</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary>Возвращает представленный тип <see cref="T:System.Type" />свойства зависимостей.</summary>
      <returns>Тип <see cref="T:System.Type" />свойства зависимостей.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary>Дает возможность уведомить другие объекты об изменении этого свойства.</summary>
      <param name="component">Компонент, для которого нужно добавить обработчик. </param>
      <param name="handler">Делегат, добавляемый в качестве прослушивателя. </param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary>Сбрасывает значение этого свойства компонента, устанавливая для него значение по умолчанию.</summary>
      <param name="component">Компонент со значением свойства, которое нужно сбросить в значение по умолчанию. </param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>Устанавливает для значения компонента другое значение.</summary>
      <param name="component">Компонент со значением свойства, которое нужно установить. </param>
      <param name="value">Новое значение.</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>Показывает, нужно ли сохранять значение этого свойства с помощью процессов сериализации.</summary>
      <returns>Значение true, если свойство следует сохранить; в противном случае — значение false.</returns>
      <param name="component">Компонент со свойством, возможность сохранения которого нужно проверить.</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary>Показывает, могут ли уведомления об изменениях значения для этого свойства инициироваться вне дескриптора свойства, например из самого компонента, или уведомления будут исходить только из прямых вызовов метода <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />. </summary>
      <returns>Значение true, если источник уведомления для данного свойства находится вне дескриптора свойства, например в самом компоненте.Значение false, если уведомления появляются только в результате непосредственных вызовов метода <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary>Преобразует значение этого экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Возвращает значение <see cref="P:System.ComponentModel.MemberDescriptor.Name" />.</returns>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary>Предоставляет абстрактный базовый класс для типов, описывающих, как разделить элементы коллекции на группы.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.GroupDescription" />.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>Возвращает имя (имена) группы для данного элемента.</summary>
      <returns>Имя (имена) группы по заданному элементу.</returns>
      <param name="item">Элемент, для которого возвращаются имена групп.</param>
      <param name="level">Уровень группировки.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> подлежит передаче в преобразователь.</param>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary>Возвращает коллекцию имен, используемых для инициализации группы, используя набор подгрупп с данными именами.</summary>
      <returns>Коллекция имен, используемых для инициализации группы с помощью набора подгрупп с заданными именами.</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>Возвращает значение, показывающее, соответствуют ли друг другу имя группы и имя элемента, чтобы данный элемент попадал в эту группу.</summary>
      <returns>Значение true, если имена соответствуют и элемент принадлежит группе; в противном случае — значение false.</returns>
      <param name="groupName">Имя проверяемой группы.</param>
      <param name="itemName">Имя элемента, подлежащее проверке.</param>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" />.</summary>
      <param name="e">Аргументы вызываемого события.</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary>Происходит при изменениях значения свойства.</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary>Возвращает признак, показывающий, должны ли процессы сериализации сериализировать фактическое значение свойства <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> для экземпляров этого класса.</summary>
      <returns>Возвращает true, если значение свойства <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> не должно быть сериализовано; в противном случае — значение false.</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Возникает при изменениях значения свойства.</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary>Предоставляет коллекциям функциональные возможности управления текущими записями, настраиваемой сортировкой, фильтрацией и группированием.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary>Возвращает значение, показывающее, поддерживает ли это представление фильтрацию с помощью свойства <see cref="P:System.ComponentModel.ICollectionView.Filter" />.</summary>
      <returns>Значение true, если это представление поддерживает фильтрацию; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary>Возвращает значение, показывающее, поддерживает ли это представление группирование с помощью свойства <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" />.</summary>
      <returns>Значение true, если это представление поддерживает группирование; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary>Возвращает значение, показывающее, поддерживает ли это представление сортировку с помощью свойства <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" />.</summary>
      <returns>Значение true, если это представление поддерживает сортировку; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary>Возвращает значение, показывающее, принадлежит ли данный элемент этому представлению коллекции.</summary>
      <returns>Значение true, если элемент принадлежит этому представлению коллекции; в противном случае — значение false.</returns>
      <param name="item">Проверяемый объект.</param>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary>Возвращает или задает сведения о языке и региональных параметрах для всех операций представления, которые могут зависеть от языка и региональных параметров, например для сортировки.</summary>
      <returns>Язык и региональные параметры, используемые при сортировке.</returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary>При реализации этого интерфейса следует вызывать это событие после изменения текущего элемента.</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary>При реализации этого интерфейса следует вызывать это событие перед изменением текущего элемента.Обработчик события может отменить это событие.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary>Gets the current item in the view.</summary>
      <returns>Текущий элемент в представлении или null, если текущий элемент отсутствует.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary>Возвращает порядковый номер элемента <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в представлении.</summary>
      <returns>Порядковый номер элемента <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> в представлении.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
      <returns>An <see cref="T:System.IDisposable" /> object that you can use to dispose of the calling object.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary>Gets or sets a callback used to determine if an item is suitable for inclusion in the view.</summary>
      <returns>Метод, используемый, чтобы определить пригодность элемента для включения в представление.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.GroupDescription" /> objects that describe how the items in the collection are grouped in the view.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary>Возвращает группы верхнего уровня.</summary>
      <returns>Только для чтения коллекция групп верхнего уровня или null, если эти группы отсутствуют.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary>Возвращает значение, показывающее, находится ли элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> после конца коллекции.</summary>
      <returns>Значение true, если элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> представления находится после конца коллекции; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary>Возвращает значение, показывающее, расположен ли элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> до начала коллекции.</summary>
      <returns>Значение true, если элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> представления находится до начала коллекции; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary>Возвращает значение, показывающее, пусто ли полученное представление.</summary>
      <returns>Значение true, если полученное представление пусто; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary>Sets the specified item to be the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in the view.</summary>
      <returns>Значение true, если результирующий элемент <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> находится в представлении; в противном случае — значение false.</returns>
      <param name="item">The item to set as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</param>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary>Sets the first item in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary>Sets the last item in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary>Sets the item after the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>Sets the item at the specified index to be the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in the view.</summary>
      <returns>true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
      <param name="position">The index to set the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> to.</param>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary>Sets the item before the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> in the view as the <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />.</summary>
      <returns>true if the resulting <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> is an item within the view; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary>Воссоздает представление.</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription" /> objects that describe how the items in the collection are sorted in the view.</summary>
      <returns>Коллекция объектов <see cref="T:System.ComponentModel.SortDescription" />, описывающих, как элементы коллекции сортируются в представлении.</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary>Возвращает базовую коллекцию.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object that is the underlying collection.</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary>Интерфейс, позволяющий реализовывать коллекции для создания представления соответствующих данных.Обычно пользовательский код не вызывает методы этого интерфейса.</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary>Создает новое представление коллекции, реализующей этот интерфейс.Обычно пользовательский код не вызывает этот метод.</summary>
      <returns>Созданное новое представление.</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary>Определяет методы и свойства, реализуемые классом <see cref="T:System.Windows.Data.CollectionView" /> для предоставления возможностей редактирования коллекции.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary>Добавляет в коллекцию новый элемент.</summary>
      <returns>Новый элемент, добавленный в коллекцию.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary>Получает значение, указывающее, можно ли добавить новый элемент в коллекцию.</summary>
      <returns>Значение true, если новый элемент можно добавить в коллекцию; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary>Получает значение, указывающее, может ли представление коллекции отклонить ожидающие изменения и восстановить исходные значения редактируемого объекта.</summary>
      <returns>Значение true, если представление коллекции может отклонить ожидающие изменения и восстановить исходные значения редактируемого объекта; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary>Завершает транзакцию редактирования и, если это возможно, восстанавливает исходное значение для элемента.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary>Завершает транзакцию добавления и отменяет ожидающий новый элемент.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary>Получает значение, указывающее, можно ли удалить элемент из коллекции.</summary>
      <returns>Значение true, если элемент можно удалить из коллекции; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary>Завершает транзакцию редактирования и сохраняет ожидающие изменения.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary>Завершает транзакцию добавления и сохраняет ожидаемый новый элемент.</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary>Получает элемент, добавляемый во время текущей транзакции добавления.</summary>
      <returns>Добавляемый элемент, если свойство <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> имеет значение true; в противном случае — значение null.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary>Получает элемент в редактируемой коллекции.</summary>
      <returns>Редактируемый элемент в коллекции, если свойство <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> имеет значение true; в противном случае — значение null.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary>Начинает транзакцию редактирования заданного элемента.</summary>
      <param name="item">Редактируемый элемент.</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary>Получает значение, указывающее, выполняется ли в данный момент транзакция добавления.</summary>
      <returns>Значение true, если транзакция добавления выполняется; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary>Получает значение, указывающее, выполняется ли в данный момент транзакция редактирования.</summary>
      <returns>Значение true, если транзакция редактирования выполняется; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary>Возвращает или задает положение прототипа нового элемента в представлении коллекции.</summary>
      <returns>Одно из значений перечисления, которое задает положение прототипа нового элемента в представлении коллекции.</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary>Удаляет заданный элемент из коллекции.</summary>
      <param name="item">Удаляемый элемент.</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary>Удаляет элемент в указанной позиции из коллекции.</summary>
      <param name="index">Позиция элемента, который необходимо удалить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля и превышает количество элементов в представлении коллекции.</exception>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary>Определяет методы и свойства, реализуемые классом <see cref="T:System.Windows.Data.CollectionView" /> для обеспечения задания добавления элементов указанного типа.</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary>Добавляет указанный объект в коллекцию.</summary>
      <returns>Объект, добавленный в коллекцию.</returns>
      <param name="newItem">Объект, добавляемый в коллекцию.</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary>Получает значение, указывающее, можно ли добавить указанный объект в коллекцию.</summary>
      <returns>Значение true, если указанный объект можно добавить в коллекцию; в противном случае — значение false.</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary>Определяет свойство, предоставляющее сведения о свойствах объекта.</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary>Получает коллекцию, которая содержит сведения о свойствах, доступных для элементов в коллекции.</summary>
      <returns>Коллекция, содержащая сведения о свойствах, доступных для элементов в коллекции.</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary>Содержит сведения о свойстве.</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.ItemPropertyInfo" />. </summary>
      <param name="name">Имя свойства.</param>
      <param name="type">Тип свойства.</param>
      <param name="descriptor">Объект, содержащий дополнительные сведения о свойстве.</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary>Получает объект, содержащий дополнительные сведения о свойстве.</summary>
      <returns>Объект, содержащий дополнительные сведения о свойстве.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary>Получает имя свойства.</summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary>Возвращает тип свойства.</summary>
      <returns>Тип свойства.</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary>Указывает, отображается ли в коллекции прототип нового элемента.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary>Прототип нового элемента в коллекции не используется.Позиция добавляемых элементов зависит от базовой коллекции.Обычно они добавляются в конец коллекции.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary>Прототип нового элемента отображается в начале коллекции.Новый элемент располагается в начале коллекции, после прототипа нового элемента.</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary>Прототип нового элемента отображается в конце коллекции.Новый элемент добавляется в конец коллекции, перед прототипом нового элемента.</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary>Предоставляет реализацию <see cref="T:System.Windows.WeakEventManager" /> таким образом, что пользователь может использовать шаблон "слабого прослушивателя событий" с целью присоединения прослушивателей для события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary>Добавляет заданный прослушиватель в список прослушивателей указанного источника.</summary>
      <param name="source">Объект с событием.</param>
      <param name="listener">Объект, добавляемый в качестве прослушивателя.</param>
      <param name="propertyName">Имя свойства, существующего для параметра <paramref name="source" />, изменения которого прослушиваются.Значение <see cref="F:System.String.Empty" /> используется, чтобы задать "любое свойство".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary>Удаляет прослушиватели, ставшие неактивными, из данных для предоставленного источника. </summary>
      <returns>Значение true, если некоторые записи удалены; в противном случае — значение false.</returns>
      <param name="source">Исходный объект, для которого удаляются все прослушиватели.</param>
      <param name="data">Очищаемые данные.Предполагается, что это — <see cref="T:System.Collections.Specialized.HybridDictionary" />.</param>
      <param name="purgeAll">Равно true, чтобы остановить прослушивание и для полного удаления всех данных.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary>Удаляет заданный прослушиватель из списка прослушивателей для предоставленного источника.</summary>
      <param name="source">Объект, для которого удаляется прослушиватель.</param>
      <param name="listener">Удаляемый прослушиватель.</param>
      <param name="propertyName">Имя свойства, существующего для параметра <paramref name="source" />, для которого останавливается прослушивание изменений.Значение <see cref="F:System.String.Empty" /> используется, чтобы задать "любое свойство".</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary>Начинает прослушивание для события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> предоставленного источника.</summary>
      <param name="source">Объект, для которого начинается прослушивание события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary>Останавливает прослушивание для события <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> предоставленного источника.</summary>
      <param name="source">The source object on which to stop listening for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary>Определяет, какие свойства должны сообщаться дескрипторами типов, конкретно методом <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> class.</summary>
      <param name="filter">Параметры, описывающие этот фильтр свойств.</param>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary>This member supports the Microsoft .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли текущий атрибут <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут NET Framework указанному объекту.</summary>
      <returns>Значение true, если указанный атрибут <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> равен текущему атрибуту <see cref="T:System.ComponentModel.PropertyFilterAttribute" />; в противном случае — значение false. </returns>
      <param name="value">Объект, который требуется сравнить с данным объектом <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary>Возвращает параметры фильтра для этого атрибута <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут NET Framework.</summary>
      <returns>Параметры фильтра свойств.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary>Возвращает хэш-код для текущего атрибута <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут NET Framework. </summary>
      <returns>32-разрядное целое число со знаком.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary>Возвращает значение, показывающее, соответствуют ли параметры фильтра свойств текущего атрибута <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> Атрибут NET Framework параметрам фильтра свойств предоставленного объекта. </summary>
      <returns>Значение true, если соответствие существует; в противном случае — значение false.</returns>
      <param name="value">Объект для сравнения.Предполагается, что этот объект будет атрибутом <see cref="T:System.ComponentModel.PropertyFilterAttribute" />.</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary>Определяет, какие свойства должны сообщаться дескрипторами типов, конкретно методом <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />.Это перечисление используется для задания значения свойства <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" />.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary>Не возвращает свойств</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary>Возвращает только свойства, не являющиеся допустимыми в заданном текущем контексте объекта.См. примечания.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary>Возвращает только свойства, для которых в данный момент установлены локальные значения.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary>Возвращает только те свойства, для которых локальные значения не установлены, или отсутствуют свойства во внешнем хранилище выражений (такие как привязка или задержанный ресурс).</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary>Возвращает любое свойство, допустимое для объекта в текущей области видимости.См. примечания.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary>Возвращает все свойства.</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary>Определяет направление и имя свойства, используемые в качестве условий сортировки коллекции.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <param name="propertyName">Имя свойства, по которому должна выполняться сортировка списка.</param>
      <param name="direction">Порядок сортировки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="propertyName" /> не может быть равен null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="propertyName" /> не может быть пустым.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="direction" /> не задает допустимое значение.</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary>Получает или задает значение, показывающее, выполняется ли сортировка в порядке возрастания или убывания.</summary>
      <returns>Значение <see cref="T:System.ComponentModel.ListSortDirection" />, показывающее, выполняется ли сортировка в порядке возрастания или убывания.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary>Compares the specified instance and the current instance of <see cref="T:System.ComponentModel.SortDescription" /> for value equality.</summary>
      <returns>true if <paramref name="obj" /> and this instance of <see cref="T:System.ComponentModel.SortDescription" /> have the same values.</returns>
      <param name="obj">Экземпляр <see cref="T:System.ComponentModel.SortDescription" /> для сравнения.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра <see cref="T:System.ComponentModel.SortDescription" />.</summary>
      <returns>Хэш-код данного экземпляра <see cref="T:System.ComponentModel.SortDescription" />.</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary>Возвращает значение, показывающее, находится ли этот объект в неизменном состоянии.</summary>
      <returns>Значение true, если этот объект используется; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>Сравнивает два объекта <see cref="T:System.ComponentModel.SortDescription" /> на равенство значений.</summary>
      <returns>true, если два объекта равны; в противном случае false.</returns>
      <param name="sd1">Первый экземпляр для сравнения.</param>
      <param name="sd2">Второй экземпляр для сравнения.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>Сравнивает два объекта <see cref="T:System.ComponentModel.SortDescription" /> на неравенство значений.</summary>
      <returns>Значение true, если значения не равны; в противном случае — значение false.</returns>
      <param name="sd1">Первый экземпляр для сравнения.</param>
      <param name="sd2">Второй экземпляр для сравнения.</param>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary>Получает или задает имя свойства, которое используется в качестве условия сортировки.</summary>
      <returns>Значением по умолчанию является null.</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.ComponentModel.SortDescription" />.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.SortDescriptionCollection" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary>Возникает, когда элемент добавлен или удален.</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary>Возвращает пустой и неизменяемый экземпляр коллекции <see cref="T:System.ComponentModel.SortDescriptionCollection" />. </summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>Вставляет элемент в коллекцию по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс для вставки параметра <paramref name="item" />.</param>
      <param name="item">Объект, который нужно вставить.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary>Удаляет элемент по указанному индексу коллекции.</summary>
      <param name="index">Отсчитываемый от нуля индекс удаляемого элемента.</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>Заменяет элемент по указанному индексу.</summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">Новое значение элемента по указанному индексу.</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>Возникает, когда элемент добавлен или удален.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary>Описывает уровень детализации для трассировки конкретного объекта.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary>Трассировка доступной дополнительной информации не выполняется.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary>Выполняет трассировку некоторой дополнительной информации.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary>Выполняет трассировку среднего объема дополнительной информации.</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary>Выполняет трассировку всей дополнительной информации.</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary>Обеспечивает поддержку трассировки отладки, специально предназначенной для приложений Windows Presentation Foundation (WPF).Этот класс является абстрактным.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary>Возвращает источник трассировки анимации.</summary>
      <returns>Источник трассировки анимации.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary>Возвращает источник трассировки привязки данных.</summary>
      <returns>Источник трассировки привязки данных.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary>Возвращает источник трассировки свойство зависимостей.</summary>
      <returns>Источник трассировки свойство зависимостей.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary>Возвращает источник трассировки документа.</summary>
      <returns>Источник трассировки документа.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary>Возвращает источник трассировки Freezable.</summary>
      <returns>Источник трассировки Freezable.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary>Возвращает значение <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> вложенного свойства для заданного элемента.</summary>
      <returns>Значение свойства <see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> для элемента.</returns>
      <param name="element">Элемент, из которого считывается значение свойства.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary>Возвращает источник трассировки сайта hwnd.</summary>
      <returns>Источник трассировки сайта hwnd.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary>Возвращает источник трассировки разметки.</summary>
      <returns>Источник трассировки разметки.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary>Возвращает источник трассировки области имен.</summary>
      <returns>Источник трассировки области имен.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary>Обновляет источники трассировки c помощью принудительного повторного считывания файла app.config.</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary>Возвращает источник трассировки словаря ресурсов.</summary>
      <returns>Источник трассировки словаря ресурсов.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary>Возвращает источник трассировки маршрутизируемое событие.</summary>
      <returns>Источник трассировки маршрутизируемого события.</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary>Задает значение вложенного свойства<see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" /> для заданного элемента.</summary>
      <param name="element">Элемент, к которому записывается вложенное свойство.</param>
      <param name="traceLevel">Требуемое значение <see cref="T:System.Diagnostics.PresentationTraceLevel" />.</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary>Получает источник трассировки оболочки.</summary>
      <returns>Источник трассировки оболочки.</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.TraceLevel">
      <summary>Получает или задает значение, определяющее уровень детализации трассировки конкретного объекта.</summary>
      <returns>Значение <see cref="T:System.Diagnostics.PresentationTraceLevel" /> указывающее уровень детализации трассировки конкретного объекта.</returns>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary>Идентифицирует вложенное свойство<see cref="P:System.Diagnostics.PresentationTraceSources.TraceLevel" />.</summary>
    </member>
    <member name="T:System.IO.FileFormatException">
      <summary>Исключение, которое вызывается, если входной файл или поток данных, который должен соответствовать определенной спецификации формата файла, сформирован неверно.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.IO.FileFormatException" /> class.</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> и инициализирует его с сериализованными данными.Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с заданным сообщением об ошибке.</summary>
      <param name="message">Значение <see cref="T:System.String" />, представляющее сообщение об ошибке.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с указанным сообщением об ошибке и типом исключения.</summary>
      <param name="message">Значение <see cref="T:System.String" />, представляющее сообщение об ошибке.</param>
      <param name="innerException">Значение свойства <see cref="P:System.Exception.InnerException" />, которое представляет причину текущего исключения.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с исходным значением URI.</summary>
      <param name="sourceUri">Значение <see cref="T:System.Uri" /> файла, вызвавшего эту ошибку.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с исходным значением URI и типом исключения.</summary>
      <param name="sourceUri">Значение <see cref="T:System.Uri" /> файла, вызвавшего эту ошибку.</param>
      <param name="innerException">Значение свойства <see cref="P:System.Exception.InnerException" />, которое представляет причину текущего исключения.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с исходным значением URI и заданным сообщением об ошибке.</summary>
      <param name="sourceUri">Значение <see cref="T:System.Uri" /> файла, вызвавшего эту ошибку.</param>
      <param name="message">Значение <see cref="T:System.String" />, представляющее сообщение об ошибке.</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.IO.FileFormatException" /> с исходным значением URI, заданным сообщением об ошибке и типом исключения.</summary>
      <param name="sourceUri">Значение <see cref="T:System.Uri" /> файла, вызвавшего эту ошибку.</param>
      <param name="message">Значение <see cref="T:System.String" />, представляющее сообщение об ошибке.</param>
      <param name="innerException">Значение свойства <see cref="P:System.Exception.InnerException" />, которое представляет причину текущего исключения.</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Устанавливает объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с именем файла и дополнительными сведениями об исключении.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>Получает имя файла, вызвавшего исключение <see cref="T:System.IO.FileFormatException" />.</summary>
      <returns>
        <see cref="T:System.Uri" />, представляющий имя файла, вызвавшего исключение.</returns>
    </member>
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary>Определяет место хранения сертификата X.509, используемого для подписи.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary>Сертификат внедрен в свою часть <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary>Сертификат внедрен в часть <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" />, созданную для добавляемой подписи.</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary>Сертификат не внедрен в пакет.</summary>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>Определяет уровень сжатия содержимого, хранящегося в объекте <see cref="T:System.IO.Packaging.PackagePart" />. </summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>Сжатие отключено. </summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>Сжатие, обеспечивающее оптимальный баланс между размером и производительностью. </summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>Сжатие, обеспечивающее оптимальный размер. </summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>Сжатие, обеспечивающее оптимальную производительность. </summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>Сжатие, обеспечивающее максимальную производительность.</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary>Представляет составной файл OLE, содержащий зашифрованный пакет.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary>Закрывает зашифрованный пакет и содержащий его составной файл OLE.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Создает и возвращает объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> для указанного потока.</summary>
      <returns>Только что созданный объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />. </returns>
      <param name="envelopeStream">Поток, для которого создается файл.</param>
      <param name="publishLicense">Лицензия на публикацию, внедренная в составной файл.</param>
      <param name="cryptoProvider">Объект, определяющий, какие операции над зашифрованным содержимым разрешается выполнять текущему пользователю.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="envelopeStream" /> — null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="envelopeStream" /> не предоставляет доступа для чтения и записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Создает и возвращает объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> и присваивает ему указанное имя файла.</summary>
      <returns>Только что созданный объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />. </returns>
      <param name="envelopeFileName">Имя составного файла OLE.</param>
      <param name="publishLicense">Лицензия на публикацию, внедренная в составной файл.</param>
      <param name="cryptoProvider">Объект, определяющий, какие операции над зашифрованным содержимым разрешается выполнять текущему пользователю.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="envelopeFileName" /> — null.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Создает и возвращает объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (для указанного потока), использующий в качестве содержимого указанный незашифрованный пакет.</summary>
      <returns>Только что созданный объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />. </returns>
      <param name="envelopeStream">Поток, для которого создается файл.</param>
      <param name="packageStream">Поток, представляющий существующий незашифрованный пакет.</param>
      <param name="publishLicense">Лицензия на публикацию, внедренная в составной файл.</param>
      <param name="cryptoProvider">Объект, определяющий, какие операции над зашифрованным содержимым разрешается выполнять текущему пользователю.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="envelopeStream" /> или параметр <paramref name="packageStream" /> содержит значение null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="envelopeStream" /> не предоставляет доступа для чтения и записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary>Создает и возвращает объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, использующий в качестве содержимого указанный незашифрованный пакет, и присваивает ему указанное имя файла.</summary>
      <returns>Только что созданный объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <param name="envelopeFileName">Имя составного файла OLE.</param>
      <param name="packageStream">Поток, представляющий существующий незашифрованный пакет.</param>
      <param name="publishLicense">Лицензия на публикацию, внедренная в составной файл.</param>
      <param name="cryptoProvider">Объект, определяющий, какие операции над зашифрованным содержимым разрешается выполнять текущему пользователю.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="envelopeFileName" /> или параметр <paramref name="packageStream" /> содержит значение null.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />. </summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and optionally releases the managed resources. </summary>
      <param name="disposing">Значение true позволяет освободить управляемые и неуправляемые ресурсы; значение false позволяет освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary>Получает значение, показывающее, в каком режиме открыт файл: с доступом для чтения, для записи или для чтения и записи.</summary>
      <returns>Значение <see cref="T:System.IO.FileAccess" />, использованное при открытии файла. </returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary>Очищает поток для объекта <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> и содержимого его пакета.</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary>Получает зашифрованный пакет внутри объекта <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
      <returns>Объект <see cref="T:System.IO.Packaging.Package" /> в конверте. </returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary>Получает значение, показывающее, является ли указанный поток составным файлом OLE с потоком зашифрованного пакета.</summary>
      <returns>true, если указанный поток является составным файлом OLE с потоком зашифрованного пакета, в противном случае — false. </returns>
      <param name="stream">Проверяемый поток.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="stream" /> — null.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary>Получает значение, показывающее, является ли указанный файл составным файлом OLE с потоком зашифрованного пакета.</summary>
      <returns>true, если указанный файл является составным файлом OLE с потоком зашифрованного пакета, в противном случае — false. </returns>
      <param name="fileName">Проверяемый файл.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="fileName" /> — null.</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary>Открывает зашифрованный пакет в указанном потоке.</summary>
      <returns>Открытый объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <param name="envelopeStream">Поток, содержащий зашифрованный пакет.</param>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary>Открывает зашифрованный пакет в указанном файле только для чтения без общего доступа.</summary>
      <returns>Открытый объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <param name="envelopeFileName">Файл, содержащий зашифрованный пакет.</param>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary>Открывает зашифрованный пакет в указанном файле без общего доступа с указанным типом доступа.</summary>
      <returns>Открытый объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <param name="envelopeFileName">Файл, содержащий зашифрованный пакет.</param>
      <param name="access">Тип доступа.</param>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Открывает зашифрованный пакет в указанном файле и назначает ему указанный тип доступа и режим общего доступа.</summary>
      <returns>Открытый объект <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</returns>
      <param name="envelopeFileName">Файл, содержащий зашифрованный пакет.</param>
      <param name="access">Тип доступа.</param>
      <param name="sharing">Тип общего доступа.</param>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary>Получает основные свойства пакета (название, тему и т. п.) для документа, защищенного службой управления правами.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.PackageProperties" /> для пакета.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary>Получает данные управления правами, хранящиеся в объекте <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, а именно объекты <see cref="T:System.Security.RightsManagement.PublishLicense" /> и <see cref="T:System.Security.RightsManagement.UseLicense" />, которые хранятся в составном файле OLE с пакетом, защищенным службой управления правами.</summary>
      <returns>
        <see cref="T:System.IO.Packaging.RightsManagementInformation" /> для пакета.</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary>Получает объект, обеспечивающий доступ к потокам составного файла вне зашифрованного пакета.</summary>
      <returns>Объект <see cref="T:System.IO.Packaging.StorageInfo" />, который представляет потоки в составном файле OLE, находящиеся вне зашифрованного пакета.</returns>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>Определяет режим шифрования для частей, входящих в <see cref="T:System.IO.Packaging.Package" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>Шифрование отсутствует.</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>Шифрование производится службой управления правами.</summary>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />, которое происходит, когда <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> обнаруживает недопустимую подпись.</summary>
      <param name="sender">Недопустимая подпись <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> — источник события.</param>
      <param name="e">Данные события.</param>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>Представляет контейнер, в котором может храниться несколько объектов данных.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.Package" />, использующий заданный режим <see cref="T:System.IO.FileAccess" />.</summary>
      <param name="openFileAccess">Разрешения файлового ввода-вывода для пакета.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="openFileAccess" /> является недопустимым.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.Package" />, использующий заданный режим <see cref="T:System.IO.FileAccess" /> и режим потока.</summary>
      <param name="openFileAccess">Разрешения файлового ввода-вывода для пакета.</param>
      <param name="streaming">true, если требуется открыть пакет для работы в потоке, в противном случае — false.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="openFileAccess" /> является недопустимым.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>Сохраняет и закрывает пакет, а также все базовые потоки частей.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>Создает новую несжатую часть с заданным URI и типом содержимого.</summary>
      <returns>Новая созданная часть.</returns>
      <param name="partUri">URI (uniform resource identifier — универсальный код ресурса) новой части.</param>
      <param name="contentType">Тип содержимого потока данных.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="partUri" /> или <paramref name="contentType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является допустимым URI части <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.InvalidOperationException">Часть с указанным <paramref name="partUri" /> уже имеется в пакете.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения (добавление новой части невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Создает новую часть с заданными значениями URI, типа содержимого и режима сжатия.</summary>
      <returns>Новая созданная часть.</returns>
      <param name="partUri">URI новой части.</param>
      <param name="contentType">Тип содержимого потока данных.</param>
      <param name="compressionOption">Режим сжатия потока данных — <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> или <see cref="F:System.IO.Packaging.CompressionOption.Normal" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="partUri" /> или <paramref name="contentType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является допустимым URI (uniform resource identifier — универсальный код ресурса) части <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.InvalidOperationException">Часть с указанным <paramref name="partUri" /> уже имеется в пакете.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="compressionOption" /> является недопустимым.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения (добавление новой части невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>При переопределении в производном классе создает новую часть в пакете.</summary>
      <returns>Созданная часть.</returns>
      <param name="partUri">URI (uniform resource identifier — универсальный код ресурса) создаваемой части.</param>
      <param name="contentType">Тип содержимого потока данных.</param>
      <param name="compressionOption">Параметр сжатия потока данных.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Создает связь с частью на уровне пакета по заданным значениям URI, вида целевой части и типа связи. </summary>
      <returns>Связь с указанной частью на уровне пакета.</returns>
      <param name="targetUri">URI (uniform resource identifier — универсальный код ресурса) целевой части.</param>
      <param name="targetMode">Показывает, является ли целевая часть внутренней (<see cref="F:System.IO.Packaging.TargetMode.Internal" />) или внешней (<see cref="F:System.IO.Packaging.TargetMode.External" />) по отношению к пакету.</param>
      <param name="relationshipType">Код URI, однозначно определяющий роль связи.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="targetUri" /> или <paramref name="relationshipType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Часть <paramref name="targetUri" /> представляет собой <see cref="T:System.IO.Packaging.PackageRelationship" />, или в качестве <paramref name="targetMode" /> задано <see cref="F:System.IO.Packaging.TargetMode.Internal" /> и <paramref name="targetUri" /> является абсолютным URI.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="targetMode" /> является недопустимым.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Создает связь с частью на уровне пакета по заданным значениям URI, вида целевой части, типа связи и идентификатор (ID).</summary>
      <returns>Связь с указанной частью на уровне пакета.</returns>
      <param name="targetUri">URI (uniform resource identifier — универсальный код ресурса) целевой части.</param>
      <param name="targetMode">Показывает, является ли целевая часть внутренней (<see cref="F:System.IO.Packaging.TargetMode.Internal" />) или внешней (<see cref="F:System.IO.Packaging.TargetMode.External" />) по отношению к пакету.</param>
      <param name="relationshipType">Код URI, однозначно определяющий роль связи.</param>
      <param name="id">Уникальный идентификатор XML.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="targetUri" /> или <paramref name="relationshipType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Часть <paramref name="targetUri" /> представляет собой <see cref="T:System.IO.Packaging.PackageRelationship" />, или в качестве <paramref name="targetMode" /> задано <see cref="F:System.IO.Packaging.TargetMode.Internal" /> и <paramref name="targetUri" /> является абсолютным URI.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="targetMode" /> является недопустимым.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> не является допустимым идентификатором XML; или часть с указанным <paramref name="id" /> уже имеется в пакете.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>Удаляет из пакета часть с заданным URI.</summary>
      <param name="partUri">URI удаляемой части.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="partUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является допустимым URI части <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>При переопределении в производном классе удаляет часть с заданным URI. </summary>
      <param name="partUri">Свойство <see cref="P:System.IO.Packaging.PackagePart.Uri" /> удаляемого объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>Удаляет связь уровня пакета.</summary>
      <param name="id">Свойство <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> удаляемого объекта <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="id" /> имеет значение null.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>Очищает и сохраняет содержимое всех частей и связей, закрывает пакет и освобождает все ресурсы.</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>Получает значение режима доступа к файлу для пакета.</summary>
      <returns>Одно из значений <see cref="T:System.IO.FileAccess" />: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" /> или <see cref="F:System.IO.FileAccess.ReadWrite" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>Сохраняет содержимое всех частей и связей, имеющихся в пакете.</summary>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения и не может быть изменен.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>При переопределении в производном классе сохраняет содержимое всех частей и связей в хранилище производного класса.</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>Возвращает часть с заданным URI.</summary>
      <returns>Часть с указанным <paramref name="partUri" />.</returns>
      <param name="partUri">URI (uniform resource identifier — универсальный код ресурса) части, которую требуется возвратить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="partUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является допустимым URI (uniform resource identifier — универсальный код ресурса) части <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.InvalidOperationException">Часть с указанным <paramref name="partUri" /> не содержится в пакете.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>При переопределении в производном классе возвращает часть, адресованную заданным URI.</summary>
      <returns>Запрошенная часть или null, если часть с указанным <paramref name="partUri" /> отсутствует в пакете.</returns>
      <param name="partUri">URI (uniform resource identifier — универсальный код ресурса) части, которую требуется извлечь.</param>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>Возвращает коллекцию, состоящую из всех частей пакета.</summary>
      <returns>Коллекция всех элементов <see cref="T:System.IO.Packaging.PackagePart" />, содержащихся в пакете.</returns>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>При переопределении в производном классе возвращает массив, состоящий из всех частей пакета. </summary>
      <returns>Массив всех частей, содержащихся в пакете.</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>Возвращает связь уровня пакета с заданным идентификатором.</summary>
      <returns>Связь уровня пакета с указанным <paramref name="id" />.</returns>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> связи, которую требуется возвратить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="id" /> имеет значение null.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
      <exception cref="T:System.InvalidOperationException">Связь с указанным <paramref name="id" /> отсутствует в пакете.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>Возвращает коллекцию, состоящую из всех связей уровня пакета.</summary>
      <returns>Коллекция всех связей уровня пакета, содержащихся в данном пакете.</returns>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>Возвращает коллекцию, состоящую из всех связей уровня пакета с заданным типом <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />. </summary>
      <returns>Коллекция связей уровня пакета, соответствующих указанному типу <paramref name="relationshipType" />.</returns>
      <param name="relationshipType">Тип <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />, к которому должны относиться связи, возвращаемые в составе коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="relationshipType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="relationshipType" /> содержит пустую строку.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>Открывает пакет в заданном потоке ввода-вывода.</summary>
      <returns>Открытый пакет.</returns>
      <param name="stream">Поток ввода-вывода, в котором требуется открыть пакет.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stream" /> имеет значение null.</exception>
      <exception cref="T:System.IO.IOException">Для открываемого пакета требуются разрешения на чтение или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для записи, или для открываемого пакета требуются разрешения на запись или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>Открывает пакет в заданном потоке ввода-вывода в указанном файловом режиме.</summary>
      <returns>Открытый пакет.</returns>
      <param name="stream">Поток ввода-вывода, в котором требуется открыть пакет.</param>
      <param name="packageMode">Файловый режим, в котором следует открыть пакет.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stream" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Недопустимое значение параметра <paramref name="packageMode" />.</exception>
      <exception cref="T:System.IO.IOException">Для открываемого пакета требуются разрешения на чтение или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для записи, или для открываемого пакета требуются разрешения на запись или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Открывает пакет в заданном потоке ввода-вывода с указанными значениями файлового режима и режима доступа к файлу.</summary>
      <returns>Открытый пакет.</returns>
      <param name="stream">Поток ввода-вывода, в котором требуется открыть пакет.</param>
      <param name="packageMode">Файловый режим, в котором следует открыть пакет.</param>
      <param name="packageAccess">Режим доступа к файлу, в котором следует открыть пакет.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stream" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="packageMode" /> или <paramref name="packageAccess" /> является недопустимым.</exception>
      <exception cref="T:System.IO.IOException">Для открываемого пакета требуются разрешения на чтение или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для записи, или для открываемого пакета требуются разрешения на запись или чтение/запись, а указанный поток <paramref name="stream" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>Открывает пакет с указанным путем и именем файла.</summary>
      <returns>Открытый пакет.</returns>
      <param name="path">Путь и имя файла пакета.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> имеет значение null.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>Открывает пакет на заданном пути в указанном файловом режиме. </summary>
      <returns>Открытый пакет.</returns>
      <param name="path">Путь и имя файла пакета.</param>
      <param name="packageMode">Файловый режим, в котором следует открыть пакет.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="packageMode" /> является недопустимым.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Открывает пакет на заданном пути с указанными значениями файлового режима и режима доступа к файлу.</summary>
      <returns>Открытый пакет.</returns>
      <param name="path">Путь и имя файла пакета.</param>
      <param name="packageMode">Файловый режим, в котором следует открыть пакет.</param>
      <param name="packageAccess">Режим доступа к файлу, в котором следует открыть пакет.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="packageMode" /> или <paramref name="packageAccess" /> является недопустимым.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Открывает пакет на заданном пути с указанными значениями файлового режима, режима доступа к файлу и режима общего доступа.</summary>
      <returns>Открытый пакет.</returns>
      <param name="path">Путь и имя файла пакета.</param>
      <param name="packageMode">Файловый режим, в котором следует открыть пакет.</param>
      <param name="packageAccess">Режим доступа к файлу, в котором следует открыть пакет.</param>
      <param name="packageShare">Режим общего доступа, в котором следует открыть пакет.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="packageMode" />, <paramref name="packageAccess" /> или <paramref name="packageShare" /> является недопустимым.</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>Получает основные свойства пакета.</summary>
      <returns>Основные свойства пакета.</returns>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>Показывает, содержится ли часть с заданным URI в пакете.</summary>
      <returns>true, если часть с указанным <paramref name="partUri" /> находится в пакете, в противном случае — false.</returns>
      <param name="partUri">
        <see cref="T:System.Uri" /> проверяемой части.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="partUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является допустимым URI (uniform resource identifier — универсальный код ресурса) части <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи (чтение информации невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>Показывается, содержится ли в пакете связь уровня пакета с заданным идентификатором.</summary>
      <returns>true, если связь уровня пакета с указанным <paramref name="id" /> находится в пакете, в противном случае — false.</returns>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> проверяемой связи.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="id" /> имеет значение null.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
      <exception cref="T:System.ObjectDisposedException">Пакет не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи.</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>Данный член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для использования в приложениях.Поэтому следует использовать типобезопасный метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary>Представляет цифровую подпись, применяемую к набору частей и связей пакета.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary>Получает параметр внедрения сертификата X.509. </summary>
      <returns>Одно из значений <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />, задающее параметр внедрения цифровой подписи.</returns>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary>Возвращает упорядоченный список операций <see cref="T:System.Security.Cryptography.Xml.Transform" />, примененных к данной части. </summary>
      <returns>Упорядоченный список строк URI (например, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> или <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />), представляющий канонические XML-преобразования, примененные к части с данным URI (<paramref name="partName" />).</returns>
      <param name="partName">
        <see cref="T:System.Uri" /> объекта <see cref="T:System.IO.Packaging.PackagePart" />, для которого возвращается список преобразований.</param>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary>Получает или задает цифровую подпись XML.</summary>
      <returns>Цифровая подпись XML.</returns>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary>Получает объект <see cref="T:System.IO.Packaging.PackagePart" />, содержащий подпись. </summary>
      <returns>Часть пакета, содержащая подпись.</returns>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary>Возвращает строку URI, идентифицирующую тип подписи. </summary>
      <returns>A URI string that identifies the signature type.Значение по умолчанию — <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</returns>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary>Получает зашифрованное хэш-значение объекта <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />. </summary>
      <returns>Массив байтов, содержащий зашифрованное хэш-значение объекта <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</returns>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary>Получает коллекцию, состоящую из всех объектов <see cref="T:System.IO.Packaging.PackagePart" />, подписанных данной сигнатурой. </summary>
      <returns>Коллекция, содержащая все части пакета, подписанные данной сигнатурой.</returns>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary>Получает список частей <see cref="T:System.IO.Packaging.PackageRelationship" />, подписанных данной сигнатурой.</summary>
      <returns>Список частей <see cref="T:System.IO.Packaging.PackageRelationship" />, подписанных данной сигнатурой.</returns>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary>Возвращает сертификат X.509 подписавшего. </summary>
      <returns>Цифровой сертификат подписавшего или null, если сертификат не хранится в <see cref="T:System.IO.Packaging.Package" />.</returns>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary>Возвращает дату и время создания подписи. </summary>
      <returns>Дата и время создания подписи.</returns>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary>Получает формат даты и времени, возвращаемых свойством <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />. </summary>
      <returns>Формат даты и времени, возвращаемых свойством <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary>Проверяет цифровую подпись с использованием сертификата X.509. </summary>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" />, если проверка пройдена успешно, в противном случае — одно из значений <see cref="T:System.IO.Packaging.VerifyResult" />, идентифицирующих проблему. </returns>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Проверяет цифровую подпись с использованием заданного сертификата X.509. </summary>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" />, если проверка пройдена успешно, в противном случае — одно из значений <see cref="T:System.IO.Packaging.VerifyResult" />, идентифицирующих проблему.</returns>
      <param name="signingCertificate">Сертификат X.509 подписавшего, используемый для проверки цифровой подписи.</param>
      <exception cref="T:System.InvalidOperationException">Цифровая подпись <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> уже удалена.</exception>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary>Предоставляет служебный класс для создания и проверки цифровых подписей в объекте <see cref="T:System.IO.Packaging.Package" />.    </summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> для использования с заданным объектом <see cref="T:System.IO.Packaging.Package" />. </summary>
      <param name="package">Пакет, связанный с данным диспетчером сигнатур.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary>Возвращает или задает параметр внедрения сертификата X.509, используемый методом <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> при добавлении цифровых подписей к частям пакета. </summary>
      <returns>Одно из значений <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />. </returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary>Добавляет скрепляющую подпись ко всем сигнатурам в пакете с помощью выбранного пользователем сертификата X.509.</summary>
      <returns>Подпись, добавленная в качестве скрепляющей, или null, если не удалось найти сертификат или если пользователь отменил выбор сертификата в диалоговом окне.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Добавляет скрепляющую подпись ко всем сигнатурам пакета, используя указанный сертификат X.509. </summary>
      <returns>Подпись, добавленная в качестве скрепляющей.</returns>
      <param name="certificate">Сертификат X.509, добавляемый в качестве скрепляющей подписи.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Добавляет скрепляющую подпись к списку сигнатур, используя заданный сертификат X.509.</summary>
      <returns>Цифровая подпись, использованная в качестве скрепляющей подписи для каждого из объектов <paramref name="signatures" />.</returns>
      <param name="certificate">Сертификат X.509, используемый в скрепляющей подписи для каждого из указанных объектов <paramref name="signatures" />.</param>
      <param name="signatures">Список сигнатур, для которых требуется скрепляющая подпись.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="certificate" /> или <paramref name="signatures" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">В пакете нет подписанных объектов <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.ArgumentException">В пакете нет подписанных частей <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary>Получает строку URI, которая определяет алгоритм хэширования, используемый по умолчанию для создания и проверки сигнатур. </summary>
      <returns>Строка URI, которая определяет алгоритм хэширования, используемый по умолчанию для создания и проверки сигнатур.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary>Возвращает цифровую подпись для заданного URI (uniform resource identifier — универсальный код ресурса) подписи. </summary>
      <returns>Цифровая подпись для указанного <paramref name="signatureUri" /> или null, если подпись с заданным <paramref name="signatureUri" /> не найдена.</returns>
      <param name="signatureUri">URI цифровой подписи, которую требуется возвратить.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary>Возвращает или задает идентификатор URI для экземпляра <see cref="T:System.Security.Cryptography.HashAlgorithm" />, используемого для создания и проверки сигнатур. </summary>
      <returns>Идентификатор URI объекта <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> для экземпляра <see cref="T:System.Security.Cryptography.HashAlgorithm" />, используемого для создания и проверки сигнатур.</returns>
      <exception cref="T:System.ArgumentNullException">Строка для установки URI содержит null.</exception>
      <exception cref="T:System.ArgumentException">Строка для установки URI пуста.</exception>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary>Происходит при обнаружении недействительной подписи методом <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />. </summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary>Получает значение, показывающее, содержатся ли в пакете какие-либо подписи. </summary>
      <returns>true, если пакет содержит подписи, в противном случае — false.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary>Возвращает или задает дескриптор родительского окна для отображения диалогового окна выбора сертификата. </summary>
      <returns>Дескриптор родительского окна, используемого для отображения диалогового окна выбора сертификата.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary>Удаляет все цифровые подписи из пакета. </summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary>Удаляет цифровую подпись с заданным URI (uniform resource identifier — универсальный код ресурса). </summary>
      <param name="signatureUri">URI удаляемой подписи <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Запрашивает у пользователя сертификат X.509, который будет затем использоваться при создании цифровой подписи для указанного списка частей пакета.</summary>
      <returns>Цифровая подпись, использованная для подписания списка объектов <paramref name="parts" />.</returns>
      <param name="parts">Список URI (uniform resource identifiers — универсальные коды ресурса) элементов <see cref="T:System.IO.Packaging.PackagePart" />, которые требуется подписать.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Подписывает список частей пакета с использованием заданного сертификата X.509. </summary>
      <returns>Цифровая подпись, использованная для подписания заданного списка объектов <paramref name="parts" />, или null, если сертификат не найден или если пользователь нажал кнопку "Отмена" в диалоговом окне выбора сертификата.</returns>
      <param name="parts">Список URI (uniform resource identifiers — универсальные коды ресурса) элементов <see cref="T:System.IO.Packaging.PackagePart" />, которые требуется подписать.</param>
      <param name="certificate">Сертификат X.509, используемый для создания цифровой подписи для каждого из указанных объектов <paramref name="parts" />.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary>Подписывает список частей и связей пакета с использованием заданного сертификата X.509. </summary>
      <returns>Цифровая подпись, использованная для подписания элементов списков <paramref name="parts" /> и <paramref name="relationshipSelectors" />.</returns>
      <param name="parts">Список URI (uniform resource identifiers — универсальные коды ресурса) объектов <see cref="T:System.IO.Packaging.PackagePart" />, которые требуется подписать.</param>
      <param name="certificate">Сертификат X.509, используемый для создания цифровой подписи для каждой из указанных частей и связей.</param>
      <param name="relationshipSelectors">Список подписываемых объектов <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <exception cref="T:System.ArgumentException">Ни в списке <paramref name="parts" />, ни в списке <paramref name="relationshipSelectors" /> не указаны объекты для подписания.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary>Подписывает список частей и связей пакета с использованием заданного сертификата X.509 и идентификатора идентификатор (ID).</summary>
      <returns>Цифровая подпись, использованная для подписания элементов списков <paramref name="parts" /> и <paramref name="relationshipSelectors" />.</returns>
      <param name="parts">Список URI (uniform resource identifiers — универсальные коды ресурса) объектов <see cref="T:System.IO.Packaging.PackagePart" />, которые требуется подписать.</param>
      <param name="certificate">Сертификат X.509, используемый для создания цифровой подписи для каждой из указанных частей и связей.</param>
      <param name="relationshipSelectors">Список подписываемых объектов <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <param name="signatureId">Строка идентификации, которую следует связать с сигнатурой.</param>
      <exception cref="T:System.ArgumentException">Ни в списке <paramref name="parts" />, ни в списке <paramref name="relationshipSelectors" /> не указаны элементы для подписания.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary>Подписывает список частей пакета, связей пакета или пользовательских объектов с использованием указанного сертификата X.509 и идентификатор (ID) подписи.</summary>
      <returns>Цифровая подпись, использованная для подписания элементов списков <paramref name="parts" /> и <paramref name="relationshipSelectors" />.</returns>
      <param name="parts">Список URI (uniform resource identifiers — универсальные коды ресурса) объектов <see cref="T:System.IO.Packaging.PackagePart" />, которые требуется подписать.</param>
      <param name="certificate">Сертификат X.509, используемый для создания цифровой подписи для каждой из указанных частей и связей.</param>
      <param name="relationshipSelectors">Список подписываемых объектов <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <param name="signatureId">Строка идентификации, которую следует связать с сигнатурой.</param>
      <param name="signatureObjects">Список пользовательских объектов данных, которые требуется подписать.</param>
      <param name="objectReferences">Список ссылок на подписываемые пользовательские объекты.</param>
      <exception cref="T:System.ArgumentException">В списках <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> и <paramref name="objectReferences" /> отсутствуют элементы для подписания.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> подписываемой части ссылается на пустое, неопределенное или имеющее значение null свойство <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />.</exception>
      <exception cref="T:System.Xml.XmlException">Значение <paramref name="signatureId" /> отлично от null и не является допустимым идентификатором схемы XML (например, начинается с цифры).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary>Получает URI (uniform resource identifier — универсальный код ресурса) части источника подписи.</summary>
      <returns>URI части источника подписи.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary>Получает тип связи источника подписи по умолчанию.</summary>
      <returns>Тип связи источника подписи по умолчанию.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary>Получает коллекцию всех сигнатур, содержащихся в пакете. </summary>
      <returns>Коллекция всех объектов <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary>Возвращает или задает формат даты/времени, используемый для создания значения <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> для подписи. </summary>
      <returns>Формат даты/времени, используемый для создания значения <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> для подписи.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary>Получает словарь, который содержит каждый определенный тип <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> и идентификатор соответствующего ему алгоритма XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" />. </summary>
      <returns>Словарь, который содержит каждый определенный тип <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> и идентификатор соответствующего ему алгоритма XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Проверяет заданный сертификат X.509. </summary>
      <returns>
        <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (значение 0), если сертификат успешно прошел проверку, в противном случае — перечисление битовых значений флагов ошибок.</returns>
      <param name="certificate">Проверяемый сертификат X.509.</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary>Проверяет подписи всех подписанных частей пакета. </summary>
      <returns>
        <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (значение 0), если все подписи успешно прошли проверку, в противном случае — перечисление, идентифицирующее ошибку.</returns>
      <param name="exitOnFailure">true для выхода при первом обнаружении ошибки, или false для проверки всех сигнатур.</param>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>Предоставляет базовый класс для частей, хранящихся в объекте <see cref="T:System.IO.Packaging.Package" />.Это абстрактный класс.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackagePart" /> с использованием указанного родительского объекта <see cref="P:System.IO.Packaging.PackagePart.Package" /> и URI части.</summary>
      <param name="package">Родительский объект <see cref="T:System.IO.Packaging.Package" /> для части.</param>
      <param name="partUri">URI части относительно корня родительского объекта <see cref="T:System.IO.Packaging.Package" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="package" /> или <paramref name="partUri" /> имеет значение null.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackagePart" /> с использованием указанного родительского объекта <see cref="P:System.IO.Packaging.PackagePart.Package" />, URI части и типа MIME для содержимого.</summary>
      <param name="package">Родительский объект <see cref="T:System.IO.Packaging.Package" /> для части.</param>
      <param name="partUri">URI части относительно корня родительского объекта <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="contentType">Тип MIME для содержимого потока данных части.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="package" /> или <paramref name="partUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является допустимым URI части <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackagePart" /> с использованием указанного родительского объекта <see cref="P:System.IO.Packaging.PackagePart.Package" />, URI части, типа MIME для содержимого и параметра <see cref="T:System.IO.Packaging.CompressionOption" />.</summary>
      <param name="package">Родительский объект <see cref="T:System.IO.Packaging.Package" /> для части.</param>
      <param name="partUri">URI части относительно корня родительского объекта <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="contentType">Тип MIME для содержимого потока данных части.</param>
      <param name="compressionOption">Режим сжатия потока данных части.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="package" /> или <paramref name="partUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> не является допустимым URI части <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="compressionOption" /> является недопустимым.</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>Получает параметр сжатия потока содержимого части.</summary>
      <returns>Параметр сжатия потока содержимого части.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>Получает тип MIME потока содержимого.</summary>
      <returns>Тип MIME для потока данных содержимого части.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).–либо–Метод <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> производного класса возвращает пустую строку.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>Создает связь на уровне части между данным объектом <see cref="T:System.IO.Packaging.PackagePart" /> и указанным целевым объектом <see cref="T:System.IO.Packaging.PackagePart" /> или внешним ресурсом.</summary>
      <returns>Связь на уровне части между данным объектом <see cref="T:System.IO.Packaging.PackagePart" /> и целевым объектом <see cref="T:System.IO.Packaging.PackagePart" /> или внешним ресурсом.</returns>
      <param name="targetUri">URI целевой части.</param>
      <param name="targetMode">Одно из значений перечисления.Например, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> определяет целевую часть, находящуюся внутри <see cref="T:System.IO.Packaging.Package" />, а <see cref="F:System.IO.Packaging.TargetMode.External" /> — целевой ресурс вне <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">Роль связи.</param>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="targetUri" /> или <paramref name="relationshipType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="targetMode" /> не является допустимым значением перечисления <see cref="T:System.IO.Packaging.TargetMode" />.</exception>
      <exception cref="T:System.ArgumentException">Часть, заданная параметром <paramref name="targetUri" />, является связью (целевым объектом связи не может быть другая связь).–либо–В качестве <paramref name="targetMode" /> задано <see cref="F:System.IO.Packaging.TargetMode.Internal" />, однако <paramref name="targetUri" /> является абсолютным внешним URI.</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения (добавление новой связи невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>Создает связь на уровне части между данным объектом <see cref="T:System.IO.Packaging.PackagePart" /> и указанным целевым объектом <see cref="T:System.IO.Packaging.PackagePart" /> или внешним ресурсом.</summary>
      <returns>Связь на уровне части между данным объектом <see cref="T:System.IO.Packaging.PackagePart" /> и целевым объектом <see cref="T:System.IO.Packaging.PackagePart" /> или внешним ресурсом.</returns>
      <param name="targetUri">URI целевой части.</param>
      <param name="targetMode">Одно из значений перечисления.Например, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> определяет целевую часть, находящуюся внутри <see cref="T:System.IO.Packaging.Package" />, а <see cref="F:System.IO.Packaging.TargetMode.External" /> — целевой ресурс вне <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="relationshipType">Роль связи.</param>
      <param name="id">Уникальный идентификатор связи.</param>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="targetUri" /> или <paramref name="relationshipType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="targetMode" /> не является допустимым значением перечисления <see cref="T:System.IO.Packaging.TargetMode" />.</exception>
      <exception cref="T:System.ArgumentException">Часть, заданная параметром <paramref name="targetUri" />, является связью (целевым объектом связи не может быть другая связь).–либо–В качестве <paramref name="targetMode" /> задано <see cref="F:System.IO.Packaging.TargetMode.Internal" />, однако <paramref name="targetUri" /> является абсолютным внешним URI.</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения (добавление новой связи невозможно).</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.–либо–Часть с указанным <paramref name="id" /> уже существует.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>Удаляет указанную связь <see cref="T:System.IO.Packaging.PackageRelationship" /> уровня части.</summary>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> удаляемой связи.</param>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="id" /> имеет значение null.</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для чтения (удаление связей невозможно).</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>При переопределении в производном классе возвращает тип MIME содержимого части.</summary>
      <returns>Тип MIME содержимого части.</returns>
      <exception cref="T:System.NotSupportedException">Производный класс не предлагает переопределенную реализацию, необходимую для метода <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>Возвращает связь с указанным <see cref="P:System.IO.Packaging.PackageRelationship.Id" />. </summary>
      <returns>Связь, соответствующая указанному <paramref name="id" />.</returns>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> связи, которую требуется возвратить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="id" /> имеет значение null.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="relationshipType" /> содержит пустую строку.</exception>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).–либо–Связь с указанным <paramref name="id" /> не существует в пакете.</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи (чтение сведений о связях невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>Возвращает коллекцию всех связей, владельцем которых является данная часть.</summary>
      <returns>Коллекция всех связей, владельцем которых является данная часть.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи (чтение сведений о связях невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>Возвращает коллекцию связей, соответствующих указанному типу <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
      <returns>Коллекция связей, соответствующих указанному типу <paramref name="relationshipType" />.</returns>
      <param name="relationshipType">
        <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> для связей, которые требуется найти и возвратить в составе коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="relationshipType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="relationshipType" /> содержит пустую строку.</exception>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи (чтение сведений о связях невозможно).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>Возвращает поток данных содержимого части.</summary>
      <returns>Поток данных содержимого части.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Метод <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> производного подкласса возвращает null в качестве объекта потока.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>Возвращает поток содержимого, открытый в указанном режиме ввода-вывода <see cref="T:System.IO.FileMode" />.</summary>
      <returns>Поток содержимого части.</returns>
      <param name="mode">Режим ввода-вывода, в котором требуется открыть поток содержимого.</param>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="mode" /> не является допустимым значением перечисления <see cref="T:System.IO.FileMode" />.</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="mode" /> несовместим с потоком пакета и части.–либо–Метод <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> производного подкласса возвращает null в качестве объекта потока.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Возвращает поток содержимого части, открытый в указанных режимах <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />.</summary>
      <returns>Поток содержимого части.</returns>
      <param name="mode">Режим ввода-вывода, в котором требуется открыть поток содержимого.</param>
      <param name="access">Права доступа, используемые при открытии потока содержимого.</param>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="mode" /> не является допустимым значением перечисления <see cref="T:System.IO.FileMode" />.–либо–Параметр <paramref name="access" /> не является допустимым значением перечисления <see cref="T:System.IO.FileAccess" />.</exception>
      <exception cref="T:System.IO.IOException">Параметр <paramref name="mode" /> или <paramref name="access" /> несовместим с потоком пакета и части.–либо–В качестве параметра <paramref name="access" /> задано <see cref="F:System.IO.FileAccess.Read" />, но режим <paramref name="mode" /> требует доступа для записи.(Значения <see cref="T:System.IO.FileMode" />, равные <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" /> или <see cref="F:System.IO.FileMode.Append" />, требуют доступа <see cref="F:System.IO.FileAccess.Write" /> или <see cref="F:System.IO.FileAccess.ReadWrite" />.)–либо–Метод <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> производного подкласса возвращает null в качестве объекта потока.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>При переопределении в производном классе возвращает поток содержимого части, открытый в указанных режимах <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />.</summary>
      <returns>Поток данных содержимого части.</returns>
      <param name="mode">Режим ввода-вывода, в котором требуется открыть поток содержимого.</param>
      <param name="access">Права доступа, используемые при открытии потока содержимого.</param>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>Получает родительский объект <see cref="T:System.IO.Packaging.Package" /> для части.</summary>
      <returns>Родительский пакет части.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>Возвращает значение, показывающее, является ли данная часть владельцем связи с указанным <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
      <returns>true, если данная часть является владельцем связи с указанным <paramref name="id" />, в противном случае — false.</returns>
      <param name="id">
        <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> проверяемой связи.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="id" /> имеет значение null.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="id" /> не является допустимым идентификатором XML.</exception>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
      <exception cref="T:System.IO.IOException">Пакет доступен только для записи (чтение сведений о связях невозможно).</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>Получает URI части.</summary>
      <returns>URI части относительно корня пакета.</returns>
      <exception cref="T:System.InvalidOperationException">Данная часть была удалена.–либо–Объект <see cref="P:System.IO.Packaging.PackagePart.Package" /> не открыт (вызван метод <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> или <see cref="M:System.IO.Packaging.Package.Close" />).</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>Возвращает перечислитель для итерационного перебора частей, входящих в коллекцию. </summary>
      <returns>Перечислитель для итерационного перебора элементов <see cref="T:System.IO.Packaging.PackagePart" />, входящих в коллекцию.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий перебор коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerator`1" />, который можно использовать для перебора элементов коллекции.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Описание этого члена см. в разделе, посвященном <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Объект <see cref="T:System.Collections." /><see cref="IEnumerator" />, который может использоваться для итерации в коллекции.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>Представляет основные свойства объекта <see cref="T:System.IO.Packaging.Package" />.    </summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackageProperties" />. </summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>При переопределении в производном классе получает или задает категорию объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Категория содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>При переопределении в производном классе получает или задает значение, представляющее состояние объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Состояние содержимого <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>При переопределении в производном классе получает или задает значение, представляющее тип содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Тип содержимого <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>При переопределении в производном классе получает или задает дату и время последнего создания объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Дата и время первоначального создания объекта <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>При переопределении в производном классе получает или задает значение, которое идентифицирует лицо или сущность, создавшую объект <see cref="T:System.IO.Packaging.Package" /> и его содержимое.</summary>
      <returns>Лицо или сущность — создатель объекта <see cref="T:System.IO.Packaging.Package" /> и его содержимого.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>При переопределении в производном классе получает или задает описание содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Описание содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>Освобождает все ресурсы, используемые экземпляром объекта <see cref="T:System.IO.Packaging.PackageProperties" />.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые экземпляром объекта <see cref="T:System.IO.Packaging.PackageProperties" /> (при необходимости освобождает и управляемые ресурсы). </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые), или значение false, чтобы освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>При переопределении в производном классе получает или задает значение, которое однозначно идентифицирует объект <see cref="T:System.IO.Packaging.Package" /> и его содержимое.</summary>
      <returns>Значение, однозначно идентифицирующее объект <see cref="T:System.IO.Packaging.Package" /> и его содержимое.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>При переопределении в производном классе получает или задает значение, которое определяет набор ключевых слов с разделителями, используемый при поиске и индексации объекта <see cref="T:System.IO.Packaging.Package" /> и его содержимого.</summary>
      <returns>Набор ключевых слов с разделителями, используемый при поиске и индексации объекта <see cref="T:System.IO.Packaging.Package" /> и его содержимого.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>При переопределении в производном классе получает или задает значение, которое идентифицирует язык содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Значение, идентифицирующее язык содержимого <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>При переопределении в производном классе получает или задает значение, которое идентифицирует пользователя, последним изменившего содержимое объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Пользователь, последним изменивший содержимое <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>При переопределении в производном классе получает или задает дату и время последней печати содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Дата и время последней печати содержимого <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>При переопределении в производном классе получает или задает дату и время последнего изменения объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Дата и время последнего изменения объекта <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>При переопределении в производном классе получает или задает номер редакции объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Номер редакции <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>При переопределении в производном классе получает или задает тему содержимого объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Тема содержимого <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>При переопределении в производном классе получает или задает имя, присвоенное объекту <see cref="T:System.IO.Packaging.Package" /> и его содержимому.</summary>
      <returns>Имя, присвоенное объекту <see cref="T:System.IO.Packaging.Package" /> и его содержимому.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>При переопределении в производном классе получает или задает номер версии объекта <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Номер версии <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>Представляет ассоциацию между исходным объектом <see cref="T:System.IO.Packaging.Package" /> или <see cref="T:System.IO.Packaging.PackagePart" /> и целевым объектом, которым может быть <see cref="T:System.IO.Packaging.PackagePart" /> или внешний ресурс.</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>Получает строку идентификатора связи.</summary>
      <returns>Строка идентификатора связи.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>Возвращает объект <see cref="T:System.IO.Packaging.Package" />, содержащий данную связь.</summary>
      <returns>Пакет, содержащий данную связь.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>Получает уточненное имя типа связи. </summary>
      <returns>Уточненное имя типа связи.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>Получает URI пакета или части — владельца связи.</summary>
      <returns>URI объекта <see cref="T:System.IO.Packaging.Package" /> или <see cref="T:System.IO.Packaging.PackagePart" />, являющегося владельцем связи.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>Получает значение, показывающее тип целевого объекта связи: <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> по отношению к <see cref="T:System.IO.Packaging.Package" />.</summary>
      <returns>Значение перечисления, показывающее, на какой ресурс ссылается <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />: <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> по отношению к <see cref="T:System.IO.Packaging.Package" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>Получает URI целевого ресурса связи.</summary>
      <returns>URI целевого ресурса.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>Представляет коллекцию элементов <see cref="T:System.IO.Packaging.PackageRelationship" />, владельцами которых является заданный объект <see cref="T:System.IO.Packaging.PackagePart" /> или <see cref="T:System.IO.Packaging.Package" />. </summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>Возвращает перечислитель для итерационного перебора связей, входящих в коллекцию. </summary>
      <returns>Перечислитель для итерационного перебора элементов <see cref="T:System.IO.Packaging.PackageRelationship" />, входящих в коллекцию.</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <returns>Не используйте его — используйте <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>Определяет критерии <see cref="T:System.IO.Packaging.PackageRelationship" /> для выбора связей уровня части или уровня пакета.</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.</summary>
      <param name="sourceUri">The URI (uniform resource identifier — универсальный код ресурса) of the <see cref="T:System.IO.Packaging.PackagePart" /> or the <see cref="T:System.IO.Packaging.Package" /> (<paramref name="SourceUri" />="/") that owns the relationship.</param>
      <param name="selectorType">Тип критерия выбора <paramref name="selectionCriteria" /> — по значению <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> связи или по значению <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> связи.</param>
      <param name="selectionCriteria">Строка квалификации, используемая для выбора связей на основе <paramref name="selectorType" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourceUri" /> или параметр <paramref name="selectionCriteria" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="selectorType" /> является недопустимым.</exception>
      <exception cref="T:System.Xml.XmlException">В качестве параметра <paramref name="selectorType" /> указано <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />, однако <paramref name="selectionCriteria" /> не задает допустимый идентификатор XSD (XML Schema Definition — определение схемы XML) идентификатор (ID).</exception>
      <exception cref="T:System.ArgumentException">Значение <paramref name="selectionCriteria" /> недопустимо для указанного типа <paramref name="selectorType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceUri" /> не указывает на корень <see cref="T:System.IO.Packaging.Package" /> ("/") и не является допустимым URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>Возвращает список объектов <see cref="T:System.IO.Packaging.PackageRelationship" />, соответствующих заданным значениям <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" />, <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> и <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" />.</summary>
      <returns>Список связей, соответствующих параметрам выбора, заданным для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
      <param name="package">Пакет, из которого требуется выбрать связи по данным критериям.</param>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>Получает критерии выбора, заданные для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>Критерии выбора на основе типа <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> (<see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> или <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />), заданного для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>Возвращает перечисление <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" />, заданное в конструкторе <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</summary>
      <returns>Тип селектора — <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> или <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />, заданный для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />.</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>Получает URI корня пакета ("/") или <see cref="P:System.IO.Packaging.PackagePart.Uri" /> части, заданный для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> в качестве владельца связи.</summary>
      <returns>URI корня пакета ("/") или <see cref="P:System.IO.Packaging.PackagePart.Uri" /> части, заданный для конструктора <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> в качестве владельца связи.</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>Определяет тип критериев выбора, используемых для сопоставления и возвращения выбранных объектов <see cref="T:System.IO.Packaging.PackageRelationship" /> через <see cref="T:System.IO.Packaging.PackageRelationshipSelector" />.     </summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>Выбор <see cref="T:System.IO.Packaging.PackageRelationship" /> производится по значению <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" /> selections are by <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>Предоставляет служебные методы для составления и разбора объектов URI типа "pack".</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>Возвращает значение, указывающее, являются ли два URI типа "pack" эквивалентными.</summary>
      <returns>Целое число со знаком, указывающее на соотношение <paramref name="firstPackUri" /> и <paramref name="secondPackUri" />.ЗначениеОписаниеМеньше 0<paramref name="firstPackUri" /> меньше, чем <paramref name="secondPackUri" />.0<paramref name="firstPackUri" /> равняется <paramref name="secondPackUri" />.Больше 0<paramref name="firstPackUri" /> больше, чем <paramref name="secondPackUri" />.</returns>
      <param name="firstPackUri">Первый URI типа "pack".</param>
      <param name="secondPackUri">Второй URI типа "pack".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> либо <paramref name="secondPackUri" /> не является абсолютным URI.–либо–<paramref name="firstPackUri" /> либо <paramref name="secondPackUri" /> не начинается именем схемы "pack://".</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>Возвращает значение, указывающее, равны ли две части пакета Коды URI.</summary>
      <returns>Значение, указывающее на соотношение <paramref name="firstPartUri" /> и <paramref name="secondPartUri" />.ЗначениеОписаниеМеньше 0<paramref name="firstPartUri" /> меньше, чем <paramref name="secondPartUri" />.0<paramref name="firstPartUri" /> равняется <paramref name="secondPartUri" />.Больше 0<paramref name="firstPartUri" /> больше, чем <paramref name="secondPartUri" />.</returns>
      <param name="firstPartUri">URI первого объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <param name="secondPartUri">URI второго объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <exception cref="T:System.ArgumentException">Синтаксис <paramref name="firstPartUri" /> либо <paramref name="secondPartUri" /> не является допустимым синтаксисом части URI.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>Создает новый URI типа "pack", указывающий на пакет. </summary>
      <returns>URI типа "pack" для <see cref="T:System.IO.Packaging.Package" />, на который указывает заданный <paramref name="packageUri" />.</returns>
      <param name="packageUri">URI указанного <see cref="T:System.IO.Packaging.Package" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="packageUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> не является абсолютным URI.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>Создает URI типа "pack" для заданного URI объекта <see cref="T:System.IO.Packaging.Package" /> и URI части пакета.</summary>
      <returns>URI типа "pack" заданного объекта <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
      <param name="packageUri">URI объекта <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">URI объекта <see cref="T:System.IO.Packaging.PackagePart" /> пакета.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="packageUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> не является абсолютным URI.–либо–Синтаксис <paramref name="partUri" /> не является допустимым синтаксисом URI части.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>Создает URI типа "pack" на основе заданного URI объекта <see cref="T:System.IO.Packaging.Package" />, URI части пакета и добавляемого фрагмента "#".</summary>
      <returns>URI типа "pack", идентифицирующий заданный пакет, часть пакета и фрагмент.</returns>
      <param name="packageUri">URI объект <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="partUri">URI объекта <see cref="T:System.IO.Packaging.PackagePart" /> пакета.</param>
      <param name="fragment">Ссылка "#", идентифицирующая элемент в части пакета.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="packageUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> не является абсолютным URI.–либо–Синтаксис <paramref name="partUri" /> не является допустимым синтаксисом URI части. –либо–Параметр <paramref name="fragment" /> пуст или его значение начинается с "#".</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>Создает форматированный URI объекта <see cref="T:System.IO.Packaging.PackagePart" />. </summary>
      <returns>Форматированный URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
      <param name="partUri">URI объекта <see cref="T:System.IO.Packaging.PackagePart" /> пакета.</param>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>Возвращает нормализованную форму заданного URI объекта <see cref="T:System.IO.Packaging.PackagePart" />. </summary>
      <returns>Нормализованная форма заданного <paramref name="partUri" />.</returns>
      <param name="partUri">Подлежащий нормализации URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="partUri" /> имеет значение null.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>Возвращает внутренний URI, указывающий на весь пакет с заданным URI типа "pack". </summary>
      <returns>URI объекта <see cref="T:System.IO.Packaging.Package" /> с заданным <paramref name="packUri" />.</returns>
      <param name="packUri">URI типа "pack", для которого следует вернуть URI объекта <see cref="T:System.IO.Packaging.Package" />.</param>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>Возвращает URI объекта <see cref="T:System.IO.Packaging.PackagePart" /> для заданного URI типа "pack". </summary>
      <returns>URI объекта <see cref="T:System.IO.Packaging.PackagePart" /> с заданным <paramref name="packUri" /> или null, если <paramref name="packUri" /> указывает на пакет, а не на <see cref="T:System.IO.Packaging.PackagePart" />. </returns>
      <param name="packUri">URI типа "pack", для которого следует вернуть URI объекта <see cref="T:System.IO.Packaging.PackagePart" />.</param>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>Возвращает URI части связи, ассоциированной с заданным объектом <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
      <returns>URI части <see cref="T:System.IO.Packaging.PackageRelationship" />, связанной с объектом <see cref="T:System.IO.Packaging.PackagePart" />, идентифицируемым <paramref name="partUri" />.</returns>
      <param name="partUri">
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> объекта <see cref="T:System.IO.Packaging.PackagePart" /> для возврата URI связанного с ним объекта <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="partUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Синтаксис <paramref name="partUri" /> не является допустимым синтаксисом URI части пакета.–либо–<paramref name="partUri" /> является абсолютным URI.–либо–<paramref name="partUri" /> указывает на часть связи.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>Возвращает относительный URI между двумя заданными Коды URI объектов <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
      <returns>Относительный URI от <paramref name="sourcePartUri" /> к <paramref name="targetPartUri" />.</returns>
      <param name="sourcePartUri">URI исходной части.</param>
      <param name="targetPartUri">URI целевой части.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourcePartUri" /> или <paramref name="targetPartUri" /> имеет значение null.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>Возвращает <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> из <see cref="T:System.IO.Packaging.PackageRelationship" /> с заданным URI.</summary>
      <returns>
        <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> объекта <see cref="T:System.IO.Packaging.PackagePart" /> из связи с заданным <paramref name="relationshipPartUri" />.</returns>
      <param name="relationshipPartUri">URI части связи, из которой следует вернуть <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="relationshipPartUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> является абсолютным URI.–либо–Синтаксис <paramref name="relationshipPartUri" /> не является допустимым для <see cref="T:System.IO.Packaging.PackagePart" />.–либо–<paramref name="relationshipPartUri" /> не указывает на часть связи.–либо–<see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> части связи указывает на другую часть связи (недопустимо, см. "Примечания").</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>Возвращает значение, указывающее, является ли заданный URI идентификатором URI части <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
      <returns>true, если <paramref name="partUri" /> идентифицирует часть <see cref="T:System.IO.Packaging.PackageRelationship" />; в противном случае — false.</returns>
      <param name="partUri">URI, проверяемый для части <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="partUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> является абсолютным URI.–либо–Синтаксис <paramref name="partUri" /> не является допустимым синтаксисом <see cref="T:System.IO.Packaging.PackagePart" />.</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>Возвращает URI части по заданному URI исходной части и URI с относительным путем к целевой части.</summary>
      <returns>URI целевой части, разрешенный на основе исходного и относительного URI, заданных в параметрах <paramref name="SourcePartUri" /> и <paramref name="targetUri" />.</returns>
      <param name="sourcePartUri">URI исходной части или символ "/", обозначающий корень объекта <see cref="T:System.IO.Packaging.Package" />.</param>
      <param name="targetUri">Относительный URI целевой части.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourcePartUri" /> или <paramref name="targetUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="sourcePartUri" /> не содержит допустимый URI части.–либо–Параметр <paramref name="targetUri" /> не содержит допустимый относительный URI.</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>Определяет имя "pack" для схемы URI типа "pack".</summary>
      <returns>Строка "pack", представляющая имя схемы URI типа "pack".</returns>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary>Представляет данные управления цифровыми правами, хранящиеся в объекте <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</summary>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary>Получает или задает объект <see cref="T:System.Security.RightsManagement.CryptoProvider" /> для доступа к зашифрованному потоку данных управления правами в пакете.</summary>
      <returns>Объект <see cref="T:System.Security.RightsManagement.CryptoProvider" />, используемый для доступа к данным управления правами.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary>Удаляет объект <see cref="T:System.Security.RightsManagement.UseLicense" /> указанного пользователя из зашифрованного потока данных управления правами.</summary>
      <param name="userKey">Пользователь для удаляемого объекта <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary>Возвращает коллекцию-словарь, содержащую пары "ключ/значение" для пользователей и объектов <see cref="T:System.Security.RightsManagement.UseLicense" /> из зашифрованного потока данных управления правами.</summary>
      <returns>Коллекция пар "ключ/значение" для пользователей и объектов <see cref="T:System.Security.RightsManagement.UseLicense" />, содержащихся в пакете, защищенном средствами управления правами.</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary>Возвращает внедренный объект <see cref="T:System.Security.RightsManagement.PublishLicense" /> из зашифрованного потока данных управления правами.</summary>
      <returns>Внедренный объект <see cref="T:System.Security.RightsManagement.PublishLicense" /> или null, если в пакете нет объектов <see cref="T:System.Security.RightsManagement.PublishLicense" />.</returns>
      <exception cref="T:System.IO.FileFormatException">Текущая версия данного класса не позволяет прочитать информацию службы управления правами в этом пакете.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary>Возвращает внедренный объект <see cref="T:System.Security.RightsManagement.UseLicense" /> указанного пользователя из зашифрованного потока данных управления правами.</summary>
      <returns>Объект <see cref="T:System.Security.RightsManagement.UseLicense" /> указанного пользователя или null, если в пакете нет объектов <see cref="T:System.Security.RightsManagement.UseLicense" /> соответствующих заданному <paramref name="userKey" />.</returns>
      <param name="userKey">Пользователь или группа пользователей, для которых требуется возвратить <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="userKey" /> имеет значение null.</exception>
      <exception cref="T:System.IO.FileFormatException">Текущая версия данного класса не позволяет прочитать информацию службы управления правами в этом пакете.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary>Сохраняет заданный объект <see cref="T:System.Security.RightsManagement.PublishLicense" /> в зашифрованном потоке данных управления правами.</summary>
      <param name="publishLicense">Лицензия на публикацию, которую требуется сохранить и внедрить в пакет.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="publishLicense" /> имеет значение null.</exception>
      <exception cref="T:System.IO.FileFormatException">Текущая версия данного класса не позволяет прочитать информацию службы управления правами в этом пакете.</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary>Сохраняет заданный объект <see cref="T:System.Security.RightsManagement.UseLicense" /> для указанного пользователя в зашифрованном потоке данных управления правами.</summary>
      <param name="userKey">Пользователь для объекта <see cref="T:System.Security.RightsManagement.UseLicense" />.</param>
      <param name="useLicense">Лицензия на использование, которую требуется сохранить и внедрить в пакет.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="userKey" /> или <paramref name="useLicense" /> равно null.</exception>
      <exception cref="T:System.IO.FileFormatException">Текущая версия данного класса не позволяет прочитать информацию службы управления правами в этом пакете.</exception>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary> Задает аргументы события, передаваемые в <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />. </summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary> Получает проверяемую цифровую подпись. </summary>
      <returns>Проверяемая цифровая подпись.</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary> Получает ошибку проверки подписи. </summary>
      <returns>Ошибка проверки подписи.</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary>Предоставляет доступ и информацию для работы с хранилищами данных, входящими в <see cref="T:System.IO.Packaging.Package" />.    </summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary>Создает новый поток с заданным именем.</summary>
      <returns>Новый поток с именем, заданным параметром <paramref name="name" />.</returns>
      <param name="name">Имя для нового потока.</param>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary>Создает новый поток с заданным именем и параметрами <see cref="T:System.IO.Packaging.CompressionOption" /> и <see cref="T:System.IO.Packaging.EncryptionOption" />.</summary>
      <returns>Новый поток с заданными параметрами <paramref name="name" />, <paramref name="compressionOption" /> и <paramref name="encryptionOption" />.</returns>
      <param name="name">Имя для нового потока.</param>
      <param name="compressionOption">Параметр сжатия потока данных.</param>
      <param name="encryptionOption">Параметр шифрования потока данных.</param>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary>Создает новый дочерний объект <see cref="T:System.IO.Packaging.StorageInfo" />, для которого данный объект <see cref="T:System.IO.Packaging.StorageInfo" /> является родительским.</summary>
      <returns>Новое дочернее хранилище данных.</returns>
      <param name="name">Имя для нового дочернего хранилища данных.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is null.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary>Удаляет поток с указанным именем. </summary>
      <param name="name">Имя удаляемого потока <see cref="T:System.IO.Packaging.StreamInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is null.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary>Удаляет указанное вложенное хранилище.</summary>
      <param name="name">Имя удаляемого вложенного хранилища.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary>Возвращает экземпляр объекта <see cref="T:System.IO.Packaging.StreamInfo" /> с заданным именем.</summary>
      <returns>Поток с именем, заданным параметром <paramref name="name" />.</returns>
      <param name="name">Имя возвращаемого экземпляра <see cref="T:System.IO.Packaging.StreamInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary>Возвращает массив экземпляров объекта <see cref="T:System.IO.Packaging.StreamInfo" />, которые в настоящее время содержатся в данном хранилище.</summary>
      <returns>Массив объектов <see cref="T:System.IO.Packaging.StreamInfo" />, каждый из которых указывает на поток ввода-вывода, определенный в данном хранилище.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary>Возвращает дочернее вложенное хранилище с заданным именем.</summary>
      <returns>Дочернее вложенное хранилище с именем, заданным параметром <paramref name="name" />.</returns>
      <param name="name">Имя вложенного хранилища, которое требуется возвратить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary>Возвращает массив дочерних вложенных хранилищ, которые в настоящее время содержатся в данном хранилище.</summary>
      <returns>Массив объектов <see cref="T:System.IO.Packaging.StorageInfo" />, каждый из которых указывает на вложенное хранилище, определенное в данном хранилище.</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary>Получает имя хранилища.</summary>
      <returns>Имя данного хранилища.</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary>Возвращает значение, показывающее, существует ли данный поток.</summary>
      <returns>true, если поток с указанным именем <paramref name="name" /> существует, в противном случае — false.</returns>
      <param name="name">Имя проверяемого объекта <see cref="T:System.IO.Packaging.StreamInfo" />.</param>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary>Возвращает значение, показывающее, существует ли данное дочернее вложенное хранилище.</summary>
      <returns>true, если дочернее вложенное хранилище с указанным именем <paramref name="name" /> существует, в противном случае — false.</returns>
      <param name="name">Имя проверяемого дочернего объекта <see cref="T:System.IO.Packaging.StorageInfo" />.</param>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary>Предоставляет доступ и информацию для работы с потоками ввода-вывода в объекте <see cref="T:System.IO.Packaging.Package" />.    </summary>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary>Получает значение параметра <see cref="T:System.IO.Packaging.CompressionOption" /> для потока.</summary>
      <returns>Значение параметра сжатия для потока пакета.</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary>Получает значение параметра <see cref="T:System.IO.Packaging.EncryptionOption" /> для потока.</summary>
      <returns>Значение параметра шифрования для потока пакета.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary>Возвращает поток, открытый в режимах <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />, используемых по умолчанию.</summary>
      <returns>Поток ввода-вывода, открытый в режимах <see cref="T:System.IO.FileMode" /> и <see cref="T:System.IO.FileAccess" />, устанавливаемых для корня <see cref="T:System.IO.Packaging.Package" /> по умолчанию.</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary>Возвращает поток ввода-вывода, открытый в указанном режиме <see cref="T:System.IO.FileMode" />.</summary>
      <returns>Поток, открытый в указанном файловом режиме <paramref name="mode" />.</returns>
      <param name="mode">Файловый режим, в котором открывается поток.</param>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Возвращает поток ввода-вывода, открытый в указанном режиме <see cref="T:System.IO.FileMode" /> с заданным режимом <see cref="T:System.IO.FileAccess" />.</summary>
      <returns>Поток ввода-вывода, открытый в указанном режиме <see cref="T:System.IO.FileMode" /> с заданным режимом <see cref="T:System.IO.FileAccess" />.</returns>
      <param name="mode">Файловый режим, в котором открывается поток.</param>
      <param name="access">Режим доступа к файлу, в котором требуется выполнять чтение и запись в поток.</param>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary>Получает имя потока.</summary>
      <returns>Имя данного потока.</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>Определяет, находится ли целевой объект связи <see cref="T:System.IO.Packaging.PackageRelationship" /> внутри или вне объекта <see cref="T:System.IO.Packaging.Package" />. </summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>Связь указывает на часть, находящуюся внутри пакета. </summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>Связь указывает на внешний по отношению к пакету ресурс. </summary>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary>Указывает результат проверки сертификата или подписи.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary>Проверка пройдена успешно.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary>Подпись недействительна.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary>Сертификат X.509 недоступен для проверки подписи.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary>Сертификат X.509 является недействительным.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary>Не найдена ссылочная связь с сигнатурой.</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary>Указанный пакет или части не имеет подписи.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>Реализует производный подкласс абстрактного базового класса <see cref="T:System.IO.Packaging.Package" /> — класс <see cref="T:System.IO.Packaging.ZipPackage" /> использует ZIP-архив в качестве хранилища контейнера.Данный класс не может быть унаследован.</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>Представляет часть, которая хранится в <see cref="T:System.IO.Packaging.ZipPackage" />.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> описывает набор разрешений безопасности, который позволяет управлять работой функций мультимедиа в приложении Windows Presentation Foundation (WPF) с частичным доверием.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Security.Permissions.MediaPermission" />, устанавливая уровень разрешений для аудио.</summary>
      <param name="permissionAudio">Перечисленное значение <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Security.Permissions.MediaPermission" />, устанавливая уровни разрешений для аудио, видео и изображений.</summary>
      <param name="permissionAudio">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
      <param name="permissionVideo">Перечисленное значение <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
      <param name="permissionImage">Перечисленное значение <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Security.Permissions.MediaPermission" />, устанавливая уровень разрешений для изображений.</summary>
      <param name="permissionImage">Перечисленное значение <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Security.Permissions.MediaPermission" />, устанавливая уровень разрешений для видео.</summary>
      <param name="permissionVideo">Перечисленное значение <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Security.Permissions.MediaPermission" />, указывая состояние разрешения.</summary>
      <param name="state">Перечисленное значение <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>Получает текущее значение уровня разрешений для аудио.</summary>
      <returns>Уровень разрешения для аудио.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>Создает и возвращает идентичную копию текущего разрешения.</summary>
      <returns>Копия текущего разрешения.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
      <param name="securityElement">Кодировка XML, используемая для восстановления разрешения.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>Получает текущее значение уровня разрешений для изображений.</summary>
      <returns>Уровень разрешения для изображений.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
      <returns>Пересечением двух разрешений является разрешение, которое описывает состояние, включающее в себя описания обоих разрешений.Только запрос, передающий оба исходных разрешения, будет действителен для разрешения, которое является результатом пересечения.</returns>
      <param name="target">Разрешение, которое должно пересекаться с текущим разрешением.Оно должно относиться к тому же типу, что и текущее разрешение.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Определяет, является ли текущее разрешение подмножеством заданного разрешения.</summary>
      <returns>Значение true, если текущее разрешение является подмножеством заданного разрешения; в противном случае — значение false.</returns>
      <param name="target">Разрешение, для которого требуется проверить отношение подмножества.Данное разрешение должно относиться к тому же типу, что и текущее разрешение.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>Возвращает значение, определяющее, является ли текущее разрешение неограниченным.</summary>
      <returns>Значение true, если все разрешения для аудио, видео и изображений предоставляются без ограничений; в противном случае – значение false.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>Создает кодировку XML для разрешения и его текущего состояния.</summary>
      <returns>Кодировка XML разрешения, включающая все сведения о состоянии.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>Создает разрешение, представляющее собой объединение текущего и заданного разрешений.</summary>
      <returns>Новое разрешение, представляющее собой сумму текущего и заданного разрешений.</returns>
      <param name="target">Разрешение, используемое в сочетании с текущим разрешением.Оно должно относиться к тому же типу, что и текущее разрешение.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>Получает текущее значение уровня разрешений для видео.</summary>
      <returns>Уровень разрешения для мультимедиа.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>Позволяет применять действия по обеспечению безопасности для объекта <see cref="T:System.Security.Permissions.MediaPermission" /> к коду, использующему декларативную безопасность.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>Возвращает или задает уровень разрешения аудиозаписей для атрибута <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>Состояние разрешения <see cref="T:System.Security.Permissions.MediaPermissionAudio" /></returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>Creates and returns a new <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
      <returns>Разрешение безопасности <see cref="T:System.Security.Permissions.MediaPermission" />, которое соответствует этому атрибуту.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>Возвращает или задает уровень разрешения изображений для атрибута <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>Состояние разрешения <see cref="T:System.Security.Permissions.MediaPermissionImage" /></returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>Возвращает или задает уровень разрешения видео для атрибута <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
      <returns>Состояние разрешения <see cref="T:System.Security.Permissions.MediaPermissionVideo" /></returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>Задает уровень разрешений для аудиозаписей.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>Разрешение, запрещающее воспроизведение всех аудиозаписей.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>Разрешение, допускающее воспроизведение только тех файлов аудиозаписей, которые расположены на исходном узле приложения.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>Разрешение, допускающее безопасное воспроизведение аудиозаписей с ограничениями, предполагающее запрет на потоковый доступ к файлу изображения.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>Разрешение, допускающее воспроизведение аудиозаписей без ограничений.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>Задает уровень разрешений для изображений.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>Разрешение, запрещающее отображение изображений.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>Разрешение только на отображение изображений, расположенных на исходном узле приложения.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>Разрешение на безопасное отображение изображений с ограничениями, предполагающее запрет на доступ потока к файлу изображения.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>Разрешение на неограниченное отображение изображений.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>Задает уровень разрешений для видео.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>Разрешение, запрещающее воспроизведение видео.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>Разрешение, допускающее воспроизведение только тех файлов видео, которые расположены на исходном узле приложения.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>Разрешение, допускающее безопасное воспроизведение видео с ограничениями, предполагающее запрет на потоковый доступ к файлу изображения.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>Разрешение, допускающее воспроизведение видео без ограничений.</summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>Объект <see cref="T:System.Security.Permissions.WebBrowserPermission" /> управляет возможностью создавать элемент управления WebBrowser.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.WebBrowserPermission" /> class.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.WebBrowserPermission" /> class by specifying a permission state.</summary>
      <param name="state">Перечисляемое значение <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Security.Permissions.WebBrowserPermission" />, устанавливая уровень разрешений браузера.</summary>
      <param name="webBrowserPermissionLevel">Перечисляемое значение <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>Создает и возвращает идентичную копию текущего разрешения.</summary>
      <returns>Копия текущего разрешения.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>Восстанавливает разрешение с определенным состоянием из кодировки XML.</summary>
      <param name="securityElement">Кодировка XML, используемая для восстановления разрешения.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>Создает и возвращает разрешение, представляющее собой пересечение текущего и заданного разрешений.</summary>
      <returns>Пересечением двух разрешений является разрешение, которое описывает состояние, включающее в себя описания обоих разрешений.Только запрос, передающий оба исходных разрешения, будет действителен для разрешения, которое является результатом пересечения.</returns>
      <param name="target">Разрешение, которое должно пересекаться с текущим разрешением.Оно должно относиться к тому же типу, что и текущее разрешение.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Определяет, является ли текущее разрешение подмножеством заданного разрешения.</summary>
      <returns>Значение true, если текущее разрешение является подмножеством заданного разрешения; в противном случае — значение false.</returns>
      <param name="target">Разрешение, для которого требуется проверить отношение подмножества.Данное разрешение должно относиться к тому же типу, что и текущее разрешение.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>Возвращает значение, определяющее, является ли текущее разрешение неограниченным.</summary>
      <returns>Значение true, если для свойства <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> задано значение <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />; в противном случае — false.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>Получает или задает текущее значение уровня разрешений браузера.</summary>
      <returns>Текущее значение уровня разрешений браузера.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>Создает кодировку XML для разрешения и его текущего состояния.</summary>
      <returns>Кодировка XML разрешения, включающая все сведения о состоянии.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>Создает разрешение, представляющее собой объединение текущего и заданного разрешений.</summary>
      <returns>Новое разрешение, представляющее собой объединение текущего и заданного разрешений.</returns>
      <param name="target">Разрешение, используемое в сочетании с текущим разрешением.Оно должно относиться к тому же типу, что и текущее разрешение.</param>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>Позволяет применять действия по обеспечению безопасности для объекта <see cref="T:System.Security.Permissions.WebBrowserPermission" /> к коду, использующему декларативную безопасность.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> с заданным параметром <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
      <param name="action">Одно из значений <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>Создает и возвращает новый экземпляр класса <see cref="T:System.Security.Permissions.WebBrowserPermission" />.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" />, соответствующее данному объявлению безопасности.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>Получает или задает текущий уровень разрешений браузера для <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />.</summary>
      <returns>Состояние текущего уровня разрешений браузера.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>Указывает уровень разрешения для браузера..</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>браузер не может перемещать фреймы в HTML.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>браузер может безопасно перемещать фреймы в HTML, но с некоторыми ограничениями.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>браузер может перемещать фреймы в HTML без ограничений.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary>Указывает метод проверки подлинности в системе управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary>Проверка подлинности Windows в среде корпоративного домена.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary>Проверка подлинности Windows Live ID.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary>Проверка подлинности Windows или Windows Live ID.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary>Неявная проверка подлинности для любого запрашиваемого пользователя.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary>Представляет предоставленные пользователю права на доступ к информации в документе, защищенном системой управления правами.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.ContentGrant" />, который предоставляет заданному пользователю <see cref="T:System.Security.RightsManagement.ContentUser" /> заданные права <see cref="T:System.Security.RightsManagement.ContentRight" />.</summary>
      <param name="user">Пользователь, которому предоставлено право доступа.</param>
      <param name="right">Предоставленное право доступа.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.ContentGrant" />, который предоставляет заданному пользователю <see cref="T:System.Security.RightsManagement.ContentUser" /> заданные права <see cref="T:System.Security.RightsManagement.ContentRight" /> на указанный срок <see cref="T:System.DateTime" />.</summary>
      <param name="user">Пользователь, которому предоставлено право доступа.</param>
      <param name="right">Предоставленное право доступа.</param>
      <param name="validFrom">Дата и время начала срока действия права пользователя.</param>
      <param name="validUntil">Дата и время окончания срока действия права пользователя.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary>Возвращает предоставленные права <see cref="T:System.Security.RightsManagement.ContentRight" />.</summary>
      <returns>Право доступа, предоставленное пользователю <see cref="P:System.Security.RightsManagement.ContentGrant.User" /> и заданное конструктором <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary>Возвращает пользователя, которому предоставлено право доступа <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.</summary>
      <returns>Пользователь, которому предоставлено право доступа <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />, заданное конструктором <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary>Возвращает дату и время начала срока действия предоставленных прав <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.</summary>
      <returns>Дата и время начала срока действия предоставленного права <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> или значение поля <see cref="T:System.DateTime" />.<see cref="F:System.DateTime.MinValue" /> в случае отсутствия ограничения для начала срока действия.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary>Возвращает дату и время окончания срока действия предоставленного права <see cref="P:System.Security.RightsManagement.ContentGrant.Right" />.</summary>
      <returns>Дата и время окончания срока действия предоставленного права <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> или значение поля <see cref="T:System.DateTime" />.<see cref="F:System.DateTime.MaxValue" /> в случае отсутствия ограничения для окончания срока действия.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary>Задает права, которые могут быть предоставлены пользователям для доступа к содержимому в документе, защищенном системой управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary>Пользователь может просматривать защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary>Пользователь может редактировать и шифровать защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary>Пользователь может печатать защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary>Пользователь может извлекать (копировать и вставлять) защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary>Пользователь может управлять программируемым доступом к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary>Пользователь является владельцем содержимого.Владелец может редактировать и шифровать защищенное содержимое и расшифровывать подписанные элементы <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary>Пользователь может расшифровывать и просматривать права, заданные в подписанных элементах <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary>Пользователь может переадресовывать защищенное содержимое другому пользователю.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary>Пользователь может отвечать отправителю защищенного содержимого.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary>Пользователь может "ответить всем" получателям защищенного содержимого.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary>Пользователь может подписать защищенное содержимое цифровой подписью.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary>Пользователь может редактировать документ, содержащий защищенное содержимое.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary>Пользователь может экспортировать защищенное содержимое.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary>Представляет пользователя или группу пользователей, которым необходимо предоставить доступ к информации в документе, защищенном системой управления правами.     </summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.ContentUser" />.</summary>
      <param name="name">Имя пользователя или группы.</param>
      <param name="authenticationType">Способ проверки подлинности.</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary>Возвращает экземпляр заданного конструктором <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя Anyone.</summary>
      <returns>Экземпляр заданного конструктором <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя Anyone.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary>Gets the <see cref="T:System.Security.RightsManagement.AuthenticationType" /> specified to the <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> constructor.</summary>
      <returns>Перечисление <see cref="T:System.Security.RightsManagement.AuthenticationType" />, заданное в конструкторе <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary>Возвращает значение, позволяющее определить, эквивалентен ли этот пользователь <see cref="T:System.Security.RightsManagement.ContentUser" /> другому заданному экземпляру.</summary>
      <returns>Если значения свойств <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> и <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> для этого пользователя и заданного пользователя совпадают, значение true, если нет, значение false.</returns>
      <param name="obj">Экземпляр пользователя, эквивалентность которого необходимо сравнить.</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary>Возвращает хэш-код, вычисленный на основе заданных для пользователя значений свойств <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> и <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</summary>
      <returns>Хэш-код, вычисленный на основе заданных для пользователя значений свойств <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> и <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary>Возвращает значение, позволяющее определить, была ли выполнена для пользователя проверка подлинности.</summary>
      <returns>Если проверка подлинности для пользователя выполнена, значение true, если нет, значение false.До проведения проверки подлинности по умолчанию задано значение false.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary>Возвращает имя пользователя или группы, заданное в конструкторе <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</summary>
      <returns>Имя пользователя или группы, заданное в конструкторе <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary>Возвращает экземпляр заданного конструктором <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя Owner.</summary>
      <returns>Экземпляр заданного конструктором <see cref="T:System.Security.RightsManagement.ContentUser" /> пользователя Owner.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary>Предоставляет услуги управления цифровыми правами для шифрования и расшифровки защищенного содержимого.     </summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary>Возвращает размер блока шифра в байтах. </summary>
      <returns>Размер блока шифра в байтах.По умолчанию для Стандарт AES (Advanced Encryption Standard) задано значение 8.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary>Возвращает набор, в котором перечислены прошедшие проверку и предоставленные пользователю права.</summary>
      <returns>Набор, в котором перечислены прошедшие проверку и предоставленные пользователю права.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary>Возвращает значение, позволяющее определить, есть ли у пользователя право на расшифровку. </summary>
      <returns>Если класс <see cref="T:System.Security.RightsManagement.UseLicense" /> предоставил пользователю права на расшифровку, значение true, если нет, значение false.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary>Возвращает значение, позволяющее определить, есть ли у пользователя право на шифрование. </summary>
      <returns>Если класс <see cref="T:System.Security.RightsManagement.UseLicense" /> предоставил пользователю права на шифрование, значение true, если нет, значение false.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary>Возвращает значение, позволяющее определить, могут ли методы <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> и <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> принимать буферы с разной длиной блоков.</summary>
      <returns>Если длина буфера, переданного методу <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />, может отличаться от длины буфера, переданного методу <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />, значение true; если длина буферов, переданных методам <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> и <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />, должна быть абсолютно одинаковой, значение false.Для Стандарт AES (Advanced Encryption Standard) значение по умолчанию равно true.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary>Расшифровывает зашифрованный текст, преобразовывая его в открытый. </summary>
      <returns>Расшифрованный открытый текст параметра <paramref name="cryptoText" />.</returns>
      <param name="cryptoText">Зашифрованный текст, который нужно расшифровать.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="cipherText" /> равно null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Право на расшифровку не предоставляется.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />. </summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" /> and optionally releases the managed resources.  </summary>
      <param name="disposing">Значение true позволяет освободить управляемые и неуправляемые ресурсы; значение false позволяет освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary>Шифрует открытый текст, преобразовывая его в зашифрованный. </summary>
      <returns>Зашифрованный текст данного параметра <paramref name="clearText" />.</returns>
      <param name="clearText">Содержимое открытого текста, которое нужно зашифровать.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="clearText" /> равно null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Шифрование запрещено.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary>Освобождает ресурсы и выполняет внутреннюю очистку, перед тем, как экземпляр будет подобран во время сборки мусора.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary>Представляет неизменяемую (доступную только для чтения) пару строк "Имя" и "Описание".    </summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <param name="name">The value for the locale <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> property.</param>
      <param name="description">The value for the locale <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> property.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> или <paramref name="description" /> равно null.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary>Возвращает описание языкового стандарта.</summary>
      <returns>Описание языкового стандарта.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary>Указывает, совпадают ли значения свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> данного объекта с соответствующими значениями этого экземпляра <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</summary>
      <returns>Если значения свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> данного объекта совпадают с соответствующими значениями этого экземпляра, значение true, если нет, значение false.</returns>
      <param name="obj">Объект для сравнения свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</param>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary>Возвращает хэш-код, вычисленный на основе свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" />.</summary>
      <returns>Хэш-код, вычисленный на основе свойств <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> и <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> этого экземпляра <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" />.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary>Возвращает имя языкового стандарта.</summary>
      <returns>Имя языкового стандарта.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary>Представляет подписанную лицензию на публикацию, защищенную системой управления правами.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.PublishLicense" /> из заданного сериализованного и подписанного класса <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
      <param name="signedPublishLicense">Подписанная и сериализованная лицензия на публикацию.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signedPublishLicense" /> is null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Недопустимая лицензия.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Пытается получить класс <see cref="T:System.Security.RightsManagement.UseLicense" /> для пользователя или группы пользователей в заданном классе <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns>Класс <see cref="T:System.Security.RightsManagement.UseLicense" /> для пользователя или группы пользователей в заданном классе <paramref name="secureEnvironment" />.</returns>
      <param name="secureEnvironment">Безопасная среда для активации лицензии и привязки.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secureEnvironment" /> is null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Сбой проверки подлинности.</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Пытается получить класс <see cref="T:System.Security.RightsManagement.UseLicense" /> для пользователя или группы пользователей в заданном классе <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns>Класс <see cref="T:System.Security.RightsManagement.UseLicense" /> для пользователя или группы пользователей в заданном классе <paramref name="secureEnvironment" />.</returns>
      <param name="secureEnvironment">Безопасная среда для активации лицензии и привязки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="secureEnvironment" /> равно null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Сбой проверки подлинности.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary>Возвращает созданный издателем идентификатор содержимого. </summary>
      <returns>Созданный издателем идентификатор содержимого.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary>Возвращает расшифрованную версию <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> подписанного класса <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
      <returns>Расшифрованная неподписанная версия данной лицензии.</returns>
      <param name="cryptoProvider">Служба управления правами, которая используется для расшифровки лицензии.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="cryptoProvider" /> равно null.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary>Возвращает имя контакта, соответствующее автору или издателю содержимого.</summary>
      <returns>Имя контакта, соответствующее автору или издателю содержимого.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary>Возвращает URI контакта, соответствующий автору или издателю содержимого.</summary>
      <returns>Код URI (uniform resource identifier — универсальный код ресурса) контакта, соответствующей автору или издателю содержимого.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary>Возвращает сериализованную строку Язык XrML, которая использовалась для создания данной лицензии.</summary>
      <returns>Сериализованная строка Язык XrML (Extensible Rights Markup Language), которая использовалась для создания данной лицензии.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary>Возвращает URI, с помощью которого будет получен класс <see cref="T:System.Security.RightsManagement.UseLicense" />.</summary>
      <returns>Код URI, с помощью которого будет получен класс <see cref="T:System.Security.RightsManagement.UseLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary>Представляет ошибку, если не удается надлежащим образом завершить операцию управления правами.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> и задает хранилище <see cref="T:System.Runtime.Serialization.SerializationInfo" />, в котором содержится информация об исключении.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> с заданным перечислением <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />.</summary>
      <param name="failureCode">Код ошибки.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> с заданными свойствами <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> и <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="failureCode">Код ошибки.</param>
      <param name="innerException">Экземпляр исключения, вызвавший ошибку.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> с заданными свойствами <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> и <see cref="P:System.Exception.Message" />.</summary>
      <param name="failureCode">Код ошибки.</param>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> с заданными свойствами <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />, <see cref="P:System.Exception.Message" /> и <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="failureCode">Код ошибки.</param>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <param name="innerException">Экземпляр исключения, вызвавший ошибку.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.RightsManagementException" /> с заданным сообщением.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.RightsManagement.RightsManagementException" /> class with a given <see cref="P:System.Exception.Message" /> and <see cref="P:System.Exception.InnerException" />.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <param name="innerException">Экземпляр исключения, вызвавший данное исключение.</param>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary>Возвращает для ошибки перечисление <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />.</summary>
      <returns>Код ошибки.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает хранилище <see cref="T:System.Runtime.Serialization.SerializationInfo" />, в котором содержится имя параметра и информация об исключении.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null.</exception>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary>Задает ошибки, которые могут возникнуть при выполнении операции управления правами. </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary>Операция успешно завершена.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary>Недопустима структура лицензии в одном из сертификатов. </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary>При создании лицензии на привязку была указана не лицензия на использование, а лицензия на выпуск.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary>Не удается проверить цифровой сертификат, подписанный службой управления правами.(Возможно, подписанный сертификат был подделан.)</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary>Шифрование запрещено. </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary>У текущего пользователя нет прав для доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary>Неправильная версия системы управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary>Указан недопустимый тип кодирования. </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary>Указано недопустимое числовое значение.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary>Указан недопустимый тип алгоритма.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary>Не удается загрузить <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary>Не удается загрузить <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary>Создано слишком много экземпляров класса <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary>Переданный тип объекта несовместим с данной операцией.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary>Не удалось выполнить операцию библиотеки.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary>Не удается разрешить указанного участника.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary>Отсутствуют определенные сведения.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary>Передана недопустимая константа.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary>Указанный в паре ключ/значение тип ключа не поддерживается.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary>Запрошенная операция шифрования не поддерживается.Например, передача объекта шифрования RMS для расшифровки.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary>Обнаружен откат часов.Не удается получить доступ к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary>Экземпляры запрашиваемого атрибута не существуют. </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary>Произошла неопознанная ошибка.Возникает также при выполнении приложения в режиме отладки.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary>Заданный период времени для защищенного содержимого истек; теперь доступ запрещен.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary>Цепь сертификатов управления правами разорвана.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary>У текущего пользователя нет прав для доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary>Операция нарушает политику манифеста управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary>У текущего пользователя нет прав для доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary>У текущего пользователя нет прав для доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary>У текущего пользователя нет прав для доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary>У текущего пользователя нет прав для доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary>Указанный ресурс не содержится ни в одном узле лицензии WORK.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary>Условия доступа не соответствуют разрешающему участнику, переданному привязке.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary>Текущий пользователь не удовлетворяет условиям, заданным в лицензии на использование (EUL).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary>Разрешающий участник не совпадает с выдающим участником лицензии на использование (EUL).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary>Текущий компьютер не задан в идентификации группы, защищенной системой правления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary>Указанный подключаемый модуль библиотеки не поддерживается.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary>Согласно требованиям лицензии, необходимо получить новый список отзыва.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary>У текущего пользователя нет прав для доступа к защищенному содержимому.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary>Недопустимый дескриптор среды или разрешающего участника. </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary>Заданный период времени для защищенного содержимого истек; теперь доступ запрещен.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary>Указанная группа прав отсутствует в лицензии на использование (EUL).</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary>В лицензии на использование (EUL) отсутствует узел WORK.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary>По указанному индексу нет лицензии или сертификата. </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary>Не удалось получить лицензию на использование (EUL) с сервера управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary>Указанный в лицензии идентификатор содержимого не совпадает с идентификатором содержимого для сеанса хранения лицензий.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary>Количество сертификатов превышает максимально допустимое количество.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary>Защищенное содержимое повреждено.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary>Запрашиваемая операция уже выполняется.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary>Для клиентского сеанса не задано имя пользователя.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary>Указанная лицензия не найдена. </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary>Системе управления правами не удается подключиться к универсальному коду ресурса, заданному для сервера лицензирования.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary>Требуемая лицензия недоступна.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary>Перед активацией пользователя необходимо активировать компьютер. </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary>Не активирован пользователь или не передан сертификат учетной записи службы управления правами (RAC) и в хранилище лицензий не был найден сертификат, соответствующий лицензии, связанной с данным сеансом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary>Не удалось активировать лицензию; службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary>Отменено выполнение асинхронной операции или произошла неустранимая ошибка.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary>Достигнута максимальная квота лицензий на использование (EUL), установленная для сервера лицензирования.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary>Возможная ошибка проверки подлинности (ошибка HTTP 401), возвращенная Интернет-запросом.Либо при попытке активации пользователя без уведомления у текущего пользователя не оказалось допустимых учетных данных домена.Или сервер сертификации, используемый при активации пользователя без уведомления, расположен вне локальной интрасети или зоны надежных узлов.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary>Не удалось выполнить операцию установки.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary>Использованный при попытке активации компьютера код оборудования (HID) записан в неправильном формате.Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary>В случае запроса активации компьютера или сертификата учетной записи службы управления правами получение поля <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" /> свидетельствует о том, что приложение должно передать для параметра ActServInfo значение null.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary>Не удалось проверить адрес электронной почты RMS-сервера.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary>Заданный период времени для защищенного содержимого истек; теперь доступ запрещен.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary>В каталоге Active Directory не найден текущий пользователь для сертификации с помощью проверки подлинности Windows.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary>Защищенное системой управления правами содержимое повреждено.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary>Временная сертификация текущего пользователя на сервере управления правами недопустима.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary>Элемент, который требуется удалить, не существует. </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary>Не удалось установить указанные метаданные.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary>Не заданы сведения об отзыве сертификатов или лицензий.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary>Задано недопустимую информацию о времени.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary>Запрашиваемое право не было указано при опубликовании содержимого с помощью системы управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary>Учетные данные текущего пользователя недопустимы для получения лицензии.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary>В шаблоне служб управления правами содержится одна или несколько ошибок.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary>В паре ключ/значение указана недопустимая длина ключа.   </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary>Заданный в шаблоне лицензии на выпуск авторизованный период времени истек; теперь доступ запрещен.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary>Использованный при попытке активации компьютера код оборудования (HID) записан в недопустимом формате.Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary>Не удается проверить адрес электронной почты пользователя.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary>Не удается открыть или опубликовать содержимое с ограниченными разрешениями, поскольку был обнаружен отладчик. </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary>Указан недопустимый путь реестра.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary>Службы управления правами не настроены надлежащим образом.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary>Указанный параметр уже задан.  </summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary>В документе отсутствует лицензия владельца.</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary>Представляет безопасный сеанс клиента для активации пользователя, привязки лицензии и других операций управления правами.</summary>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary>Возвращает свойство <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" />, заданное при создании объекта <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns>Манифест приложения, заданный для метода <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> при создании класса <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary>Создает безопасный сеанс клиента для указанного манифеста прав приложения, перечисления <see cref="T:System.Security.RightsManagement.AuthenticationType" />и перечисления <see cref="T:System.Security.RightsManagement.UserActivationMode" />.</summary>
      <returns>Безопасный сеанс клиента для активации, привязки лицензии и других операций управления правами.</returns>
      <param name="applicationManifest">Манифест прав приложения.</param>
      <param name="authentication">Способ проверки подлинности.</param>
      <param name="userActivationMode">Тип сертификата учетной записи службы управления правами.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary>Создает безопасный сеанс клиента для указанного пользователя с заданным манифестом прав.</summary>
      <returns>Безопасный сеанс клиента для активации, привязки лицензии и других операций управления правами.</returns>
      <param name="applicationManifest">Манифест прав приложения.</param>
      <param name="user">Пользователь или группа пользователей, которым необходимо предоставить доступ к содержимому, защищенному системой управления правами.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary>Освобождает все ресурсы, используемые классом <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> and optionally releases the managed resources. </summary>
      <param name="disposing">Значение true позволяет освободить управляемые и неуправляемые ресурсы; значение false позволяет освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary>Возвращает список активированных пользователей.</summary>
      <returns>Список пользователей, которые активированы в данный момент.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary>Указывает, активирован ли данный пользователь для доступа к содержимому, защищенному системой управления правами.</summary>
      <returns>Если данный пользователь <paramref name="user" /> активирован для доступа к содержимому, защищенному системой управления правами, значение true, если нет, значение false.</returns>
      <param name="user">Пользователь или группа пользователей, которым необходимо предоставить доступ к содержимому, защищенному системой управления правами.</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary>Отменяет активацию лицензии для указанного пользователя.</summary>
      <param name="user">Пользователь, для которого необходимо отменить активацию лицензии.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="user" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Заданный пользователь <paramref name="user" /> не прошел проверку подлинности Windows или проверку подлинности по паспорту.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary>Возвращает пользователя или группу пользователей, заданную при создании объекта <see cref="T:System.Security.RightsManagement.SecureEnvironment" />. </summary>
      <returns>Пользователь или группа пользователей, заданные для метода <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> при создании объекта <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary>Представляет неподписанный класс <see cref="T:System.Security.RightsManagement.PublishLicense" />, защищенный системой управления правами, или неподписанный шаблон <see cref="T:System.Security.RightsManagement.PublishLicense" />.</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> class. </summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> на основе заданного шаблона лицензии на опубликование Язык XrML. </summary>
      <param name="publishLicenseTemplate">Шаблон лицензии на опубликование Язык XrML (Extensible Rights Markup Language), используемый для создания этой лицензии.</param>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary>Возвращает или задает созданный издателем идентификатор содержимого. </summary>
      <returns>Созданный издателем идентификатор содержимого, защищенного системой управления правами.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary>Возвращает набор присвоенных прав пользователя.</summary>
      <returns>Набор присвоенных прав пользователя, предоставляемых данной лицензией.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary>Возвращает набор пар имен и описаний.</summary>
      <returns>Набор пар имен и описаний.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary>Возвращает или задает владельца содержимого. </summary>
      <returns>Пользователь, которому принадлежит опубликованное содержимое.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary>Возвращает или задает имя контакта, соответствующее автору или издателю содержимого.</summary>
      <returns>Имя контакта, соответствующее автору или издателю содержимого.</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary>Возвращает или задает код URI контакта, соответствующий автору или издателю содержимого.</summary>
      <returns>Код URI (uniform resource identifier — универсальный код ресурса) контакта, соответствующей автору или издателю содержимого.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary>Создает подписанный объект <see cref="T:System.Security.RightsManagement.PublishLicense" /> и возвращает объект <see cref="T:System.Security.RightsManagement.UseLicense" /> для автора документа.</summary>
      <returns>Подписанный класс <see cref="T:System.Security.RightsManagement.PublishLicense" />, созданный путем подписания класса <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
      <param name="secureEnvironment">Безопасная среда для активации лицензии и привязки.</param>
      <param name="authorUseLicense">Объект <see cref="T:System.Security.RightsManagement.UseLicense" />, возвращенный для автора документа.</param>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary>Возвращает сериализованный шаблон, созданный на основе кода Язык XrML класса <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</summary>
      <returns>Сериализованный шаблон, созданный на основе кода Язык XrML класса <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary>Представляет лицензию, позволяющую получить доступ к содержимому, защищенному системой управления правами.    </summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Security.RightsManagement.UseLicense" /> class. </summary>
      <param name="useLicense">Лицензия на использование в сериализованной форме Язык XrML (Extensible Rights Markup Language).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="useLicense" /> is null.</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException">Значение параметра <paramref name="useLicense" /> недопустимо.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary>Возвращает словарь данных приложения, содержащий пары ключ-значение, переданные из публикующего приложения в приложение, которое их использует.</summary>
      <returns>Словарь данных приложения, содержащий пары ключ/значение, переданные из публикующего приложения в приложение, которое их использует.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary>Привязывает лицензию к данному объекту <see cref="T:System.Security.RightsManagement.SecureEnvironment" />.</summary>
      <returns>Если привязка прошла успешно, экземпляр <see cref="T:System.Security.RightsManagement.CryptoProvider" />; если нет, значение null.</returns>
      <param name="secureEnvironment">Среда, к которой следует привязать лицензию.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="secureEnvironment" /> равно null.</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary>Возвращает созданный издателем идентификатор содержимого.</summary>
      <returns>Созданный издателем идентификатор содержимого.</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary>Указывает, эквивалентна ли эта лицензия другой заданной лицензии.</summary>
      <returns>Если обе лицензии эквивалентны, значение true, если нет, значение false.</returns>
      <param name="x">Лицензия для сравнения.</param>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary>Возвращает хэш-код, связанный с этой лицензией.</summary>
      <returns>Хэш-код для этой лицензии. </returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary>Возвращает владельца лицензии. </summary>
      <returns>Владелец лицензии. </returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary>Возвращает сериализованную строку Язык XrML, которая используется для создания этой лицензии.</summary>
      <returns>Сериализованная строка Язык XrML (Extensible Rights Markup Language), которая изначально была передана в конструктор <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" />.</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary>Задает тип сертификата учетной записи службы управления правами для запроса активации управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary>Постоянный сертификат учетной записи службы управления правами.</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary>Временный сертификат учетной записи службы управления правами.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary>предоставляет базовый класс для Атрибуты NET Framework, сообщающий область использования свойств вложенных зависимостей.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary>Выполняет инициализацию нового экземпляра <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary>Указывает, что вложенное свойство зависимостей отображается только для элементов, произведенных от указанного типа.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> с использованием предоставленного <paramref name="targetType" />.</summary>
      <param name="targetType">Тип, предназначенный для задания области использования вложенного свойства зависимостей, к которому применяется данный Атрибут NET Framework.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary>Определяет, равен ли текущий <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Атрибут NET Framework заданному объекту.</summary>
      <returns>true, если заданный <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> равен текущему <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />; в противном случае — false.</returns>
      <param name="obj">
        <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> для сравнения с текущим <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary>Возвращает хэш-код для данного <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Атрибут NET Framework.</summary>
      <returns>32-разрядное целое значение без знака.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary>Возвращает базовый тип, задающий область использования вложенного свойства зависимостей, к которому применяется данный Атрибут NET Framework.</summary>
      <returns>Запрошенный <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary>Возвращает уникальный идентификатор типа для данного <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> Атрибут NET Framework.</summary>
      <returns>Объект, являющийся уникальным идентификатором для <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary>Определяет, что вложенное свойство зависимостей может просматриваться только по элементу, также имеющему другой заданный Атрибут NET Framework применяемый к определению его класса.</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</summary>
      <param name="attributeType">
        <see cref="T:System.Type" />, принадлежащий  Атрибут NET Framework, который должен использоваться в отношении класса для обеспечения возможности просмотра свойства вложенной зависимости по классу, на котором используется <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</param>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary>Получает тип  Атрибут NET Framework, который необходимо использовать в отношении класса.</summary>
      <returns>Тип  Атрибут NET Framework.</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary>Определяет, равен ли текущий <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> Атрибут NET Framework заданному объекту.</summary>
      <returns>Значение true, если заданный <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> равен текущему <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />; в противном случае — false.</returns>
      <param name="obj">
        <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> для сравнения с текущим <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />.</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary>Возвращает хэш-код для данного <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> Атрибут NET Framework.</summary>
      <returns>32-разрядное целое значение без знака.</returns>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary>Предоставляет шаблон для метода, вызываемого при оценке значения свойства зависимостей и запросе запрета изменения значения.</summary>
      <returns>Запрещенное значение (с соответствующим типом). </returns>
      <param name="d">Объект, содержащий свойство.При вызове ответа, система свойств передает это значение.</param>
      <param name="baseValue">Новое значение свойства до применения операции запрета изменения значения.</param>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary>Представляет объект, участвующий в системе свойств зависимостей.</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.DependencyObject" />. </summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary>Очищает локальное значение свойства.Очищаемое свойство задается идентификатором <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <param name="dp">Очищаемое свойство зависимостей идентифицируется по объектной ссылке <see cref="T:System.Windows.DependencyProperty" />.</param>
      <exception cref="T:System.InvalidOperationException">Пытается вызвать метод <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> для запечатанного <see cref="T:System.Windows.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary>Очищает локальное значение свойства, доступного только для чтения.Очищаемое свойство задается объектом <see cref="T:System.Windows.DependencyPropertyKey" />.</summary>
      <param name="key">Ключ для очищаемого свойства зависимостей.</param>
      <exception cref="T:System.InvalidOperationException">Пытается вызвать метод <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> для запечатанного <see cref="T:System.Windows.DependencyObject" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary>Осуществляет приведение значения указанного свойства зависимостей.Это осуществляется путем вызова какой-либо функции <see cref="T:System.Windows.CoerceValueCallback" />, указанной в метаданных свойства зависимостей, которое существует в вызывающем объекте <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="dp">Идентификатор для приводимого свойства зависимостей.</param>
      <exception cref="T:System.InvalidOperationException">Указанный параметр <paramref name="dp" /> или его значение недопустимы или их не существует.</exception>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary>Возвращает <see cref="T:System.Windows.DependencyObjectType" />, который создает обертку для типа CLR данного экземпляра. </summary>
      <returns>
        <see cref="T:System.Windows.DependencyObjectType" />, который создает обертку для типа CLR данного экземпляра. </returns>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary>Определяет, является ли указанный <see cref="T:System.Windows.DependencyObject" /> эквивалентом текущего <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>true, если два экземпляра одинаковы, в противном случае — false.</returns>
      <param name="obj">Экземпляр <see cref="T:System.Windows.DependencyObject" /> для сравнения с текущим экземпляром.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary>Возвращает хэш-код для данного <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary>Создает специализированный перечислитель для определения свойств зависимостей, которые локально установили значения для данного <see cref="T:System.Windows.DependencyObject" />. </summary>
      <returns>Специализированный перечислитель локальных значений.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary>Возвращает текущее действующее значение свойства зависимостей в данном экземпляре <see cref="T:System.Windows.DependencyObject" />. </summary>
      <returns>Возвращает текущее действующее значение.</returns>
      <param name="dp">Идентификатор <see cref="T:System.Windows.DependencyProperty" /> свойства, из которого извлекается значение.</param>
      <exception cref="T:System.InvalidOperationException">Указанный параметр <paramref name="dp" /> или его значение были недопустимы, или указанного параметра <paramref name="dp" /> не существует.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary>Повторно вычисляет действующее значение для указанного свойства зависимостей</summary>
      <param name="dp">Идентификатор <see cref="T:System.Windows.DependencyProperty" /> свойства, которое следует сделать недействительным.</param>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary>Получает значение, указывающее, является ли этот экземпляр в данный момент запечатанным (доступным только для чтения).</summary>
      <returns>true, если этот экземпляр запечатан; в противном случае — false.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Вызывается при обновлении действующего значения какого-либо свойства зависимостей в данном <see cref="T:System.Windows.DependencyObject" />.Конкретное свойство зависимости, которое изменилось, сообщается в данных события.</summary>
      <param name="e">Данные события, которые содержат интересующий идентификатор свойства зависимости, метаданные свойства для соответствующего типа, а также старое и новое значения.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary>Возвращает локальное значение свойства зависимости, если таковое существует. </summary>
      <returns>Возвращает локальное значение, или значение-метку <see cref="F:System.Windows.DependencyProperty.UnsetValue" />, если локальное значение не задано.</returns>
      <param name="dp">Идентификатор <see cref="T:System.Windows.DependencyProperty" /> свойства, из которого извлекается значение.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Задает значение свойства зависимостей, не меняя источник значения. </summary>
      <param name="dp">Идентификатор задаваемого свойства зависимостей.</param>
      <param name="value">Новое локальное значение.</param>
      <exception cref="T:System.InvalidOperationException">Попытка изменить доступное только для чтения свойство зависимостей, или свойство в запечатанном <see cref="T:System.Windows.DependencyObject" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не был корректным типом, зарегистрированным для свойства <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary>Задает локальное значение свойства зависимостей, указанного идентификатором этого свойства. </summary>
      <param name="dp">Идентификатор задаваемого свойства зависимостей.</param>
      <param name="value">Новое локальное значение.</param>
      <exception cref="T:System.InvalidOperationException">Попытка изменить доступное только для чтения свойство зависимостей, или свойство в запечатанном <see cref="T:System.Windows.DependencyObject" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не был корректным типом, зарегистрированным для свойства <paramref name="dp" />.</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary>Задает локальное значение доступного только для чтения свойства зависимостей, указанного идентификатором <see cref="T:System.Windows.DependencyPropertyKey" />. </summary>
      <param name="key">Идентификатор <see cref="T:System.Windows.DependencyPropertyKey" /> задаваемого свойства.</param>
      <param name="value">Новое локальное значение.</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary>Возвращает значение, указывающее, следует ли процессам сериализации сериализовать значение для указанного свойства зависимостей.</summary>
      <returns>true, если значение переданного свойства зависимостей следует сериализовать; в противном случае — false.</returns>
      <param name="dp">Идентификатор для свойства зависимости, которое следует сериализовать.</param>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary>Реализует кэш соответствующего типа для всех производных типов <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary>Получает <see cref="T:System.Windows.DependencyObjectType" /> непосредственного базового класса текущей <see cref="T:System.Windows.DependencyObjectType" />. </summary>
      <returns>Тип базового класса.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary>Возвращает <see cref="T:System.Windows.DependencyObjectType" />, представляющий тип данной системы (CLR).</summary>
      <returns>Объект <see cref="T:System.Windows.DependencyObjectType" />, представляющий тип системы CLR.</returns>
      <param name="systemType">Тип системы (CLR) для преобразования.</param>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary>Возвращает хэш-код для этого <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns>Хэш-код, являющийся 32-битовым целым числом со знаком. </returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary>Получает начинающийся с нуля уникальный идентификатор для операций поиска массива постоянного времени.</summary>
      <returns>Внутренний идентификатор.</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary>Определяет, является ли указанный объект экземпляром текущего <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns>Значение true, если класс, представленный текущим <see cref="T:System.Windows.DependencyObjectType" />, входит в иерархию наследования <see cref="T:System.Windows.DependencyObject" />, переданную в качестве <paramref name="d" />; в противном случае — false.</returns>
      <param name="dependencyObject">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Windows.DependencyObjectType" />.</param>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary>Определяет, является ли текущий <see cref="T:System.Windows.DependencyObjectType" /> производным от указанного <see cref="T:System.Windows.DependencyObjectType" />.</summary>
      <returns>Значение true, если параметр <paramref name="dependencyObjectType" /> и текущий <see cref="T:System.Windows.DependencyObjectType" /> представляют типы классов, и при этом класс представлен текущим <see cref="T:System.Windows.DependencyObjectType" />, производным от класса, представленного <paramref name="dependencyObjectType" />.В противном случае — false.This method also returns false if <paramref name="dependencyObjectType" /> and the current <see cref="T:System.Windows.DependencyObjectType" /> represent the same class.</returns>
      <param name="dependencyObjectType">
        <see cref="T:System.Windows.DependencyObjectType" /> для сравнения.</param>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary>Получает имя представленного типа системы среда CLR (common language runtime). </summary>
      <returns>Имя представленного типа системы CLR.</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary> Получает тип системы среда CLR (common language runtime), представленный данным <see cref="T:System.Windows.DependencyObjectType" />. </summary>
      <returns>Тип системы CLR, представленный данным <see cref="T:System.Windows.DependencyObjectType" />.</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary>Представляет свойство, которое можно задать с использованием методов (например, стили, привязка данных, анимация и наследование).</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary>Добавляет другой тип в качестве владельца свойства зависимостей, которое уже зарегистрировано.</summary>
      <returns>Ссылка на исходный идентификатор <see cref="T:System.Windows.DependencyProperty" />, идентифицирующий свойство зависимостей.Этот идентификатор должен быть открыт путем добавления класса в качестве поля public static readonly.</returns>
      <param name="ownerType">Тип для добавления в качестве владельца данного свойства зависимостей.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary>Добавляет другой тип в качестве владельца свойства зависимостей, которое уже зарегистрировано, указывая метаданные для свойства зависимостей, как оно будет существовать в указанном типе владельца. </summary>
      <returns>Ссылка на исходный идентификатор <see cref="T:System.Windows.DependencyProperty" />, идентифицирующий свойство зависимостей.Этот идентификатор должен быть открыт путем добавления класса в качестве поля public static readonly.</returns>
      <param name="ownerType">Тип для добавления в качестве владельца данного свойства зависимостей.</param>
      <param name="typeMetadata">Метаданные, уточняющие свойство зависимостей, как оно существует в указанном типе.</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary>Возвращает метаданные свойства зависимостей по умолчанию. </summary>
      <returns>Метаданные свойства зависимостей по умолчанию.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary>Возвращает хэш-код для данного <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <returns>Хэш-код для этого <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary>Возвращает метаданные для этого свойства зависимостей, как оно существует в указанном существующем типе. </summary>
      <returns>Объект метаданных свойства.</returns>
      <param name="forType">Конкретный тип, из которого извлекаются метаданные свойства зависимостей.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary>Возвращает метаданные для этого свойства зависимостей, как оно существует в указанном экземпляре объекта. </summary>
      <returns>Объект метаданных свойства.</returns>
      <param name="dependencyObject">Объект зависимостей, который проверяется на тип для определения связанной с определенным типом версии свойства зависимостей, из которой должны поступать метаданные.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary> Возвращает метаданные для этого свойства зависимостей, как оно существует в указанном типе. </summary>
      <returns>Объект метаданных свойства.</returns>
      <param name="dependencyObjectType">Конкретный объект, фиксирующий тип объекта зависимостей, из которого требуются метаданные свойства зависимостей.</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary>Возвращает внутреннее сгенерированное значение, уникальным образом идентифицирующее свойство зависимостей.</summary>
      <returns>Уникальный числовой идентификатор.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary>Определяет, приемлемо ли указанное значение для типа данного свойства зависимостей, проверяя его по типу свойства, указанного при исходной регистрации свойства зависимостей. </summary>
      <returns>true, если указанное значение принадлежит к зарегистрированному типу свойства или приемлемому производному типу; в противном случае — false.</returns>
      <param name="value">Проверяемое значение.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary>Определяет, приемлемо ли указанное значение для типа свойства, путем базовой проверки типа, а также, находится ли оно потенциально в пределах разрешенного диапазона значений для данного типа. </summary>
      <returns>true, если значение приемлемо и принадлежит к надлежащему или производному типу; в противном случае — false.</returns>
      <param name="value">Проверяемое значение.</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary>Возвращает имя свойства зависимостей. </summary>
      <returns>Имя свойства.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary>Задает альтернативные метаданные для этого свойства зависимостей, когда оно присутствует в экземплярах указанного типа, переопределяя метаданные, существовавшие для этого свойства при наследовании от базовых типов.</summary>
      <param name="forType">Тип, в котором наследуется данное свойство зависимостей и к которому применяются указанные альтернативные метаданные.</param>
      <param name="typeMetadata">Метаданные для применения к свойству зависимостей в переопределяемом типе.</param>
      <exception cref="T:System.InvalidOperationException">Попытка переопределения метаданных для свойства зависимостей, доступного только для чтения (эту операцию нельзя выполнить с помощью данной сигнатуры).</exception>
      <exception cref="T:System.ArgumentException">Метаданные уже были установлены для свойства зависимостей, как оно существует в указанном типе.</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary>Передает альтернативные метаданные для доступного только для чтения свойства зависимостей в случае присутствия в экземплярах заданного типа, переопределяя метаданные, указанные при исходной регистрации свойства зависимостей.Для доступного только для чтения свойства зависимости необходимо передать <see cref="T:System.Windows.DependencyPropertyKey" />, чтобы избежать исключения.</summary>
      <param name="forType">Тип, в котором наследуется данное свойство зависимостей и к которому применяются указанные альтернативные метаданные.</param>
      <param name="typeMetadata">Метаданные для применения к свойству зависимостей в переопределяемом типе.</param>
      <param name="key">Ключ доступа для доступного только для чтения свойства зависимостей. </param>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary>Возвращает тип объекта, зарегистрировавшего свойство зависимостей в системе свойств или добавившего себя в качестве владельца свойства. </summary>
      <returns>Тип объекта, зарегистрировавшего свойство или добавившего себя в качестве его владельца.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary>Возвращает тип, используемый свойством зависимостей для его значения. </summary>
      <returns>
        <see cref="T:System.Type" /> значения свойства.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary>Возвращает значение, указывающее, является ли свойство зависимостей, идентифицируемое данным экземпляром <see cref="T:System.Windows.DependencyProperty" />, доступным только для чтения.</summary>
      <returns>true, если свойство зависимостей доступно только для чтения; в противном случае — false.</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary>Регистрирует свойство зависимостей с указанным именем, типом свойства и типом владельца. </summary>
      <returns>Идентификатор свойства зависимостей, который следует использовать для задания значения public static readonly в вашем классе.В дальнейшем этот идентификатор используется для ссылки на свойство зависимостей в таких операциях, как программная установка значения или получение метаданных.</returns>
      <param name="name">Имя свойства зависимостей для регистрации.Имя должно быть уникальным в пределах пространства имен регистрации для типа владельца.</param>
      <param name="propertyType">Тип свойства.</param>
      <param name="ownerType">Тип владельца, регистрирующего свойство зависимостей.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Регистрирует свойство зависимостей с указанным именем, типом свойства, типом владельца и метаданными свойства. </summary>
      <returns>Идентификатор свойства зависимостей, который следует использовать для задания значения public static readonly в вашем классе.В дальнейшем этот идентификатор используется для ссылки на свойство зависимостей в таких операциях, как программная установка значения или получение метаданных.</returns>
      <param name="name">Имя свойства зависимостей для регистрации.</param>
      <param name="propertyType">Тип свойства.</param>
      <param name="ownerType">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="typeMetadata">Метаданные для свойства зависимостей.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Регистрирует свойство зависимостей с указанным именем, типом свойства, типом владельца, метаданными свойства и обратным вызовом для проверки значения свойства. </summary>
      <returns>Идентификатор свойства зависимостей, который следует использовать для задания значения public static readonly в вашем классе.В дальнейшем этот идентификатор используется для ссылки на свойство зависимостей в таких операциях, как программная установка значения или получение метаданных.</returns>
      <param name="name">Имя свойства зависимостей для регистрации.</param>
      <param name="propertyType">Тип свойства.</param>
      <param name="ownerType">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="typeMetadata">Метаданные для свойства зависимостей.</param>
      <param name="validateValueCallback">Ссылка на обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary>Регистрирует вложенное свойство с указанным именем, типом свойства и типом владельца. </summary>
      <returns>Идентификатор свойства зависимостей, который следует использовать для задания значения public static readonly в вашем классе.В дальнейшем этот идентификатор используется для ссылки на свойство зависимостей в таких операциях, как программная установка значения или получение метаданных.</returns>
      <param name="name">Имя свойства зависимостей для регистрации.</param>
      <param name="propertyType">Тип свойства.</param>
      <param name="ownerType">Тип владельца, регистрирующего свойство зависимостей.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Регистрирует вложенное свойство с указанным именем, типом свойства, типом владельца и метаданными свойства. </summary>
      <returns>Идентификатор свойства зависимостей, который следует использовать для задания значения public static readonly в вашем классе.В дальнейшем этот идентификатор используется для ссылки на свойство зависимостей в таких операциях, как программная установка значения или получение метаданных.</returns>
      <param name="name">Имя свойства зависимостей для регистрации.</param>
      <param name="propertyType">Тип свойства.</param>
      <param name="ownerType">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="defaultMetadata">Метаданные для свойства зависимостей.Могут включать значение по умолчанию, а также другие характеристики.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Регистрирует вложенное свойство с указанным типом свойства, типом владельца, метаданными свойства и обратным вызовом для проверки значения свойства. </summary>
      <returns>Идентификатор свойства зависимостей, который следует использовать для задания значения public static readonly в вашем классе.В дальнейшем этот идентификатор используется для ссылки на свойство зависимостей в таких операциях, как программная установка значения или получение метаданных.</returns>
      <param name="name">Имя свойства зависимостей для регистрации.</param>
      <param name="propertyType">Тип свойства.</param>
      <param name="ownerType">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="defaultMetadata">Метаданные для свойства зависимостей.Могут включать значение по умолчанию, а также другие характеристики.</param>
      <param name="validateValueCallback">Ссылка на обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>Регистрирует доступное только для чтения вложенное свойство с указанным типом свойства, типом владельца и метаданными свойства. </summary>
      <returns>Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.</returns>
      <param name="name">Имя свойства зависимостей для регистрации.</param>
      <param name="propertyType">Тип свойства.</param>
      <param name="ownerType">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="defaultMetadata">Метаданные для свойства зависимостей.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Регистрирует доступное только для чтения вложенное свойство с указанным типом свойства, типом владельца, метаданными свойства и обратным вызовом для проверки. </summary>
      <returns>Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.</returns>
      <param name="name">Имя свойства зависимостей для регистрации.</param>
      <param name="propertyType">Тип свойства.</param>
      <param name="ownerType">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="defaultMetadata">Метаданные для свойства зависимостей.</param>
      <param name="validateValueCallback">Ссылка на созданный пользователем обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary> Регистрирует доступное только для чтения свойство зависимостей с указанным типом свойства, типом владельца и метаданными свойства. </summary>
      <returns>Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.</returns>
      <param name="name">Имя свойства зависимостей для регистрации.</param>
      <param name="propertyType">Тип свойства.</param>
      <param name="ownerType">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="typeMetadata">Метаданные для свойства зависимостей.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary>Регистрирует доступное только для чтения свойство зависимостей с указанным типом свойства, типом владельца, метаданными свойства и обратным вызовом для проверки. </summary>
      <returns>Ключ свойства зависимостей, который следует использовать для задания значения статического доступного только для чтения поля в вашем классе, которое затем используется для ссылки на свойство зависимостей.</returns>
      <param name="name">Имя свойства зависимостей для регистрации.</param>
      <param name="propertyType">Тип свойства.</param>
      <param name="ownerType">Тип владельца, регистрирующего свойство зависимостей.</param>
      <param name="typeMetadata">Метаданные для свойства зависимостей.</param>
      <param name="validateValueCallback">Ссылка на созданный пользователем обратный вызов, который должен выполнить пользовательскую проверку значения свойства зависимостей после обычной проверки типа.</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary> Возвращает строковое представление свойства зависимостей. </summary>
      <returns>Строковое представление свойства зависимостей.</returns>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary>Задает статическое значение, используемое системой свойств WPF вместо null для указания того, что свойство существует, но его значение не задано системой свойств.</summary>
      <returns>Незаданное значение.Это фактически результат вызова конструктора <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary>Возвращает обратный вызов для проверки значения свойства зависимостей. </summary>
      <returns>Обратный вызов для проверки значения данного свойства зависимостей, указанный параметром <paramref name="validateValueCallback" /> при изначальной регистрации свойства зависимостей.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary>Предоставляет данные для различных событий изменения свойств.Обычно такие события сообщают об эффективных изменениях значений в значении свойства зависимостей, доступного только для чтения.Также они используются как часть реализации <see cref="T:System.Windows.PropertyChangedCallback" />.</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <param name="property">Идентификатор для измененного свойства зависимостей.</param>
      <param name="oldValue">Значение свойства до сообщения об изменении соответствующим событием или изменением состояния.</param>
      <param name="newValue">Значение свойства после сообщения об изменении соответствующим событием или изменением состояния.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary>Определяет, эквивалентен ли указанный объект текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <returns>true, если указанный объект эквивалентен текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; в противном случае — false.</returns>
      <param name="obj">Объект для сравнения с текущим <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Определяет, эквивалентен ли указанный <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <returns>true, если указанный <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> эквивалентен текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; в противном случае — false.</returns>
      <param name="args">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения с текущим <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary>Возвращает хэш-код для данного <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />. </summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком. </returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary>Возвращает значение свойства после изменения.</summary>
      <returns>Значение свойства после изменения.</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary>Возвращает значение свойства перед изменением.</summary>
      <returns>Значение свойства перед изменением.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Determines whether two specified <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> objects have the same value.</summary>
      <returns>true if the two <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instances are equivalent; otherwise, false.</returns>
      <param name="left">Первый объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</param>
      <param name="right">Второй объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Определяет, различаются ли два заданных объекта <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</summary>
      <returns>true, если два экземпляра <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> различаются; в противном случае — false.</returns>
      <param name="left">The first <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</param>
      <param name="right">Второй объект <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</param>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary>Возвращает идентификатор свойства зависимостей, в котором произошло изменение значения.</summary>
      <returns>Поле идентификатора свойства зависимостей, в котором произошло изменение значения.</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary>Представляет метод, обрабатывающий события, генерирующиеся при изменении <see cref="T:System.Windows.DependencyProperty" /> а определенной реализации <see cref="T:System.Windows.DependencyObject" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Данные события.</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary>Предоставляет идентификатор свойства зависимостей для ограниченного доступа на запись к доступному только для чтения свойству зависимостей.</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary>Возвращает идентификатор свойства зависимостей, связанный с данным специализированным идентификатором доступного только для чтения свойства зависимостей. </summary>
      <returns>Соответствующий идентификатор свойства зависимостей.</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary>Переопределяет метаданные доступного только для чтения свойства зависимостей, представленного данным идентификатором свойства зависимостей.</summary>
      <param name="forType">Тип, в котором существует данное свойство зависимостей и следует переопределить метаданные.</param>
      <param name="typeMetadata">Метаданные, переданные для этого типа.</param>
      <exception cref="T:System.InvalidOperationException">Попытка переопределения метаданных в доступном для чтения и записи свойстве зависимостей (не может быть осуществлена с помощью данной сигнатуры).</exception>
      <exception cref="T:System.ArgumentException">Метаданные уже были установлены для свойства, так как они существуют в указанном типе.</exception>
    </member>
    <member name="T:System.Windows.Expression">
      <summary>Данный тип обеспечивает поддержку инфраструктуры Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования в коде. </summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary>Преобразует экземпляры <see cref="T:System.Windows.Expression" /> в другие типы и наоборот. </summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.ExpressionConverter" />. </summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Возвращает значение, указывающее, может ли этот преобразователь преобразовать исходный объект в объект <see cref="T:System.Windows.Expression" />. </summary>
      <returns>Всегда false.</returns>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст форматирования. </param>
      <param name="sourceType">Тип <see cref="T:System.Type" />, представляющий тип, из которого нужно выполнить преобразование.</param>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Возвращает значение, указывающее, может ли этот преобразователь преобразовать объект <see cref="T:System.Windows.Expression" /> в определенный целевой тип. </summary>
      <returns>Всегда false.</returns>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст форматирования. </param>
      <param name="destinationType">Объект <see cref="T:System.Type" />, представляющий тип, в который необходимо выполнить преобразование.</param>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует предоставленное значение в тип <see cref="T:System.Windows.Expression" />. </summary>
      <returns>Всегда вызывает исключение и возвращает значение null.</returns>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст форматирования. </param>
      <param name="culture">Объект <see cref="T:System.Globalization.CultureInfo" />, который используется как текущие язык и региональные параметры. </param>
      <param name="value">Преобразуемый объект.</param>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует предоставленный объект <see cref="T:System.Windows.Expression" /> в заданный тип.</summary>
      <returns>Всегда вызывает исключение и возвращает значение null.</returns>
      <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст форматирования. </param>
      <param name="culture">Объект <see cref="T:System.Globalization.CultureInfo" />, который используется как текущие язык и региональные параметры. </param>
      <param name="value">Преобразуемый объект.</param>
      <param name="destinationType">Объект <see cref="T:System.Type" />, представляющий тип, в который необходимо выполнить преобразование.</param>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary>Определяет объект, который имеет изменяемое состояние и состояние только для чтения (фиксированное).Классы, которые являются производными от класса <see cref="T:System.Windows.Freezable" />, создают подробные уведомления об изменениях, могут быть фиксированными, а также могут копировать себя.</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary>Инициализирует новый экземпляр производного класса <see cref="T:System.Windows.Freezable" />. </summary>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary>Возвращает значение, которое показывает, можно ли сделать объект нередактируемым. </summary>
      <returns>Значение true, если текущий объект можно сделать нередактируемым или он уже является нередактируемым. В противном случае — значение false.</returns>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary>Происходит, когда изменяется класс <see cref="T:System.Windows.Freezable" /> или объект, который входит в его состав. </summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary>Создает редактируемую копию объекта <see cref="T:System.Windows.Freezable" />, что позволяет выполнить глубокое копирование значений объекта.При копировании свойств зависимостей объекта этот метод копирует выражения (которые могут больше не разрешаться), но не анимации или их текущие значения.</summary>
      <returns>Модифицируемый клон текущего объекта.Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> объекта-копии содержит значение false, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта содержит значение true.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary>Создает экземпляр копии (глубокой копии) заданного объекта <see cref="T:System.Windows.Freezable" />, используя базовые (не анимационные) значения свойств. </summary>
      <param name="sourceFreezable">Объект, используемый для клонирования.</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary>Создает редактируемую копию (глубокую копию) объекта <see cref="T:System.Windows.Freezable" /> с использованием его текущих значений.</summary>
      <returns>Модифицируемый клон текущего объекта.Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> объекта-копии содержит значение false, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта содержит значение true.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Создает экземпляр редактируемой копии (глубокой копии) заданного объекта <see cref="T:System.Windows.Freezable" />, используя текущие значения свойства.</summary>
      <param name="sourceFreezable">Клонируемый объект <see cref="T:System.Windows.Freezable" />.</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Freezable" />. </summary>
      <returns>Новый экземпляр.</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary>Если реализуется в производном классе, создает новый экземпляр производного класса <see cref="T:System.Windows.Freezable" />. </summary>
      <returns>Новый экземпляр.</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary>Делает текущий объект нередактируемым и определяет для его свойства <see cref="P:System.Windows.Freezable.IsFrozen" /> значение true. </summary>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Windows.Freezable" /> нельзя сделать нередактируемым. </exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary>Если параметр <paramref name="isChecking" /> имеет значение true, данный метод показывает, можно ли сделать заданный объект <see cref="T:System.Windows.Freezable" /> нередактируемым.Если параметр <paramref name="isChecking" /> имеет значение false, данный метод пытается сделать заданный объект <see cref="T:System.Windows.Freezable" /> нередактируемым и показывает, была ли операция успешной.</summary>
      <returns>Если параметр <paramref name="isChecking" /> имеет значение true, этот метод возвращает значение true, если заданный объект <see cref="T:System.Windows.Freezable" /> можно сделать нередактируемым, или значение false, если такая возможность отсутствует.Если параметр <paramref name="isChecking" /> имеет значение false, этот метод возвращает значение true, если заданный объект <see cref="T:System.Windows.Freezable" /> сейчас является нередактируемым, или значение false, если его нельзя сделать нередактируемым.</returns>
      <param name="freezable">Объект, который необходимо проверить или сделать нередактируемым.Если параметр <paramref name="isChecking" /> имеет значение true, объект проверяется, чтобы определить, можно ли его сделать нередактируемым.Если параметр <paramref name="isChecking" /> имеет значение false, объект делается нередактируемым, если это возможно.</param>
      <param name="isChecking">Значение true показывает, что объект можно заморозить (замораживание на самом деле не выполняется); значение false показывает, что объект замораживается на самом деле.</param>
      <exception cref="T:System.InvalidOperationException">Если параметр <paramref name="isChecking" /> имеет значение false, это показывает, что попытка сделать объект <paramref name="freezable" /> была безуспешной; теперь объект имеет неизвестное состояние (он может быть частично заморожен).  </exception>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary>Делает объект <see cref="T:System.Windows.Freezable" /> нередактируемым или проверяет, можно ли его сделать нередактируемым.</summary>
      <returns>Если параметр <paramref name="isChecking" /> имеет значение true, этот метод возвращает значение true, если данный объект <see cref="T:System.Windows.Freezable" /> можно сделать нередактируемым, или значение false, если такая возможность отсутствует.Если параметр <paramref name="isChecking" /> имеет значение false, этот метод возвращает значение true, если заданный объект <see cref="T:System.Windows.Freezable" /> сейчас является нередактируемым, или значение false, если его нельзя сделать нередактируемым.</returns>
      <param name="isChecking">Значение true показывает, что объект можно заморозить (замораживание на самом деле не выполняется); значение false показывает, что объект замораживается на самом деле.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary>Создает фиксированную копию объекта <see cref="T:System.Windows.Freezable" />, используя базовые (не анимационные) значения свойств.Так как копия является фиксированной, копируются только ссылки на фиксированные вложенные объекты.</summary>
      <returns>Фиксированная копия объекта <see cref="T:System.Windows.Freezable" />.Свойство копии <see cref="P:System.Windows.Freezable.IsFrozen" /> имеет значение true.</returns>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Windows.Freezable" /> нельзя заморозить, так как он включает выражения или анимационные свойства.</exception>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Создает экземпляр фиксированной копии заданного объекта <see cref="T:System.Windows.Freezable" />, используя базовые (не анимационные) значения свойства.</summary>
      <param name="sourceFreezable">Экземпляр, который копируется.</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary>Создает фиксированную копию объекта <see cref="T:System.Windows.Freezable" /> с использованием текущих значений свойств.Так как копия является фиксированной, копируются только ссылки на фиксированные вложенные объекты.</summary>
      <returns>Фиксированная копия объекта <see cref="T:System.Windows.Freezable" />.Свойство копии <see cref="P:System.Windows.Freezable.IsFrozen" /> имеет значение true.</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Создает текущий экземпляр замороженной копии указанного объекта <see cref="T:System.Windows.Freezable" />.Если объект имеет анимационные свойства зависимостей, копируются их текущие анимационные значения.</summary>
      <param name="sourceFreezable">Объект <see cref="T:System.Windows.Freezable" />, который необходимо скопировать и заморозить.</param>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary>Возвращает значение, которое показывает, является ли сейчас объект редактируемым. </summary>
      <returns>Значение true, если объект заморожен и его нельзя редактировать; значение false, если объект можно редактировать.</returns>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary>Вызывается при изменении текущего объекта <see cref="T:System.Windows.Freezable" />. </summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Обеспечивает создание соответствующих указателей контекста для элемента данных типа <see cref="T:System.Windows.DependencyObjectType" />, который был только что задан.</summary>
      <param name="oldValue">Предыдущее значение элемента данных.</param>
      <param name="newValue">Текущее значение элемента данных.</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>Данный член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.</summary>
      <param name="oldValue">Предыдущее значение элемента данных.</param>
      <param name="newValue">Текущее значение элемента данных.</param>
      <param name="property">Измененное свойство. </param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Переопределяет реализацию <see cref="T:System.Windows.DependencyObject" /> метода <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />, чтобы также вызывать любые обработчики <see cref="E:System.Windows.Freezable.Changed" /> в ответ на изменение свойства зависимостей типа <see cref="T:System.Windows.Freezable" />.</summary>
      <param name="e">Данные события, которые включают информацию об изменении свойства, а также о его старых и новых значениях.</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary>Обеспечивает доступ к <see cref="T:System.Windows.Freezable" /> из допустимого потока.Наследники объекта <see cref="T:System.Windows.Freezable" /> должны вызывать данный метод в начале любого API-интерфейс, который считывает элементы данных, не являющиеся свойствами зависимостей.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary>Вызывает событие <see cref="E:System.Windows.Freezable.Changed" /> для объекта <see cref="T:System.Windows.Freezable" /> и вызывает его метод <see cref="M:System.Windows.Freezable.OnChanged" />.Классы, которые являются производными от класса <see cref="T:System.Windows.Freezable" />, должны вызывать данный момент в конце любого интерфейса API, который изменяет элементы класса, не сохраненные как свойства зависимостей.</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary>Проверяет, что объект <see cref="T:System.Windows.Freezable" /> не заморожен и доступ к нему осуществляется из допустимого контекста потока.Наследники объекта <see cref="T:System.Windows.Freezable" /> должны вызывать данный метод в начале любого API-интерфейс, который выполняет запись в элементах данных, не являющихся свойствами зависимостей.</summary>
      <exception cref="T:System.InvalidOperationException">Экземпляр <see cref="T:System.Windows.Freezable" /> заморожен, и запись в его элементы невозможна.</exception>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary>Описывает ширину, высоту и расположение целого прямоугольника.</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Windows.Int32Rect" /> с указанными координатами <see cref="P:System.Windows.Int32Rect.X" /> и <see cref="P:System.Windows.Int32Rect.Y" /> и заданными значениями <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" />. </summary>
      <param name="x">Значение <see cref="P:System.Windows.Int32Rect.X" /> нового экземпляра <see cref="T:System.Windows.Int32Rect" />, который задает координату по оси Х верхнего левого угла прямоугольника.</param>
      <param name="y">Значение <see cref="P:System.Windows.Int32Rect.Y" /> нового экземпляра <see cref="T:System.Windows.Int32Rect" />, который задает координату по оси Y верхнего левого угла прямоугольника.</param>
      <param name="width">Значение <see cref="P:System.Windows.Int32Rect.Width" /> нового экземпляра <see cref="T:System.Windows.Int32Rect" />, который задает ширину прямоугольника.</param>
      <param name="height">Значение <see cref="P:System.Windows.Int32Rect.Height" /> нового экземпляра <see cref="T:System.Windows.Int32Rect" />, который задает высоту прямоугольника.</param>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary>Возвращает пустой прямоугольник (специальное значение, которое представляет прямоугольник без расположения или площади). </summary>
      <returns>Пустой прямоугольник без расположения или площади.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary>Определяет, равен ли указанный прямоугольник данному прямоугольнику.</summary>
      <returns>Значение true, если o является <see cref="T:System.Windows.Int32Rect" /> и имеет одинаковые свойства <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" /> с этим прямоугольником. В противном случае — значение false.</returns>
      <param name="o">Объект, который требуется сравнить с текущим прямоугольником.</param>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary>Определяет, равен ли указанный прямоугольник данному прямоугольнику.</summary>
      <returns>Значение true, если оба прямоугольника имеют одинаковые свойства <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" /> с данным прямоугольником. В противном случае — значение false.</returns>
      <param name="value">Прямоугольник, который требуется сравнить с текущим прямоугольником.</param>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Определяет, равны ли указанные прямоугольники.</summary>
      <returns>Значение true, если int32Rect1 и int32Rect2 имеют одинаковые свойства <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" />. В противном случае — значение false.</returns>
      <param name="int32Rect1">Первый прямоугольник для сравнения.</param>
      <param name="int32Rect2">Второй прямоугольник для сравнения.</param>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary>Создает хэш-код с использованием значений <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" /> данного прямоугольника.</summary>
      <returns>Хэш-код данного прямоугольника.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary>Получает или задает высоту прямоугольника.</summary>
      <returns>Высота прямоугольника.Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary>Возвращает значение, которое определяет, пуст ли прямоугольник.</summary>
      <returns>Значение true, если прямоугольник пустой. В противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Проверяет точное равенство двух прямоугольников.</summary>
      <returns>Значение true, если int32Rect1 и int32Rect2 имеют одинаковые свойства <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" />. В противном случае — значение false.</returns>
      <param name="int32Rect1">Первый прямоугольник для сравнения.</param>
      <param name="int32Rect2">Второй прямоугольник для сравнения.</param>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary>Проверяет неравенство двух прямоугольников.</summary>
      <returns>Значение false, если int32Rect1 и int32Rect2 имеют одинаковые свойства <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" />. В противном случае, если все эти значения совпадают, — значение true.</returns>
      <param name="int32Rect1">Первый прямоугольник для сравнения.</param>
      <param name="int32Rect2">Второй прямоугольник для сравнения.</param>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary>Создает структуру <see cref="T:System.Windows.Int32Rect" /> из заданного представления <see cref="T:System.String" />.</summary>
      <returns>Эквивалентная структура <see cref="T:System.Windows.Int32Rect" />.</returns>
      <param name="source">Строковое представление <see cref="T:System.Windows.Int32Rect" />.</param>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Форматирует значение текущего экземпляра с использованием заданного формата.</summary>
      <returns>Значение текущего экземпляра в указанном формате.</returns>
      <param name="format">Используемый формат.</param>
      <param name="provider">Поставщик, используемый для форматирования значения.</param>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary>Создает строковое представление данного объекта <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns>Строка, содержащая одинаковые значения <see cref="P:System.Windows.Int32Rect.X" />, <see cref="P:System.Windows.Int32Rect.Y" />, <see cref="P:System.Windows.Int32Rect.Width" /> и <see cref="P:System.Windows.Int32Rect.Height" /> данной структуры <see cref="T:System.Windows.Int32Rect" />.</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary>Создает строковое представление объекта <see cref="T:System.Windows.Int32Rect" /> на основе заданного значения <see cref="T:System.IFormatProvider" />.</summary>
      <returns>Строковое представление данного экземпляра объекта <see cref="T:System.Windows.Int32Rect" />.</returns>
      <param name="provider">Используемый поставщик формата.Если поставщиком является null, используется текущий язык и региональные параметры.</param>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary>Получает или задает ширину прямоугольника.</summary>
      <returns>Ширина прямоугольника.Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary>Получает или задает координату по оси X верхнего левого угла прямоугольника.</summary>
      <returns>Координата по оси X верхнего левого угла прямоугольника.Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary>Получает или задает координату по оси Y верхнего левого угла прямоугольника.</summary>
      <returns>Координата по оси Y верхнего левого угла прямоугольника.Значение по умолчанию — 0.</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary>Преобразует экземпляры других типов в экземпляры <see cref="T:System.Windows.Int32Rect" /> и выполняет обратное преобразование.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Int32RectConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли объект быть преобразован из заданного типа в экземпляр <see cref="T:System.Windows.Int32Rect" />.  </summary>
      <returns>Значение true, если тип может быть преобразован в <see cref="T:System.Windows.Int32Rect" />; в противном случае — false.</returns>
      <param name="context">Описывает контекстную информацию типа.</param>
      <param name="sourceType">Тип источника, для которого определяется возможность преобразования.</param>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли экземпляр <see cref="T:System.Windows.Int32Rect" /> быть преобразован в другой тип.</summary>
      <returns>Значение true, если <see cref="T:System.Windows.Int32Rect" /> может быть преобразован в <paramref name="destinationType" />; в противном случае — false.</returns>
      <param name="context">Описывает контекстную информацию типа.</param>
      <param name="destinationType">Требуемый тип, для которого <see cref="T:System.Windows.Int32Rect" /> проверяет возможность преобразования.</param>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Пытается преобразовать указанный тип в <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns>
        <see cref="T:System.Windows.Int32Rect" />, созданный в результате преобразования <paramref name="value" />.</returns>
      <param name="context">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture">Региональные особенности, которые следует учитывать при выполнении преобразования.</param>
      <param name="value">Преобразуемый объект.</param>
      <exception cref="T:System.NotSupportedException">Вызывается, если заданный объект имеет значение NULL или является типом, преобразование которого в <see cref="T:System.Windows.Int32Rect" /> невозможно.</exception>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Пытается преобразовать <see cref="T:System.Windows.Int32Rect" /> в заданный тип.</summary>
      <returns>Объект, созданный в результате преобразования данного <see cref="T:System.Windows.Int32Rect" />.</returns>
      <param name="context">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture">Региональные особенности, которые следует учитывать при выполнении преобразования.</param>
      <param name="value">Преобразуемый объект <see cref="T:System.Windows.Int32Rect" />.</param>
      <param name="destinationType">Тип, в который преобразуется данный <see cref="T:System.Windows.Int32Rect" />.</param>
      <exception cref="T:System.NotSupportedException">Создается, если <paramref name="value" /> является null или не является <see cref="T:System.Windows.Int32Rect" />, или если <paramref name="destinationType" /> не является типом, действительным для преобразования.</exception>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary>Предоставляет поддержку прослушивания событий для классов, ожидающих получения событий через шаблон WeakEvent и <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>Получает события от централизованного диспетчера событий.</summary>
      <returns>true, если прослушиватель обработал событие.It is considered an error by the <see cref="T:System.Windows.WeakEventManager" /> handling in WPF to register a listener for an event that the listener does not handle.Вне зависимости от этого, метод должен вернуть false в случае получения события, которое он не может распознать или обработать.</returns>
      <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</param>
      <param name="sender">Объект, в котором произошло событие.</param>
      <param name="e">Данные события.</param>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary>Представляет идентификатор и значение для локально заданного свойства зависимостей.</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary>Determines whether two <see cref="T:System.Windows.LocalValueEntry" /> instances are equal.</summary>
      <returns>Данная реализация <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> сравнивает два значения <see cref="P:System.Windows.LocalValueEntry.Property" /> и потенциально сравнивает значения <see cref="P:System.Windows.LocalValueEntry.Value" />.Компонент <see cref="P:System.Windows.LocalValueEntry.Property" /> объекта <see cref="T:System.Windows.LocalValueEntry" /> имеет тип значения, поэтому всегда будет выполняться побитовое сравнение.Для компонента <see cref="P:System.Windows.LocalValueEntry.Value" /> данная реализация задействует побитовое сравнение, если он имеет тип значения.Для локально заданных свойств ссылочного типа поведение перекладывается на механизмы определения равенства данного типа, так как в данном случае используется только внутреннее сравнение двух значений оператором ==.По умолчанию это было бы ссылочное равенство значений и поэтому равенство всего <see cref="T:System.Windows.LocalValueEntry" /> стало бы ссылочным равенством.</returns>
      <param name="obj">Объект <see cref="T:System.Windows.LocalValueEntry" />, который необходимо сравнить с текущим объектом <see cref="T:System.Windows.LocalValueEntry" />.</param>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.LocalValueEntry" />.</summary>
      <returns>32-разрядное целое число со знаком.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary>Сравнивает указанные экземпляры <see cref="T:System.Windows.LocalValueEntry" />, определяя, одинаковы ли они.</summary>
      <returns>true, если <paramref name="obj1" /> <see cref="T:System.Windows.LocalValueEntry" /> равно <paramref name="obj2" /> <see cref="T:System.Windows.LocalValueEntry" />; в противном случае — false.</returns>
      <param name="obj1">Первый экземпляр для сравнения.</param>
      <param name="obj2">Второй экземпляр для сравнения.</param>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary>Сравнивает указанные экземпляры <see cref="T:System.Windows.LocalValueEnumerator" />, определяя, различаются ли они.</summary>
      <returns>Данная реализация сравнивает значения <see cref="P:System.Windows.LocalValueEntry.Property" /> и <see cref="P:System.Windows.LocalValueEntry.Value" /> — компонентов объекта <see cref="T:System.Windows.LocalValueEntry" />.Компонент <see cref="P:System.Windows.LocalValueEntry.Property" /> объекта <see cref="T:System.Windows.LocalValueEntry" /> всегда имеет тип значения, поэтому всегда будет выполняться побитовое сравнение.Для компонента <see cref="P:System.Windows.LocalValueEntry.Value" /> данная реализация задействует побитовое сравнение, если он имеет тип значения.Для локально заданных свойств ссылочного типа поведение перекладывается на механизмы определения равенства данного типа, так как в данном случае используется только внутреннее сравнение двух значений оператором ==.По умолчанию это ссылочное равенство значений.</returns>
      <param name="obj1">Первый экземпляр для сравнения.</param>
      <param name="obj2">Второй экземпляр для сравнения.</param>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary>Возвращает идентификатор для локального заданного свойства зависимостей, представленного данной записью. </summary>
      <returns>Идентификатор для локально заданного свойства зависимостей.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary>Возвращает значение локально заданного свойства зависимостей. </summary>
      <returns>Значение локально заданного свойства зависимостей в виде объекта. </returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary>Предоставляет поддержку перечисления для локальных значений любых свойств зависимостей, существующих в <see cref="T:System.Windows.DependencyObject" />.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary>Возвращает число элементов, представленных в коллекции. </summary>
      <returns>Число элементов в коллекции.</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary>Возвращает текущий элемент в коллекции.</summary>
      <returns>The current <see cref="T:System.Windows.LocalValueEntry" /> in the collection.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary>Определяет, эквивалентен ли указанный <see cref="T:System.Windows.LocalValueEnumerator" /> данному <see cref="T:System.Windows.LocalValueEnumerator" />.</summary>
      <returns>true, если заданный <see cref="T:System.Windows.LocalValueEnumerator" /> равен текущему <see cref="T:System.Windows.LocalValueEnumerator" />; в противном случае — false.</returns>
      <param name="obj">Объект <see cref="T:System.Windows.LocalValueEnumerator" />, который необходимо сравнить с текущим объектом <see cref="T:System.Windows.LocalValueEnumerator" />.</param>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Windows.LocalValueEnumerator" />.</summary>
      <returns>Хэш-код 32-разрядного целого числа.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns>true, если перечислитель был успешно перемещен к следующему элементу; false, если перечислитель достиг конца коллекции.</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary>Сравнивает два заданных объекта <see cref="T:System.Windows.LocalValueEnumerator" /> на равенство.</summary>
      <returns>true if the <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> is equal to the <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />; otherwise, false.</returns>
      <param name="obj1">The first object to compare.</param>
      <param name="obj2">Второй сравниваемый объект.</param>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary>Сравнивает два заданных объекта <see cref="T:System.Windows.LocalValueEnumerator" />, чтобы определить, являются ли они неравными.</summary>
      <returns>true, если два экземпляра не равны, в противном случае — false.</returns>
      <param name="obj1">Первый сравниваемый объект.</param>
      <param name="obj2">Второй сравниваемый объект.</param>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary>Устанавливает перечислитель в его начальное положение, перед первым элементом набора.</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary>Описание этих членов см. в описании свойства <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary>Реализует базовую поддержку WPF для методов <see cref="T:System.Windows.Markup.INameScope" />, используемых для хранения или извлечения сопоставлений "имя-объект" в определенной области имен XAML.Добавляет поддержку вложенного свойства зависимостей для упрощения динамического получения или задания имен из области видимости имен XAML на уровне элемента.</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.NameScope" />.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Добавляет элемент в коллекцию.</summary>
      <param name="item">Структура <see cref="T:System.Collections.Generic.KeyValuePair`2" />  (ключ — <see cref="T:System.String" />, значение — <see cref="T:System.Object" />), представляющая сопоставление имени для добавления в область видимости имен XAML.</param>
      <exception cref="T:System.ArgumentException">Один или оба компонента <paramref name="item" /> имеют значение null.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary>Добавляет элемент в коллекцию.</summary>
      <param name="key">Строковый ключ, представляющий собой имя в добавляемом сопоставлении области видимости имен XAML.</param>
      <param name="value">Значение-объект, представляющее собой ссылку на объект в добавляемом сопоставлении области видимости имен XAML.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> или <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary>Удаляет все элементы из коллекции.</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Определяет, содержит ли коллекция указанный элемент. </summary>
      <returns>Значение true, если указанный параметр <see cref="T:System.Collections.Generic.KeyValuePair`2" /> обозначает имя существующего сопоставления в данной области <see cref="T:System.Windows.NameScope" />.Значение false, если заданного ключа <see cref="T:System.Collections.Generic.KeyValuePair`2" /> не существует в текущей области <see cref="T:System.Windows.NameScope" />.</returns>
      <param name="item">Искомый элемент коллекции, заданный в виде структуры <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (ключ — <see cref="T:System.String" />, значение — <see cref="T:System.Object" />).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary>Возвращает значение, указывающее, существует ли заданное имя в данном объекте <see cref="T:System.Windows.NameScope" />.</summary>
      <returns>Значение true, если указанный параметр <paramref name="key" /> обозначает имя существующего сопоставления в данной области <see cref="T:System.Windows.NameScope" />.Значение false, если заданного ключа <paramref name="key" /> не существует в текущей области <see cref="T:System.Windows.NameScope" />.</returns>
      <param name="key">Искомый строковый ключ.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Копирует элементы коллекции в массив, начиная с определенного индекса массива.</summary>
      <param name="array">Одномерный массив, в который копируются элементы коллекции. Его индексация должна начинаться с нуля.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary>Возвращает число элементов в коллекции сопоставленных имен в данном объекте <see cref="T:System.Windows.NameScope" />.</summary>
      <returns>Число элементов в коллекции.</returns>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary>Возвращает соответствующий объект в области видимости имен XAML, поддерживаемой данным объектом <see cref="T:System.Windows.NameScope" />, на основании заданной строки имени.</summary>
      <returns>Запрошенный объект, сопоставленный заданному параметром <paramref name="name" /> имени.Может возвратить значение null, если параметр <paramref name="name" /> был предоставлен в виде null или пустой строки, или если соответствующий объект не был обнаружен.</returns>
      <param name="name">Часть "имя" существующего сопоставления, для которого требуется извлечь часть "объект".</param>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary>Предоставляет метод доступа get вложенного свойства зависимостей для вложенного свойства зависимостей <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <returns>Область видимости имен XAML, в виде экземпляра <see cref="T:System.Windows.Markup.INameScope" />.</returns>
      <param name="dependencyObject">Объект, из которого требуется получить область видимости имен XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary>Получает значение, указывающее, является ли коллекция доступной только для чтения.</summary>
      <returns>Всегда возвращает значение false.</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary>Получает или задает элемент с заданным ключом. </summary>
      <returns>Значение объекта, сопоставленное имени XAML, переданному в виде параметра <paramref name="key" />.</returns>
      <param name="key">Строковое имя для сопоставления имени XAML, которое требуется получить или задать.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> предоставляется в виде null.— или —Для операции установки <paramref name="value" /> задается как null.</exception>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary>Получает коллекцию ключей в словаре <see cref="T:System.Windows.NameScope" />.</summary>
      <returns>Коллекция ключей в словаре <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary>Получает или задает динамически присоединенные экземпляры <see cref="T:System.Windows.NameScope" />. </summary>
      <returns>Присоединенная область видимости имен на определенном объекте.</returns>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary>Идентифицирует вложенное свойство зависимостей <see cref="P:System.Windows.NameScope.NameScope" />. </summary>
      <returns>Идентификатор вложенного свойства зависимостей <see cref="P:System.Windows.NameScope.NameScope" />.</returns>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary>Регистрирует новую пару имя-объект в текущей области видимости имен XAML.</summary>
      <param name="name">Имя, используемое для сопоставления данного объекта.</param>
      <param name="scopedElement">Объект, сопоставляемый с предоставленным именем.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> или <paramref name="scopedElement" /> предоставлен в виде null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> предоставлен в виде пустой строки— или —Предоставленный <paramref name="name" /> был отвергнут анализатором, так как содержал символы, недопустимые для имени XAML— или —Предоставленный <paramref name="name" /> приведет к регистрации дублирующегося имени.</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Удаляет из коллекции определенный объект.</summary>
      <returns>Значение true, если элемент был успешно удален из коллекции; в противном случае — значение false.Также возвращает значение false, если элемент не был найден в коллекции.</returns>
      <param name="item">Объект для удаления из коллекции, заданный в виде структуры <see cref="T:System.Collections.Generic.KeyValuePair`2" />  (ключ — <see cref="T:System.String" />, значение — <see cref="T:System.Object" />).</param>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary>Удаляет из коллекции сопоставление для заданного имени.</summary>
      <returns>Значение true, если элемент был успешно удален из коллекции; в противном случае — значение false.Также возвращает значение false, если элемент не был найден в коллекции.</returns>
      <param name="key">Строковый ключ, представляющий собой имя в удаляемом сопоставлении области видимости имен XAML.</param>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary>Предоставляет метод доступа set вложенного свойства зависимостей для вложенного свойства зависимостей <see cref="P:System.Windows.NameScope.NameScope" />.</summary>
      <param name="dependencyObject">Объект, для которого следует изменить область видимости имен XAML.</param>
      <param name="value">Новая область видимости имен XAML с использованием приведения к интерфейсу.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию в коллекции.</summary>
      <returns>Перечислитель, который осуществляет перебор элементов коллекции.</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий итерацию в коллекции.</summary>
      <returns>Перечислитель, который осуществляет перебор элементов коллекции.</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary>Получает значение, связанное с заданным ключом.</summary>
      <returns>Значение true, если объект <see cref="T:System.Windows.NameScope" /> содержит сопоставление для имени, переданного в виде параметра <paramref name="key" />.В противном случае — значение false.</returns>
      <param name="key">Ключ значения, которое необходимо получить.</param>
      <param name="value">При возвращении метода содержит значение, связанное с заданным ключом, если ключ найден; в противном случае содержит пустой объект.Этот параметр передается неинициализированным.</param>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary>Удаляет из области видимости имен XAML сопоставление имя-объект.</summary>
      <param name="name">Имя удаляемого сопоставления.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> предоставлен в виде пустой строки.— или —Предоставленный <paramref name="name" /> не зарегистрирован.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary>Получает коллекцию значений в словаре <see cref="T:System.Windows.NameScope" />.</summary>
      <returns>Коллекция значений в словаре <see cref="T:System.Windows.NameScope" />.</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary>Представляет пару координат X и Y в двухмерном пространстве.</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary>Создает новую структуру <see cref="T:System.Windows.Point" />, содержащую заданные координаты. </summary>
      <param name="x">Значение координаты X новой структуры <see cref="T:System.Windows.Point" />. </param>
      <param name="y">Значение координаты Y новой структуры <see cref="T:System.Windows.Point" />. </param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary>Добавляет <see cref="T:System.Windows.Vector" /> в <see cref="T:System.Windows.Point" /> и возвращает результат в виде структуры <see cref="T:System.Windows.Point" />.</summary>
      <returns>Возвращает сумму объектов <paramref name="point" /> и <paramref name="vector" />.</returns>
      <param name="point">Структура <see cref="T:System.Windows.Point" /> для добавления.</param>
      <param name="vector">Структура <see cref="T:System.Windows.Vector" /> для добавления. </param>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary>Определяет, является ли указанный <see cref="T:System.Object" /> объектом <see cref="T:System.Windows.Point" /> и содержит ли он те же координаты, что и данный <see cref="T:System.Windows.Point" />. </summary>
      <returns>true, если <paramref name="o" /> является <see cref="T:System.Windows.Point" /> и содержит те же значения <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" />, что и данный <see cref="T:System.Windows.Point" />; в противном случае — false.</returns>
      <param name="o">Объект <see cref="T:System.Object" /> для сравнения.</param>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary>Сравнивает две структуры <see cref="T:System.Windows.Point" /> на предмет их равенства.</summary>
      <returns>true, если обе структуры <see cref="T:System.Windows.Point" /> содержат одинаковые значения <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" />; в противном случае — false.</returns>
      <param name="value">Точка для сравнения с данным экземпляром.</param>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary>Сравнивает две структуры <see cref="T:System.Windows.Point" /> на предмет их равенства. </summary>
      <returns>true, если <paramref name="point1" /> и <paramref name="point2" /> содержат одинаковые значения <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" />; в противном случае — false.</returns>
      <param name="point1">Первая точка для сравнения.</param>
      <param name="point2">Вторая точка для сравнения.</param>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary>Возвращает хэш-код для данной структуры <see cref="T:System.Windows.Point" />.</summary>
      <returns>Хэш-код для данной структуры <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary>Преобразует заданную структуру <see cref="T:System.Windows.Point" /> посредством указанной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Преобразованная точка. </returns>
      <param name="point">Точка для преобразования.</param>
      <param name="matrix">Матрица преобразования.</param>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary>Смещает координаты точки <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> на указанные величины.</summary>
      <param name="offsetX">Величина смещенияКоордината точки <see cref="P:System.Windows.Point.X" />. </param>
      <param name="offsetY">Величина смещенияКоордината точки <see cref="P:System.Windows.Point.Y" />.</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary>Перемещает заданную точку <see cref="T:System.Windows.Point" /> на заданный вектор <see cref="T:System.Windows.Vector" /> и возвращает результат.</summary>
      <returns>Результат перемещения заданной точки на заданный вектор.</returns>
      <param name="point">Точка, которую необходимо переместить.</param>
      <param name="vector">Величина, на которую перемещается <paramref name="point" />.</param>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary>Сравнивает две структуры <see cref="T:System.Windows.Point" /> на предмет их равенства. </summary>
      <returns>true, если обе координаты <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> точек <paramref name="point1" /> и <paramref name="point2" /> равны; в противном случае — false.</returns>
      <param name="point1">Первая сравниваемая структура <see cref="T:System.Windows.Point" />.</param>
      <param name="point2">Вторая сравниваемая структура <see cref="T:System.Windows.Point" />.</param>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary>Создает структуру <see cref="T:System.Windows.Vector" /> со значением <see cref="P:System.Windows.Vector.X" />, равным значению <see cref="P:System.Windows.Point.X" /> для данной точки, и <see cref="P:System.Windows.Vector.Y" /> — равным значению <see cref="P:System.Windows.Point.Y" /> для данной точки.</summary>
      <returns>Вектор со значением <see cref="P:System.Windows.Vector.X" />, равным значению <see cref="P:System.Windows.Point.X" /> для данной точки, и <see cref="P:System.Windows.Vector.Y" /> — равным значению <see cref="P:System.Windows.Point.Y" /> для данной точки.</returns>
      <param name="point">Преобразуемая точка.</param>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary>Создает структуру <see cref="T:System.Windows.Size" /> со значением <see cref="P:System.Windows.Size.Width" />, равным значению <see cref="P:System.Windows.Point.X" /> для данной точки, и <see cref="P:System.Windows.Size.Height" /> — равным значению <see cref="P:System.Windows.Point.Y" /> для данной точки.</summary>
      <returns>Структура <see cref="T:System.Windows.Size" /> со значением <see cref="P:System.Windows.Size.Width" />, равным значению <see cref="P:System.Windows.Point.X" /> для данной точки, и <see cref="P:System.Windows.Size.Height" /> — равным значению <see cref="P:System.Windows.Point.Y" /> для данной точки.</returns>
      <param name="point">Преобразуемая точка.</param>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary>Сравнивает две структуры <see cref="T:System.Windows.Point" /> на предмет их неравенства. </summary>
      <returns>true, если точки <paramref name="point1" /> и <paramref name="point2" /> имеют разные координаты <see cref="P:System.Windows.Point.X" /> или <see cref="P:System.Windows.Point.Y" />; false, если точки <paramref name="point1" /> и <paramref name="point2" /> имеют одинаковые координаты <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" />.</returns>
      <param name="point1">Первая точка для сравнения.</param>
      <param name="point2">Вторая точка для сравнения.</param>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary>Преобразует заданный объект <see cref="T:System.Windows.Point" /> с помощью заданной матрицы <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Результат преобразования заданной точки с помощью заданной матрицы.</returns>
      <param name="point">Точка для преобразования. </param>
      <param name="matrix">Матрица преобразования. </param>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary>Вычитает заданную точку <see cref="T:System.Windows.Point" /> из другой заданной точки <see cref="T:System.Windows.Point" /> и возвращает разность в виде <see cref="T:System.Windows.Vector" />.</summary>
      <returns>Разность между <paramref name="point1" /> и <paramref name="point2" />.</returns>
      <param name="point1">Точка, из которой вычитается <paramref name="point2" />.</param>
      <param name="point2">Точка для вычитания из <paramref name="point1" />.</param>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary>Вычитает заданный вектор <see cref="T:System.Windows.Vector" /> из заданной точки <see cref="T:System.Windows.Point" /> и возвращает результирующую точку <see cref="T:System.Windows.Point" />.</summary>
      <returns>Разность между <paramref name="point" /> и <paramref name="vector" />.</returns>
      <param name="point">Точка, из которой вычитается <paramref name="vector" />. </param>
      <param name="vector">Вектор, который вычитается из <paramref name="point1" />.</param>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary>Создает <see cref="T:System.Windows.Point" /> из заданного <see cref="T:System.String" />.</summary>
      <returns>Эквивалентная структура <see cref="T:System.Windows.Point" />. </returns>
      <param name="source">Строковое представление точки.</param>
      <exception cref="T:System.FormatException">
        <paramref name="source" /> не состоит из двух разделенных запятой или пробелом значений типа double.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="source" /> не содержит два числа.— или —<paramref name="source" /> содержит слишком много разделителей.</exception>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary>Вычитает заданную точку <see cref="T:System.Windows.Point" /> из другой заданной точки <see cref="T:System.Windows.Point" /> и возвращает разность в виде <see cref="T:System.Windows.Vector" />.</summary>
      <returns>Разность между <paramref name="point1" /> и <paramref name="point2" />.</returns>
      <param name="point1">Точка, из которой вычитается <paramref name="point2" />. </param>
      <param name="point2">Точка для вычитания из <paramref name="point1" />.</param>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary>Вычитает заданный вектор <see cref="T:System.Windows.Vector" /> из заданной точки <see cref="T:System.Windows.Point" /> и возвращает результирующую точку <see cref="T:System.Windows.Point" />. </summary>
      <returns>Разность между <paramref name="point" /> и <paramref name="vector" />.</returns>
      <param name="point">Точка, из которой вычитается <paramref name="vector" />.</param>
      <param name="vector">
        <paramref name="vector" />, вычитаемый из <paramref name="point" />.</param>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования в коде.Описание этого члена см. в разделе <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>Строка, содержащая значение текущего экземпляра в заданном формате. </returns>
      <param name="format">Строка, задающая используемый формат. -или- Значение null для использования формата по умолчанию, определенного для типа реализации <see cref="T:System.IFormattable" />.</param>
      <param name="provider">Объект IFormatProvider, используемый для форматирования значения. — или — Значение null для получения сведений о форматировании чисел на основе текущего значения параметра языкового стандарта операционной системы.</param>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary>Создает представление данного объекта <see cref="T:System.Windows.Point" /> в виде <see cref="T:System.String" />. </summary>
      <returns>Строка <see cref="T:System.String" />, содержащая значения <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> данной структуры <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary>Создает представление данного объекта <see cref="T:System.Windows.Point" /> в виде <see cref="T:System.String" />. </summary>
      <returns>Строка <see cref="T:System.String" />, содержащая значения <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" /> данной структуры <see cref="T:System.Windows.Point" />.</returns>
      <param name="provider">Сведения о форматировании, связанные с языком и региональными параметрами.</param>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary>Получает или задает значение координаты <see cref="P:System.Windows.Point.X" /> этой структуры <see cref="T:System.Windows.Point" />. </summary>
      <returns>Значение координаты <see cref="P:System.Windows.Point.X" /> этой структуры <see cref="T:System.Windows.Point" />.Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary>Получает или задает значение координаты <see cref="P:System.Windows.Point.Y" /> данной структуры <see cref="T:System.Windows.Point" />. </summary>
      <returns>Значение координаты <see cref="P:System.Windows.Point.Y" /> этой структуры <see cref="T:System.Windows.Point" />.Значение по умолчанию — 0.</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary>Преобразует экземпляры других типов в <see cref="T:System.Windows.Point" /> и наоборот. </summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.PointConverter" />. </summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли объект быть преобразован из заданного типа в экземпляр <see cref="T:System.Windows.Point" />.  </summary>
      <returns>Значение true, если тип можно преобразовать в <see cref="T:System.Windows.Point" />. В противном случае — значение false.</returns>
      <param name="context">Описывает контекстную информацию о типе.</param>
      <param name="sourceType">Тип источника, для которого определяется возможность преобразования.</param>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли экземпляр <see cref="T:System.Windows.Point" /> быть преобразован в другой тип. </summary>
      <returns>Значение true, если <see cref="T:System.Windows.Point" /> может быть преобразован в <paramref name="destinationType" />; в противном случае — false.</returns>
      <param name="context">Описывает контекстную информацию типа.</param>
      <param name="destinationType">Требуемый тип, для которого <see cref="T:System.Windows.Point" /> проверяется на возможность преобразования.</param>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Пытается преобразовать заданный объект в <see cref="T:System.Windows.Point" />. </summary>
      <returns>
        <see cref="T:System.Windows.Point" />, созданный в результате преобразования <paramref name="value" />.</returns>
      <param name="context">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture">Региональные особенности, которые следует учитывать при выполнении преобразования.</param>
      <param name="value">Преобразуемый объект.</param>
      <exception cref="T:System.NotSupportedException">Происходит, если заданный объект имеет значение NULL или является типом, который нельзя преобразовать в <see cref="T:System.Windows.Point" />.</exception>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Пытается преобразовать <see cref="T:System.Windows.Point" /> в заданный тип. </summary>
      <returns>Объект, созданный в результате преобразования данного <see cref="T:System.Windows.Point" />.</returns>
      <param name="context">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture">Региональные особенности, которые следует учитывать при выполнении преобразования.</param>
      <param name="value">Преобразуемый объект <see cref="T:System.Windows.Point" />.</param>
      <param name="destinationType">Тип, в который преобразуется данный <see cref="T:System.Windows.Point" />.</param>
      <exception cref="T:System.NotSupportedException">Создается, если <paramref name="value" /> является null или не является <see cref="T:System.Windows.Point" />, или если <paramref name="destinationType" /> не является типом, действительным для преобразования.</exception>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary>Представляет обратный вызов, инициируемый при изменении действующего значения свойства зависимостей.</summary>
      <param name="d">Объект <see cref="T:System.Windows.DependencyObject" />, значение свойства которого было изменено.</param>
      <param name="e">Данные события, выдаваемые любым событием, отслеживающим изменения действующего значения данного свойства.</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary>Определяет некоторые аспекты поведения свойства зависимостей при его применении к определенному типу, включая условия, с которыми оно было зарегистрировано. </summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.PropertyMetadata" /> class. </summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyMetadata" /> с указанным значением по умолчанию для свойства зависимостей, к которому будут применены метаданные. </summary>
      <param name="defaultValue">Как правило, значение по умолчанию, указанное для свойства зависимостей, представляет собой значение определенного типа.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> не может иметь значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; см. Примечания.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyMetadata" /> с указанным значением по умолчанию и ссылкой на реализацию <see cref="T:System.Windows.PropertyChangedCallback" />. </summary>
      <param name="defaultValue">Как правило, значение по умолчанию свойства зависимостей представляет собой значение определенного типа.</param>
      <param name="propertyChangedCallback">Ссылка на реализацию обработчика вызывается системой управления свойствами при каждом изменении значения свойства.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> не может иметь значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; см. Примечания.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Windows.PropertyMetadata" /> класса с заданными значением по умолчанию и ответами. </summary>
      <param name="defaultValue">Как правило, значение по умолчанию свойства зависимостей представляет собой значение определенного типа.</param>
      <param name="propertyChangedCallback">Ссылка на реализацию обработчика вызывается системой управления свойствами при каждом изменении значения свойства.</param>
      <param name="coerceValueCallback">Ссылка на реализацию обработчика вызывается системой управления свойствами при каждом вызове <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> против данного свойства.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> не может иметь значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; см. Примечания.</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary> Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyMetadata" /> с указанной ссылкой реализации <see cref="T:System.Windows.PropertyChangedCallback" />. </summary>
      <param name="propertyChangedCallback">Ссылка на реализацию обработчика вызывается системой управления свойствами при каждом изменении значения свойства.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary>Возвращает или задает ссылку на реализацию <see cref="T:System.Windows.CoerceValueCallback" /> указанную в этих метаданных.</summary>
      <returns>Ссылка реализации <see cref="T:System.Windows.CoerceValueCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство метаданных нельзя задавать после его применения в операции свойства зависимостей.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary> Возвращает или задает значение свойства зависимостей по умолчанию. </summary>
      <returns>Значение свойства по умолчанию.Значение по умолчанию на экземпляре <see cref="T:System.Windows.PropertyMetadata" />, созданным при помощи конструктора с параметрами будет <see cref="F:System.Windows.DependencyProperty.UnsetValue" />; см. Примечания.</returns>
      <exception cref="T:System.ArgumentException">Не может получить значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> после создания; см. Примечания.</exception>
      <exception cref="T:System.InvalidOperationException">Свойство метаданных нельзя задавать после его применения в операции свойства зависимостей.</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary>Возвращает значение, определяющее, были ли применены метаданные к свойству, что привело к запрету изменений экземпляра метаданных. </summary>
      <returns>true, если экземпляр метаданных не подлежит изменениям; в противном случае — false.</returns>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary>Совмещает эти метаданные с основными. </summary>
      <param name="baseMetadata">Основные метаданные, с которыми следует совместить значения экземпляра.</param>
      <param name="dp">Свойство зависимостей, к которому применяются данные метаданные.</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary>Вызывается после применения данных метаданных к свойству, указывая на запечатывание метаданных. </summary>
      <param name="dp">Свойство зависимостей, к которому были применены эти метаданные.</param>
      <param name="targetType">Тип, связанный с этими метаданными, если это метаданные зависящие от типа.Если это метаданные по умолчанию, значением будет нулевая ссылка.</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary>Возвращает или задает ссылку на реализацию <see cref="T:System.Windows.PropertyChangedCallback" /> указанную в этих метаданных.</summary>
      <returns>Ссылка реализации <see cref="T:System.Windows.PropertyChangedCallback" />.</returns>
      <exception cref="T:System.InvalidOperationException">Свойство метаданных нельзя задавать после его применения в операции свойства зависимостей.</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary>Описывает ширину, высоту и расположение прямоугольника. </summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая имеет указанные координаты по оси Х и Y, а также ширину и высоту. </summary>
      <param name="x">Координата по оси X верхнего левого угла прямоугольника.</param>
      <param name="y">Координата по оси Y верхнего левого угла прямоугольника.</param>
      <param name="width">Ширина прямоугольника.</param>
      <param name="height">Высота прямоугольника.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="width" /> является отрицательным значением.–либо–<paramref name="height" /> является отрицательным значением.</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая достаточна велика, чтобы включать две указанных точки. </summary>
      <param name="point1">Первая точка, которую должен включать новый прямоугольник.</param>
      <param name="point2">Вторая точка, которую должен включать новый прямоугольник.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая имеет указанное расположение верхнего левого угла и указанные ширину и высоту. </summary>
      <param name="location">Точка, которая определяет расположение верхнего левого угла прямоугольника.</param>
      <param name="size">Структура <see cref="T:System.Windows.Size" />, которая определяет высоту и ширину прямоугольника.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая достаточно велика, чтобы включать указанную точку и сумму указанной точки и указанного вектора. </summary>
      <param name="point">Первая точка, которую должен включать прямоугольник.</param>
      <param name="vector">Степень смещения указанной точки.Полученный прямоугольник будет достаточно большим, чтобы включать обе точки.</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Rect" />, которая имеет указанный размер и расположена в точке с координатами (0,0).  </summary>
      <param name="size">Структура <see cref="T:System.Windows.Size" />, которая определяет высоту и ширину прямоугольника.</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary>Возвращает координату по оси Y нижней стороны прямоугольника. </summary>
      <returns>Координата по оси Y нижней стороны прямоугольника.Если прямоугольник пуст, значение — <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary>Возвращает расположение левого нижнего угла прямоугольника. </summary>
      <returns>Расположение левого нижнего угла прямоугольника.</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary>Возвращает расположение правого нижнего угла прямоугольника. </summary>
      <returns>Расположение правого нижнего угла прямоугольника.</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary>Показывает, включает ли прямоугольник указанную координату по оси X и Y. </summary>
      <returns>Значение true, если прямоугольник включает точку с координатами <paramref name="x" /> и <paramref name="y" />. В противном случае — значение false.</returns>
      <param name="x">Координата по оси X проверяемой точки.</param>
      <param name="y">Координата по оси Y проверяемой точки.</param>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary>Определяет, включает ли прямоугольник указанную точку.</summary>
      <returns>Значение true, если прямоугольник содержит указанную точку; в противном случае — значение false.</returns>
      <param name="point">Проверяемая точка.</param>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary>Определяет, включает ли прямоугольник указанный прямоугольник. </summary>
      <returns>Значение true, если прямоугольник полностью включает <paramref name="rect" />. В противном случае — значение false.</returns>
      <param name="rect">Проверяемый прямоугольник.</param>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary>Возвращает специальное значение, которое представляет прямоугольник без расположения или области. </summary>
      <returns>Пустой прямоугольник, который имеет значения свойств <see cref="P:System.Windows.Rect.X" /> и <see cref="P:System.Windows.Rect.Y" /> равными <see cref="F:System.Double.PositiveInfinity" /> и значения свойств <see cref="P:System.Windows.Rect.Width" /> и <see cref="P:System.Windows.Rect.Height" /> равными <see cref="F:System.Double.NegativeInfinity" />.</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary>Показывает, равен ли указанный объект текущему прямоугольнику.</summary>
      <returns>true, если <paramref name="o" /> является <see cref="T:System.Windows.Rect" /> и имеет те же значения <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />, что и текущий прямоугольник. В противном случае — значение false.</returns>
      <param name="o">Объект, который требуется сравнить с текущим прямоугольником.</param>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary>Показывает, равен ли указанный прямоугольник текущему прямоугольнику. </summary>
      <returns>true, если указанный прямоугольник имеет те же значения <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />, что и текущий прямоугольник. В противном случае — значение false.</returns>
      <param name="value">Прямоугольник, который требуется сравнить с текущим прямоугольником.</param>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary>Показывает, являются ли указанные прямоугольники равными. </summary>
      <returns>true, если прямоугольники имеют одинаковые значения свойств <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />; в противном случае — false.</returns>
      <param name="rect1">Первый прямоугольник для сравнения.</param>
      <param name="rect2">Второй прямоугольник для сравнения.</param>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary>Создает хэш-код для прямоугольника. </summary>
      <returns>Хэш-код для текущей структуры <see cref="T:System.Windows.Rect" />.</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary>Получает или задает высоту прямоугольника. </summary>
      <returns>Положительное число, которое представляет высоту прямоугольника.Значение по умолчанию — 0.</returns>
      <exception cref="T:System.ArgumentException">Свойству <see cref="P:System.Windows.Rect.Height" /> присваивается отрицательное значение.</exception>
      <exception cref="T:System.InvalidOperationException">Для <see cref="P:System.Windows.Rect.Height" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />. </exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary>Увеличивает или уменьшает прямоугольник по всем направлениям с использованием указанных значений ширины и высоты. </summary>
      <param name="width">Степень увеличения или уменьшения левой и правой сторон прямоугольника.</param>
      <param name="height">Степень увеличения или уменьшения верхней и нижней сторон прямоугольника.</param>
      <exception cref="T:System.InvalidOperationException">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary>Создает прямоугольник, который получается в результате увеличения или уменьшения данного прямоугольника с указанным изменением ширины и высоты по всем направлениям. </summary>
      <returns>Полученный прямоугольник. </returns>
      <param name="rect">Структура <see cref="T:System.Windows.Rect" />, которую необходимо изменить.</param>
      <param name="width">Степень увеличения или уменьшения левой и правой сторон прямоугольника.</param>
      <param name="height">Степень увеличения или уменьшения верхней и нижней сторон прямоугольника.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> является прямоугольником <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary>Возвращает прямоугольник, который получается в результате увеличения данного прямоугольника с указанным коэффициентом <see cref="T:System.Windows.Size" /> по всем направлениям. </summary>
      <returns>Полученный прямоугольник.</returns>
      <param name="rect">Структура <see cref="T:System.Windows.Rect" />, которую необходимо изменить.</param>
      <param name="size">Указывает степень расширения прямоугольника.Свойство <see cref="P:System.Windows.Size.Width" /> структуры <see cref="T:System.Windows.Size" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Left" /> и <see cref="P:System.Windows.Rect.Right" />.Свойство <see cref="P:System.Windows.Size.Height" /> структуры <see cref="T:System.Windows.Size" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Top" /> и <see cref="P:System.Windows.Rect.Bottom" /> прямоугольника.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rect" /> является прямоугольником <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary>Расширяет прямоугольник во всех направлениях с использованием указанного значения <see cref="T:System.Windows.Size" />. </summary>
      <param name="size">Указывает степень расширения прямоугольника.Свойство <see cref="P:System.Windows.Size.Width" /> структуры <see cref="T:System.Windows.Size" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Left" /> и <see cref="P:System.Windows.Rect.Right" />.Свойство <see cref="P:System.Windows.Size.Height" /> структуры <see cref="T:System.Windows.Size" /> указывает степень увеличения значений свойств <see cref="P:System.Windows.Rect.Top" /> и <see cref="P:System.Windows.Rect.Bottom" /> прямоугольника.</param>
      <exception cref="T:System.InvalidOperationException">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary>Находит пересечение текущего прямоугольника и указанного прямоугольника и сохраняет результат как текущий прямоугольник. </summary>
      <param name="rect">Прямоугольник, который должен пересекаться с текущим прямоугольником.</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary>Возвращает пересечение указанных прямоугольников. </summary>
      <returns>Пересечение двух прямоугольников. Если пересечение отсутствует, возвращается значение <see cref="P:System.Windows.Rect.Empty" />.</returns>
      <param name="rect1">Первый прямоугольник для сравнения.</param>
      <param name="rect2">Второй прямоугольник для сравнения.</param>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary>Показывает, пересекается ли указанный прямоугольник с текущим прямоугольником. </summary>
      <returns>Значение true, если указанный прямоугольник пересекается с текущим прямоугольником. В противном случае — значение false.</returns>
      <param name="rect">Проверяемый прямоугольник.</param>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary>Возвращает значение, которое показывает является ли прямоугольник <see cref="P:System.Windows.Rect.Empty" />.</summary>
      <returns>true, если прямоугольник является <see cref="P:System.Windows.Rect.Empty" />. В противном случае — значение false.</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary>Возвращает координату по оси X левой стороны прямоугольника. </summary>
      <returns>Координата по оси X левой стороны прямоугольника.</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary>Получает или задает расположение верхнего левого угла прямоугольника.</summary>
      <returns>Расположение верхнего левого угла прямоугольника.Значение по умолчанию — (0, 0).</returns>
      <exception cref="T:System.InvalidOperationException">Для <see cref="P:System.Windows.Rect.Location" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />. </exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary>Перемещает прямоугольник на указанную величину по горизонтали и вертикали. </summary>
      <param name="offsetX">Степень смещения прямоугольника по горизонтали.</param>
      <param name="offsetY">Степень смещения прямоугольника по вертикали.</param>
      <exception cref="T:System.InvalidOperationException">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary>Возвращает прямоугольник, который получается в результате смещения указанного прямоугольника на заданные значения по горизонтали и вертикали. </summary>
      <returns>Полученный прямоугольник.</returns>
      <param name="rect">Перемещаемый прямоугольник.</param>
      <param name="offsetX">Горизонтальное смещение нового прямоугольника.</param>
      <param name="offsetY">Вертикальное смещение нового прямоугольника.</param>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="rect" /> имеет значение <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary>Возвращает прямоугольник, который получается в результате смещения указанного прямоугольника по заданному вектору. </summary>
      <returns>Полученный прямоугольник.</returns>
      <param name="rect">Исходный прямоугольник.</param>
      <param name="offsetVector">Вектор, который показывает степень горизонтального и вертикального смещения нового прямоугольника.</param>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="rect" /> имеет значение <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary>Перемещает прямоугольник по указанному вектору. </summary>
      <param name="offsetVector">Вектор, который показывает степень горизонтального и вертикального смещения прямоугольника.</param>
      <exception cref="T:System.InvalidOperationException">Этот метод вызывается для прямоугольника <see cref="P:System.Windows.Rect.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary>Проверяет точное равенство двух прямоугольников.</summary>
      <returns>true, если прямоугольники имеют одинаковые значения свойств <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />; в противном случае — false.</returns>
      <param name="rect1">Первый прямоугольник для сравнения.</param>
      <param name="rect2">Второй прямоугольник для сравнения.</param>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary>Проверяет неравенство двух прямоугольников.  </summary>
      <returns>true, если прямоугольники не имеют одинаковые значения свойств <see cref="P:System.Windows.Rect.Location" /> и <see cref="P:System.Windows.Rect.Size" />. В противном случае — значение false.</returns>
      <param name="rect1">Первый прямоугольник для сравнения.</param>
      <param name="rect2">Второй прямоугольник для сравнения.</param>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary>Создает новый прямоугольник из заданного строкового представления. </summary>
      <returns>Полученный прямоугольник.</returns>
      <param name="source">Строковое представление прямоугольника имеет следующий формат: "x, y, ширина, высота".</param>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary>Возвращает координату по оси X правой стороны прямоугольника.  </summary>
      <returns>Координата по оси X правой стороны прямоугольника.</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary>Умножает размер текущего прямоугольника на указанные значения x и y.</summary>
      <param name="scaleX">Коэффициент масштабирования по оси X.</param>
      <param name="scaleY">Коэффициент масштабирования по оси Y.</param>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary>Получает или задает ширину и высоту прямоугольника. </summary>
      <returns>Структура <see cref="T:System.Windows.Size" />, которая определяет высоту и ширину прямоугольника.</returns>
      <exception cref="T:System.InvalidOperationException">Для <see cref="P:System.Windows.Rect.Size" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />. </exception>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Форматирует значение текущего экземпляра с использованием заданного формата.</summary>
      <returns>Строковое представление прямоугольника.</returns>
      <param name="format">Используемый формат.-или- Пустая ссылка (Nothing в Visual Basic) для использования формата по умолчанию, определенного для типа реализации<see cref="T:System.IFormattable" />. </param>
      <param name="provider">Поставщик, используемый для форматирования значения.-или- Пустая ссылка (Nothing в Visual Basic) для получения сведений о формате чисел из текущего установленного в операционной системе языкового стандарта. </param>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary>Возвращает координату по оси Y верхней стороны прямоугольника. </summary>
      <returns>Координата по оси Y верхней стороны прямоугольника.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary>Возвращает расположение верхнего левого угла прямоугольника. </summary>
      <returns>Расположение верхнего левого угла прямоугольника.</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary>Возвращает расположение верхнего правого угла прямоугольника. </summary>
      <returns>Расположение верхнего правого угла прямоугольника.</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary>Возвращает строковое представление прямоугольника. </summary>
      <returns>Строковое представление текущего прямоугольника.Строка имеет следующий формат: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary>Возвращает строковое представление прямоугольника с использованием указанного поставщика формата. </summary>
      <returns>Строковое представление текущего прямоугольника, которое определяется указанным поставщиком формата.</returns>
      <param name="provider">Сведения о форматировании, связанные с языком и региональными параметрами.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary>Преобразовывает прямоугольник с использованием заданной матрицы. </summary>
      <param name="matrix">Матрица, которая определяет применяемое преобразование.</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary>Возвращает прямоугольник, который получается в результате применения указанной матрицы к заданному прямоугольнику. </summary>
      <returns>Прямоугольник, полученный в результате операции.</returns>
      <param name="rect">Прямоугольник, который является основой для преобразования.</param>
      <param name="matrix">Матрица, которая определяет применяемое преобразование.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary>Увеличивает текущий прямоугольник на величину, достаточную, чтобы включить указанную точку. </summary>
      <param name="point">Точка, которую необходимо включить.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary>Увеличивает текущий прямоугольник на величину, достаточную, чтобы включить указанный прямоугольник. </summary>
      <param name="rect">Прямоугольник, который необходимо включить.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary>Создает прямоугольник, который достаточно большой, чтобы включить указанный прямоугольник и указанную точку. </summary>
      <returns>Прямоугольник, который достаточно большой, чтобы включить указанный прямоугольник и указанную точку.</returns>
      <param name="rect">Прямоугольник, который необходимо включить.</param>
      <param name="point">Точка, которую необходимо включить.</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary>Создает прямоугольник, который достаточно большой, чтобы включить два указанных прямоугольника. </summary>
      <returns>Полученный прямоугольник.</returns>
      <param name="rect1">Первый прямоугольник, который необходимо включить.</param>
      <param name="rect2">Второй прямоугольник, который необходимо включить.</param>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary>Получает или задает ширину прямоугольника.  </summary>
      <returns>Положительное число, которое представляет ширину прямоугольника.Значение по умолчанию — 0.</returns>
      <exception cref="T:System.ArgumentException">Свойству <see cref="P:System.Windows.Rect.Width" /> присваивается отрицательное значение.</exception>
      <exception cref="T:System.InvalidOperationException">Для <see cref="P:System.Windows.Rect.Width" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />. </exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary>Получает или задает координату по оси X левой стороны прямоугольника. </summary>
      <returns>Координата по оси X левой стороны прямоугольника.</returns>
      <exception cref="T:System.InvalidOperationException">Для <see cref="P:System.Windows.Rect.X" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />. </exception>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary>Получает или задает координату по оси Y верхней стороны прямоугольника. </summary>
      <returns>Координата по оси Y верхней стороны прямоугольника.</returns>
      <exception cref="T:System.InvalidOperationException">Для <see cref="P:System.Windows.Rect.Y" /> указывается прямоугольник <see cref="P:System.Windows.Rect.Empty" />. </exception>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary>Converts instances of other types to and from instances of <see cref="T:System.Windows.Rect" />.</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.RectConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли объект быть преобразован из заданного типа в экземпляр <see cref="T:System.Windows.Rect" />.</summary>
      <returns>Значение true, если тип можно преобразовать в <see cref="T:System.Windows.Rect" />. В противном случае — значение false.</returns>
      <param name="context">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="sourceType">Тип источника, для которого определяется возможность преобразования.</param>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, можно ли <see cref="T:System.Windows.Rect" /> преобразовать в указанный тип. </summary>
      <returns>Значение true, если <see cref="T:System.Windows.Rect" /> можно преобразовать в тип <paramref name="destinationType" />. В противном случае — значение false.</returns>
      <param name="context">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="destinationType">The desired type this <see cref="T:System.Windows.Rect" /> is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Пытается преобразовать заданный объект в <see cref="T:System.Windows.Rect" />. </summary>
      <returns>
        <see cref="T:System.Windows.Rect" />, созданный в результате преобразования <paramref name="value" />.</returns>
      <param name="context">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture">Информация о языке и региональных параметрах, которая учитывается при выполнении преобразования.</param>
      <param name="value">Преобразуемый объект.</param>
      <exception cref="T:System.NotSupportedException">Происходит, если заданный объект имеет значение NULL или является типом, который нельзя преобразовать в <see cref="T:System.Windows.Rect" />.</exception>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary> Пытается преобразовать <see cref="T:System.Windows.Rect" /> в заданный тип. </summary>
      <returns>The object created from converting this <see cref="T:System.Windows.Rect" />.</returns>
      <param name="context">Предоставляет контекстную информацию, необходимую для выполнения преобразования.</param>
      <param name="culture">Региональные особенности, учитываемые при выполнении преобразования.</param>
      <param name="value">Преобразуемый объект <see cref="T:System.Windows.Rect" />.</param>
      <param name="destinationType">The type to convert this <see cref="T:System.Windows.Rect" /> to.</param>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="value" /> имеет значение null.- или - <paramref name="value" /> is not a <see cref="T:System.Windows.Rect" />.- or - Параметр <paramref name="destinationType" /> не является одним из допустимых типов для преобразования.</exception>
    </member>
    <member name="T:System.Windows.Size">
      <summary>Реализует структуру, которая используется для описания элемента <see cref="T:System.Windows.Size" /> объекта. </summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Size" /> и присваивает ему начальные значения <paramref name="width" /> и <paramref name="height" />.</summary>
      <param name="width">Исходная ширина экземпляра структуры <see cref="T:System.Windows.Size" />.</param>
      <param name="height">Исходная высота экземпляра структуры <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary>Возвращает значение, которое представляет статический пустой объект <see cref="T:System.Windows.Size" />. </summary>
      <returns>Пустой экземпляр <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary>Сравнивает на равенство объект с экземпляром <see cref="T:System.Windows.Size" />. </summary>
      <returns>true, если размеры равны, в противном случае — false.</returns>
      <param name="o">Объект <see cref="T:System.Object" /> для сравнения.</param>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary>Сравнивает значение с экземпляром <see cref="T:System.Windows.Size" /> на наличие равенства. </summary>
      <returns>true, если экземпляры <see cref="T:System.Windows.Size" /> равны, в противном случае — false.</returns>
      <param name="value">Размер для сравнения с текущим экземпляром <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary>Сравнивает на равенство два экземпляра <see cref="T:System.Windows.Size" />. </summary>
      <returns>true, если экземпляры <see cref="T:System.Windows.Size" /> равны, в противном случае — false.</returns>
      <param name="size1">Первый экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
      <param name="size2">Второй экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary>Получает хэш-код для этого экземпляра <see cref="T:System.Windows.Size" />. </summary>
      <returns>Хэш-код для данного экземпляра <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary>Получает или задает свойство <see cref="P:System.Windows.Size.Height" /> данного экземпляра <see cref="T:System.Windows.Size" />. </summary>
      <returns>Свойство <see cref="P:System.Windows.Size.Height" /> данного экземпляра <see cref="T:System.Windows.Size" />.Значение по умолчанию — 0.Значение не может быть отрицательным.</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary>Возвращает значение, которое показывает, является ли данный экземпляр <see cref="T:System.Windows.Size" /> свойством <see cref="P:System.Windows.Size.Empty" />. </summary>
      <returns>Значение true, если данный экземпляр размера является свойством <see cref="P:System.Windows.Size.Empty" />; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary>Сравнивает на равенство два экземпляра <see cref="T:System.Windows.Size" />. </summary>
      <returns>значение true, если два экземпляра <see cref="T:System.Windows.Size" /> равны; в противном случае — false.</returns>
      <param name="size1">Первый экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
      <param name="size2">Второй экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary>Явно преобразует экземпляр <see cref="T:System.Windows.Size" /> в экземпляр <see cref="T:System.Windows.Vector" />. </summary>
      <returns>Объект <see cref="T:System.Windows.Vector" />, значение которого равно значению данного экземпляра <see cref="T:System.Windows.Size" />.</returns>
      <param name="size">Преобразуемое значение <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary>Явно преобразует экземпляр <see cref="T:System.Windows.Size" /> в экземпляр <see cref="T:System.Windows.Point" />. </summary>
      <returns>Экземпляр <see cref="T:System.Windows.Point" />, чье значение равно данному экземпляру <see cref="T:System.Windows.Size" />.</returns>
      <param name="size">Преобразуемое значение <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Windows.Size" /> на предмет их неравенства. </summary>
      <returns>true если экземпляры <see cref="T:System.Windows.Size" /> не равны; в противном случае — значение false.</returns>
      <param name="size1">Первый экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
      <param name="size2">Второй экземпляр <see cref="T:System.Windows.Size" /> для сравнения.</param>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary>Возвращает экземпляр <see cref="T:System.Windows.Size" /> из преобразованного объекта <see cref="T:System.String" />. </summary>
      <returns>Экземпляр класса <see cref="T:System.Windows.Size" />.</returns>
      <param name="source">Значение <see cref="T:System.String" />, которое преобразовывается в значение <see cref="T:System.Windows.Size" />.</param>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Данный тип или элемент поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода.</summary>
      <returns> Значение текущего экземпляра в указанном формате.</returns>
      <param name="format"> Используемый формат.</param>
      <param name="provider"> Поставщик, используемый для форматирования значения.</param>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary>Возвращает строку <see cref="T:System.String" />, которая представляет этот объект <see cref="T:System.Windows.Size" />. </summary>
      <returns>Строка <see cref="T:System.String" />, которая представляет данный экземпляр объекта <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary>Возвращает строку <see cref="T:System.String" />, которая представляет этот экземпляр объекта <see cref="T:System.Windows.Size" />. </summary>
      <returns>Строка <see cref="T:System.String" />, которая представляет данный объект <see cref="T:System.Windows.Size" />.</returns>
      <param name="provider">Объект, который обеспечивает метод управления форматированием.</param>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary>Получает или задает свойство <see cref="P:System.Windows.Size.Width" /> данного экземпляра <see cref="T:System.Windows.Size" />. </summary>
      <returns>Свойство <see cref="P:System.Windows.Size.Width" /> данного экземпляра <see cref="T:System.Windows.Size" />.Значение по умолчанию — 0.Значение не может быть отрицательным.</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary>Преобразует экземпляры других типов в экземпляры класса <see cref="T:System.Windows.Size" />. </summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.SizeConverter" />. </summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли класс быть преобразован из заданного типа в экземпляр структуры <see cref="T:System.Windows.Size" />. </summary>
      <returns>Значение true, если <paramref name="sourceType" /> может быть преобразован в экземпляр <see cref="T:System.Windows.Size" />; в противном случае — false.</returns>
      <param name="context">Предоставляет контекстные сведения по компоненту.</param>
      <param name="sourceType">Идентифицирует тип оцениваемых данных для преобразования.</param>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли экземпляр <see cref="T:System.Windows.Size" /> быть преобразован в другой тип. </summary>
      <returns>Значение true, если данный экземпляр <see cref="T:System.Windows.Size" /> может быть преобразован в <paramref name="destinationType" />; в противном случае — false.</returns>
      <param name="context">Предоставляет контекстные сведения по компоненту.</param>
      <param name="destinationType">Идентифицирует тип оцениваемых данных для преобразования.</param>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Пытается преобразовать указанный объект в экземпляр <see cref="T:System.Windows.Size" />.</summary>
      <returns>Экземпляр структуры <see cref="T:System.Windows.Size" />, созданный из преобразованного параметра <paramref name="source" />.</returns>
      <param name="context">Предоставляет контекстные сведения по компоненту.</param>
      <param name="culture">Соответствующая языку и региональным параметрам информация, которую следует учитывать при преобразовании.</param>
      <param name="value">Преобразуемый исходный объект.</param>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Пытается преобразовать экземпляр <see cref="T:System.Windows.Size" /> в заданный тип. </summary>
      <returns>Объект, созданный из преобразованного экземпляра <see cref="T:System.Windows.Size" />.</returns>
      <param name="context">Предоставляет контекстные сведения по компоненту.</param>
      <param name="culture">Соответствующая языку и региональным параметрам информация, которую следует учитывать при преобразовании.</param>
      <param name="value">Экземпляр <see cref="T:System.Windows.Size" /> для преобразования.</param>
      <param name="destinationType">Тип, в который преобразуется данный экземпляр <see cref="T:System.Windows.Size" />.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> является null или не является экземпляром <see cref="T:System.Windows.Size" />, или если <paramref name="destinationType" /> не является действительным конечным типом.</exception>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary>Предоставляет экран запуска для приложения Windows Presentation Foundation (WPF). </summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.SplashScreen" /> с указанной сборкой ресурсов. </summary>
      <param name="resourceAssembly">Сборка, содержащая внедренный ресурс.</param>
      <param name="resourceName">Имя внедренного ресурса.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.SplashScreen" /> с указанным ресурсом. </summary>
      <param name="resourceName">Имя внедренного ресурса.</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary>Закрывает экран-заставку. </summary>
      <param name="fadeoutDuration">Объект <see cref="T:System.TimeSpan" />, который определяет длительность периода времени, в течение которого исчезает экран-заставка после запуска операции закрытия. </param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary>Отображает экран-заставку. </summary>
      <param name="autoClose">Значение true, если экран-заставка автоматически закрывается; значение false, если экран-заставка закрывается вручную.</param>
      <exception cref="T:System.IO.IOException">Не удалось найти ресурс, указанный в конструкторе. </exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary>Отображает экран-заставку.</summary>
      <param name="autoClose">Значение true, если экран-заставка автоматически закрывается; значение false, если экран-заставка закрывается вручную.</param>
      <param name="topMost">Значение true, если для окна экрана-заставки должен использоваться стиль WS_EX_TOPMOST; в противном случае — значение false.</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary>Представляет метод, используемый как ответ, оценивающий эффективное значение свойства зависимостей.</summary>
      <returns>true если значение допустимо; false если значение не является допустимым.</returns>
      <param name="value">Значение для оценки.</param>
    </member>
    <member name="T:System.Windows.Vector">
      <summary>Представляет смещение в пространстве двухмерный. </summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Vector" />. </summary>
      <param name="x">Смещение <see cref="P:System.Windows.Vector.X" /> нового <see cref="T:System.Windows.Vector" />.</param>
      <param name="y">Смещение <see cref="P:System.Windows.Vector.Y" /> нового <see cref="T:System.Windows.Vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary>Перемещает указанную точку по заданному вектору и возвращает результат в виде точки.</summary>
      <returns>Результат перемещения <paramref name="point" /> по <paramref name="vector" />.</returns>
      <param name="vector">Степень перемещения заданной точки.</param>
      <param name="point">Точка, которую необходимо переместить.</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary>Складывает два вектора и возвращает результат в виде структуры <see cref="T:System.Windows.Vector" />. </summary>
      <returns>Сумма <paramref name="vector1" /> и <paramref name="vector2" />.</returns>
      <param name="vector1">Первый вектор, который необходимо сложить.</param>
      <param name="vector2">Второй вектор, который необходимо сложить.</param>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary>Извлекает угол (в градусах) между двумя заданными векторами. </summary>
      <returns>Угол в градусах между <paramref name="vector1" /> и <paramref name="vector2" />.</returns>
      <param name="vector1">Первой оцениваемый вектор.</param>
      <param name="vector2">Второй оцениваемый вектор.</param>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary>Вычисляет векторное произведение для двух векторов. </summary>
      <returns>Векторное произведение <paramref name="vector1" /> и <paramref name="vector2" />.При вычислении векторного произведения используется следующая формула:(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</returns>
      <param name="vector1">Первой оцениваемый вектор.</param>
      <param name="vector2">Второй оцениваемый вектор.</param>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary>Вычисляет определитель двух векторов.</summary>
      <returns>Определитель <paramref name="vector1" /> и <paramref name="vector2" />.</returns>
      <param name="vector1">Первой оцениваемый вектор.</param>
      <param name="vector2">Второй оцениваемый вектор.</param>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary>Делит указанный вектор на заданный скаляр и возвращает результат в виде <see cref="T:System.Windows.Vector" />.</summary>
      <returns>Результат деления <paramref name="vector" /> на <paramref name="scalar" />.</returns>
      <param name="vector">Структура вектора, который необходимо разделить.</param>
      <param name="scalar">Делитель <paramref name="vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary>Определяет, является ли указанный объект <see cref="T:System.Object" /> структурой <see cref="T:System.Windows.Vector" />. Если это так, проверяется, имеет ли структура те же значения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" />, что и данный вектор.</summary>
      <returns>Значение true, если <paramref name="o" /> является <see cref="T:System.Windows.Vector" /> и имеет те же значения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" />, что и данный вектор. В противном случае — значение false.</returns>
      <param name="o">Сравниваемый вектор.</param>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary> Сравнивает два вектора на наличие равенства.</summary>
      <returns>Значение true, если <paramref name="value" /> имеет те же значения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" />, что и данный вектор. В противном случае — значение false.</returns>
      <param name="value">Вектор, который необходимо сравнить с данным вектором.</param>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary>Сравнивает два указанных вектора на наличие равенства.</summary>
      <returns>Значение true, если компоненты <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /><paramref name="vector1" /> и <paramref name="vector2" /> равны. В противном случае — значение false.</returns>
      <param name="vector1">Первый сравниваемый вектор.</param>
      <param name="vector2">Второй сравниваемый вектор.</param>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary>Возвращает хэш-код данного вектора. </summary>
      <returns>Хэш-код данного экземпляра.</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary>Возвращает длину данного вектора. </summary>
      <returns>Длина данного вектора. </returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary>Возвращает квадрат длины данного вектора. </summary>
      <returns>Квадрат <see cref="P:System.Windows.Vector.Length" /> данного вектора.</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary> Умножает указанный скаляр на заданный вектор и возвращает результат в виде <see cref="T:System.Windows.Vector" />. </summary>
      <returns>Результат умножения <paramref name="scalar" /> на <paramref name="vector" />.</returns>
      <param name="scalar">Скаляр-множитель.</param>
      <param name="vector">Вектор, который необходимо умножить.</param>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary> Умножает указанный вектор на заданный скаляр и возвращает результат в виде <see cref="T:System.Windows.Vector" />. </summary>
      <returns>Результат умножения <paramref name="vector" /> на <paramref name="scalar" />.</returns>
      <param name="vector">Вектор, который необходимо умножить.</param>
      <param name="scalar">Скаляр-множитель.</param>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary>Преобразует координатное пространство указанного вектора с использованием заданного значения <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Результат преобразования <paramref name="vector" /> посредством <paramref name="matrix" />.</returns>
      <param name="vector">Преобразуемая векторная структура.</param>
      <param name="matrix">Преобразование, которое применяется к <paramref name="vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary>Вычисляет скалярное произведение двух заданных векторов и возвращает результат в виде <see cref="T:System.Double" />.</summary>
      <returns>Объект <see cref="T:System.Double" />, который содержит скалярное произведение <paramref name="vector1" /> и <paramref name="vector2" />, вычисляемое с использованием следующей формулы: (vector1.X * vector2.X) + (vector1.Y * vector2.Y) </returns>
      <param name="vector1">Первый вектор, который необходимо умножить.</param>
      <param name="vector2">Вторая векторная структура, которую необходимо умножить.</param>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary>Отрицает данный вектор.Вектор имеет ту же величину, что и раньше, но теперь его направление изменилось на противоположное.</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary> Нормализует данный вектор. </summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary> Перемещает точку по заданному вектору и возвращает результат в виде точки. </summary>
      <returns>Результат перемещения <paramref name="point" /> по <paramref name="vector" />.</returns>
      <param name="vector">Вектор, используемый для перемещения <paramref name="point" />.</param>
      <param name="point">Точка, которую необходимо переместить.</param>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary>Складывает два вектора и возвращает результат в виде вектора. </summary>
      <returns>Сумма <paramref name="vector1" /> и <paramref name="vector2" />. </returns>
      <param name="vector1">Первый вектор, который необходимо сложить.</param>
      <param name="vector2">Второй вектор, который необходимо сложить.</param>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary> Делит указанный вектор на заданный скаляр и возвращает результирующий вектор.</summary>
      <returns>Результат деления <paramref name="vector" /> на <paramref name="scalar" />.</returns>
      <param name="vector">Вектор, который необходимо разделить.</param>
      <param name="scalar">Скаляр, на который делится <paramref name="vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary> Сравнивает два вектора на наличие равенства.</summary>
      <returns>Значение true, если компоненты <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /><paramref name="vector1" /> и <paramref name="vector2" /> равны. В противном случае — значение false.</returns>
      <param name="vector1">Первый сравниваемый вектор.</param>
      <param name="vector2">Второй сравниваемый вектор.</param>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary>Создает объект <see cref="T:System.Windows.Point" /> со значениями <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> данного вектора. </summary>
      <returns>Точка со значениями координат <see cref="P:System.Windows.Point.X" /> и <see cref="P:System.Windows.Point.Y" />, которые равны значениям смещения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /><paramref name="vector" />.</returns>
      <param name="vector">Преобразуемый вектор.</param>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary>Создает <see cref="T:System.Windows.Size" /> из смещений данного вектора.</summary>
      <returns>Объект <see cref="T:System.Windows.Size" />, чье значение <see cref="P:System.Windows.Size.Width" /> равно абсолютному значению свойства <see cref="P:System.Windows.Vector.X" /> данного вектора, а значение <see cref="P:System.Windows.Size.Height" /> равно абсолютному значению свойства <see cref="P:System.Windows.Vector.Y" /> данного вектора.</returns>
      <param name="vector">Преобразуемый вектор.</param>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary>Сравнивает два вектора на наличие неравенства.</summary>
      <returns>Значение true, если компоненты <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /><paramref name="vector1" /> и <paramref name="vector2" /> отличны. В противном случае — значение false.</returns>
      <param name="vector1">Первый сравниваемый вектор.</param>
      <param name="vector2">Второй сравниваемый вектор.</param>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary> Умножает указанный скаляр на заданный вектор и возвращает результирующий вектор. </summary>
      <returns>Результат умножения <paramref name="scalar" /> на <paramref name="vector" />.</returns>
      <param name="scalar">Скаляр-множитель.</param>
      <param name="vector">Вектор, который необходимо умножить.</param>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary>Умножает указанный скаляр на заданный скаляр и возвращает результирующий вектор. </summary>
      <returns>Результат умножения <paramref name="vector" /> на <paramref name="scalar" />.</returns>
      <param name="vector">Вектор, который необходимо умножить.</param>
      <param name="scalar">Скаляр-множитель.</param>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary> Преобразует координатное пространство указанного вектора с использованием заданного значения <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Результат преобразования <paramref name="vector" /> посредством <paramref name="matrix" />.</returns>
      <param name="vector">Преобразуемый вектор.</param>
      <param name="matrix">Преобразование, которое применяется к <paramref name="vector" />.</param>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary> Вычисляет скалярное произведение двух заданных векторных структур и возвращает результат в виде <see cref="T:System.Double" />.</summary>
      <returns>Возвращает объект, <see cref="T:System.Double" />, который содержит скалярное произведение <paramref name="vector1" /> и <paramref name="vector2" />, вычисляемое с использованием следующей формулы:vector1.X * vector2.X + vector1.Y * vector2.Y</returns>
      <param name="vector1">Первый вектор, который необходимо умножить.</param>
      <param name="vector2">Второй вектор, который необходимо умножить.</param>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary>Вычитает один указанный вектор из другого. </summary>
      <returns>Разность между <paramref name="vector1" /> и <paramref name="vector2" />. </returns>
      <param name="vector1">Вектор, из которого вычитается <paramref name="vector2" />. </param>
      <param name="vector2">Вектор, который вычитается из <paramref name="vector1" />.</param>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary>Отрицает заданный вектор. </summary>
      <returns>Вектор со значениями <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" />, которые противоположны значениям <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /><paramref name="vector" />.</returns>
      <param name="vector">Вектор, для которого необходимо вычислить противоположный вектор.</param>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary>Преобразовывает строковое представление вектора в эквивалентную структуру <see cref="T:System.Windows.Vector" />. </summary>
      <returns>Эквивалентная структура <see cref="T:System.Windows.Vector" />.</returns>
      <param name="source">Строковое представление вектора.</param>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary>Вычитает указанный вектор из другого заданного вектора. </summary>
      <returns>Разность между <paramref name="vector1" /> и <paramref name="vector2" />. </returns>
      <param name="vector1">Вектор, из которого вычитается <paramref name="vector2" />.</param>
      <param name="vector2">Вектор, который вычитается из <paramref name="vector1" />.</param>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Этот член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования в коде.Описание этого члена см. в разделе <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>Строка, содержащая значение текущего экземпляра в заданном формате. </returns>
      <param name="format">Строка, задающая используемый формат. -или- Значение null для использования формата по умолчанию, определенного для типа реализации <see cref="T:System.IFormattable" />.</param>
      <param name="provider">Объект IFormatProvider, используемый для форматирования значения. — или — Значение null для получения сведений о форматировании чисел на основе текущего значения параметра языкового стандарта операционной системы.</param>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary>Возвращает строковое представление данной структуры <see cref="T:System.Windows.Vector" />.</summary>
      <returns>Строка, которая представляет значения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> данного объекта <see cref="T:System.Windows.Vector" />.</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary>Возвращает строковое представление данной структуры <see cref="T:System.Windows.Vector" /> с заданными данными форматирования. </summary>
      <returns>Строка, которая представляет значения <see cref="P:System.Windows.Vector.X" /> и <see cref="P:System.Windows.Vector.Y" /> данного объекта <see cref="T:System.Windows.Vector" />.</returns>
      <param name="provider">Сведения о форматировании, связанные с языком и региональными параметрами.</param>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary>Получает или задает компонент <see cref="P:System.Windows.Vector.X" /> данного вектора. </summary>
      <returns>Компонент <see cref="P:System.Windows.Vector.X" /> данного вектора.Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary>Получает или задает компонент <see cref="P:System.Windows.Vector.Y" /> данного вектора. </summary>
      <returns>Компонент <see cref="P:System.Windows.Vector.Y" /> данного вектора.Значение по умолчанию — 0.</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary> Преобразует экземпляры других типов в <see cref="T:System.Windows.Vector" /> и наоборот. </summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Vector" />. </summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Указывает, может ли объект быть преобразован из заданного типа в экземпляр <see cref="T:System.Windows.Vector" />.</summary>
      <returns>Значение true, если объекты заданного типа могут быть преобразованы в <see cref="T:System.Windows.Vector" />; в противном случае — false.</returns>
      <param name="context">Описывает контекстную информацию о типе.</param>
      <param name="sourceType">Исходный тип (<see cref="T:System.Type" />), запрашиваемый для поддержки преобразования.</param>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, могут ли экземпляры <see cref="T:System.Windows.Vector" /> быть преобразованы в указанный тип. </summary>
      <returns>true, если экземпляры <see cref="T:System.Windows.Vector" /> могут быть преобразованы в <paramref name="destinationType" />; в противном случае — false.</returns>
      <param name="context">Описывает контекстную информацию о типе.</param>
      <param name="destinationType">Требуемый тип, для которого <see cref="T:System.Windows.Vector" /> проверяется на возможность преобразования.</param>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует указанный объект в <see cref="T:System.Windows.Vector" />. </summary>
      <returns>
        <see cref="T:System.Windows.Vector" />, созданный в результате преобразования <paramref name="value" />.</returns>
      <param name="context">Описывает контекстную информацию типа.</param>
      <param name="culture">Определяет объект <see cref="T:System.Globalization.CultureInfo" /> преобразуемого типа.</param>
      <param name="value">Преобразуемый объект.</param>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary> Преобразует заданную структуру <see cref="T:System.Windows.Vector" /> в заданный тип. </summary>
      <returns>Объект, созданный в результате преобразования данного <see cref="T:System.Windows.Vector" />.</returns>
      <param name="context">Описывает контекстную информацию о типе.</param>
      <param name="culture">Определяет объект <see cref="T:System.Globalization.CultureInfo" /> преобразуемого типа.</param>
      <param name="value">Преобразуемый объект <see cref="T:System.Windows.Vector" />.</param>
      <param name="destinationType">Тип, в который преобразуется данный <see cref="T:System.Windows.Vector" />.</param>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary>Предоставляет базовый класс для диспетчера событий, используемого в шаблоне WeakEvent.Диспетчер добавляет и удаляет прослушиватели для событий (или обратных вызовов), которые также используют этот шаблон.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary>Обеспечивает инициализацию значений базового класса при использовании в качестве инициализатора конструктором производного класса.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary>Доставляет управляемое событие к каждому прослушивателю.</summary>
      <param name="sender">Объект, в котором обрабатывается событие.</param>
      <param name="args">Данные события для доставки события.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary>Доставляет управляемое событие к каждому прослушивателю из предоставленного списка.</summary>
      <param name="sender">Объект, в котором обрабатывается событие.</param>
      <param name="args">Данные события.</param>
      <param name="list">Предоставленный <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary>Возвращает реализацию <see cref="T:System.Windows.WeakEventManager" />, используемую для указанного типа.</summary>
      <returns>Соответствующая реализация <see cref="T:System.Windows.WeakEventManager" />.</returns>
      <param name="managerType">Тип, для которого необходимо получить <see cref="T:System.Windows.WeakEventManager" />.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary>Получает или задает данные, сохраняемые для указанного источника.</summary>
      <returns>Дата, сохраняемая диспетчером для данного источника.</returns>
      <param name="source">Индекс (начиная с нуля) запрошенного источника.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary>Добавляет указанный прослушиватель к указанному источнику для управляемого события.</summary>
      <param name="source">Источник, к которому прикрепляются прослушиватели.</param>
      <param name="listener">Прослушивающий класс (который должен реализовать <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary>Удаляет предварительно добавленный прослушиватель из указанного источника.</summary>
      <param name="source">Источник, из которого удаляются прослушиватели.</param>
      <param name="listener">Прослушивающий класс (который должен реализовать <see cref="T:System.Windows.IWeakEventListener" />).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary>Удаляет неактивные записи прослушивателя из списка даты для предоставленного источника.Возвращает значение true, если некоторые записи были фактически удалены из списка.</summary>
      <returns>true, если некоторые записи были фактически удалены;в противном случае — false.</returns>
      <param name="source">Источник для прослушиваемых событий.</param>
      <param name="data">Данные для проверки.Ожидается, что данный объект будет реализацией <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
      <param name="purgeAll">Установите значение true, чтобы остановить прослушивание <paramref name="source" />, и полностью уберите все записи из раздела <paramref name="data" />.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary>Устанавливает блокировку на чтение для базовой таблицы данных и возвращает <see cref="T:System.IDisposable" />.</summary>
      <returns>Объект, который может использоваться для установки блокировки на члены таблицы данных и затем может быть корректно удален, с помощью конструкции using.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary>Удаляет все прослушиватели из заданного источника.</summary>
      <param name="source">Источник для удаления информации о прослушивателях.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary>Запрашивает, чтобы очистка ненужных записей из базового списка прослушивателей выполнялась в потоке с более низким приоритетом.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary>Задает текущий диспетчер для заданного типа диспетчера.</summary>
      <param name="managerType">Тип, для которого задается новый диспетчер событий</param>
      <param name="manager">Новый диспетчер событий.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary>При переопределении в производном классе начинает прослушивать управляемые события.После первого вызова метода <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" /> диспетчер должен быть в состоянии вызова метода <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> или <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />, всякий раз при обработке существенного события от указанного источника.</summary>
      <param name="source">Источник, прослушивание которого необходимо начать.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary>При переопределении в производном классе прекращает прослушивать указанный источник управляемого события.</summary>
      <param name="source">Источник, прослушивание которого необходимо прекратить.</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary>Устанавливает блокировку на запись для базовой таблицы данных и возвращает <see cref="T:System.IDisposable" />.</summary>
      <returns>Объект, который может использоваться для установки блокировки на члены таблицы данных и затем может быть корректно удален, с помощью конструкции using.</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary>Предоставляет встроенный список-коллекцию для хранения прослушивателей <see cref="T:System.Windows.WeakEventManager" />.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.WeakEventManager.ListenerList" /> class.</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.WeakEventManager.ListenerList" /> class with the specified initial capacity.</summary>
      <param name="capacity">Число элементов, которые следует разместить в исходном списке.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary>Добавляет элемент-прослушиватель в список <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <param name="listener">Элемент-прослушиватель для добавления в список <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary>Объявляет список как используемый.Это предотвращает прямые изменения списка во время выполнения итерации по его элементам.</summary>
      <returns>true, если список уже объявлен как используемый; в противном случае — false.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary>Создает модифицируемый клон данного объекта <see cref="T:System.Windows.WeakEventManager.ListenerList" />, делая глубокие копии значений этого объекта. </summary>
      <returns>Модифицируемая копия текущего объекта.Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клонированного объекта будет содержать значение false, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта содержало значение true.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary>Возвращает число элементов, содержащихся в списке <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns>The number of items contained in the <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary>Возвращает значение, представляющее пустой список с целью сравнения.</summary>
      <returns>Представление пустого списка.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary>Снимает состояние блокировки, инициированное методом <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />.</summary>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary>Возвращает значение, объявляющее, является ли данный список <see cref="T:System.Windows.WeakEventManager.ListenerList" /> пустым.</summary>
      <returns>true, если список пуст; в противном случае — false.</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary>Получает или задает конкретный элемент-прослушиватель из списка <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</summary>
      <returns>Элемент по указанному индексу или указатель null, если по этому индексу нет элемента.</returns>
      <param name="index">Индекс прослушивателя в списке (начиная с нуля).</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary>Проверяет, используется ли в данный момент указанный список. и если это так, устанавливает ссылочный параметр списка на его копию вместо оригинала.</summary>
      <returns>true if the provided list was in use at the time of call and therefore the <paramref name="list" /> parameter reference was reset to be a copy.false if the provided list was not in use, in which case the <paramref name="list" /> parameter reference remains unaltered.</returns>
      <param name="list">Список для проверки состояния использования и потенциального копирования.</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary>Удаляет все записи из списка, в которых базовая цель ссылки представляет собой указатель null.</summary>
      <returns>Возвращает true, если какие-либо записи были очищены; в противном случае — false.</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary>Удаляет первое вхождение элемента-прослушивателя из списка <see cref="T:System.Windows.WeakEventManager.ListenerList" />. </summary>
      <param name="listener">Удаляемый элемент.</param>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary>Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Int32Rect" /> и обратно.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.Int32RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns>Всегда возвращает значение true.</returns>
      <param name="value">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный объект <see cref="T:System.Windows.Int32Rect" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> может быть преобразован в <see cref="T:System.String" />; в противном случае — значение false.</returns>
      <param name="value">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Int32Rect" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.Windows.Int32Rect" /> на основе предоставленного параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемая строка.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует экземпляр <see cref="T:System.Windows.Int32Rect" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление заданного объекта <see cref="T:System.Windows.Int32Rect" />.</returns>
      <param name="value">Объект, преобразуемый в строку.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary>Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Point" /> и обратно.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.PointValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Point" />.</summary>
      <returns>Всегда возвращает значение true.</returns>
      <param name="value">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный объект <see cref="T:System.Windows.Point" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> может быть преобразован в <see cref="T:System.String" />; в противном случае — значение false.</returns>
      <param name="value">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Point" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.Windows.Point" /> на основе предоставленного параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемая строка.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует экземпляр <see cref="T:System.Windows.Point" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление заданного объекта <see cref="T:System.Windows.Point" />.</returns>
      <param name="value">Объект, преобразуемый в строку.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary>Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Rect" /> и обратно.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.RectValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Rect" />.</summary>
      <returns>Всегда возвращает значение true.</returns>
      <param name="value">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный объект <see cref="T:System.Windows.Rect" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> может быть преобразован в <see cref="T:System.String" />; в противном случае — значение false.</returns>
      <param name="value">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Rect" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.Windows.Rect" /> на основе предоставленного параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемая строка.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует экземпляр <see cref="T:System.Windows.Rect" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление заданного объекта <see cref="T:System.Windows.Rect" />.</returns>
      <param name="value">Объект, преобразуемый в строку.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary>Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Size" /> и обратно.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.SizeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Size" />.</summary>
      <returns>Всегда возвращает значение true.</returns>
      <param name="value">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный объект <see cref="T:System.Windows.Size" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> может быть преобразован в <see cref="T:System.String" />; в противном случае — значение false.</returns>
      <param name="value">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Size" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.Windows.Size" /> на основе предоставленного параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемая строка.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует экземпляр <see cref="T:System.Windows.Size" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление заданного объекта <see cref="T:System.Windows.Size" />.</returns>
      <param name="value">Объект, преобразуемый в строку.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary>Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Vector" /> и обратно.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Converters.VectorValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Vector" />.</summary>
      <returns>Всегда возвращает значение true.</returns>
      <param name="value">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный объект <see cref="T:System.Windows.Vector" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> может быть преобразован в <see cref="T:System.String" />; в противном случае — значение false.</returns>
      <param name="value">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Vector" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.Windows.Vector" /> на основе предоставленного параметра <paramref name="value" />.</returns>
      <param name="value">Преобразуемая строка.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует экземпляр объекта <see cref="T:System.Windows.Vector" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление заданного объекта <see cref="T:System.Windows.Vector" />.</returns>
      <param name="value">Объект, преобразуемый в строку.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary>Общий базовый класс и контракт для объектов <see cref="T:System.Windows.Data.DataSourceProvider" />, предоставляющих встроенный механизм выполнения ряда запросов для создания отдельных объектов либо списков объектов, которые можно использовать в качестве объектов источника привязки.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Data.DataSourceProvider" /> class.Этот конструктор является защищенным.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary>Указывает, что должна начаться инициализация этого объекта; неявный вызов метода <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> не выполняется до вызова соответствующего метода <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" />.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary>При переопределении в производном классе базовый класс вызывает этот метод при условии, что были вызваны методы <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> или <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />.Базовый класс задерживает вызов метода, если включена задержка обновления или отключена начальная загрузка.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary>Получает базовый объект данных.</summary>
      <returns>Значение с типом <see cref="T:System.Object" />, которое является базовым объектом данных.</returns>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary>Происходит в том случае, если свойство <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> имеет новое значение.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary>Вводит цикл задержки, который можно использовать для изменения свойств поставщика и задержки автоматического обновления.</summary>
      <returns>Объект <see cref="T:System.IDisposable" />, при помощи которого удаляется вызывающий объект.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary>Gets or sets the current <see cref="T:System.Windows.Threading.Dispatcher" /> object to the Пользовательский интерфейс thread to use.</summary>
      <returns>The current <see cref="T:System.Windows.Threading.Dispatcher" /> object to the Пользовательский интерфейс thread to use. По умолчанию это объект <see cref="T:System.Windows.Threading.Dispatcher" />, сопоставленный потоку, в котором был создан данный экземпляр.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary>Указывает, что инициализация этого объекта завершена; в результате будет вызван метод <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />, если в очереди не стоит никакой другой метод <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary>Получает ошибку в последней операции запроса.</summary>
      <returns>Значение с типом <see cref="T:System.Exception" />, представляющее ошибку в последней операции запроса, либо значение null, если ошибки не возникали.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary>Запускает начальный запрос в базовую модель данных.Результат возвращается в свойстве <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary>Получает или задает значение, которое указывает, должна ли быть заблокирована либо задержана автоматическая загрузка данных.</summary>
      <returns>Значение false, если автоматическая загрузка данных должна быть заблокирована или задержана; в противном случае — значение true.По умолчанию используется значение true.</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary>Получает значение, которое указывает, используется ли метод <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />.</summary>
      <returns>Значение true, если метод <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> используется; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> с предоставленными аргументами.</summary>
      <param name="e">Arguments of the event being raised.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary>Этот метод вызывается в производных классах с целью определить, завершено ли выполнение запроса.</summary>
      <param name="newData">Данные, являющиеся результатом выполнения запроса.</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary>Этот метод вызывается в производных классах с целью определить, завершено ли выполнение запроса.</summary>
      <param name="newData">Данные, являющиеся результатом выполнения запроса.</param>
      <param name="error">При выполнении этого запроса произошла ошибка.Если ошибки отсутствуют, это значение равно null.</param>
      <param name="completionWork">Необязательный делегат, который используется для выполнения действий, связанных с завершением запроса, в потоке Пользовательский интерфейс, например для установки дополнительных свойств.</param>
      <param name="callbackArguments">Необязательные аргументы для передачи в качестве параметра с делегатом <paramref name="completionWork" />.</param>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary>Инициирует операцию обновления для базовой модели данных.Результат возвращается в свойстве <see cref="P:System.Windows.Data.DataSourceProvider.Data" />.</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary>Задает направление в пользовательский интерфейс, в котором пытается выполниться запрос на изменение фокуса.Это направление либо основано на последовательности табуляции, либо определяется относительно направления в макете.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary>Фокус перемещается к следующему элементу в последовательности табуляции, способному получать фокус.Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary>Фокус перемещается к предыдущему элементу в последовательности табуляции, способному получать фокус.Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary>Фокус перемещается к первому элементу в последовательности табуляции, способному получать фокус.Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary>Фокус перемещается к последнему элементу в последовательности табуляции, способному получать фокус.Не поддерживается для <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary>Фокус перемещается к другому элементу, способному получать фокус, слева от текущего имеющего фокус элемента.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary>Фокус перемещается к другому элементу, способному получать фокус, справа от текущего имеющего фокус элемента.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary>Фокус перемещается к другому элементу, способному получать фокус, выше текущего имеющего фокус элемента.</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary>Фокус перемещается к другому элементу, способному получать фокус, ниже текущего имеющего фокус элемента.</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary>Задает возможные значения клавиш клавиатуры. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary>Нет нажатых клавиш. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary>Клавиша CANCEL. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary>Клавиша BACKSPACE. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary>Клавиша TAB. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary>Клавиша LINEFEED. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary>Клавиша CLEAR. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary>Клавиша RETURN. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary>Клавиша ВВОД. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary>Клавиша PAUSE. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary>Клавиша CAPS LOCK. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary>Клавиша CAPS LOCK. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary>Клавиша режима IME Kana. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary>Клавиша режима IME Hangul. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary>Клавиша режима IME Junja. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary>Клавиша редактора метода ввода режима завершения. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary>Клавиша режима IME Hanja. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary>Клавиша режима IME Kanji. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary>Клавиша ESC. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary>Клавиша редактора метода ввода CONVERT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary>Клавиша редактора метода ввода NONCONVERT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary>Клавиша редактора метода ввода ACCEPT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary>Клавиша запроса изменения режима редактора метода ввода. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary>Клавиша ПРОБЕЛ. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary>Клавиша СТРЕЛКА ВВЕРХ. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary>Клавиша СТРЕЛКА ВВЕРХ. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary>Клавиша СТРЕЛКА ВНИЗ. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary>Клавиша СТРЕЛКА ВНИЗ. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary>Клавиша END. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary>Клавиша HOME. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary>Клавиша СТРЕЛКА ВЛЕВО. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary>Клавиша СТРЕЛКА ВВЕРХ. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary>Клавиша СТРЕЛКА ВПРАВО. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary>Клавиша СТРЕЛКА ВНИЗ. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary>Клавиша SELECT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary>Клавиша PRINT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary>Клавиша EXECUTE. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary>Клавиша PRINT SCREEN. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary>Клавиша PRINT SCREEN. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary>Клавиша INSERT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary>Клавиша DELETE. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary>Клавиша HELP. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary>Клавиша 0 (нуль). </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary>Клавиша 1 (один). </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary>Клавиша 2. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary>Клавиша 3. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary>Клавиша 4. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary>Клавиша 5. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary>Клавиша 6. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary>Клавиша 7. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary>Клавиша 8. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary>Клавиша 9. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary>Клавиша A. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary>Клавиша B. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary>Клавиша C. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary>Клавиша D. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary>Клавиша E. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary>Клавиша F. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary>Клавиша G. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary>Клавиша H. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary>Клавиша I. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary>Клавиша J. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary>Клавиша K. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary>Клавиша L. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary>Клавиша M. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary>Клавиша N. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary>Клавиша O. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary>Клавиша P. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary>Клавиша Q. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary>Клавиша R. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary>Клавиша S. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary>Клавиша T. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary>Клавиша U. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary>Клавиша V. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary>Клавиша W. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary>Клавиша X. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary>Клавиша Y. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary>Клавиша Z. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary>Левая клавиша с эмблемой Windows (клавиатура Microsoft Natural). </summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary>Правая клавиша с эмблемой Windows (клавиатура Microsoft Natural). </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary>Клавиша контекстного меню (клавиатура Microsoft Natural). </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary>Клавиша перевода компьютера в спящий режим. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary>Клавиша 0 на цифровой клавиатуре. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary>Клавиша 1 на цифровой клавиатуре. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary>Клавиша 2 на цифровой клавиатуре. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary>Клавиша 3 на цифровой клавиатуре. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary>Клавиша 4 на цифровой клавиатуре. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary>Клавиша 5 на цифровой клавиатуре. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary>Клавиша 6 на цифровой клавиатуре. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary>Клавиша 7 на цифровой клавиатуре. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary>Клавиша 8 на цифровой клавиатуре. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary>Клавиша 9 на цифровой клавиатуре. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary>Клавиша знака умножения. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary>Клавиша плюс. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary>Клавиша разделителя. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary>Клавиша минус. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary>Клавиша десятичного разделителя. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary>Клавиша знака деления. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary>Клавиша F1. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary>Клавиша F2. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary>Клавиша F3. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary>Клавиша F4. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary>Клавиша F5. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary>Клавиша F6. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary>Клавиша F7. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary>Клавиша F8. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary>Клавиша F9. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary>Клавиша F10. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary>Клавиша F11. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary>Клавиша F12. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary>Клавиша F13. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary>Клавиша F14. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary>Клавиша F15. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary>Клавиша F16. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary>Клавиша F17. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary>Клавиша F18. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary>Клавиша F19. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary>Клавиша F20. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary>Клавиша F21. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary>Клавиша F22. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary>Клавиша F23. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary>Клавиша F24. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary>Клавиша NUM LOCK. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary>Клавиша SCROLL LOCK. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary>Левая клавиша SHIFT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary>Правая клавиша SHIFT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary>Левая клавиша CTRL. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary>Правая клавиша CTRL. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary>Левая клавиша ALT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary>Правая клавиша ALT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary>Клавиша обозревателя "Назад". </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary>Клавиша обозревателя "Вперед". </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary>Клавиша обозревателя "Обновить". </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary>Клавиша обозревателя "Остановить". </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary>Клавиша обозревателя "Поиск". </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary>Клавиша обозревателя "Избранное". </summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary>Клавиша обозревателя "Домой". </summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary>Клавиша выключения звука. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary>Клавиша уменьшения громкости. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary>Клавиша увеличения громкости. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary>Клавиша перехода к следующей дорожке мультимедиа. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary>Клавиша перехода к предыдущей дорожке мультимедиа. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary>Клавиша остановки воспроизведения мультимедиа. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary>Клавиша паузы воспроизведения мультимедиа. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary>Клавиша загрузки почты. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary>Клавиша выбора мультимедиа. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary>Клавиша запуска приложения 1. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary>Клавиша запуска приложения 2. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary>Клавиша 1 изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary>Клавиша точки с запятой изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary>Клавиша знака плюс изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary>Клавиша запятой изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary>Клавиша знака минус изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary>Клавиша точки изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary>Клавиша 2 изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary>Клавиша знака вопроса изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary>Клавиша 3 изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary>Клавиша знака тильды изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary>Клавиша ABNT_C1 (Бразилия). </summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary>Клавиша ABNT_C2 (Бразилия). </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary>Клавиша 4 изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary>Клавиша открывающейся квадратной скобки изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary>Клавиша 5 изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary>Клавиша PIPE изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary>Клавиша 6 изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary>Клавиша закрывающейся квадратной скобки изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary>Клавиша 7 изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary>Клавиша кавычек изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary>Клавиша 8 изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary>Клавиша 102 изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary>Клавиша знака обратной косой черты изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary>Специальная клавиша, маскирующая реальную клавишу, обрабатываемую изготовителем оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary>Специальная клавиша, маскирующая реальную клавишу, обрабатываемую как системная клавиша. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary>Клавиша ATTN изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary>Клавиша DBE_ALPHANUMERIC. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary>Клавиша FINISH изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary>Клавиша DBE_KATAKANA. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary>Клавиша COPY изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary>Клавиша DBE_HIRAGANA. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary>Клавиша AUTO изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary>Клавиша DBE_SBCSCHAR. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary>Клавиша ENLW изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary>Клавиша DBE_DBCSCHAR. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary>Клавиша BACKTAB изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary>Клавиша DBE_ROMAN. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary>Клавиша ATTN. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary>Клавиша DBE_NOROMAN. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary>Клавиша CRSEL. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary>Клавиша DBE_ENTERWORDREGISTERMODE. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary>Клавиша EXSEL. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary>Клавиша DBE_ENTERIMECONFIGMODE. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary>Клавиша ERASE EOF. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary>Клавиша DBE_FLUSHSTRING. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary>Клавиша PLAY. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary>Клавиша DBE_CODEINPUT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary>Клавиша ZOOM. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary>Клавиша DBE_NOCODEINPUT. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary>Константа, зарезервированная для использования в будущем. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary>Клавиша DBE_DETERMINESTRING. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary>Клавиша PA1. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary>Клавиша DBE_ENTERDLGCONVERSIONMODE. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary>Клавиша CLEAR изготовителя оборудования. </summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary>Клавиша используется с другой клавишей для создания одного объединенного символа.</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary>Преобразует объект <see cref="T:System.Windows.Input.Key" /> в другие типы данных и из других типов данных.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.Key" />. </summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли объект заданного типа быть преобразован в экземпляр типа <see cref="T:System.Windows.Input.Key" /> с использованием заданного контекста. </summary>
      <returns>true, если <paramref name="sourceType" /> имеет тип <see cref="T:System.String" />; в противном случае — false.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="sourceType">Тип, для которого определяется возможность преобразования.</param>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли экземпляр типа <see cref="T:System.Windows.Input.Key" /> быть преобразован к заданному типу с использованием заданного контекста.</summary>
      <returns>true, если <paramref name="destinationType" /> имеет тип <see cref="T:System.String" />; в противном случае — false.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="destinationType">Тип, для которого определяется возможность преобразования.</param>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Пытается преобразовать указанный объект в <see cref="T:System.Windows.Input.Key" />, используя заданный контекст.</summary>
      <returns>Преобразованный объект.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="source">Преобразуемый объект.</param>
      <exception cref="T:System.NotSupportedException">Значение <paramref name="source" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Пытается преобразовать объект <see cref="T:System.Windows.Input.Key" /> к заданному типу, используя заданный контекст.</summary>
      <returns>Преобразованный объект.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="value">Преобразуемый объект.</param>
      <param name="destinationType">Тип, в который требуется преобразовать объект.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destinationType" /> имеет значение null.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="value" /> не может быть преобразован в <paramref name="destinationType" />.</exception>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary>Provides static methods to convert between Win32 Virtual-Keys and the WPF <see cref="T:System.Windows.Input.Key" /> enumeration. </summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary>Converts a Win32 Virtual-Key into WPF <see cref="T:System.Windows.Input.Key" />.</summary>
      <returns>Клавиша WPF.</returns>
      <param name="virtualKey">Виртуальная клавиша для преобразования.</param>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary>Converts a WPF <see cref="T:System.Windows.Input.Key" /> into a Win32 Virtual-Key.</summary>
      <returns>Виртуальная клавиша Win32.</returns>
      <param name="key">The WPF to convert.</param>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary>Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Input.Key" /> и обратно.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.KeyValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Input.Key" />.</summary>
      <returns>Всегда возвращает значение true.</returns>
      <param name="value">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный объект <see cref="T:System.Windows.Input.Key" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> может быть преобразован в <see cref="T:System.String" />; в противном случае — значение false.</returns>
      <param name="value">Клавиша, для которой необходимо проверить возможность преобразования.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.Windows.Input.Key" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.Windows.Input.Key" /> на основе предоставленного параметра <paramref name="value" />.</returns>
      <param name="value">Строка для преобразования в <see cref="T:System.Windows.Input.Key" />.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует экземпляр <see cref="T:System.Windows.Input.Key" /> в <see cref="T:System.String" />.</summary>
      <returns>Инвариантное строковое представление заданного объекта <see cref="T:System.Windows.Input.Key" />.</returns>
      <param name="value">Клавиша для преобразования в строку.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary>Задает набор клавиш CTRL, SHIFT и ALT. </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary>Клавиши CTRL, SHIFT и ALT не нажаты. </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary>The ALT key. </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary>The CTRL key. </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary>Клавиша SHIFT. </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary>Клавиша WINDOWS.</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary>Преобразует объект <see cref="T:System.Windows.Input.ModifierKeys" /> в другие типы данных и обратно.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.ModifierKeysConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли объект заданного типа быть преобразован в экземпляр типа <see cref="T:System.Windows.Input.ModifierKeys" /> с использованием заданного контекста.</summary>
      <returns>Значение true, если тип в параметре <paramref name="sourceType" /> — <see cref="T:System.String" />; в противном случае — значение false.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="sourceType">Тип, для которого определяется возможность преобразования.</param>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли экземпляр типа <see cref="T:System.Windows.Input.ModifierKeys" /> быть преобразован к заданному типу с использованием заданного контекста.</summary>
      <returns>Значение true, если тип в параметре <paramref name="destinationType" /> — <see cref="T:System.String" />; в противном случае — значение false.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="destinationType">Тип, для которого определяется возможность преобразования.</param>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Пытается преобразовать указанный объект в <see cref="T:System.Windows.Input.ModifierKeys" />, используя заданный контекст.</summary>
      <returns>Преобразованный объект.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="source">Преобразуемый объект.</param>
      <exception cref="T:System.NotSupportedException">Значение <paramref name="source" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Пытается преобразовать объект <see cref="T:System.Windows.Input.ModifierKeys" /> к заданному типу, используя заданный контекст.</summary>
      <returns>Преобразованный объект.</returns>
      <param name="context">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="value">Преобразуемый объект.</param>
      <param name="destinationType">Тип, в который требуется преобразовать объект.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destinationType" /> имеет значение null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="value" /> не соответствует допустимому значению <see cref="T:System.Windows.Input.ModifierKeys" />.</exception>
      <exception cref="T:System.NotSupportedException">Значение <paramref name="value" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary>Определяет, является ли заданное значение допустимым <see cref="T:System.Windows.Input.ModifierKeys" />. </summary>
      <returns>Значение true, если входящее значение <see cref="T:System.Windows.Input.ModifierKeys" /> допустимо, в противном случае — значение false.</returns>
      <param name="modifierKeys">Значение, проверяемое на допустимость.</param>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary>Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Input.ModifierKeys" /> и обратно.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный <see cref="T:System.String" /> быть преобразован в экземпляр <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <returns>Всегда возвращает значение true.</returns>
      <param name="value">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Определяет, может ли указанный объект <see cref="T:System.Windows.Input.ModifierKeys" /> быть преобразован в <see cref="T:System.String" />.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> может быть преобразован в <see cref="T:System.String" />; в противном случае — значение false.</returns>
      <param name="value">Клавиши CTRL, SHIFT и ALT, возможность преобразования которых необходимо оценить.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует <see cref="T:System.String" /> в значение <see cref="T:System.Windows.Input.ModifierKeys" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.Windows.Input.ModifierKeys" /> на основе предоставленного параметра <paramref name="value" />.</returns>
      <param name="value">Строка для преобразования в <see cref="T:System.Windows.Input.ModifierKeys" />.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Преобразует экземпляр <see cref="T:System.Windows.Input.ModifierKeys" /> в <see cref="T:System.String" />.</summary>
      <returns>Инвариантное строковое представление заданного значения <see cref="T:System.Windows.Input.ModifierKeys" />.</returns>
      <param name="value">Клавиша для преобразования в строку.</param>
      <param name="context">Контекстная информация, используемая при выполнении преобразования.</param>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary>Представляет запрос на перемещение фокуса к другому элементу управления. </summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Input.TraversalRequest" />. </summary>
      <param name="focusNavigationDirection">Направление, в котором нужно переместить фокус, как значение из перечисления.</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary>Получает направление обхода. </summary>
      <returns>Одно из значений из перечисления, определяющего направления обхода.</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary> Получает или задает значение, указывающее, достигнут ли при обходе фокусом последний из дочерних элементов, которые могут иметь фокус. </summary>
      <returns>true, если при данном обходе достигнут последний из дочерних элементов, которые могут иметь фокус; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary>Разрешает совместное управление передачей сообщений между Win32 и WPF в скриптах взаимодействия. </summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary>Возвращает последнее сгенерированное сообщение. </summary>
      <returns>Последнее сообщение.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary>Генерируется, когда поток становится модальным. </summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary>Возвращает значение, указывающее, является ли поток модальным. </summary>
      <returns>true, если поток является модальным; в противном случае — false.</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary>Генерируется, когда модальный поток становится немодальным. </summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary>Вызывается для уведомления о том, что модальный поток более не является модальным.</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary>Вызывается для уведомления о том, что поток является модальным. </summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary>Вызывается для уведомления о том, что поток бездействует. </summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary>Указывает, что доступно новое сообщение для возможной обработки. </summary>
      <returns>true, если один из модулей, прослушивающих цикл сообщений, обработал сообщение.Владелец цикла сообщений должен игнорировать это сообщение.false, если сообщение не обработано.В данном случае владелец конвейера сообщений должен вызвать функцию Win32TranslateMessage с последующим вызовом функции DispatchMessage.</returns>
      <param name="msg">Сообщение и связанные с ним данные.</param>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary>Генерируется, когда конвейер сообщений получает сообщение от клавиатуры.  </summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary>Генерируется, когда поток бездействует. </summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary>Генерируется, когда конвейер сообщений получает сообщение от клавиатуры.</summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary>Предоставляет приемник сообщений от клавиатуры для компонентов, управляющих переходами по табуляции и действиями, выполняемыми с использованием сочетаний клавиш и мнемоник между границами взаимодействия и между HWND.Этот интерфейс реализует управление сообщениями от клавиатуры в скриптах взаимодействия WPF — Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary>Возвращает значение, указывающее, имеет ли приемник или один из содержащихся в нем компонентов фокус ввода. </summary>
      <returns>true, если приемник или один из его дочерних компонентов в данный момент имеет фокус ввода; в противном случае — false.</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary>Возвращает или задает указатель на интерфейс <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> контейнера компонента. </summary>
      <returns>Указатель на интерфейс <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> контейнера.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Вызывается, когда нажата одна из мнемоник (клавиш доступа) данного приемника. </summary>
      <returns>true, если сообщение обработано; в противном случае — false.</returns>
      <param name="msg">Сообщение для мнемоники и связанных данных.Не изменяйте структуру этого сообщения.Она передается по ссылке исключительно по соображениям производительности.</param>
      <param name="modifiers">Клавиши CTRL, SHIFT и ALT.</param>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary>Регистрирует интерфейс <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> размещенного компонента. </summary>
      <returns>узел <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> размещенного компонента.</returns>
      <param name="sink">Приемник <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> размещенного компонента.</param>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary>Устанавливает фокус на первую или последнюю позицию табуляции приемника. </summary>
      <returns>true, если фокус установлен, как запрашивалось; false, если позиции табуляции отсутствуют.</returns>
      <param name="request">Указывает, на какой позиции табуляции должен быть установлен фокус: на первой или последней.</param>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Обрабатывает ввод от клавиатуры на уровне сообщений KEYDOWN.</summary>
      <returns>true, если сообщение обработано данной реализацией метода; в противном случае — false.</returns>
      <param name="msg">Сообщение и связанные с ним данные.Не изменяйте эту структуру.Она передается по ссылке исключительно по соображениям производительности.</param>
      <param name="modifiers">Клавиши CTRL, SHIFT и ALT.</param>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Обрабатывает входные сообщения WM_CHAR, WM_SYSCHAR, WM_DEADCHAR и WM_SYSDEADCHAR перед вызовом <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />. </summary>
      <returns>true, если сообщение обработано и метод <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> вызывать не следует; в противном случае — false.</returns>
      <param name="msg">Сообщение и связанные с ним данные.Не изменяйте эту структуру.Она передается по ссылке исключительно по соображениям производительности.</param>
      <param name="modifiers">Клавиши CTRL, SHIFT и ALT.</param>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary>Управляет фокусом ввода в контейнере.Этот интерфейс реализует управление сообщениями от клавиатуры в скриптах взаимодействия WPF — Win32.</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary>Вызывается размещаемым компонентом по достижении им последней позиции табуляции, когда больше нет элемента, на который можно перейти. </summary>
      <returns>Если этот метод возвращает true, узел переместил фокус на другой компонент.Если этот метод возвращает false, фокус все еще на вызывающем компоненте.Компонент должен выполнить "циклический переход", установив фокус на первую позицию табуляции своего содержимого.</returns>
      <param name="request">Указывает, на какой позиции табуляции должен быть установлен фокус: на первой или последней.</param>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary>Возвращает приемник ввода от клавиатуры, связанный с этим узлом. </summary>
      <returns>Интерфейс <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> текущего узла.</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary>Отменяет регистрацию дочернего приемника ввода от клавиатуры в составе узла. </summary>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary>Содержит информацию сообщения из очереди сообщений потока. </summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary>Возвращает или задает дескриптор (HWND) окна, оконная процедура которого получает данное сообщение. </summary>
      <returns>Дескриптор окна (HWND).</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary>Возвращает или задает значение <paramref name="lParam" />, задающее дополнительную информацию о сообщении.Точный смысл зависит от значения члена <see cref="P:System.Windows.Interop.MSG.message" />.</summary>
      <returns>The <paramref name="lParam" /> value for the message.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary>Возвращает или задает идентификатор сообщения. </summary>
      <returns>Идентификатор сообщения.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary>Возвращает или задает координату x позиции курсора на экране в момент, когда было сгенерировано сообщение. </summary>
      <returns>Координата x позиции курсора.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary>Возвращает или задает координату y позиции курсора на экране в момент, когда было сгенерировано сообщение. </summary>
      <returns>Координата y позиции курсора.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary>Возвращает или задает время, когда было передано сообщение.</summary>
      <returns>Время передачи сообщения.</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary>Возвращает или задает значение <paramref name="wParam" />, задающее дополнительную информацию о сообщении.Точный смысл зависит от значения сообщения.</summary>
      <returns>Значение <paramref name="wParam" /> сообщения.</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary>Предоставляет метод, обрабатывающий события <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" /> и <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />. </summary>
      <param name="msg">Структура с данными сообщения.</param>
      <param name="handled">true, если сообщение обработано; в противном случае — false.</param>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary>Определяет, как должно быть сериализовано свойство.</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary>Свойство должно быть сериализовано как атрибут.</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary>Задает для свойства флаги сериализации.</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" />.</summary>
      <param name="designerSerializationOptions">Определяет, как должно быть сериализовано данное свойство. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="designerSerializationOptions" /> не является допустимым значением <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary>Получает параметры <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />, заданные для этого атрибута.</summary>
      <returns>Параметр сериализации как значение перечисления.</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary>Абстрактный класс, внутренне используемый компилятором WPF XAML для поддержки использования внутренних типов.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.InternalTypeHelper" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary>При переопределении в производном (созданном) классе присоединяет делегат обработчика событий к внутреннему событию.</summary>
      <param name="eventInfo">Информация о событии (информация об отражении CLR). </param>
      <param name="target">Целевой объект, к которому присоединен обработчик.</param>
      <param name="handler">Обработчик событий.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary>При переопределении в производном (созданном) классе создает делегат события для метода-обработчика, не являющегося открытым.</summary>
      <returns>Ссылка делегата.</returns>
      <param name="delegateType">Делегат класса <see cref="T:System.Type" />. </param>
      <param name="target">Целевой объект, к которому присоединен обработчик.</param>
      <param name="handler">Имя обработчика реализации.</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary>При переопределении в производном (созданном) классе создает экземпляр внутреннего типа.</summary>
      <returns>Созданный экземпляр. </returns>
      <param name="type">Создаваемый класс <see cref="T:System.Type" />.</param>
      <param name="culture">Сведения, связанные с языком и региональными параметрами. </param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary>При переопределении в производном (созданном) классе получает значение внутреннего свойства целевого объекта</summary>
      <returns>Значение свойства.</returns>
      <param name="propertyInfo">Информация о получаемом свойстве. </param>
      <param name="target">Объект, обладающий желаемым значением свойства.</param>
      <param name="culture">Сведения, связанные с языком и региональными параметрами. </param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary>При переопределении в производном (созданном) классе задает значение внутреннего свойства целевого объекта.</summary>
      <param name="propertyInfo">Информация задаваемого свойства. </param>
      <param name="target">Объект, обладающий желаемым значением свойства.</param>
      <param name="value">Устанавливаемое значение.</param>
      <param name="culture">Сведения, связанные с языком и региональными параметрами. </param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary>Предоставляет механизм, с помощью которого типы могут объявлять, что они могут получать выражение (или другой класс) из расширения разметки, где выводом является другой тип свойства, а не целевое свойство.Не рекомендуется использовать для реализаций .NET Framework 4; см. "Примечания".</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary>Предоставляет обработку расширений разметки, которые обеспечивают значения свойств.Не рекомендуется использовать для реализаций .NET Framework 4; см. "Примечания" в разделе <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
      <param name="property">Имя целевого свойства.</param>
      <param name="markupExtension">Экземпляр расширения разметки входящих данных.</param>
      <param name="serviceProvider">Может предоставлять дополнительные службы, которые должны выполняться во время обработки данных расширения разметки для значения свойства.</param>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary>Предоставляет реализацию для интерфейса <see cref="T:System.IServiceProvider" /> с методами, позволяющими добавлять службы.</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ServiceProviders" />. </summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary>Добавляет службу в список. </summary>
      <param name="serviceType">Тип новой службы.</param>
      <param name="service">Класс реализации службы.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="serviceType" /> или <paramref name="service" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Попытка добавить службу, которая уже существует в словаре.</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary>Получает объект службы указанного типа.</summary>
      <returns>Реализация службы для типа <paramref name="serviceType" />.Может принимать значение null, если службы для типа <paramref name="serviceType" /> не существует.</returns>
      <param name="serviceType">Тип получаемого объекта службы.</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary>Абстрактный класс, представляющий объект, который может использоваться для перемещения по дереву объектов.</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary>При переопределении в производном классе присваивает корневое содержимое для классов <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="context">
        <see cref="T:System.Windows.Markup.IValueSerializerContext" />, для которого следует присвоить корневое содержимое.</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary>When overridden in a derived class, gets the attributes associated with this <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.  </summary>
      <returns>Коллекция атрибутов. </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary>При переопределении в производном классе возвращает объект, представляющий данный <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns>Объект</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary>При переопределении в производном классе возвращает тип экземпляра <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />.</summary>
      <returns>Тип объекта. </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary>При переопределении в производном классе возвращает свойства данного экземпляра <see cref="T:System.Windows.Markup.Primitives.MarkupObject" />, которые должны быть записаны в Язык XAML.</summary>
      <returns>Свойства.  </returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary>Абстрактный класс, предоставляющий описание свойств для использования при написании разметки, инкапсулирующей доступ к свойствам и их значениям. </summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary>При переопределении в производном классе возвращает атрибуты, связанные с данным <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns>Коллекция атрибутов.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary>В случае переопределения в производном классе получает идентификатор <see cref="T:System.Windows.DependencyProperty" /> для свойства разметки, если это свойство реализуется как свойство зависимостей.</summary>
      <returns>Идентификатор свойства зависимостей.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary>При переопределении в производном классе определяет, является ли данное <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> вложенным <see cref="T:System.Windows.DependencyProperty" />. </summary>
      <returns>true, если свойство является вложенным <see cref="T:System.Windows.DependencyProperty" />; в противном случае — false.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary>При переопределении в производном классе определяет, является ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> составным. </summary>
      <returns>true, если данное свойство является составным; в противном случае — false.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary>При переопределении в производном классе определяет, представляет ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> аргумент конструктора.</summary>
      <returns>Значение true, если данное свойство представляет аргумент конструктора; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary>При переопределении в производном классе определяет, представляет ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> непосредственное содержимое коллекции.</summary>
      <returns>true, если свойство представляет непосредственное содержимое; в противном случае — false.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary>При переопределении в производном классе определяет, представляет ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> ключ, используемый объектом <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> для хранения элемента в словаре.</summary>
      <returns>true, если это свойство представляет ключ; в противном случае — false.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary>При переопределении в производном классе определяет, представляет ли это свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> текст, передаваемый преобразователю типов для создания экземпляра свойства, или должен использоваться конструктор.</summary>
      <returns>true, если это свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> представляет строку; в противном случае — false.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary>При переопределении в производном классе возвращает элементы, составляющие значение данного свойства. </summary>
      <returns>Элементы, составляющие значение данного свойства.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary>При переопределении в производном классе возвращает имя, используемое для диагностики ошибок и уведомления о них. </summary>
      <returns>Имя свойства идентификатора.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary>При переопределении в производном классе возвращает<see cref="T:System.ComponentModel.PropertyDescriptor" /> для свойства разметки. </summary>
      <returns>Дескриптор свойства. </returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary>При переопределении в производном классе получает CLR-тип свойства.</summary>
      <returns>CLR-тип.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary>При переопределении в производном классе возвращает строковое значение данного <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns>Строковое значение.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary>При переопределении в производном классе получает набор типов, на которые будет ссылаться данный объект <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> при сериализации его значения в виде строки.</summary>
      <returns>Набор типов.</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary>При переопределении в производном классе получает текущее значение данного объекта <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</summary>
      <returns>Текущее значение.</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary>Allows WPF applications to disable dots per inch (dpi) awareness for all user interface elements.</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary> Представляет матрицу аффинного преобразования 3x3, используемую для преобразований в пространстве двухмерный. </summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary> Инициализирует новый экземпляр структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="m11">Входящий в состав новой структуры <see cref="T:System.Windows.Media.Matrix" /> коэффициент <see cref="P:System.Windows.Media.Matrix.M11" />.</param>
      <param name="m12">Входящий в состав новой структуры <see cref="T:System.Windows.Media.Matrix" /> коэффициент <see cref="P:System.Windows.Media.Matrix.M12" />.</param>
      <param name="m21">Входящий в состав новой структуры <see cref="T:System.Windows.Media.Matrix" /> коэффициент <see cref="P:System.Windows.Media.Matrix.M21" />.</param>
      <param name="m22">Входящий в состав новой структуры <see cref="T:System.Windows.Media.Matrix" /> коэффициент <see cref="P:System.Windows.Media.Matrix.M22" />.</param>
      <param name="offsetX">Входящий в состав новой структуры <see cref="T:System.Windows.Media.Matrix" /> коэффициент <see cref="P:System.Windows.Media.Matrix.OffsetX" />.</param>
      <param name="offsetY">Входящий в состав новой структуры <see cref="T:System.Windows.Media.Matrix" /> коэффициент <see cref="P:System.Windows.Media.Matrix.OffsetY" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary> Добавляет заданную структуру <see cref="T:System.Windows.Media.Matrix" /> в конец данной структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="matrix">Структура <see cref="T:System.Windows.Media.Matrix" />, которую необходимо добавить в конец данной структуры <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary> Получает определитель этой структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Определитель этой структуры <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary> Определяет, является ли указанный <see cref="T:System.Object" /> структурой <see cref="T:System.Windows.Media.Matrix" />, идентичной данной структуре <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>true, если <paramref name="o" /> является структурой <see cref="T:System.Windows.Media.Matrix" />, идентичной структуре <see cref="T:System.Windows.Media.Matrix" />; в противном случае — false.</returns>
      <param name="o">Объект <see cref="T:System.Object" /> для сравнения.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary> Определяет, идентична ли указанная структура <see cref="T:System.Windows.Media.Matrix" /> данному экземпляру. </summary>
      <returns>Значение true, если экземпляры равны; в противном случае — значение false. </returns>
      <param name="value">Экземпляр объекта <see cref="T:System.Windows.Media.Matrix" /> для сравнения с данным экземпляром.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary> Определяет, совпадают ли две указанные структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>true, если <paramref name="matrix1" /> и <paramref name="matrix2" /> идентичны; в противном случае — false.</returns>
      <param name="matrix1">Первая сравниваемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="matrix2">Вторая сравниваемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary> Возвращает хэш-код для этой структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Хэш-код данного экземпляра.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary> Получает значение, указывающее, является ли эта структура <see cref="T:System.Windows.Media.Matrix" /> обратимой. </summary>
      <returns>true, если <see cref="T:System.Windows.Media.Matrix" /> обратима; в противном случае — false.Значением по умолчанию являетсяtrue.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary> Получает единичную <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Единичная матрица.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary> Преобразует данную структуру <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <exception cref="T:System.InvalidOperationException">Структура <see cref="T:System.Windows.Media.Matrix" /> не является обратимой.</exception>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary> Получает значение, указывающее, является ли эта структура <see cref="T:System.Windows.Media.Matrix" /> единичной матрицей. </summary>
      <returns>true, если структура <see cref="T:System.Windows.Media.Matrix" /> является единичной матрицей; в противном случае — false.Значением по умолчанию являетсяtrue.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary>Получает или задает значение в первой строке и первом столбце этой структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Значение первой строки и первого столбца этой матрицы <see cref="T:System.Windows.Media.Matrix" />.Значением по умолчанию является 1.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary> Получает или задает значение в первой строке и втором столбце этой структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Значение первой строки и второго столбца этой матрицы <see cref="T:System.Windows.Media.Matrix" />.Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary> Получает или задает значение во второй строке и первом столбце этой структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Значение второй строки и первого столбца этой матрицы <see cref="T:System.Windows.Media.Matrix" />.Значение по умолчанию — 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary>Получает или задает значение во второй строке и втором столбце этой структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Значение во второй строке и втором столбце этой структуры <see cref="T:System.Windows.Media.Matrix" />.Значение по умолчанию — 1.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary> Умножает структуру <see cref="T:System.Windows.Media.Matrix" /> на другую структуру <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Результат умножения <paramref name="trans1" /> на <paramref name="trans2" />.</returns>
      <param name="trans1">Первая умножаемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="trans2">Вторая умножаемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary>Получает или задает значение в третьей строке и первом столбце этой структуры <see cref="T:System.Windows.Media.Matrix" />.  </summary>
      <returns>Значение в третьей строке и первом столбце этой структуры <see cref="T:System.Windows.Media.Matrix" />.Значением по умолчанию является 0.</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary>Получает или задает значение в третьей строке и втором столбце данной структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Значение в третьей строке и втором столбце этой структуры <see cref="T:System.Windows.Media.Matrix" />.Значением по умолчанию является 0.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary> Определяет, совпадают ли две указанные структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>true, если <paramref name="matrix1" /> и <paramref name="matrix2" /> идентичны; в противном случае — false.</returns>
      <param name="matrix1">Первая сравниваемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="matrix2">Вторая сравниваемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary> Проверяет, являются ли две заданные структуры <see cref="T:System.Windows.Media.Matrix" /> не идентичными.</summary>
      <returns>true, если <paramref name="matrix1" /> и <paramref name="matrix2" /> не идентичны; в противном случае — false.</returns>
      <param name="matrix1">Первая сравниваемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="matrix2">Вторая сравниваемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary> Умножает структуру <see cref="T:System.Windows.Media.Matrix" /> на другую структуру <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Результат умножения <paramref name="trans1" /> на <paramref name="trans2" />.</returns>
      <param name="trans1">Первая умножаемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="trans2">Вторая умножаемая структура <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary> Преобразует представление в виде <see cref="T:System.String" /> матрицы в эквивалентную структуру <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Эквивалентная структура <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <param name="source">Представление матрицы в виде <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary> Добавляет заданную структуру <see cref="T:System.Windows.Media.Matrix" /> в начало данной структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="matrix">Структура <see cref="T:System.Windows.Media.Matrix" />, которую необходимо добавить в начало данной структуры <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary> Применяет поворот на указанный угол относительно начала координат к этой структуре <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="angle">Угол поворота.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary>Поворачивает эту матрицу относительно заданной точки.</summary>
      <param name="angle">Угол поворота данной матрицы в градусах. </param>
      <param name="centerX">Координату х точки, вокруг которой выполняется поворот данной матрицы.</param>
      <param name="centerY">Координату y точки, вокруг которой выполняется поворот данной матрицы.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary>Добавляет поворот на заданный угол относительно заданной точки в начало этой структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="angle">Угол поворота в градусах.</param>
      <param name="centerX">Координата x центра поворота.</param>
      <param name="centerY">Координата y центра поворота.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary> Добавляет поворот на заданный угол в начало этой структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="angle">Добавляемый в начало угол поворота.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary> Добавляет заданный вектор масштабирования в конец данной структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="scaleX">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси X.</param>
      <param name="scaleY">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary>Масштабирует эту структуру <see cref="T:System.Windows.Media.Matrix" /> на заданную величину относительно заданной точки.</summary>
      <param name="scaleX">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси X. </param>
      <param name="scaleY">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси Y.</param>
      <param name="centerX">Координата x центральной точки, от которой производится масштабирование.</param>
      <param name="centerY">Координата y центральной точки, от которой производится масштабирование.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary>Добавляет заданное масштабирование относительно заданной точки в начало данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="scaleX">Коэффициент масштабирования по оси X.</param>
      <param name="scaleY">Коэффициент масштабирования по оси Y.</param>
      <param name="centerX">Координату х точки, от которой выполняется масштабирование.</param>
      <param name="centerY">Координату y точки, от которой выполняется масштабирование.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary> Добавляет заданный вектор масштабирования в начало данной структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="scaleX">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси X.</param>
      <param name="scaleY">Коэффициент масштабирования данной структуры <see cref="T:System.Windows.Media.Matrix" /> вдоль оси Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary> Преобразует эту структуру <see cref="T:System.Windows.Media.Matrix" /> в единичную матрицу. </summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary> Прибавляет отклонение на заданное значение по осям X и Y в конец данной структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="skewX">Угол по оси X, на который требуется отклонить данную структуру <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY">Угол по оси x, на который требуется отклонить данную структуру <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary> Добавляет отклонение на заданное значение по осям X и Y в начало данной структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="skewX">Угол по оси X, на который требуется отклонить данную структуру <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="skewY">Угол по оси x, на который требуется отклонить данную структуру <see cref="T:System.Windows.Media.Matrix" />.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Данный член поддерживает инфраструктуру Windows Presentation Foundation (WPF) и не предназначен для непосредственного использования из кода. </summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary> Создает представление в виде <see cref="T:System.String" /> для этой структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>Объект <see cref="T:System.String" />, содержащий значения <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> и <see cref="P:System.Windows.Media.Matrix.OffsetY" /> данной структуры <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary> Создает представление в виде <see cref="T:System.String" /> данной структуры <see cref="T:System.Windows.Media.Matrix" /> с использованием сведений о форматировании, связанных с языком и региональными параметрами. </summary>
      <returns>Объект <see cref="T:System.String" />, содержащий значения <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" /> и <see cref="P:System.Windows.Media.Matrix.OffsetY" /> данной структуры <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <param name="provider">Сведения о форматировании, связанные с языком и региональными параметрами.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary>Преобразует заданную точку с использованием <see cref="T:System.Windows.Media.Matrix" /> и возвращает результат.</summary>
      <returns>Результат преобразования объекта <paramref name="point" /> посредством данной структуры <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <param name="point">Точка для преобразования.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary>Преобразует заданные точки с использованием заданной структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="points">точки для преобразования.Исходные точки в массиве заменяются их преобразованными значениями.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary>Преобразует заданный вектор с использованием данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>Результат преобразования объекта <paramref name="vector" /> посредством данной структуры <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <param name="vector">Преобразуемый вектор.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary>Преобразует заданные векторы с использованием данной структуры <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <param name="vectors">Преобразуемые векторы.Исходные векторы в массиве заменяются их преобразованными значениями.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary> Добавляет перенос на заданное смещение в конец этой структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="offsetX">Величина смещения данной структуры <see cref="T:System.Windows.Media.Matrix" /> по оси X.</param>
      <param name="offsetY">Величина смещения данной структуры <see cref="T:System.Windows.Media.Matrix" /> по оси Y.</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary> Добавляет перенос на заданное смещение в начало в этой структуры <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <param name="offsetX">Величина смещения данной структуры <see cref="T:System.Windows.Media.Matrix" /> по оси X.</param>
      <param name="offsetY">Величина смещения данной структуры <see cref="T:System.Windows.Media.Matrix" /> по оси Y.</param>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary>Преобразует экземпляры других типов в <see cref="T:System.Windows.Media.Matrix" /> и из него. </summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Windows.Media.MatrixConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, может ли объект быть преобразован из определенного типа в экземпляр <see cref="T:System.Windows.Media.Matrix" />.  </summary>
      <returns>true if the type can be converted to a <see cref="T:System.Windows.Media.Matrix" />; otherwise, false.</returns>
      <param name="context">Контекстная информация типа.</param>
      <param name="sourceType">Тип источника, для которого определяется возможность преобразования.</param>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of a <see cref="T:System.Windows.Media.Matrix" /> can be converted to a different type. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.Matrix" /> can be converted to <paramref name="destinationType" />; otherwise, false.</returns>
      <param name="context">Контекстная информация типа.</param>
      <param name="destinationType">The desired type this <see cref="T:System.Windows.Media.Matrix" /> is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>
        <see cref="T:System.Windows.Media.Matrix" />, созданный в результате преобразования <paramref name="value" />.</returns>
      <param name="context">Контекстная информация типа.</param>
      <param name="culture">Информация <see cref="T:System.Globalization.CultureInfo" /> типа, который преобразуется.</param>
      <param name="value">Преобразуемый объект.</param>
      <exception cref="T:System.NotSupportedException">Заданный объект имеет значение null или является типом, преобразование которого в <see cref="T:System.Windows.Media.Matrix" /> невозможно.</exception>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.Media.Matrix" /> to a specified type. </summary>
      <returns>Объект, созданный в результате преобразования данного <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <param name="context">Контекстная информация типа.</param>
      <param name="culture">Информация <see cref="T:System.Globalization.CultureInfo" /> типа, который преобразуется.</param>
      <param name="value">Преобразуемый объект <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="destinationType">Тип, в который преобразуется данный <see cref="T:System.Windows.Media.Matrix" />.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> имеет значение null, или не является <see cref="T:System.Windows.Media.Matrix" />, или <paramref name="destinationType" /> не является допустимым типом преобразования.</exception>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary>Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.Windows.Media.Matrix" /> и обратно.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.Matrix" /> is possible.</summary>
      <returns>true, если значение может быть преобразовано; в противном случае — false.</returns>
      <param name="value">Строка, возможность преобразования которой необходимо определить.</param>
      <param name="context">Контекстные сведения, используемые при преобразовании.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.Matrix" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Matrix" /> to evaluate for conversion.</param>
      <param name="context">Контекстные сведения, используемые при преобразовании.</param>
      <exception cref="T:System.ArgumentException">Occurs when <paramref name="value" /> is not a <see cref="T:System.Windows.Media.Int32Collection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.Matrix" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Matrix" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.Matrix" />.</param>
      <param name="context">Контекстные сведения, используемые при преобразовании.</param>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.Matrix" /> to a <see cref="T:System.String" />.</summary>
      <returns>Представление <see cref="T:System.String" /> объекта <see cref="T:System.Windows.Media.Matrix" />.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.Matrix" /> to evaluate for conversion.</param>
      <param name="context">Контекстные сведения, используемые при преобразовании.</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary>Предоставляет службы для управления очередью рабочих элементов для потока.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary>Выполняет указанный делегат асинхронно с указанными аргументами в потоке, в котором был создан объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Объект, возвращаемый сразу после вызова <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
      <param name="method">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args">Массив объектов, передаваемых в качестве аргументов указанному методу.Может быть null.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Выполняет указанный делегат асинхронно, с заданными приоритетом и аргументами, в потоке, в котором был создан объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Объект, возвращаемый сразу после вызова <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
      <param name="method">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="args">Массив объектов, передаваемых в качестве аргументов указанному методу.Может быть null.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary>Выполняет указанный делегат асинхронно, с заданным приоритетом, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Объект, возвращаемый сразу после вызова <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method">Делегат метода без аргументов, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> имеет значение null; </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="priority" /> не содержит допустимого значения <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary>Выполняет указанный делегат асинхронно, с заданными приоритетом и аргументом, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Объект, возвращаемый сразу после вызова <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди событий.</returns>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method">Делегат метода с одним аргументом, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Объект, передаваемый в качестве аргумента указанному методу.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> имеет значение null; </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="priority" /> не содержит допустимого значения <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary>Выполняет указанный делегат асинхронно, с заданными приоритетом и массивом аргументов, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Объект, возвращаемый сразу после вызова <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />, используемый для взаимодействия с делегатом, ожидающим выполнения в очереди <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method">Делегат метода с несколькими аргументами, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Объект, передаваемый в качестве аргумента указанному методу.</param>
      <param name="args">Массив объектов, передаваемых в качестве аргументов указанному методу.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> имеет значение null; </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="T:System.Windows.Threading.DispatcherPriority" /> не является допустимым приоритетом.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary>Инициализирует асинхронную остановку <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
      <param name="priority">Приоритет, с которым начинается остановка диспетчера.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary>Определяет, связан ли вызывающий поток с данным <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
      <returns>true, если вызывающий поток связан с данным <see cref="T:System.Windows.Threading.Dispatcher" />; в противном случае — false.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary>Возвращает <see cref="T:System.Windows.Threading.Dispatcher" /> для выполняющегося в данный момент потока и создает новый объект <see cref="T:System.Windows.Threading.Dispatcher" />, если с потоком еще не связан диспетчер. </summary>
      <returns>Диспетчер, связанный с текущим потоком.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary>Отменяет обработку очереди <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Структура, используемая для повторного включения диспетчера.</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary>Запрашивает выход для всех фреймов, включая вложенные.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary>Возвращает <see cref="T:System.Windows.Threading.Dispatcher" /> для заданного потока. </summary>
      <returns>Диспетчер для <paramref name="thread" />.</returns>
      <param name="thread">Поток, из которого нужно получить <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary>Определяет, завершил ли объект <see cref="T:System.Windows.Threading.Dispatcher" /> процесс остановки.</summary>
      <returns>true, если диспетчер завершил процесс остановки; в противном случае — false.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary>Определяет, находится ли объект <see cref="T:System.Windows.Threading.Dispatcher" /> в процессе остановки. </summary>
      <returns>true, если <see cref="T:System.Windows.Threading.Dispatcher" /> начал процесс остановки; в противном случае — false.</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary>Возвращает коллекцию ловушек, предоставляющих дополнительную информацию о <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
      <returns>Ловушки, связанные с данным <see cref="T:System.Windows.Threading.Dispatcher" />. </returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary>Выполняет указанный делегат синхронно с заданными аргументами в потоке, с которым связан объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Значение, возвращаемое вызываемым делегатом, или null, если делегат не возвращает никакого значения.</returns>
      <param name="method">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="args">Массив объектов, передаваемых в качестве аргументов указанному методу.Может быть null.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary>Выполняет указанный делегат в течение заданного промежутка времени, синхронно, с заданными приоритетом и аргументами, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Значение, возвращаемое вызываемым делегатом, или null, если делегат не возвращает никакого значения.</returns>
      <param name="method">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout">Максимальное время ожидания завершения операции.</param>
      <param name="args">Массив объектов, передаваемых в качестве аргументов указанному методу.Может быть null.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Выполняет указанный делегат в течение заданного промежутка времени, синхронно, с заданными приоритетом и аргументами, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Значение, возвращаемое вызываемым делегатом, или null, если делегат не возвращает никакого значения.</returns>
      <param name="method">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="timeout">Максимальное время ожидания завершения операции.</param>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="args">Массив объектов, передаваемых в качестве аргументов указанному методу.Может быть null.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary>Выполняет указанный делегат синхронно, с заданными приоритетом и аргументами, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Значение, возвращаемое вызываемым делегатом, или null, если делегат не возвращает никакого значения.</returns>
      <param name="method">Делегат метода с параметрами, указанными в <paramref name="args" />, который помещен в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="args">Массив объектов, передаваемых в качестве аргументов указанному методу.Может быть null.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary>Выполняет указанный делегат синхронно, с заданным приоритетом, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
      <returns>Значение, возвращаемое вызываемым делегатом, или null, если делегат не возвращает никакого значения.</returns>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method">Делегат метода без аргументов, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="priority" /> равно значению параметра <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> не является допустимым приоритетом.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> имеет значение null; </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary>Выполняет указанный делегат синхронно, с заданными приоритетом и аргументом, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Значение, возвращаемое вызываемым делегатом, или null, если делегат не возвращает никакого значения.</returns>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method">Делегат метода с одним аргументом, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Объект, передаваемый в качестве аргумента указанному методу.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="priority" /> равно значению параметра <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> не является допустимым приоритетом.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> имеет значение null; </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary>Выполняет указанный делегат синхронно, с заданными приоритетом и аргументами, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Значение, возвращаемое вызываемым делегатом, или null, если делегат не возвращает никакого значения.</returns>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="method">Делегат метода с несколькими аргументами, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Объект, передаваемый в качестве аргумента указанному методу.</param>
      <param name="args">Массив объектов, передаваемых в качестве аргументов указанному методу.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="priority" /> равно значению параметра <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> не является допустимым приоритетом.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> имеет значение null; </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary>Выполняет указанный делегат асинхронно, с заданными приоритетом и значением таймаута, в потоке, в котором был создан объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Значение, возвращаемое вызываемым делегатом, или null, если делегат не возвращает никакого значения.</returns>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="timeout">Максимальное время ожидания завершения операции.</param>
      <param name="method">Делегат метода без аргументов, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary>Выполняет указанный делегат синхронно, с заданными приоритетом и аргументом, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Значение, возвращаемое вызываемым делегатом, или null, если делегат не возвращает никакого значения.</returns>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="timeout">Максимальное время ожидания завершения операции.</param>
      <param name="method">Делегат метода с несколькими аргументами, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Объект, передаваемый в качестве аргумента указанному методу.Это может быть значение null, если аргументы не требуются.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="priority" /> равно значению параметра <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="priority" /> не является допустимым приоритетом.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> имеет значение null; </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary>Выполняет указанный делегат синхронно, с заданными приоритетом и аргументами, в потоке, с которым связан <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Значение, возвращаемое вызываемым делегатом, или null, если делегат не возвращает никакого значения.</returns>
      <param name="priority">Приоритет относительно других ожидающих выполнения операций в очереди событий <see cref="T:System.Windows.Threading.Dispatcher" />, с которым вызван заданный метод.</param>
      <param name="timeout">Максимальное время ожидания завершения операции.</param>
      <param name="method">Делегат метода с несколькими аргументами, помещенный в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />.</param>
      <param name="arg">Объект, передаваемый в качестве аргумента указанному методу.</param>
      <param name="args">Массив объектов, передаваемых в качестве аргументов указанному методу. </param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="priority" /> равно значению параметра <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="priority" /> не содержит допустимого значения <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> имеет значение null; </exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary>Инициирует синхронный процесс остановки <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary>Входит в цикл выполнения.</summary>
      <param name="frame">Фрейм для обработки диспетчером.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frame" /> имеет значение null;</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> ― true.— или —<paramref name="frame" /> выполняется с другим <see cref="T:System.Windows.Threading.Dispatcher" />.— или —Диспетчер отключен.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary>Помещает главный фрейм выполнения в очередь событий <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary>Происходит после остановки <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary>Происходит, когда начинается процесс остановки <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary>Возвращает поток, с которым связан данный <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <returns>Поток.</returns>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary>Происходит, когда выбрасывается и никаким кодом не перехватывается исключение потока при выполнении делегата с помощью <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> или <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary>Происходит, когда выбрасывается и никаким кодом не перехватывается исключение потока при выполнении делегата с помощью <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> или <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> на стадии фильтра. </summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary>Определяет, является ли <see cref="T:System.Windows.Threading.DispatcherPriority" /> допустимым приоритетом. </summary>
      <param name="priority">Проверяемый приоритет.</param>
      <param name="parameterName">Строка, которая будет возвращена исключением, которое будет сгенерировано, если приоритет окажется недействительным.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="priority" /> не содержит допустимого значения <see cref="T:System.Windows.Threading.DispatcherPriority" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary>Определяет, имеет ли вызывающий поток доступ к этому <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
      <exception cref="T:System.InvalidOperationException">Вызывающий поток не имеет доступа к этому <see cref="T:System.Windows.Threading.Dispatcher" />.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary>Предоставляет данные для событий, связанных с <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary>Объект <see cref="T:System.Windows.Threading.Dispatcher" />, связанный с данным событием. </summary>
      <returns>Диспетчер.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary>Представляет цикл выполнения в <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherFrame" />, используя заданный флаг запроса завершения работы.</summary>
      <param name="exitWhenRequested">Указывает, завершает ли работу этот фрейм, когда запрашивается завершение работы всех фреймов.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary>Получает или задает значение, указывающее, должен ли этот <see cref="T:System.Windows.Threading.DispatcherFrame" /> продолжить работу.</summary>
      <returns>true, если фрейм должен продолжить работу; в противном случае — false.Значением по умолчанию является true.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary>Предоставляет данные для событий <see cref="T:System.Windows.Threading.DispatcherHooks" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" /> class. </summary>
      <param name="operation">Операция, связанная с данным событием.</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary>Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> associated with this event. </summary>
      <returns>The <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary>Gets the <see cref="T:System.Windows.Threading.DispatcherOperation" /> associated with this event. </summary>
      <returns>Операция.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary>Представляет метод обработки событий, связанных с <see cref="T:System.Windows.Threading.DispatcherHooks" />. </summary>
      <param name="sender">Источник события.</param>
      <param name="e">Данные события.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary>Предоставляет дополнительные сведения о работе <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary>Происходит, когда у диспетчера больше нет ни одной операции для обработки. </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary>Генерируется при отмене операции. </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary>Генерируется по завершении операции. </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary>Происходит, когда операция помещается в очередь диспетчера. </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary>Генерируется при изменении приоритета операции. </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary>Представляет объект, связанный с объектом <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherObject" /> class. </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary>Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <returns>true, если вызывающий поток имеет доступ к этому объекту; в противном случае — false.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary>Возвращает объект <see cref="T:System.Windows.Threading.Dispatcher" />, с которым связан этот объект <see cref="T:System.Windows.Threading.DispatcherObject" />. </summary>
      <returns>Диспетчер.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary>Обеспечивает наличие у вызывающего потока доступ к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.</summary>
      <exception cref="T:System.InvalidOperationException">вызывающий поток не имеет доступа к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary>Представляет объект, используемый для взаимодействия с операцией, помещенной в очередь объекта <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary>Отменяет операцию. </summary>
      <returns>true, если операция отменена; в противном случае — false.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary>Генерируется при отмене операции.</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary>Генерируется по завершении операции. </summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary>Возвращает объект <see cref="T:System.Windows.Threading.Dispatcher" />, в очередь которого помещена данная операция. </summary>
      <returns>Диспетчер.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary>Возвращает или задает приоритет операции в очереди объекта <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
      <returns>Приоритет делегата в очереди.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary>Возвращает результат операции по ее завершении. </summary>
      <returns>Результат операции -или- null, если операция не завершилась. </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary>Возвращает текущее состояние операции.</summary>
      <returns>Состояние операции.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary>Ожидает завершения операции</summary>
      <returns>Состояние операции. </returns>
      <exception cref="T:System.InvalidOperationException">Параметр <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> содержит значение <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.Это может произойти при ожидании операции, которая уже выполняется в том же потоке.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary>Ожидает завершения операции в течение заданного времени.</summary>
      <returns>Состояние операции. </returns>
      <param name="timeout">Максимальное время ожидания.</param>
      <exception cref="T:System.InvalidOperationException">Параметр <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> содержит значение <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.Это может произойти при ожидании операции, которая уже выполняется в том же потоке.</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary>Представляет делегат для использования в операциях диспетчера.</summary>
      <returns>Объект, возвращаемый функцией обратного вызова.</returns>
      <param name="arg">Аргумент, переданный функции обратного вызова.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary>Описывает возможные значения состояния <see cref="T:System.Windows.Threading.DispatcherOperation" />. </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary>Операция находится в состоянии ожидания и все еще в очереди <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary>Операция отменена. </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary>Операция завершена. </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary>Выполнение операции началось, но еще не завершилось. </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary>Описывает приоритеты, с которыми могут вызываться операции посредством <see cref="T:System.Windows.Threading.Dispatcher" />. </summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary>Значением перечисляемого типа является -1.Это недействительный приоритет.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary>Значением перечисления является 0.Операции не обрабатываются.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary>Значением перечисления является -1.Операции обрабатываются, когда система бездействует.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary>Значением перечисления является -2.Операции обрабатываются, когда приложение бездействует.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary>Значением перечисления является 3.Операции обрабатываются после завершения фоновых операций.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary>Значением перечисления является 4.Операции обрабатываются после завершения всех остальных операций, которые не находятся в состоянии ожидания.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary>Значением перечисления является 5.Операции обрабатываются с таким же приоритетом, как и ввод данных.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary>Значением перечисления является 6.Операции обрабатываются, когда завершены формирование структуры и отрисовка содержимого, но перед обработкой элементов с приоритетом ввода.Именно на этой стадии генерируется событие Loaded.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary>Значением перечисления является 7.Операции обрабатываются с таким же приоритетом, как и отрисовка.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary>Значением перечисления является 8.Операции обрабатываются с таким же приоритетом, как и привязка данных.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary>Значением перечисления является 9.Операции обрабатываются с обычным приоритетом.Это типичный приоритет приложений.</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary>Значением перечисления является 10.Операции обрабатываются перед другими асинхронными операциями.Это наивысший приоритет.</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary>Представляет объект Dispatcher, когда он отличен, и предоставляет средства для его повторного включения. </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary>Возобновляет работу диспетчера.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary>Определяет, равен ли заданный объект <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> данному объекту <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />.</summary>
      <returns>true, если заданный объект равен данному объекту <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" />; в противном случае — false.</returns>
      <param name="obj">Объект, который необходимо проверить на равенство.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary>Gets a hash code for this instance. </summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary>Determines whether two <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> objects are equal.</summary>
      <returns>true if the <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> objects are equal; otherwise, false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary>Determines whether two <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> objects are not equal.</summary>
      <returns>true, если объекты <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> не равны; в противном случае — false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary>Предоставляет контекст синхронизации для Windows Presentation Foundation (WPF).</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />, используя текущий объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />, используя указанный объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="dispatcher">Объект <see cref="T:System.Windows.Threading.Dispatcher" />, с которым требуется связать данный <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dispatcher" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary>Создает копию данного <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />. </summary>
      <returns>Копия данного контекста синхронизации.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Асинхронно вызывает функцию обратного вызова в контексте синхронизации. </summary>
      <param name="d">Вызываемый делегат.</param>
      <param name="state">Объект, переданный делегату.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="d" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Синхронно вызывает функцию обратного вызова в контексте синхронизации.</summary>
      <param name="d">Вызываемый делегат.</param>
      <param name="state">Объект, переданный делегату.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="d" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary>Ожидает получения сигнала всеми или элементами заданного массива или любым из его элементов.</summary>
      <returns>Индекс объекта, удовлетворившего операцию ожидания, в массиве.</returns>
      <param name="waitHandles">Массив, содержащий собственные обработчики операционной системы.</param>
      <param name="waitAll">true для ожидания всех обработчиков; false для ожидания любого обработчика.</param>
      <param name="millisecondsTimeout">Время ожидания в миллисекундах или <see cref="F:System.Threading.Timeout.Infinite" /> (-1), если ожидание должно быть бесконечным.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary>Таймер, интегрированный в очередь <see cref="T:System.Windows.Threading.Dispatcher" />, обрабатываемый с заданным интервалом времени и заданным приоритетом. </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherTimer" />.</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherTimer" />, устанавливая для него заданные интервал, приоритет, обработчик событий и объект <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="interval">Период времени между тактами.</param>
      <param name="priority">Приоритет, с которым следует вызывать таймер.</param>
      <param name="callback">Обработчик для событий <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />.</param>
      <param name="dispatcher">Диспетчер, с которым связан таймер.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dispatcher" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="interval" /> меньше 0 или больше <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherTimer" />, обрабатывающий события таймера с заданным приоритетом.</summary>
      <param name="priority">Приоритет, с которым следует вызывать таймер.</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherTimer" />, который выполняется с заданным приоритетом заданным объектом <see cref="T:System.Windows.Threading.Dispatcher" />.</summary>
      <param name="priority">Приоритет, с которым следует вызывать таймер.</param>
      <param name="dispatcher">Диспетчер, с которым связан таймер.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dispatcher" /> имеет значение null;</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary>Возвращает <see cref="T:System.Windows.Threading.Dispatcher" />, связанный с данным <see cref="T:System.Windows.Threading.DispatcherTimer" />. </summary>
      <returns>Диспетчер.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary>Возвращает или задает период времени между тактами таймера. </summary>
      <returns>Период времени между тактами.Значением по умолчанию является 00:00:00.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="interval" /> меньше 0 или больше <see cref="F:System.Int32.MaxValue" /> миллисекунд.</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary>Возвращает или задает значение, указывающее, работает ли таймер. </summary>
      <returns>true, если таймер запущен; в противном случае — false.Значением по умолчанию является false.</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary>Запускает <see cref="T:System.Windows.Threading.DispatcherTimer" />. </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary>Останавливает <see cref="T:System.Windows.Threading.DispatcherTimer" />. </summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary>Возвращает или задает определенный пользователем объект данных, передаваемый обработчику событий <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />. </summary>
      <returns>Определенные пользователем данные.Значение по умолчанию — null.</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary>Происходит по истечении интервала таймера. </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary>Предоставляет данные для связанного с объектом <see cref="T:System.Windows.Threading.Dispatcher" /> события <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary>Возвращает исключение, сгенерированное при выполнении кода с помощью диспетчера. </summary>
      <returns>Исключение. </returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary>Возвращает или задает значение, указывающее, обработано ли событие исключения. </summary>
      <returns>true, если исключение обработано; в противном случае —false.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Данные события.</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary>Предоставляет данные для связанного с объектом <see cref="T:System.Windows.Threading.Dispatcher" /> события <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary>Возвращает исключение, сгенерированное при выполнении кода с помощью диспетчера.</summary>
      <returns>Исключение.</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary>Возвращает или задает значение, указывающее, следует ли перехватить исключение и вызвать обработчики события. </summary>
      <returns>true, если <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> должно быть сгенерировано; в противном случае — false.Значением по умолчанию является true.</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Данные события.</param>
    </member>
  </members>
</doc>