<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Messaging</name>
  </assembly>
  <members>
    <member name="T:System.Messaging.AccessControlEntry">
      <summary>Задает права доступа для доверенного лица (пользователя, группы или компьютера) на выполнение зависящих от приложения реализаций общих задач.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.AccessControlEntry" />, который не определяет ни доверенное лицо, ни набор применимых для него прав.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.AccessControlEntry" />, определяющего доверенное лицо, которому предоставлены права или которому отказано в предоставлении прав.</summary>
      <param name="trustee">Объект <see cref="T:System.Messaging.Trustee" />, задающий пользователя, группу, компьютер, домен или псевдоним. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="trustee" /> — null. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.AccessControlEntry" />, задающего доверенное лицо, присваиваемые права, а также предоставление или отказ в предоставлении этих прав.</summary>
      <param name="trustee">Объект <see cref="T:System.Messaging.Trustee" />, задающий пользователя, группу, компьютер, домен или псевдоним. </param>
      <param name="genericAccessRights">Поразрядное сочетание значений <see cref="T:System.Messaging.GenericAccessRights" />. </param>
      <param name="standardAccessRights">Поразрядное сочетание значений <see cref="T:System.Messaging.StandardAccessRights" />. </param>
      <param name="entryType">Одно из значений <see cref="T:System.Messaging.AccessControlEntryType" />, задающее тип операции с правами: разрешить, отказать в разрешении, установить или отозвать указанные права. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="trustee" /> — null. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметры <paramref name="genericAccessRights" />, или <paramref name="standardAccessRights" />, или <paramref name="entryType" /> являются недопустимыми значениями перечисления. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.CustomAccessRights">
      <summary>Получает или задает пользовательские права доступа.</summary>
      <returns>Права доступа, зависящие от приложения; обычно определяются как битовые флажки.</returns>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.EntryType">
      <summary>Получает или задает значение, указывающее, каким образом права доступа применяются к доверенному лицу.</summary>
      <returns>Одно из значений <see cref="T:System.Messaging.AccessControlEntryType" />, задающее тип операции с правами: разрешить, отказать в разрешении, установить или отозвать указанные права.Значение по умолчанию — Allow.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Тип записи не является допустимым значением перечисления <see cref="T:System.Messaging.AccessControlEntryType" />. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.GenericAccessRights">
      <summary>Получает или задает набор общих прав доступа, которые отображаются как на стандартные, так и на зависящие от приложения права доступа для чтения, записи и выполнения.</summary>
      <returns>Поразрядное сочетание значений <see cref="T:System.Messaging.GenericAccessRights" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Устанавливаемое значение не является допустимой комбинацией элементов битовых флажков <see cref="T:System.Messaging.GenericAccessRights" />. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.StandardAccessRights">
      <summary>Получает или задает стандартные права доступа, соответствующие операциям, общим для большинства объектов, связанных с защитой.</summary>
      <returns>Поразрядное сочетание значений <see cref="T:System.Messaging.StandardAccessRights" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Устанавливаемое значение не является допустимой комбинацией элементов битовых флажков <see cref="T:System.Messaging.StandardAccessRights" />. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.Trustee">
      <summary>Получает или задает пользователя, группу, домен или псевдоним, которым присваиваются права доступа.</summary>
      <returns>Объект <see cref="T:System.Messaging.Trustee" />, указывающий учетную запись пользователя, учетную запись группы или сеанс входа в систему, к которым применим объект <see cref="T:System.Messaging.AccessControlEntry" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение свойства <see cref="P:System.Messaging.AccessControlEntry.Trustee" /> равно null. </exception>
    </member>
    <member name="T:System.Messaging.AccessControlEntryType">
      <summary>Указывает, следует ли разрешить, отклонить выдачу разрешения или отозвать права доступа для доверенного лица.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Allow">
      <summary>Запись разрешения доступа, вызывающая добавление новых прав к любым существующим правам данного доверенного лица.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Set">
      <summary>Запись разрешения доступа, аналогичная записи Allow, за исключением того, что эта новая запись разрешает только указанные права.В этом случае аннулируются любые существующие права, включая и все существующие записи запрета доступа, для данного доверенного лица.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Deny">
      <summary>Запись запрещения доступа, запрещающая указанные права в дополнение к любым запрещенным в настоящий момент правам данного доверенного лица.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Revoke">
      <summary>Запись, удаляющая все существующие разрешенные или запрещенные права для указанного доверенного лица.</summary>
    </member>
    <member name="T:System.Messaging.AccessControlList">
      <summary>Содержит список элементов контроля доступа, задающих права доступа для одного или нескольких доверенных лиц.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlList.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.AccessControlList" />.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)">
      <summary>Добавляет элемент контроля доступа в список управления доступом.</summary>
      <returns>Позиция, в которую вставлен новый элемент контроля доступа.</returns>
      <param name="entry">Объект <see cref="T:System.Messaging.AccessControlEntry" />, добавляемый в конец списка управления доступом.  </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="entry" /> — null. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)">
      <summary>Определяет, содержит ли список управления доступом определенный элемент контроля доступа.</summary>
      <returns>Значение true, если элемент контроля доступа найден в списке управления доступом, в противном случае — значение false.</returns>
      <param name="entry">Элемент <see cref="T:System.Messaging.AccessControlEntry" />, который требуется найти в списке управления доступом. </param>
    </member>
    <member name="M:System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)">
      <summary>Копирует весь список управления доступом в совместимый одномерный массив элементов контроля доступа, начиная с указанного индекса конечного массива.</summary>
      <param name="array">Массив типа <see cref="T:System.Messaging.AccessControlEntry" />, в который копируются записи списка управления доступом.Индексация в массиве должна начинаться с нуля.</param>
      <param name="index">Индекс в массиве, в который начинается копирование записей списка управления доступом. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="array" /> — null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля. </exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="index" /> больше длины параметра <paramref name="array" /> или равен ей.-или-Количество элементов в исходном списке управления доступом больше имеющегося места, начиная от <paramref name="index" /> до конца результирующего массива элементов контроля доступа. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)">
      <summary>Определяет конкретный индекс элемента контроля доступа в списке управления доступом.</summary>
      <returns>Индекс элемента, если он был найден в списке; в противном случае значение равно -1. </returns>
      <param name="entry">Элемент <see cref="T:System.Messaging.AccessControlEntry" />, который требуется найти в списке управления доступом. </param>
    </member>
    <member name="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)">
      <summary>Вставляет элемент контроля доступа в заданную позицию в списке управления доступом.</summary>
      <param name="index">Индекс (отсчитываемый с нуля), соответствующей позиции, в которую должен быть вставлен элемент контроля доступа. </param>
      <param name="entry">Элемент <see cref="T:System.Messaging.AccessControlEntry" />, вставляемый в список управления доступом. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Недопустимый индекс параметра <paramref name="index" /> в этом списке управления доступом. </exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="entry" /> — null. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)">
      <summary>Удаляет из списка управления доступом первое вхождение определенного элемента контроля доступа.</summary>
      <param name="entry">Элемент <see cref="T:System.Messaging.AccessControlEntry" />, удаляемый из списка управления доступом. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="entry" /> — null. </exception>
    </member>
    <member name="T:System.Messaging.AcknowledgeTypes">
      <summary>Задает типы подтверждающих сообщений, которые Message Queuing возвращает в отправляющее приложение.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.PositiveArrival">
      <summary>Маска используется для запроса положительного подтверждения в случае, когда исходное сообщение достигает очереди.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.PositiveReceive">
      <summary>Маска используется для запроса положительного подтверждения в случае, когда исходное сообщение успешно извлечено из очереди.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NegativeReceive">
      <summary>Маска используется для запроса отрицательного подтверждения в случае, когда исходное сообщение не удается получить из очереди.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.None">
      <summary>Маска используется для отказа от посылки подтверждающих сообщений (положительных и отрицательных).</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReachQueue">
      <summary>Маска используется для запроса отрицательного подтверждения в случае, когда исходному сообщению не удается достичь очереди.Это может произойти по истечении времени действия таймера достижения очереди или при когда невозможна проверка подлинности сообщения.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReceive">
      <summary>Маска используется для запроса отрицательного подтверждения в случае возникновения ошибки, препятствующей получению исходного сообщения из очереди до истечения срока действия таймера.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.FullReachQueue">
      <summary>Маска используется для запроса положительного подтверждения в случае, когда исходное сообщение достигает очереди, или отрицательного подтверждения, если истек срок таймера времени достижения очереди или если исходному сообщению не удается пройти проверку подлинности.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.FullReceive">
      <summary>Маска используется для запроса положительного подтверждения в случае, если исходное сообщение получено из очереди до истечения срока действия таймера, или же отрицательного подтверждения во всех остальных случаях.</summary>
    </member>
    <member name="T:System.Messaging.Acknowledgment">
      <summary>Указывает результат предпринятой попытки доставки сообщения.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.None">
      <summary>Данное сообщение не является подтверждающим сообщением.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.AccessDenied">
      <summary>Отрицательное подтверждение поступления, показывающее, что передающее приложение не обладает необходимыми правами на передачу сообщения в очередь места назначения.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadDestinationQueue">
      <summary>Отрицательное подтверждение поступления, показывающее, что очередь места назначения недоступна для передающего приложения.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadEncryption">
      <summary>Отрицательное подтверждение поступления, показывающее, что диспетчер очереди места назначения не может расшифровать конфиденциальное сообщение.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadSignature">
      <summary>Отрицательное подтверждение поступления, показывающее, что цифровая подпись исходного сообщения недействительна, и служба Message Queuing не может подтвердить подлинность сообщения.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.CouldNotEncrypt">
      <summary>Отрицательное подтверждение поступления, показывающее, что диспетчер очереди источника не может зашифровать конфиденциальное сообщение.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.HopCountExceeded">
      <summary>Отрицательное подтверждение поступления, указывающее, что было превышено значение счетчика прыжков (показывающего число промежуточных серверов).</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.NotTransactionalQueue">
      <summary>Отрицательное подтверждение поступления, показывающее, что транзакционное сообщение было передано в нетранзакционную очередь.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.NotTransactionalMessage">
      <summary>Отрицательное подтверждение поступления, показывающее, что нетранзакционное сообщение было передано в транзакционную очередь.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.Purged">
      <summary>Отрицательное подтверждение поступления, показывающее, что сообщение было очищено до достижения своей очереди места назначения.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueueDeleted">
      <summary>Отрицательное подтверждение чтения, показывающее, что очередь была удалена до чтения сообщения.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueueExceedMaximumSize">
      <summary>Отрицательное подтверждение поступления, показывающее, что исходное сообщение не было доставлено вследствие полного заполнения очереди места назначения.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueuePurged">
      <summary>Отрицательное подтверждение чтения, показывающее, что очередь была очищена до чтения сообщения.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReachQueue">
      <summary>Положительное подтверждение поступления, показывающее, что исходное сообщение достигло своей очереди места назначения.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReachQueueTimeout">
      <summary>Отрицательное подтверждение поступления, показывающее, что срок действия таймера достижения очереди или таймера получения сообщения истек до того, как исходное сообщение смогло достичь очереди места назначения.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReceiveTimeout">
      <summary>Отрицательное подтверждение чтения, показывающее, что исходное сообщение не было получено из очереди до истечения срока действия таймера получения сообщения.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.Receive">
      <summary>Положительное подтверждение чтения, показывающее, что исходное сообщение было получено принимающим приложением.</summary>
    </member>
    <member name="T:System.Messaging.ActiveXMessageFormatter">
      <summary>Сериализует элементарные типы данных и другие объекты в текст сообщений Message Queuing или десериализует эти сообщения, используя формат, совместимый с MSMQ ActiveX Component.</summary>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</summary>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>Определяет, может ли модуль форматирования выполнить десериализацию содержимого сообщения.</summary>
      <returns>Значение true, если класс <see cref="T:System.Messaging.ActiveXMessageFormatter" /> может выполнить десериализацию сообщения, в противном случае — значение false.</returns>
      <param name="message">Объект <see cref="T:System.Messaging.Message" /> для проверки. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> — null. </exception>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Clone">
      <summary>Создает экземпляр класса <see cref="T:System.Messaging.ActiveXMessageFormatter" />, идентичный текущему экземпляру <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</summary>
      <returns>Объект со свойствами, идентичными свойствам этого объекта <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</returns>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)">
      <summary>Предоставляет служебную программу, которая помогает сериализовать COM-объекты, реализующие интерфейс IPersistStream и нуждающиеся в вызове IPersistStreamInit.</summary>
      <param name="streamedObject">Объект OLE, который реализует IPersistStreamInit. </param>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
      <summary>Читает содержимое из данного сообщения и создает объект, содержащий десериализованное сообщение.</summary>
      <returns>Десериализованное сообщение.</returns>
      <param name="message">Сообщение <see cref="T:System.Messaging.Message" /> в формате элемента управления MSMQ ActiveX, которое требуется десериализовать. </param>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Messaging.Message.BodyType" /> объекта <paramref name="message" />, передаваемое в качестве параметра, невозможно отобразить в элементарный тип, и это свойство не представляет потоковый объект. </exception>
      <exception cref="T:System.NotSupportedException">Текст представляет собой хранимый объект.<see cref="T:System.Messaging.ActiveXMessageFormatter" /> не поддерживает десериализацию хранимых объектов.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> — null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>Выполняет сериализацию объекта в текст сообщения.</summary>
      <param name="message">Сообщение <see cref="T:System.Messaging.Message" />, свойство <see cref="P:System.Messaging.Message.Body" /> которого будет содержать сериализованный объект. </param>
      <param name="obj">Объект, который должен быть сериализован в текст сообщения. </param>
      <exception cref="T:System.InvalidOperationException">Сериализуемый объект не является ни примитивом, ни потоковым объектом, реализующим OLE-интерфейс IPersistStream. </exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> — null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Messaging.BinaryMessageFormatter">
      <summary>Сериализует или десериализует объект или весь граф объектов, помещая их в текст сообщения службы Message Queuing или извлекая из текста сообщения службы Message Queuing с использованием двоичного формата.</summary>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.BinaryMessageFormatter" /> без задания стиля типа или стиля сборки верхнего объекта.</summary>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.BinaryMessageFormatter" /> с заданием форматов корневого объекта и описаний типов.</summary>
      <param name="topObjectFormat">Определяет, каким образом верхний (корневой) объект графа располагается в сериализованном потоке. </param>
      <param name="typeFormat">Определяет, как в сериализованном потоке располагаются описания типа. </param>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>Определяет, может ли модуль форматирования выполнить десериализацию содержимого сообщения.</summary>
      <returns>Значение true, если двоичный модуль форматирования сообщений может выполнить десериализацию сообщения, в противном случае — false. </returns>
      <param name="message">Объект <see cref="T:System.Messaging.Message" /> для проверки. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> — null. </exception>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Clone">
      <summary>Создает экземпляр класса <see cref="T:System.Messaging.BinaryMessageFormatter" />, свойства чтения и записи (форматы корневого объекта и описания типа) которого такие же, как и у текущего класса <see cref="T:System.Messaging.BinaryMessageFormatter" />.</summary>
      <returns>Объект со свойствами, идентичными свойствам данного объекта <see cref="T:System.Messaging.BinaryMessageFormatter" />, но с метаданными, которые не определяют его как экземпляр класса модуля форматирования.</returns>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
      <summary>Читает содержимое из данного сообщения и создает объект, содержащий десериализованное сообщение.</summary>
      <returns>Десериализованное сообщение.</returns>
      <param name="message">Сообщение <see cref="T:System.Messaging.Message" /> в двоичном формате, предназначенное для десериализации. </param>
      <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Messaging.Message.BodyType" /> сообщения не обозначает двоичный объект. </exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> — null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat">
      <summary>Получает или задает значение, которое определяет порядок десериализации верхнего (корневого) объекта графа в части, касающейся поиска и загрузки сборки этого потока.</summary>
      <returns>Одно из значений <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />, которое определяет характер процесса десериализации.</returns>
    </member>
    <member name="P:System.Messaging.BinaryMessageFormatter.TypeFormat">
      <summary>Получает или задает значение, которое определяет расположение описаний типа в сериализованном потоке.</summary>
      <returns>Объект <see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" />, определяющий формат описания типа.</returns>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>Выполняет сериализацию объекта в текст сообщения.</summary>
      <param name="message">Сообщение <see cref="T:System.Messaging.Message" />, свойство <see cref="P:System.Messaging.Message.Body" /> которого будет содержать сериализованный объект. </param>
      <param name="obj">Объект, который должен быть сериализован в текст сообщения. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> — null. </exception>
    </member>
    <member name="T:System.Messaging.CryptographicProviderType">
      <summary>Задает поставщиков служб шифрования, доступных для проверки цифровых подписей.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.None">
      <summary>Тип поставщика служб шифрования не задан.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.RsaFull">
      <summary>Тип полного поставщика RSA, поддерживающего как цифровые подписи, так и шифрование данных.Считается поставщиком служб шифрования общего назначения.Алгоритм открытого ключа RSA используется для всех операций с открытыми ключами.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.RsqSig">
      <summary>Подмножество типа поставщика RsaFull, поддерживающего только функции и алгоритмы, необходимые для хэширования и цифровых подписей.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Dss">
      <summary>A provider type that, like RsqSig, only supports hashes and digital signatures.Dss specifies the Digital Signature Algorithm (DSA) signature algorithm.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Fortezza">
      <summary>Тип поставщика, содержащий набор криптографических протоколов и алгоритмов, принадлежащих Национальному институту стандартов и технологий (National Institute of Standards and Technology).</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.MicrosoftExchange">
      <summary>Тип поставщика, разработанный для криптографических потребностей почтового приложения Microsoft Exchange и других приложений, совместимых с Microsoft Mail.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Ssl">
      <summary>Тип поставщика, поддерживающего протокол SSL (Secure Sockets Layer).</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttMer">
      <summary>Предприятие поставщика технологии безопасных транзакций.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttAcq">
      <summary>Покупатель поставщика технологии безопасных транзакций.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttBrnd">
      <summary>Марка поставщика технологии безопасных транзакций.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttRoot">
      <summary>Корневой каталог поставщика технологии безопасных транзакций.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttIss">
      <summary>Издатель поставщика технологии безопасных транзакций.</summary>
    </member>
    <member name="T:System.Messaging.Cursor">
      <summary>Объект <see cref="T:System.Messaging.Cursor" /> используется для сохранения определенного положения в объекте <see cref="T:System.Messaging.MessageQueue" /> при чтении сообщений очереди.</summary>
    </member>
    <member name="M:System.Messaging.Cursor.Close">
      <summary>Закрывает курсор, разрешая службе Message Queuing освободить связанные ресурсы.</summary>
    </member>
    <member name="M:System.Messaging.Cursor.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Messaging.Cursor" />.</summary>
    </member>
    <member name="T:System.Messaging.DefaultPropertiesToSend">
      <summary>Задает значения свойств по умолчанию, которые будут использоваться при передаче в очередь сообщений объектов, отличающихся от экземпляра <see cref="T:System.Messaging.Message" />.</summary>
    </member>
    <member name="M:System.Messaging.DefaultPropertiesToSend.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.DefaultPropertiesToSend" />.</summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType">
      <summary>Получает или задает тип сообщения подтверждения, которое должно возвращаться приложению, передающему исходное сообщение.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Messaging.AcknowledgeTypes" />.Это значение используется для определения типа сообщений подтверждения, размещаемых системой в очереди администрирования, а также момента, в который подтверждения возвращаются в приложение, передавшее исходное сообщение.Значение по умолчанию — AcknowledgeTypes.None.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue">
      <summary>Получает или задает очередь, принимающую сообщения подтверждения, сформированные службой Message Queuing.</summary>
      <returns>Класс <see cref="T:System.Messaging.MessageQueue" />, задающий очередь администрирования, используемую для сообщений подтверждения, создаваемых системой.Значение по умолчанию — null.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AppSpecific">
      <summary>Получает или задает дополнительные сведения, зависящие от приложения.</summary>
      <returns>Сведения, зависящие от приложения.Значение по умолчанию равно 0.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId">
      <summary>Получает или задает значение, указывающее, должен ли быть присоединен к сообщению идентификатор отправителя.</summary>
      <returns>Значение true, если идентификатор отправителя должен быть присоединен к сообщению; в противном случае — значение false.Значение по умолчанию— true.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm">
      <summary>Получает или задает алгоритм шифрования, используемый для шифрования тела конфиденциального сообщения.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Messaging.EncryptionAlgorithm" />.Значение по умолчанию — RC2.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Extension">
      <summary>Получает или задает дополнительные сведения, связанные с данным сообщением.</summary>
      <returns>Байтовый массив, предоставляющий дополнительные, определяемые приложением, сведения, связанные с данным сообщением.По умолчанию задан массив нулевой длины.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm">
      <summary>Получает или задает алгоритм хэширования, используемый при проверке подлинности сообщений или создании цифровой подписи для сообщения.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Messaging.HashAlgorithm" />.Значение по умолчанию — MD5.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Label">
      <summary>Получает или задает определяемую приложением строку, описывающую данное сообщение.</summary>
      <returns>Метка сообщения.Значением по умолчанию является пустая строка ("").</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Priority">
      <summary>Получает или задает приоритет сообщения, используемый для определения места сообщения при его поступлении в очередь.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Messaging.MessagePriority" />, представляющее уровень приоритета нетранзакционного сообщения.Значение по умолчанию — Normal.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Recoverable">
      <summary>Получает или задает значение, показывающее, будет ли сообщение гарантированно доставлено в случае отказа компьютера или неисправности в сети.</summary>
      <returns>Значение true, если доставка сообщения гарантируется за счет сохранения сообщения на диске на время нахождения на маршруте, и значение false, если доставка не гарантируется.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.ResponseQueue">
      <summary>Получает или задает очередь, принимающую ответные сообщения, создаваемые приложением.</summary>
      <returns>Очередь сообщений <see cref="T:System.Messaging.MessageQueue" />, в которую возвращаются ответные сообщения, создаваемые приложениями.По умолчанию установлено значение null.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived">
      <summary>Получает или задает лимит времени, в течение которого сообщение должно быть извлечено из очереди места назначения.</summary>
      <returns>Суммарное время в секундах, в течение которого переданное сообщение должно быть получено из очереди места назначения.Значение по умолчанию — <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue">
      <summary>Получает или задает лимит времени, в течение которого сообщение должно дойти до очереди.</summary>
      <returns>Лимит времени, отсчитываемый в секундах с момента передачи, в течение которого сообщение должно достичь очереди места назначения.Значение по умолчанию — <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue">
      <summary>Получает очередь состояний транзакций на компьютере-источнике.</summary>
      <returns>Очередь состояний транзакций на компьютере-источнике, используемая для передачи подтверждающих сообщений обратно в передающее приложение.По умолчанию установлено значение null.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication">
      <summary>Получает или задает значение, указывающее, должна ли проводиться проверка подлинности сообщения до его отправки.</summary>
      <returns>Значение true, если передающее приложение запрашивает проверку подлинности для данного сообщения; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue">
      <summary>Получает или задает значение, указывающее, должна ли копия сообщения, которое не может быть доставлено, передаваться в очередь недоставленных сообщений.</summary>
      <returns>Значение true, если при сбое доставки сообщения его копия направляется в очередь недоставленных сообщений; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseEncryption">
      <summary>Получает или задает значение, определяющее, является ли сообщение конфиденциальным.</summary>
      <returns>Значение true, если требуется, чтобы служба Message Queuing шифровала сообщения; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue">
      <summary>Получает или задает значение, указывающее, должна ли копия сообщения храниться в журнале компьютера, являющегося источником этого сообщения.</summary>
      <returns>Значение true, если необходимо, чтобы копия сообщения сохранялась в журнале компьютера-источника после успешной передачи сообщения с компьютера-источника на следующий этап; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseTracing">
      <summary>Получает или задает значение, указывающее, нужно ли отслеживать сообщение в процессе его перемещения в очередь места назначения.</summary>
      <returns>Значение true, если необходимо, чтобы на каждом промежуточном этапе прохождения сообщения в очередь места назначения создавался отчет, передаваемый в очередь системных отчетов; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.Messaging.EncryptionAlgorithm">
      <summary>Описывает алгоритм, используемый для шифрования тела конфиденциального сообщения.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.None">
      <summary>Шифрование отсутствует.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.Rc2">
      <summary>Значение MQMSG_CALG_RC2.Это стандартное значение для свойства шифрования объекта сообщения приложения Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.Rc4">
      <summary>Значение MQMSG_CALG_RC4.Это соответствует менее защищенному варианту свойства шифрования объекта сообщений приложения Message Queuing.</summary>
    </member>
    <member name="T:System.Messaging.EncryptionRequired">
      <summary>Задает уровень конфиденциальности сообщений, принимаемых очередью.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.None">
      <summary>Принимает только неконфиденциальные (незашифрованные) сообщения.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.Optional">
      <summary>Не накладывает требований по конфиденциальности.Принимает конфиденциальные (зашифрованные) и неконфиденциальные (незашифрованные) сообщения.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.Body">
      <summary>Принимает только конфиденциальные (зашифрованные) сообщения.</summary>
    </member>
    <member name="T:System.Messaging.GenericAccessRights">
      <summary>Использует формат доступа Windows 2000 и Windows NT для задания набора общих прав доступа, которые отображаются службой Message Queuing как на стандартные, так и на зависящие от объекта права доступа для чтения, записи и выполнения.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.All">
      <summary>Доступ для чтения, записи и выполнения.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Execute">
      <summary>Доступ для выполнения.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Write">
      <summary>Доступ для записи.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Read">
      <summary>Доступ для чтения.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.None">
      <summary>Нет доступа.</summary>
    </member>
    <member name="T:System.Messaging.HashAlgorithm">
      <summary>Задает алгоритм хэширования, используемый Message Queuing при проверке подлинности сообщений.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.None">
      <summary>Алгоритм хэширования отсутствует.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md2">
      <summary>MD2 hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md4">
      <summary>MD4 hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md5">
      <summary>MD5 hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Sha">
      <summary>SHA hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Mac">
      <summary>Алгоритм хэширования с МАС-ключами.</summary>
    </member>
    <member name="T:System.Messaging.IMessageFormatter">
      <summary>Сериализует объекты в текст сообщения Message Queuing или десериализует объекты из этого текста.</summary>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>При реализации в классе определяет, может ли модуль форматирования десериализовать содержимое данного сообщения.</summary>
      <returns>Значение true, если модуль форматирования может десериализовать сообщение; в противном случае — значение false.</returns>
      <param name="message">Объект <see cref="T:System.Messaging.Message" /> для проверки. </param>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)">
      <summary>При реализации в классе читает содержимое заданного сообщения и создает объект, содержащий данные из этого сообщения.</summary>
      <returns>Десериализованное сообщение.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to deserialize. </param>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>При реализации в классе сериализует объект в текст сообщения.</summary>
      <param name="message">Объект <see cref="T:System.Messaging.Message" />, который содержит сериализованный объект. </param>
      <param name="obj">Объект, который требуется сериализовать в сообщение. </param>
    </member>
    <member name="T:System.Messaging.Message">
      <summary>Provides access to the properties needed to define a Message Queuing message.</summary>
    </member>
    <member name="M:System.Messaging.Message.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class with an empty body.</summary>
    </member>
    <member name="M:System.Messaging.Message.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the <see cref="T:System.Messaging.XmlMessageFormatter" /> to serialize the specified object into the body of the message.</summary>
      <param name="body">The object to be serialized into the body of the message. </param>
    </member>
    <member name="M:System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class using the specified formatter to serialize the specified object into the body of the message.</summary>
      <param name="body">The object to be serialized into the body of the message. </param>
      <param name="formatter">A <see cref="T:System.Messaging.IMessageFormatter" /> that specifies the formatter with which to serialize the message body. </param>
    </member>
    <member name="P:System.Messaging.Message.AcknowledgeType">
      <summary>Gets or sets the type of acknowledgment message to be returned to the sending application.</summary>
      <returns>One of the <see cref="T:System.Messaging.AcknowledgeTypes" /> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application.The default is None.</returns>
      <exception cref="T:System.InvalidOperationException">The message is filtered to ignore the <see cref="P:System.Messaging.Message.AcknowledgeType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Acknowledgment">
      <summary>Gets the classification of acknowledgment that this message represents.</summary>
      <returns>One of the <see cref="T:System.Messaging.Acknowledgment" /> enumeration values.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or-The message queue is filtered to ignore the <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AdministrationQueue">
      <summary>Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueue" /> that specifies the administration queue used for system-generated acknowledgment messages.The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AdministrationQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AppSpecific">
      <summary>Gets or sets additional, application-specific information.</summary>
      <returns>Information that is specific to the application.The default is zero.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AppSpecific" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.ArrivedTime">
      <summary>Gets the time that the message arrived in the destination queue.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the message's arrival time in the destination queue.The time is adjusted from GMT to the local time of the computer on which the destination queue resides.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or-The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ArrivedTime" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AttachSenderId">
      <summary>Gets or sets a value that indicates whether the sender ID should be attached to the message.</summary>
      <returns>true if the <see cref="P:System.Messaging.Message.SenderId" /> should be attached to the message; otherwise, false.The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AttachSenderId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Authenticated">
      <summary>Gets a value that indicates whether the message was authenticated.</summary>
      <returns>true if authentication was requested for the message when it entered the queue; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Authenticated" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AuthenticationProviderName">
      <summary>Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.</summary>
      <returns>The name of the cryptographic provider used to generate the digital signature of the message.The default is Microsoft Base Cryptographic Provider version 1.0.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property could not be set.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> was set to null. </exception>
    </member>
    <member name="P:System.Messaging.Message.AuthenticationProviderType">
      <summary>Gets or sets the type of cryptographic provider used to generate the digital signature of the message.</summary>
      <returns>One of the <see cref="T:System.Messaging.CryptographicProviderType" /> values.The default is RSA_FULL.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property could not be set.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Body">
      <summary>Gets or sets the content of the message.</summary>
      <returns>An object that specifies the message contents.The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Messaging.Message.Formatter" /> property is null.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.BodyStream">
      <summary>Gets or sets the information in the body of the message.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> that contains the serialized information included in the <see cref="P:System.Messaging.Message.Body" /> of the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.BodyType">
      <summary>Gets or sets the type of data that the message body contains.</summary>
      <returns>The message body's true type, such as a string, a date, a currency, or a number.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.ConnectorType">
      <summary>Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.</summary>
      <returns>A <see cref="T:System.Guid" /> defined by the application and used in conjunction with connector applications or message encryption.This <see cref="T:System.Guid" /> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ConnectorType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.CorrelationId">
      <summary>Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</summary>
      <returns>The message identifier specified by the <see cref="P:System.Messaging.Message.Id" /> property of the original message.The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.CorrelationId" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.CorrelationId" /> is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.DestinationQueue">
      <summary>Gets the intended destination queue for a message.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueue" /> that specifies the intended destination queue for the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.DestinationSymmetricKey">
      <summary>Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.</summary>
      <returns>An array of byte values that specifies the destination symmetric key used to encrypt the message.The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.DigitalSignature">
      <summary>Gets or sets the digital signature that Message Queuing uses to authenticate the message.</summary>
      <returns>An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message.The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DigitalSignature" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.DigitalSignature" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.EncryptionAlgorithm">
      <summary>Gets or sets the encryption algorithm used to encrypt the body of a private message.</summary>
      <returns>One of the <see cref="T:System.Messaging.EncryptionAlgorithm" /> enumeration values.The default is RC2.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Extension">
      <summary>Gets or sets additional, application-defined information associated with the message.</summary>
      <returns>An array of byte values that provides application-defined information associated with the message.The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Extension" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.Extension" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.Formatter">
      <summary>Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.</summary>
      <returns>The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body.The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.Formatter" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.HashAlgorithm">
      <summary>Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.</summary>
      <returns>One of the <see cref="T:System.Messaging.HashAlgorithm" /> enumeration values.For Windows XP, the default is SHA.Otherwise, the default is MD5.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.HashAlgorithm" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Id">
      <summary>Gets the message's identifier.</summary>
      <returns>The message's unique identifier, which is generated by Message Queuing.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Id" /> property. </exception>
    </member>
    <member name="F:System.Messaging.Message.InfiniteTimeout">
      <summary>Specifies that no time-out exists.</summary>
    </member>
    <member name="P:System.Messaging.Message.IsFirstInTransaction">
      <summary>Gets a value that indicates whether the message was the first message sent in a transaction.</summary>
      <returns>true if the message was the first message sent in a transaction; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.IsLastInTransaction">
      <summary>Gets a value that indicates whether the message was the last message sent in a transaction.</summary>
      <returns>true if the message was the last message sent in a single transaction; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Label">
      <summary>Gets or sets an application-defined Unicode string that describes the message.</summary>
      <returns>The label of the message.The default is an empty string ("").</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Label" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.LookupId">
      <summary>Introduced in MSMQ 3.0.Gets the message's lookup identifier.</summary>
      <returns>The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.</returns>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.LookupId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.MessageType">
      <summary>Gets the message type: Normal, Acknowledgment, or Report.</summary>
      <returns>One of the <see cref="P:System.Messaging.Message.MessageType" /> values.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.MessageType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Priority">
      <summary>Gets or sets the message priority, which determines where in the queue the message is placed.</summary>
      <returns>One of the <see cref="T:System.Messaging.MessagePriority" /> values, which represent the priority levels of non-transactional messages.The default is Normal.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Priority" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Recoverable">
      <summary>Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</summary>
      <returns>true if delivery of the message is guaranteed (through saving the message to disk while en route); false if delivery is not assured.The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Recoverable" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.ResponseQueue">
      <summary>Gets or sets the queue that receives application-generated response messages.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueue" /> to which application-generated response messages are returned.The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ResponseQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SecurityContext">
      <summary>Gets or sets the security context for a message.</summary>
      <returns>A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context for a message, if the property has previously been set; otherwise NULL.</returns>
    </member>
    <member name="P:System.Messaging.Message.SenderCertificate">
      <summary>Gets or sets the security certificate used to authenticate messages.</summary>
      <returns>An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message.The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderCertificate" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SenderId">
      <summary>Gets the identifier of the sending user.</summary>
      <returns>An array of byte values that identifies the sender.The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SenderVersion">
      <summary>Gets the version of Message Queuing used to send the message.</summary>
      <returns>The version of Message Queuing used to send the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderVersion" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SentTime">
      <summary>Gets the date and time on the sending computer that the message was sent by the source queue manager.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the time the message was sent.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SentTime" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SourceMachine">
      <summary>Gets the computer from which the message originated.</summary>
      <returns>The name of the computer from which the message was sent.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SourceMachine" /> property. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The computer information or directory service could not be accessed. </exception>
    </member>
    <member name="P:System.Messaging.Message.TimeToBeReceived">
      <summary>Gets or sets the maximum amount of time for the message to be received from the destination queue.</summary>
      <returns>The total time for a sent message to be received from the destination queue.The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property. </exception>
      <exception cref="T:System.ArgumentException">The value specified for <see cref="P:System.Messaging.Message.TimeToBeReceived" /> is invalid. </exception>
    </member>
    <member name="P:System.Messaging.Message.TimeToReachQueue">
      <summary>Gets or sets the maximum amount of time for the message to reach the queue.</summary>
      <returns>The time limit for the message to reach the destination queue, beginning from the time the message is sent.The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property. </exception>
      <exception cref="T:System.ArgumentException">The value specified for <see cref="P:System.Messaging.Message.TimeToReachQueue" /> is invalid.It might represent a negative number.</exception>
    </member>
    <member name="P:System.Messaging.Message.TransactionId">
      <summary>Gets the identifier for the transaction of which the message was a part.</summary>
      <returns>The identifier for the transaction associated with the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.TransactionStatusQueue">
      <summary>Gets the transaction status queue on the source computer.</summary>
      <returns>The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application.The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent.This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseAuthentication">
      <summary>Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.</summary>
      <returns>true if the sending application requested authentication for the message; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseAuthentication" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseDeadLetterQueue">
      <summary>Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</summary>
      <returns>true if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, false.The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseEncryption">
      <summary>Gets or sets a value that indicates whether to make the message private.</summary>
      <returns>true to require Message Queuing to encrypt the message; otherwise, false.The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseEncryption" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</summary>
      <returns>true to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, false.The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseJournalQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseTracing">
      <summary>Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</summary>
      <returns>true if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, false.The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseTracing" /> property. </exception>
    </member>
    <member name="T:System.Messaging.MessageEnumerator">
      <summary>Предоставляет курсор, перемещающийся только в прямом направлении, для перечисления сообщений в очереди сообщений.</summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Close">
      <summary>Освобождает ресурсы, связанные с перечислителем.</summary>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.Current">
      <summary>Получает текущий объект <see cref="T:System.Messaging.Message" />, на который указывает перечислитель.</summary>
      <returns>Текущее сообщение.</returns>
      <exception cref="T:System.InvalidOperationException">Вы вызвали <see cref="P:System.Messaging.MessageEnumerator.Current" /> до первого вызова <see cref="M:System.Messaging.MessageEnumerator.MoveNext" />.Курсор располагается перед первым элементом перечисления сообщений.-или- Вы вызвали <see cref="P:System.Messaging.MessageEnumerator.Current" /> после вызова <see cref="M:System.Messaging.MessageEnumerator.MoveNext" />, вернувшего false (это указывает, что курсор расположен за последним элементом перечисления сообщений). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">Сообщение, на которое указывает перечислитель, больше не существует.Возможно, оно удалено.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.CursorHandle">
      <summary>Получает собственный дескриптор курсора Message Queuing, используемый для просмотра сообщений в очереди.</summary>
      <returns>Собственный дескриптор курсора.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">Этот дескриптор не существует. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Messaging.MessageEnumerator" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageEnumerator" /> and optionally releases the managed resources.</summary>
      <param name="disposing">Значение true позволяет освободить управляемые и неуправляемые ресурсы; значение false позволяет освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Finalize">
      <summary>Освобождает ресурсы, используемые перечислителем.</summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.MoveNext">
      <summary>Перемещает перечислитель на следующее сообщение в очереди, если таковое в данный момент имеется.</summary>
      <returns>Значение true, если перечислитель был успешно перемещен на следующее сообщение; значение false, если перечислитель достиг конца очереди. </returns>
      <exception cref="T:System.Messaging.MessageQueueException">Возникло исключение, характерное для Message Queuing. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
      <summary>Перемещает перечислитель на следующее сообщение в очереди.Если перечислитель установлен в конец очереди, метод <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> ожидает до тех пор, пока не появится сообщение или же не истечет заданный тайм-аут.</summary>
      <returns>Значение true, если перечислитель успешно переместился на следующее сообщение; значение false, если перечислитель достиг конца очереди, и не появилось новое сообщение в течение времени, заданного параметром <paramref name="timeout" />.</returns>
      <param name="timeout">Время <see cref="T:System.TimeSpan" /> на ожидание сообщения в случае, когда перечислитель устанавливается в конец очереди. </param>
      <exception cref="T:System.ArgumentException">Для параметра timeout задано недопустимое значение.Возможно, это отрицательное число.</exception>
      <exception cref="T:System.Messaging.MessageQueueException">Возникло исключение, характерное для Message Queuing.-или- Истекло время тайм-аута. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent">
      <summary>Удаляет текущее сообщение из транзакционной или нетранзакционной очереди и возвращает сообщение в вызывающее приложение.Не указано время тайм-аута для прибытия сообщения в очередь.</summary>
      <returns>Объект <see cref="T:System.Messaging.Message" />, ссылающийся на первое доступное в очереди сообщение.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
      <summary>Удаляет текущее сообщение из транзакционной очереди и возвращает сообщение в вызывающее приложение.Не указано время тайм-аута для прибытия сообщения в очередь.</summary>
      <returns>Объект <see cref="T:System.Messaging.Message" />, ссылающийся на первое доступное в очереди сообщение.</returns>
      <param name="transaction">Объект <see cref="T:System.Messaging.MessageQueueTransaction" />, задающий транзакцию, в которой будет удалено сообщение. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="transaction" /> — null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
      <summary>Удаляет текущее сообщение из очереди и возвращает сообщение в вызывающее приложение.Не указано время тайм-аута для прибытия сообщения в очередь.</summary>
      <returns>Объект <see cref="T:System.Messaging.Message" />, ссылающийся на первое доступное в очереди сообщение.</returns>
      <param name="transactionType">Одно из значений <see cref="T:System.Messaging.MessageQueueTransactionType" />, описывающее тип контекста транзакции, связываемого с сообщением. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="transactionType" /> не является одним из членов <see cref="T:System.Messaging.MessageQueueTransactionType" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
      <summary>Удаляет текущее сообщение из очереди и возвращает сообщение в вызывающее приложение.Если имеется сообщение для удаления, этот метод возвращает его немедленно.В противном случае метод ожидает прихода нового сообщения в течение заданного времени тайм-аута.</summary>
      <returns>Объект <see cref="T:System.Messaging.Message" />, ссылающийся на первое доступное в очереди сообщение.</returns>
      <param name="timeout">Интервал времени ожидания прихода сообщения в очередь. </param>
      <exception cref="T:System.ArgumentException">Для параметра <paramref name="timeout" /> задано недопустимое значение. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">Истекло время тайм-аута. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Удаляет текущее сообщение из транзакционной очереди и возвращает сообщение в вызывающее приложение.Если имеется сообщение для удаления, этот метод возвращает его немедленно.В противном случае метод ожидает прихода нового сообщения в течение заданного времени тайм-аута.</summary>
      <returns>Объект <see cref="T:System.Messaging.Message" />, ссылающийся на первое доступное в очереди сообщение.</returns>
      <param name="timeout">Интервал времени ожидания удаления сообщения. </param>
      <param name="transaction">Объект <see cref="T:System.Messaging.MessageQueueTransaction" />, задающий контекст транзакции для сообщения. </param>
      <exception cref="T:System.ArgumentException">Для параметра <paramref name="timeout" /> задано недопустимое значение. </exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="transaction" /> — null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">Истекло время тайм-аута. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Удаляет текущее сообщение из очереди и возвращает сообщение в вызывающее приложение.Если имеется сообщение для удаления, этот метод возвращает его немедленно.В противном случае метод ожидает прихода нового сообщения в течение заданного времени тайм-аута.</summary>
      <returns>Объект <see cref="T:System.Messaging.Message" />, ссылающийся на первое доступное в очереди сообщение.</returns>
      <param name="timeout">Интервал времени ожидания удаления сообщения. </param>
      <param name="transactionType">Одно из значений <see cref="T:System.Messaging.MessageQueueTransactionType" />, описывающее тип контекста транзакции, связываемого с сообщением. </param>
      <exception cref="T:System.ArgumentException">Для параметра <paramref name="timeout" /> задано недопустимое значение. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">Истекло время тайм-аута. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="transactionType" /> не является одним из членов <see cref="T:System.Messaging.MessageQueueTransactionType" />. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Reset">
      <summary>Сбрасывает текущий перечислитель, теперь он указывает на заголовок очереди.</summary>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current">
      <summary>Получает текущий объект <see cref="T:System.Messaging.Message" />, на который указывает перечислитель.</summary>
      <returns>Текущее сообщение.</returns>
      <exception cref="T:System.InvalidOperationException">Пользователь обращается к этому свойству до первого вызова метода <see cref="M:System.Messaging.MessageEnumerator.MoveNext" />.Курсор располагается перед первым элементом перечисления сообщений.-или- Пользователь обращается к этому свойству после того, как вызов метода <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> вернул значение false (показывающее, что курсор находится за последним элементом перечисления сообщений.) </exception>
      <exception cref="T:System.Messaging.MessageQueueException">Сообщение, на которое указывает перечислитель, больше не существует.Возможно, оно удалено.</exception>
    </member>
    <member name="T:System.Messaging.MessageLookupAction">
      <summary>Задает сообщение, считываемое или получаемое из очереди сообщений.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Current">
      <summary>Читает текущее сообщение.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Next">
      <summary>Читает следующее сообщение.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Previous">
      <summary>Читает предыдущее сообщение.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.First">
      <summary>Читает первое сообщение в очереди.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Last">
      <summary>Читает последнее сообщение в очереди.</summary>
    </member>
    <member name="T:System.Messaging.MessagePriority">
      <summary>Задает приоритет, применяемый службой Message Queuing к сообщению на маршруте его прохождения до очереди и при занесении в очередь места назначения.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Lowest">
      <summary>Низший приоритет сообщения.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.VeryLow">
      <summary>Between Low and Lowest message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Low">
      <summary>Низкий приоритет сообщения.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Normal">
      <summary>Нормальный приоритет сообщения.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.AboveNormal">
      <summary>Between <see cref="F:System.Messaging.MessagePriority.High" /> and <see cref="F:System.Messaging.MessagePriority.Normal" /> message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.High">
      <summary>Высокий приоритет сообщения.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.VeryHigh">
      <summary>Between Highest and High message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Highest">
      <summary>Высший приоритет сообщения.</summary>
    </member>
    <member name="T:System.Messaging.MessagePropertyFilter">
      <summary>Контролирует и выбирает свойства, извлекаемые при считывании и приеме сообщений из очереди сообщений.</summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessagePropertyFilter" /> и устанавливает значения по умолчанию для всех свойств.</summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AcknowledgeType">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.AcknowledgeType" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.AcknowledgeType" />, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Acknowledgment">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.Acknowledgment" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.Acknowledgment" />, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AdministrationQueue">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.AdministrationQueue" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.AdministrationQueue" />, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AppSpecific">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.AppSpecific" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.AppSpecific" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ArrivedTime">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.ArrivedTime" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.ArrivedTime" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AttachSenderId">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.AttachSenderId" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.AttachSenderId" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Authenticated">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.Authenticated" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.Authenticated" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AuthenticationProviderName">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.AuthenticationProviderName" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AuthenticationProviderType">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.AuthenticationProviderType" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Body">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.Body" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.Body" />, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.ClearAll">
      <summary>Устанавливает значения логических переменных фильтра равными false, чтобы никакие свойства сообщения не извлекались при его приеме.</summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.Clone">
      <summary>Создает неполную копию объекта.</summary>
      <returns>Объект <see cref="T:System.Object" />, представляющий экземпляр класса <see cref="T:System.Messaging.MessagePropertyFilter" />.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ConnectorType">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.ConnectorType" /> property information when receiving or peeking a message.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.ConnectorType" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.CorrelationId">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.CorrelationId" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.CorrelationId" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultBodySize">
      <summary>Получает или задает размер (в байтах) стандартного буфера тела сообщения.</summary>
      <returns>Размер стандартного буфера тела сообщения, создаваемый при приеме сообщения.Значение по умолчанию — 1024 байт.</returns>
      <exception cref="T:System.ArgumentException">Присвоенное значение равно отрицательному числу. </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultExtensionSize">
      <summary>Получает или задает размер (в байтах) стандартного буфера расширения.</summary>
      <returns>Размер стандартного буфера расширения, создаваемого при приеме сообщения.Значение по умолчанию — 255 байт.</returns>
      <exception cref="T:System.ArgumentException">Присвоенное значение равно отрицательному числу. </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultLabelSize">
      <summary>Получает или задает размер (в байтах) стандартного буфера метки.</summary>
      <returns>Размер стандартного буфера метки, создаваемого при приеме сообщения.Значение по умолчанию — 255 байт.</returns>
      <exception cref="T:System.ArgumentException">Присвоенное значение равно отрицательному числу. </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DestinationQueue">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.DestinationQueue" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.DestinationQueue" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DestinationSymmetricKey">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.DestinationSymmetricKey" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DigitalSignature">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.DigitalSignature" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.DigitalSignature" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.EncryptionAlgorithm">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.EncryptionAlgorithm" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Extension">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.Extension" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.Extension" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.HashAlgorithm">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.HashAlgorithm" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.HashAlgorithm" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Id">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.Id" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.Id" />, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.IsFirstInTransaction">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.IsFirstInTransaction" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.IsLastInTransaction">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.IsLastInTransaction" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.IsLastInTransaction" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Label">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.Label" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.Label" />, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.LookupId">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.LookupId" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений свойства <see cref="P:System.Messaging.Message.LookupId" />, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.MessageType">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.MessageType" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.MessageType" />, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Priority">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.Priority" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.Priority" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Recoverable">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.Recoverable" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.Recoverable" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ResponseQueue">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.ResponseQueue" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.ResponseQueue" />, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderCertificate">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.SenderCertificate" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.SenderCertificate" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderId">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.SenderId" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.SenderId" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderVersion">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.SenderVersion" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.SenderVersion" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SentTime">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.SentTime" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.SentTime" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.SetAll">
      <summary>Указывает, что при приеме сообщения извлекаются все его свойства.</summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.SetDefaults">
      <summary>Устанавливает значения фильтра общих свойств Message Queuing равными true, а свойства, описываемые целочисленными величинами, равными их значениям по умолчанию.</summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SourceMachine">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.SourceMachine" /> property information when receiving or peeking a message.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.SourceMachine" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TimeToBeReceived">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.TimeToBeReceived" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.TimeToBeReceived" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TimeToReachQueue">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.TimeToReachQueue" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.TimeToReachQueue" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TransactionId">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.TransactionId" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.TransactionId" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TransactionStatusQueue">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.TransactionStatusQueue" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseAuthentication">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.UseAuthentication" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.UseAuthentication" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.UseDeadLetterQueue" />, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseEncryption">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.UseEncryption" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.UseEncryption" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseJournalQueue">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.UseJournalQueue" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.UseJournalQueue" />, в противном случае — значение false.Значение по умолчанию — true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseTracing">
      <summary>Получает или задает значение, указывающее, следует ли извлекать сведения свойства <see cref="P:System.Messaging.Message.UseTracing" /> при получении или считывании сообщения.</summary>
      <returns>Значение true означает получение сведений <see cref="P:System.Messaging.Message.UseTracing" />, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueue">
      <summary>Provides access to a queue on a Message Queuing server.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.After the default constructor initializes the new instance, you must set the instance's <see cref="P:System.Messaging.MessageQueue.Path" /> property before you can use the instance.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />. </param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path and with the specified read-access restriction.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.For information about the proper syntax for this parameter, see the Remarks section.</param>
      <param name="sharedModeDenyReceive">true to grant exclusive read access to the first application that accesses the queue; otherwise, false. </param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</param>
      <param name="sharedModeDenyReceive">true to grant exclusive read access to the first application that accesses the queue; otherwise, false. </param>
      <param name="enableCache">true to create and use a connection cache; otherwise, false.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</param>
      <param name="sharedModeDenyReceive">true to grant exclusive read access to the first application that accesses the queue; otherwise, false. </param>
      <param name="enableCache">true to create and use a connection cache; otherwise, false.</param>
      <param name="accessMode">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</param>
      <param name="accessMode">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</param>
    </member>
    <member name="P:System.Messaging.MessageQueue.AccessMode">
      <summary>Gets a value that indicates the access mode for the queue.</summary>
      <returns>One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Authenticate">
      <summary>Gets or sets a value that indicates whether the queue accepts only authenticated messages.</summary>
      <returns>true if the queue accepts only authenticated messages; otherwise, false.The default is false.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.BasePriority">
      <summary>Gets or sets the base priority Message Queuing uses to route a public queue's messages over the network.</summary>
      <returns>The single base priority for all messages sent to the (public) queue.The default is zero (0).</returns>
      <exception cref="T:System.ArgumentException">The base priority was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek">
      <summary>Initiates an asynchronous peek operation that has no time-out.The operation is not complete until a message becomes available in the queue.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out.The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out and that uses a specified cursor, a specified peek action, and a specified state object.The state object provides associated information throughout the lifetime of the operation.This overload receives notification, through a callback, of the identity of the event handler for the operation.The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="action">One of the <see cref="T:System.Messaging.PeekAction" /> values.Indicates whether to peek at the current message in the queue, or the next message.</param>
      <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">A value other than PeekAction.Current or PeekAction.Next was specified for the <paramref name="action" /> parameter.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.This overload receives notification, through a callback, of the identity of the event handler for the operation.The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive">
      <summary>Initiates an asynchronous receive operation that has no time-out.The operation is not complete until a message becomes available in the queue.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out.The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly because it represents a negative number. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out and uses a specified cursor and a specified state object.The state object provides associated information throughout the lifetime of the operation.This overload receives notification, through a callback, of the identity of the event handler for the operation.The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.This overload receives notification, through a callback, of the identity of the event handler for the operation.The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.CanRead">
      <summary>Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be read.</summary>
      <returns>true if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can read from it; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.CanWrite">
      <summary>Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be written to.</summary>
      <returns>true if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can write to it; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.Category">
      <summary>Gets or sets the queue category.</summary>
      <returns>A <see cref="T:System.Guid" /> that represents the queue category (Message Queuing type identifier), which allows an application to categorize its queues.The default is Guid.empty.</returns>
      <exception cref="T:System.ArgumentException">The queue category was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ClearConnectionCache">
      <summary>Clears the connection cache.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Close">
      <summary>Frees all resources allocated by the <see cref="T:System.Messaging.MessageQueue" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Create(System.String)">
      <summary>Creates a non-transactional Message Queuing queue at the specified path.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</returns>
      <param name="path">The path of the queue to create. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> parameter is null or is an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A queue already exists at the specified path.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Administer" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
      <summary>Creates a transactional or non-transactional Message Queuing queue at the specified path.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</returns>
      <param name="path">The path of the queue to create. </param>
      <param name="transactional">true to create a transactional queue; false to create a non-transactional queue. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> parameter is null or is an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A queue already exists at the specified path.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Administer" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.CreateCursor">
      <summary>Creates a new <see cref="T:System.Messaging.Cursor" /> for the current message queue.</summary>
      <returns>A new <see cref="T:System.Messaging.Cursor" /> for the current message queue.This cursor is used to maintain a specific location in the queue when reading the queue's messages.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.CreateTime">
      <summary>Gets the time and date that the queue was created in Message Queuing.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the date and time at which the queue was created.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
      <summary>Gets or sets the message property values to be used by default when the application sends messages to the queue.</summary>
      <returns>A <see cref="T:System.Messaging.DefaultPropertiesToSend" /> that contains the default Message Queuing message property values used when the application sends objects other than <see cref="T:System.Messaging.Message" /> instances to the queue.</returns>
      <exception cref="T:System.ArgumentException">The default properties could not be set for the queue, possibly because one of the properties is not valid. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Delete(System.String)">
      <summary>Deletes a queue on a Message Queuing server.</summary>
      <param name="path">The location of the queue to be deleted. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> parameter is null or is an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The syntax for the <paramref name="path" /> parameter is not valid.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.DenySharedReceive">
      <summary>Gets or sets a value that indicates whether this <see cref="T:System.Messaging.MessageQueue" /> has exclusive access to receive messages from the Message Queuing queue.</summary>
      <returns>true if this <see cref="T:System.Messaging.MessageQueue" /> has exclusive rights to receive messages from the queue; otherwise, false.The default is false.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Dispose(System.Boolean)">
      <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Messaging.MessageQueue.EnableConnectionCache">
      <summary>Gets or sets a value that indicates whether a cache of connections will be maintained by the application.</summary>
      <returns>true to create and use a connection cache; otherwise, false.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.EncryptionRequired">
      <summary>Gets or sets a value that indicates whether the queue accepts only non-private (non-encrypted) messages.</summary>
      <returns>One of the <see cref="T:System.Messaging.EncryptionRequired" /> values.The default is None.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
      <summary>Completes the specified asynchronous peek operation.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</returns>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous peek operation to finish and from which to retrieve an end result. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The syntax of the <paramref name="asyncResult" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
      <summary>Completes the specified asynchronous receive operation.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</returns>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous receive operation to finish and from which to retrieve an end result. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The syntax of the <paramref name="asyncResult" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Exists(System.String)">
      <summary>Determines whether a Message Queuing queue exists at the specified path.</summary>
      <returns>true if a queue with the specified path exists; otherwise, false.</returns>
      <param name="path">The location of the queue to find. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> syntax is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method.-or- The <see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> method is being called on a remote private queue </exception>
      <exception cref="T:System.InvalidOperationException">The application used format name syntax when verifying queue existence. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.FormatName">
      <summary>Gets the unique queue name that Message Queuing generated at the time of the queue's creation.</summary>
      <returns>The name for the queue, which is unique on the network.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> is not set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.Formatter">
      <summary>Gets or sets the formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue.</summary>
      <returns>The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body.The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetAllMessages">
      <summary>Returns all the messages that are in the queue.</summary>
      <returns>An array of type <see cref="T:System.Messaging.Message" /> that represents all the messages in the queue, in the same order as they appear in the Message Queuing queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetEnumerator">
      <summary>Enumerates the messages in a queue.<see cref="M:System.Messaging.MessageQueue.GetEnumerator" /> is deprecated.<see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> that provides a dynamic connection to the messages in the queue.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
      <summary>Gets the identifier of the computer on which the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> is located.</summary>
      <returns>A <see cref="T:System.Guid" /> that represents a unique identifier for the computer on which the queue is located.</returns>
      <param name="machineName">The name of the computer that contains the queue, without the two preceding backslashes (\\). </param>
      <exception cref="T:System.Messaging.MessageQueueException">The computer identifier could not be retrieved, possibly because the directory service is not available; for example, if you are working offline.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageEnumerator">
      <summary>Creates an enumerator object for all the messages in the queue.<see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /> is deprecated.<see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</summary>
      <returns>The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
      <summary>Creates an enumerator object for all the messages in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
      <summary>Provides forward-only cursor semantics to enumerate through all public queues on the network.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of all the public message queues on the network.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
      <summary>Provides forward-only cursor semantics to enumerate through all public queues on the network that meet the specified criteria.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of the public message queues on the network that satisfy the restrictions specified by the <paramref name="criteria" /> parameter.</returns>
      <param name="criteria">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the available message queues. </param>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
      <summary>Retrieves all the private queues on the specified computer.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved private queues.</returns>
      <param name="machineName">The computer from which to retrieve the private queues. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter is null or an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueues">
      <summary>Retrieves all the public queues on the network.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
      <summary>Retrieves all the public queues on the network that meet the specified criteria.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <param name="criteria">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the queues. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
      <summary>Retrieves all the public queues on the network that belong to the specified category.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <param name="category">A <see cref="T:System.Guid" /> that groups the set of queues to be retrieved. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
      <summary>Retrieves all the public queues on the network that carry the specified label.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <param name="label">A label that groups the set of queues to be retrieved. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
      <summary>Retrieves all the public queues that reside on the specified computer.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the public queues on the computer.</returns>
      <param name="machineName">The name of the computer that contains the set of public queues to be retrieved. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter has incorrect syntax. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetSecurityContext">
      <summary>Retrieves the security context that MSMQ associates with the current user (thread identity) at the time of this call.</summary>
      <returns>A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Id">
      <summary>Gets the unique Message Queuing identifier of the queue.</summary>
      <returns>A <see cref="P:System.Messaging.MessageQueue.Id" /> that represents the message identifier generated by the Message Queuing application.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="F:System.Messaging.MessageQueue.InfiniteQueueSize">
      <summary>Specifies that no size restriction exists for a queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueue.InfiniteTimeout">
      <summary>Specifies that no time-out exists for methods that peek or receive messages.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.Label">
      <summary>Gets or sets the queue description.</summary>
      <returns>The label for the message queue.The default is an empty string ("").</returns>
      <exception cref="T:System.ArgumentException">The label was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.LastModifyTime">
      <summary>Gets the last time the properties of a queue were modified.</summary>
      <returns>A <see cref="T:System.DateTime" /> that indicates when the queue properties were last modified.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MachineName">
      <summary>Gets or sets the name of the computer where the Message Queuing queue is located.</summary>
      <returns>The name of the computer where the queue is located.The Message Queuing default is ".", the local computer.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueue.MachineName" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The name of the computer is not valid, possibly because the syntax is incorrect. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MaximumJournalSize">
      <summary>Gets or sets the maximum size of the journal queue.</summary>
      <returns>The maximum size, in kilobytes, of the journal queue.The Message Queuing default specifies that no limit exists.</returns>
      <exception cref="T:System.ArgumentException">The maximum journal queue size was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MaximumQueueSize">
      <summary>Gets or sets the maximum size of the queue.</summary>
      <returns>The maximum size, in kilobytes, of the queue.The Message Queuing default specifies that no limit exists.</returns>
      <exception cref="T:System.ArgumentException">The maximum queue size contains a negative value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
      <summary>Gets or sets the property filter for receiving or peeking messages.</summary>
      <returns>The <see cref="T:System.Messaging.MessagePropertyFilter" /> used by the queue to filter the set of properties it receives or peeks for each message.</returns>
      <exception cref="T:System.ArgumentException">The filter is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.MulticastAddress">
      <summary>Introduced in MSMQ 3.0.Gets or sets the multicast address associated with the queue.</summary>
      <returns>A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or null, which indicates that the queue is not associated with a multicast address. Копировать код&lt;address&gt;:&lt;port&gt;
</returns>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.Path">
      <summary>Gets or sets the queue's path.Setting the <see cref="P:System.Messaging.MessageQueue.Path" /> causes the <see cref="T:System.Messaging.MessageQueue" /> to point to a new queue.</summary>
      <returns>The queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />.The default depends on which <see cref="M:System.Messaging.MessageQueue.#ctor" /> constructor you use; it is either null or is specified by the constructor's <paramref name="path" /> parameter.</returns>
      <exception cref="T:System.ArgumentException">The path is not valid, possibly because the syntax is not valid. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek">
      <summary>Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
      <summary>Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
      <summary>Returns without removing (peeks) the current or next message in the queue, using the specified cursor.The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that represents a message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="action">One of the <see cref="T:System.Messaging.PeekAction" /> values.Indicates whether to peek at the current message in the queue, or the next message.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">A value other than PeekAction.Current or PeekAction.Next was specified for the <paramref name="action" /> parameter.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid.Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
      <summary>Peeks the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
      <summary>Peeks the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekById(System.String)">
      <summary>Peeks the message whose message identifier matches the <paramref name="id" /> parameter.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">No message with the specified <paramref name="id" /> exists. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
      <summary>Peeks the message whose message identifier matches the <paramref name="id" /> parameter.Waits until the message appears in the queue or a time-out occurs.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> does not exist in the queue and did not arrive before the period specified by the <paramref name="timeout" /> parameter expired. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
      <summary>Introduced in MSMQ 3.0.Peeks at the message that matches the given lookup identifier from a non-transactional queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</returns>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at. </param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
      <summary>Introduced in MSMQ 3.0.Peeks at a specific message from the queue.The message can be specified by a lookup identifier or by its position at the front or end of the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</returns>
      <param name="action">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.Specify one of the following:MessageLookupAction.Current: Peeks at the message specified by <paramref name="lookupId" />.MessageLookupAction.Next: Peeks at the message following the message specified by <paramref name="lookupId" />.MessageLookupAction.Previous: Peeks at the message preceding the message specified by <paramref name="lookupId" />.MessageLookupAction.First: Peeks at the first message in the queue.The <paramref name="lookupId" /> parameter must be set to 0.MessageLookupAction.Last: Peeks at the last message in the queue.The <paramref name="lookupId" /> parameter must be set to 0.</param>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at, or 0.0 is used when accessing the first or last message in the queue.</param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</exception>
    </member>
    <member name="E:System.Messaging.MessageQueue.PeekCompleted">
      <summary>Occurs when a message is read without being removed from the queue.This is a result of the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginPeek" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Purge">
      <summary>Deletes all the messages contained in the queue.</summary>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.QueueName">
      <summary>Gets or sets the friendly name that identifies the queue.</summary>
      <returns>The name that identifies the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.The value cannot be null.</returns>
      <exception cref="T:System.ArgumentException">The queue name is null. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.ReadHandle">
      <summary>Gets the native handle used to read messages from the message queue.</summary>
      <returns>A handle to the native queue object that you use for peeking and receiving messages from the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.This call is synchronous, and blocks the current thread of execution until a message is available.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
      <summary>Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.This call is synchronous, and blocks the current thread of execution until a message is available.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method.-or- The queue is non-transactional. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.This call is synchronous, and blocks the current thread of execution until a message is available.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
      <summary>Receives the current message in the queue, using a specified cursor.If no message is available, this method waits until either a message is available, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the current message in the queue, using a specified cursor.If no message is available, this method waits until either a message is available, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.-or-The <paramref name="transaction" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid.Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the current message in the queue, using a specified cursor.If no message is available, this method waits until either a message is available, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values that describes the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid.Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.This call is synchronous, and waits until either a message is available in the queue, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
      <summary>Receives the message that matches the given correlation identifier (from a non-transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given correlation identifier (from a transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
      <summary>Receives the message that matches the given correlation identifier (from a non-transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given correlation identifier (from a transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
      <summary>Receives the message that matches the given identifier from a non-transactional queue and immediately raises an exception if no message with the specified identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given identifier (from a transactional queue) and immediately raises an exception if no message with the specified identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given identifier and immediately raises an exception if no message with the specified identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> could not be found. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
      <summary>Receives the message that matches the given identifier (from a non-transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given identifier (from a transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given identifier and waits until either a message with the specified identifier is available in the queue or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
      <summary>Introduced in MSMQ 3.0.Receives the message that matches the given lookup identifier from a non-transactional queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</returns>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive. </param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
      <summary>Introduced in MSMQ 3.0.Receives a specific message from a transactional queue.The message can be specified by a lookup identifier or by its position at the front or end of the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="lookupId" /> and <paramref name="action" /> parameters passed in.</returns>
      <param name="action">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.Specify one of the following:MessageLookupAction.Current: Receives the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Next: Receives the message following the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Previous: Receives the message preceding the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.First: Receives the first message in the queue and removes it from the queue.The <paramref name="lookupId" /> parameter must be set to 0.MessageLookupAction.Last: Receives the last message in the queue and removes it from the queue.The <paramref name="lookupId" /> parameter must be set to 0.</param>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0.0 is used when accessing the first or last message in the queue.</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method.-or- The queue is non-transactional.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
      <summary>Introduced in MSMQ 3.0.Receives a specific message from the queue, using the specified transaction context.The message can be specified by a lookup identifier or by its position at the front or end of the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</returns>
      <param name="action">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.Specify one of the following:MessageLookupAction.Current: Receives the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Next: Receives the message following the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Previous: Receives the message preceding the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.First: Receives the first message in the queue and removes it from the queue.The <paramref name="lookupId" /> parameter must be set to 0.MessageLookupAction.Last: Receives the last message in the queue and removes it from the queue.The <paramref name="lookupId" /> parameter must be set to 0.</param>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0.0 is used when accessing the first or last message in the queue.</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.-or- The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</exception>
    </member>
    <member name="E:System.Messaging.MessageQueue.ReceiveCompleted">
      <summary>Occurs when a message has been removed from the queue.This event is raised by the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginReceive" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Refresh">
      <summary>Refreshes the properties presented by the <see cref="T:System.Messaging.MessageQueue" /> to reflect the current state of the resource.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.ResetPermissions">
      <summary>Resets the permission list to the operating system's default values.Removes any queue permissions you have appended to the default list.</summary>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object)">
      <summary>Sends an object to non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="obj">The object to send to the queue. </param>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
      <summary>Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- The Message Queuing application indicated an incorrect transaction use.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
      <summary>Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
      <summary>Sends an object to the non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="label">The label of the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
      <summary>Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="label">The label of the message. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- The Message Queuing application indicated an incorrect transaction usage.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="label">The label of the message. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueTransaction">The Message Queuing application indicated an incorrect transaction usage. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
      <summary>Assigns access rights to the queue based on the contents of an access control list.</summary>
      <param name="dacl">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and the permissions to grant. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
      <summary>Assigns access rights to the queue based on the contents of an access control entry.</summary>
      <param name="ace">A <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> that specifies a user, an access type, and a permission type. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
      <summary>Gives a computer, group, or user the specified access rights.</summary>
      <param name="user">The individual, group, or computer that gets additional rights to the queue. </param>
      <param name="rights">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="user" /> is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>Gives a computer, group, or user the specified access rights, with the specified access control type (allow, deny, revoke, or set).</summary>
      <param name="user">The individual, group, or computer that gets additional rights to the queue. </param>
      <param name="rights">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in. </param>
      <param name="entryType">A <see cref="T:System.Messaging.AccessControlEntryType" /> that specifies whether to grant, deny, or revoke the permissions specified by the <paramref name="rights" /> parameter. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.SynchronizingObject">
      <summary>Gets or sets the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</summary>
      <returns>A <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, which represents the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.The default is null.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Transactional">
      <summary>Gets a value that indicates whether the queue accepts only transactions.</summary>
      <returns>true if the queue accepts only messages sent as part of a transaction; otherwise, false.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether received messages are copied to the journal queue.</summary>
      <returns>true if messages received from the queue are copied to its journal queue; otherwise, false.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.WriteHandle">
      <summary>Gets the native handle used to send messages to the message queue.</summary>
      <returns>A handle to the native queue object that you use for sending messages to the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The message queue is not available for writing. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Messaging.MessageQueueAccessControlEntry">
      <summary>Задает права доступа для доверенного лица (пользователя, группы или компьютера) на выполнение задач Message Queuing.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueueAccessControlEntry" />, предоставляя заданные права доступа к Message Queuing указанному доверенному лицу.</summary>
      <param name="trustee">Объект <see cref="T:System.Messaging.Trustee" />, задающий пользователя, группу, компьютер, домен или псевдоним. </param>
      <param name="rights">Поразрядная комбинация значений <see cref="T:System.Messaging.MessageQueueAccessRights" />, описывающая комбинацию прав, предоставляемых данному доверенному лицу. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> с заданным доверенным лицом и указанными правами доступа к Message Queuing.Тип доступа (такой как Allow или Deny) определяется типом переданной записи.</summary>
      <param name="trustee">Объект <see cref="T:System.Messaging.Trustee" />, задающий пользователя, группу, компьютер, домен или псевдоним. </param>
      <param name="rights">Поразрядная комбинация значений <see cref="T:System.Messaging.MessageQueueAccessRights" />, описывающая комбинацию прав, предоставляемых данному доверенному лицу. </param>
      <param name="entryType">Одно из значений <see cref="T:System.Messaging.AccessControlEntryType" />, задающее тип операции с правами: разрешить, отказать в разрешении, установить или отозвать указанные права. </param>
    </member>
    <member name="P:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights">
      <summary>Возвращает или задает набор прав, специфичных для Message Queuing, которые будут применяться к данному доверенному лицу.</summary>
      <returns>Поразрядная комбинация членов <see cref="T:System.Messaging.MessageQueueAccessRights" />.Значение по умолчанию определяется параметром <paramref name="rights" />, передаваемым в конструктор.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueueAccessRights">
      <summary>Задает набор зависящих от объекта прав доступа для операций, характерных для Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteMessage">
      <summary>Право на удаление сообщений из очереди.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.PeekMessage">
      <summary>Право на считывание сообщений из очереди.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.WriteMessage">
      <summary>Право на передачу сообщений в очередь.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteJournalMessage">
      <summary>Право на удаление сообщений из журнала очереди.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.SetQueueProperties">
      <summary>Право на изменение свойств очереди.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GetQueueProperties">
      <summary>Право на чтение свойств очереди.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteQueue">
      <summary>Право на удаление очереди.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GetQueuePermissions">
      <summary>Право на чтение разрешений очереди.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ChangeQueuePermissions">
      <summary>Право на изменение разрешений очереди.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.TakeQueueOwnership">
      <summary>Право на получение владения очередью.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ReceiveMessage">
      <summary>Право на прием сообщений из очереди.Сюда включаются права на считывание и удаление сообщений.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ReceiveJournalMessage">
      <summary>Право на получение сообщений из очереди журнала.Сюда включаются права на считывание и удаление сообщений из очереди журнала.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GenericRead">
      <summary>Комбинация GetQueueProperties, GetQueuePermissions, ReceiveMessage и ReceiveJournalMessage.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GenericWrite">
      <summary>Комбинация GetQueueProperties, GetQueuePermissions и WriteMessage.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.FullControl">
      <summary>Полные права на очередь.Объединение всех других прав в перечислении.</summary>
    </member>
    <member name="T:System.Messaging.MessageQueueCriteria">
      <summary>Фильтрует очереди сообщений при выполнении запроса с использованием метода <see cref="M:System.Messaging.MessageQueue.GetPublicQueues" /> класса <see cref="T:System.Messaging.MessageQueue" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueCriteria.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueueCriteria" />.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.Category">
      <summary>Получает или задает категорию, по которой фильтруются очереди в сети.</summary>
      <returns>Категория очереди.</returns>
      <exception cref="T:System.InvalidOperationException">Приложение не устанавливает свойство <see cref="P:System.Messaging.MessageQueueCriteria.Category" /> перед его чтением. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueCriteria.ClearAll">
      <summary>Очищает все свойства, входящие в фильтр, и устанавливает значения всех свойств в состояние "не установлено".</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.CreatedAfter">
      <summary>Получает или задает нижнюю границу для даты и времени создания очереди, используемую для фильтрации очередей в сети.</summary>
      <returns>
        <see cref="T:System.DateTime" /> задает нижнюю границу для даты и времени создания очереди.</returns>
      <exception cref="T:System.InvalidOperationException">Приложение не устанавливает свойство <see cref="P:System.Messaging.MessageQueueCriteria.CreatedAfter" /> перед его чтением. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.CreatedBefore">
      <summary>Получает или задает верхнюю границу даты и времени создания очереди, которая используется для фильтрации очередей в сети.</summary>
      <returns>
        <see cref="T:System.DateTime" /> задает верхнюю границу для даты и времени создания очереди.</returns>
      <exception cref="T:System.InvalidOperationException">Приложение не устанавливает свойство <see cref="P:System.Messaging.MessageQueueCriteria.CreatedBefore" /> перед его чтением. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.Label">
      <summary>Получает или задает метку, по которой фильтруются очереди в сети.</summary>
      <returns>Метка очереди.</returns>
      <exception cref="T:System.InvalidOperationException">Приложение не устанавливает свойство <see cref="P:System.Messaging.MessageQueueCriteria.Label" /> перед его чтением. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.MachineName">
      <summary>Получает или задает имя компьютера, по которому фильтруются очереди в сети.</summary>
      <returns>Имя сервера или компьютера, на котором расположена данная очередь.</returns>
      <exception cref="T:System.InvalidOperationException">Приложение не устанавливает свойство <see cref="P:System.Messaging.MessageQueueCriteria.MachineName" /> перед его чтением.-или- Недопустимый синтаксис имени компьютера. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.ModifiedAfter">
      <summary>Получает или задает нижнюю границу для даты и времени изменения очереди, которая используются для фильтрации очередей в сети.</summary>
      <returns>
        <see cref="T:System.DateTime" /> задает нижнюю границу для даты и времени последнего изменения очереди.</returns>
      <exception cref="T:System.InvalidOperationException">Приложение не устанавливает свойство <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" /> перед его чтением. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.ModifiedBefore">
      <summary>Получает или задает верхнюю границу для даты и времени изменения очереди, которая используются для фильтрации очередей в сети.</summary>
      <returns>
        <see cref="T:System.DateTime" /> задает верхнюю границу для даты и времени последнего изменения очереди.</returns>
      <exception cref="T:System.InvalidOperationException">Приложение не устанавливает свойство <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" /> перед его чтением. </exception>
    </member>
    <member name="T:System.Messaging.MessageQueueEnumerator">
      <summary>Предоставляет курсор, перемещающийся только в прямом направлении, для перечисления сообщений в очереди сообщений.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Close">
      <summary>Освобождает ресурсы, связанные с перечислителем.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.Current">
      <summary>Получает текущий объект <see cref="T:System.Messaging.MessageQueue" /> перечисления.</summary>
      <returns>Очередь, на которую в данный момент установлен курсор.</returns>
      <exception cref="T:System.InvalidOperationException">Вы вызвали <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> до первого вызова <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />.Курсор располагается перед первой очередью в перечислении.-или- Вы вызвали <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> после вызова <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />, вернувшего ложное (false) значение (это указывает, что курсор расположен за последней очередью в перечислении). </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Messaging.MessageQueueEnumerator" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" /> and optionally releases the managed resources.</summary>
      <param name="disposing">Значение true позволяет освободить управляемые и неуправляемые ресурсы; значение false позволяет освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Finalize">
      <summary>Освобождает ресурсы, используемые очередью.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
      <summary>Получает собственный дескриптор Message Queuing, используемый для определения очередей в сети.</summary>
      <returns>Собственный дескриптор для текущей очереди.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">Этот дескриптор не существует. </exception>
      <exception cref="T:System.Security.SecurityException">Вызывающий код не имеет разрешений на просмотр. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.MoveNext">
      <summary>Перемещает перечислитель на следующую очередь перечисления, если таковая имеется.</summary>
      <returns>Значение true, если перечислитель был успешно перемещен на следующую очередь; значение false, если перечислитель достиг конца перечисления.</returns>
      <exception cref="T:System.Security.SecurityException">Вызывающий код не имеет разрешений на просмотр. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Reset">
      <summary>Сброс курсора, теперь он указывает на начало перечисления.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
      <summary>Получает текущий объект <see cref="T:System.Messaging.MessageQueue" /> перечисления.</summary>
      <returns>Очередь, на которую в данный момент установлен курсор.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueueErrorCode">
      <summary>Идентифицирует источник ошибки, возникшей в приложении Message Queuing и создавшей исключение <see cref="T:System.Messaging.MessageQueueException" />.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Base">
      <summary>Код этой ошибки не возвращается службой Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Generic">
      <summary>Текст сообщения: "Generic Error" (общая ошибка).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Property">
      <summary>Текст сообщения: "One or more of the passed properties are invalid" (Одно или более переданных свойств являются недопустимыми).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueNotFound">
      <summary>Текст сообщения: "The queue is not registered in the directory service" (данная очередь не зарегистрирована в службе каталогов).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueExists">
      <summary>Текст сообщения: "A queue with the same pathname is already registered" (очередь с таким именем пути уже зарегистрирована).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidParameter">
      <summary>Текст сообщения: "An invalid parameter passed to a function" (в функцию передан недопустимый параметр).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidHandle">
      <summary>Текст сообщения: "An invalid handle passed to a function" (в функцию передан недопустимый дескриптор).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.OperationCanceled">
      <summary>Текст сообщения: "The operation was canceled before it could be completed" (данная операция отменена до ее завершения).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SharingViolation">
      <summary>Текст сообщения: "Sharing violation" (нарушение прав доступа).Данная очередь уже открыта для монопольного использования.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ServiceNotAvailable">
      <summary>Текст сообщения: "The Message Queues service is not available" (данная служба Message Queues недоступна).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MachineNotFound">
      <summary>Текст сообщения: "The specified computer could not be found" (заданный компьютер не найден).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSort">
      <summary>Текст сообщения: "Illegal sort specified (for example, duplicate columns)" (задана недопустимая сортировка (например, идентичные столбцы)).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalUser">
      <summary>Текст сообщения: "The user has an invalid user name" (недопустимое имя пользователя).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoDs">
      <summary>Текст сообщения: "No connection with this site's controller(s)" (отсутствует подключение к контроллерам этого узла).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalQueuePathName">
      <summary>Текст сообщения: "Invalid queue path name" (недопустимое имя пути очереди).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyValue">
      <summary>Текст сообщения: "Invalid property value" (недопустимое значение свойства).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyVt">
      <summary>Текст сообщения: "Invalid VARTYPE value" (недопустимое значение VARTYPE).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.BufferOverflow">
      <summary>Текст сообщения: "The buffer supplied to MQReceiveMessage for message body retrieval was too small" (буфер, предоставляемый MQReceiveMessage для извлечения текста сообщения, слишком мал).Сообщение не удалено из очереди, и скопирована часть текста сообщения, вмещающаяся в этот буфер.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IOTimeout">
      <summary>Текст сообщения: "The receive or peek message time-out has expired" (истек тайм-аут для получения или считывания сообщения).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalCursorAction">
      <summary>Текст сообщения: "MQ_ACTION_PEEK_NEXT specified to MQReceiveMessage can not be used with the current cursor position" (переменную MQ_ACTION_PEEK_NEXT, установленную в MQReceiveMessage, невозможно использовать с текущим положением курсора).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageAlreadyReceived">
      <summary>Текст сообщения: "A message that is currently pointed at by the cursor has been removed from the queue by another process or by another call to receive the message without the use of this cursor" (сообщение, на которое в настоящий момент указывает курсор, удалено из очереди другим процессом или другим вызовом, выполненным для получения этого сообщения без использования данного курсора).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalFormatName">
      <summary>Текст сообщения: "The given format name is invalid" (задано недопустимое имя формата).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.FormatNameBufferTooSmall">
      <summary>Текст сообщения: "The format name buffer supplied to the API was too small to fit the format name" (буфер имени формата, передаваемый в API, слишком мал, чтобы вместить имя формата).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedFormatNameOperation">
      <summary>Текст сообщения: "The requested operation for the specified format name is not supported" (для заданного имени формата запрошенная операция не поддерживается).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSecurityDescriptor">
      <summary>Текст сообщения: "The specified security descriptor is not a valid security descriptor" (заданный дескриптор безопасности является недопустимым дескриптором безопасности).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SenderIdBufferTooSmall">
      <summary>Текст сообщения: "The passed buffer for the user identifier property is too small" (буфер, переданный для свойства идентификатора пользователя, слишком мал).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SecurityDescriptorBufferTooSmall">
      <summary>Текст сообщения: "The size of the buffer passed to MQGetQueueSecurity is too small" (размер буфера, передаваемого в MQGetQueueSecurity, слишком мал).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotImpersonateClient">
      <summary>Текст сообщения: "The RPC server cannot impersonate the client application, hence security credentials could not be verified" (сервер RPC не может имитировать клиентское приложение, поэтому невозможна проверка учетных данных для безопасного доступа).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.AccessDenied">
      <summary>Текст сообщения: "Access is denied" (доступ запрещен).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PrivilegeNotHeld">
      <summary>Текст сообщения: "Client does not have the required privileges to perform the operation" (у клиента отсутствуют привилегии, требующиеся для выполнения данной операции).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InsufficientResources">
      <summary>Текст сообщения: "Insufficient resources to perform operation" (недостаточно ресурсов для выполнения операции).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UserBufferTooSmall">
      <summary>Текст сообщения: "Request failed because user buffer is too small to hold the returned information" (сбой запроса из-за слишком малого пользовательского буфера, не достаточного для хранения возвращаемых сведений).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageStorageFailed">
      <summary>Текст сообщения: "Could not store a recoverable or journal message" (невозможно сохранить восстанавливаемое или журнальное сообщение).Сообщение не отправлено.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SenderCertificateBufferTooSmall">
      <summary>Текст сообщения: "The passed buffer for the user certificate property is too small" (буфер, переданный для свойства сертификата пользователя, слишком мал).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidCertificate">
      <summary>Текст сообщения: "The user certificate is not valid" (недействительный сертификат пользователя).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedInternalCertificate">
      <summary>Текст сообщения: "The internal Message Queuing certificate is corrupted" (поврежден внутренний сертификат Message Queuing).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoInternalUserCertificate">
      <summary>Текст сообщения: "The internal Message Queuing certificate for the user does not exist" (не существует внутреннего сертификата Message Queuing для данного пользователя).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedSecurityData">
      <summary>Текст сообщения: "A cryptographic function has failed" (сбой службы шифрования).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedPersonalCertStore">
      <summary>Текст сообщения: "The personal certificate store is corrupted" (повреждено хранилище личных сертификатов).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ComputerDoesNotSupportEncryption">
      <summary>Текст сообщения: "The computer does not support encryption operations" (компьютер не поддерживает операции шифрования).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.BadSecurityContext">
      <summary>Текст сообщения: "Bad security context" (неправильный контекст безопасности).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CouldNotGetUserSid">
      <summary>Текст сообщения: "Could not get the SID information out of the thread token" (невозможно получить сведения о SID из маркера потока).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CouldNotGetAccountInfo">
      <summary>Текст сообщения: "Could not get the account information for the user" (невозможно получить учетные сведения для пользователя).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalCriteriaColumns">
      <summary>Текст сообщения: "Invalid MQCOLUMNS parameter" (недопустимый параметр MQCOLUMNS).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyId">
      <summary>Текст сообщения: "Invalid property identifier value" (недопустимое значение идентификатора свойства).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalRelation">
      <summary>Текст сообщения: "Invalid relation value in restriction" (недопустимое значение соотношения в ограничении).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertySize">
      <summary>Текст сообщения: "Illegal property buffer size" (недопустимый размер буфера свойства).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalRestrictionPropertyId">
      <summary>Текст сообщения: "Invalid propid value in MQRESTRICTION parameter" (недопустимое значение идентификатора свойства в параметре MQRESTRICTION).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalQueueProperties">
      <summary>Текст сообщения: "Illegal MQQUEUEPROPS parameter, either null or with zero properties" (недопустимый параметр MQQUEUEPROPS: или значение null, или нулевые свойства).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PropertyNotAllowed">
      <summary>Текст сообщения: "Invalid property for the requested operation" (недействительное свойство для запрошенной операции). </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InsufficientProperties">
      <summary>Текст сообщения: "Not all the required properties for the operation were specified in the input parameters" (во входных параметрах заданы не все свойства, требующиеся для данной операции).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MachineExists">
      <summary>Текст сообщения: "Computer with the same name already exists in the site" (компьютера с таким именем уже существует в узле).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalMessageProperties">
      <summary>Текст сообщения: "Illegal MQQMPROPS parameter, either null or with zero properties" (недопустимый параметр MQQMPROPS: или значение null, или нулевые свойства).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DsIsFull">
      <summary>Текст сообщения: "Directory service is full" (служба каталогов заполнена).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DsError">
      <summary>Текст сообщения: "Internal directory service error" (внутренняя ошибка службы каталогов).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidOwner">
      <summary>Текст сообщения: "Invalid object owner" (недопустимый владелец объекта).Например, сбой CreateQueue вследствие того, что объект Queue Manager является недопустимым объектом.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedAccessMode">
      <summary>Текст сообщения: "The specified access mode is not supported" (заданный режим доступа не поддерживается).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ResultBufferTooSmall">
      <summary>Текст сообщения: "The supplied result buffer is too small" (предоставляемый буфер результата слишком мал).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DeleteConnectedNetworkInUse">
      <summary>Текст сообщения: "The connected network cannot be deleted; it is in use" (не удается удалить подключенную сеть, так как сеть используется).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoResponseFromObjectServer">
      <summary>Текст сообщения: "No response from object owner" (нет ответа от владельца объекта).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ObjectServerNotAvailable">
      <summary>Текст сообщения: "Object owner is not reachable" (владелец объекта недостижим).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueNotAvailable">
      <summary>Текст сообщения: "Error while reading from a queue residing on a remote computer" (ошибка при чтении из очереди, находящейся на удаленном компьютере).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DtcConnect">
      <summary>Текст сообщения: "Cannot connect to MS DTC" (не удается подключиться к MS DTC).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionImport">
      <summary>Текст сообщения: "Cannot import the transaction" (невозможно импортировать данную транзакцию).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionUsage">
      <summary>Текст сообщения: "Wrong transaction usage" (неправильное использование транзакции).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionSequence">
      <summary>Текст сообщения: "Wrong transaction operations sequence" (неправильная последовательность операций транзакции).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MissingConnectorType">
      <summary>Текст сообщения: "Connector Type is mandatory when sending an Acknowledgment or secure message" (при передаче подтверждения или безопасного сообщения должен указываться тип соединителя).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.StaleHandle">
      <summary>Текст сообщения: "The Queue Manager service has been restarted" (служба Queue Manager перезапущена).Дескриптор очереди устарел и должен быть закрыт.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionEnlist">
      <summary>Текст сообщения: "Cannot enlist the transaction" (невозможно задействовать данную транзакцию).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueDeleted">
      <summary>Текст сообщения: "The queue was deleted" (данная очередь удалена).Прием сообщений с использованием этого экземпляра очереди невозможен.Эту очередь следует закрыть.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalContext">
      <summary>Текст сообщения: "Invalid context parameter" (недопустимый параметр контекста).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSortPropertyId">
      <summary>Текст сообщения: "Invalid propid value in MQSORTSET" (недопустимое значение идентификатора свойства в MQSORTSET).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.LabelBufferTooSmall">
      <summary>Текст сообщения: "The label buffer supplied to the API was too small" (буфер метки, переданный в API, слишком мал).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MqisServerEmpty">
      <summary>Текст сообщения: "The list of MQIS servers (in registry) is empty" (пустой список серверов MQIS (в реестре)).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MqisReadOnlyMode">
      <summary>Текст сообщения: "MQIS database is in read-only mode" (база данных MQIS находится в режиме только для чтения).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SymmetricKeyBufferTooSmall">
      <summary>Текст сообщения: "The passed buffer for the Symmetric key property is too small" (буфер, переданный для свойства симметричного ключа, слишком мал).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SignatureBufferTooSmall">
      <summary>Текст сообщения: "The passed buffer for the Signature property is too small" (буфер, переданный для свойства подписи, слишком мал).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ProviderNameBufferTooSmall">
      <summary>Текст сообщения: "The passed buffer for the Provider name property is too small" (буфер, переданный для свойства имени поставщика, слишком мал).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalOperation">
      <summary>Текст сообщения: "The operation is invalid on foreign message queuing systems" (недопустимая операция в системах внешних очередей сообщений).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.WriteNotAllowed">
      <summary>Текст сообщения: "Another MQIS server is being installed; write operations to the database are not allowed at this time" (устанавливается еще один сервер MQIS; в данный момент операции записи в базу данных не разрешены).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.WksCantServeClient">
      <summary>Текст сообщения: "Message Queuing-independent clients cannot serve Message Queuing-dependent clients" (клиенты, не зависящие от Message Queuing, не могут обслужить подчиненных клиентов Message Queuing).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DependentClientLicenseOverflow">
      <summary>Текст сообщения: "The number of dependent clients served by this Message Queuing server reached its upper limit" (число подчиненных клиентов, обслуживаемых данным сервером Message Queuing, достигло максимального значения).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedQueueWasDeleted">
      <summary>Текст сообщения: "The .ini file for the queue in LQS was deleted because it was corrupted" (INI-файл для очереди в LQS удален из-за его повреждения).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.RemoteMachineNotAvailable">
      <summary>Текст сообщения: "The remote machine is not available" (данный удаленный компьютер недоступен).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedOperation">
      <summary>Текст сообщения: "The operation is not supported for a WORKGROUP installation computer" (данная операция не поддерживается для компьютера конфигурации установки WORKGROUP).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.EncryptionProviderNotSupported">
      <summary>Текст сообщения: "The Cryptographic Service Provider is not supported by Message Queuing" (Message Queuing не поддерживает этого поставщика служб шифрования).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotSetCryptographicSecurityDescriptor">
      <summary>Текст сообщения: "Unable to set the security descriptor for the cryptographic keys" (невозможно установить дескриптор безопасности для криптографических ключей).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CertificateNotProvided">
      <summary>Текст сообщения: "A user attempted to send an authenticated message without a certificate" (пользователь предпринял попытку передать сообщение с проверкой подлинности без сертификата).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QDnsPropertyNotSupported">
      <summary>Свойство DNS не поддерживается в качестве критерия поиска очередей.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateCertificateStore">
      <summary>Текст сообщения: "Unable to create a certificate store for the internal certificate" (невозможно создать хранилище сертификатов для внутреннего сертификата).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotOpenCertificateStore">
      <summary>Текст сообщения: "Unable to open the certificates store for the internal certificate" (невозможно открыть хранилище сертификатов для внутреннего сертификата).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalEnterpriseOperation">
      <summary>Текст сообщения: "The operation is invalid for a Message Queuing services object" (недопустимая операция для объекта служб Message Queuing).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotGrantAddGuid">
      <summary>Текст сообщения: "Failed to grant the "Add Guid" permission to current user" (не удалось предоставить разрешение на добавление глобально уникального идентификатора (GUID) текущему пользователю).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotLoadMsmqOcm">
      <summary>Текст сообщения: "Cannot load the MSMQOCM.DLL library" (невозможно загрузить библиотеку MSMQOCM.DLL).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoEntryPointMsmqOcm">
      <summary>Текст сообщения: "Cannot locate an entry point in the MSMQOCM.DLL library" (не удается найти точку входа в библиотеку MSMQOCM.DLL).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnDc">
      <summary>Текст сообщения: "Failed to find Message Queuing servers on domain controllers" (не удалось найти серверы Message Queuing в контроллерах домена).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotJoinDomain">
      <summary>Текст сообщения: "Failed to join Message Queuing enterprise on Windows 2000 domain" (не удалось объединить предметную область Message Queuing в домене Windows 2000).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateOnGlobalCatalog">
      <summary>Текст сообщения: "Failed to create an object on a specified global catalog server" (не удалось создать объект на заданном сервере глобального каталога).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.GuidNotMatching">
      <summary>Текст сообщения: "Failed to create Message Queuing configuration object with a GUID that matches the computer installation" (не удалось создать объект конфигурации Message Queuing с GUID, согласующимся с установкой данного компьютера).Необходимо удалить Message Queuing и затем снова выполнить установку.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PublicKeyNotFound">
      <summary>Текст сообщения: "Unable to find the public key for computer" (невозможно найти открытый ключ для компьютера).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PublicKeyDoesNotExist">
      <summary>Текст сообщения: "The public key for the computer does not exist" (не существует открытого ключа для данного компьютера).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPrivateProperties">
      <summary>Недопустимое значение параметра частных свойств.Причиной этого может быть установка значения null или нулевых свойств.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoGlobalCatalogInDomain">
      <summary>Текст сообщения: "Unable to find Global Catalog servers in the specified domain" (невозможно найти серверы глобального каталога в указанном домене).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnGlobalCatalog">
      <summary>Текст сообщения: "Failed to find Message Queuing servers on Global Catalog domain controllers" (не удалось найти серверы Message Queuing в контроллерах домена глобального каталога).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotGetDistinguishedName">
      <summary>Текст сообщения: "Failed to retrieve the distinguished name of local computer" (не удалось извлечь различающееся имя локального компьютера).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotHashDataEx">
      <summary>Текст сообщения: "Unable to hash data for an authenticated message" (невозможно хэшировать данные для сообщения, прошедшего проверку подлинности).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotSignDataEx">
      <summary>Текст сообщения: "Unable to sign data before sending an authenticated message" (невозможно подписать данные перед передачей сообщения, прошедшего проверку подлинности).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateHashEx">
      <summary>Текст сообщения: "Unable to create a hash object for an authenticated message" (невозможно создать хэш-объект для сообщения, прошедшего проверку подлинности).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.FailVerifySignatureEx">
      <summary>Текст сообщения: "Signature of received message is not valid" (недопустимая подпись принятого сообщения).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageNotFound">
      <summary>Текст сообщения: "The specified message could not be found" (заданное сообщение не найдено).</summary>
    </member>
    <member name="T:System.Messaging.MessageQueueException">
      <summary>Исключение, возникающее в случае внутренней ошибки Microsoft Message Queuing.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueException" /> class with serialized data.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализуемые данные, связанные с исключением <see cref="T:System.Messaging.MessageQueueException" />. </param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник и место назначения сериализуемого потока, связанного с классом <see cref="T:System.Messaging.MessageQueueException" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заносит в объект сведений о сериализации данные, необходимые для сериализации <see cref="T:System.Messaging.MessageQueueException" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализуемые данные, связанные с исключением <see cref="T:System.Messaging.MessageQueueException" />. </param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий источник и место назначения сериализуемого потока, связанного с классом <see cref="T:System.Messaging.MessageQueueException" />. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="info" /> — null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueueException.Message">
      <summary>Получает значение, описывающее ошибку Message Queuing.</summary>
      <returns>Описание внутренней ошибки Message Queuing, приведшей к возникновению этого исключения <see cref="T:System.Messaging.MessageQueueException" />.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueException.MessageQueueErrorCode">
      <summary>Получает значение, показывающее код ошибки, связанной с данным исключением.</summary>
      <returns>Объект <see cref="T:System.Messaging.MessageQueueErrorCode" />, описывающий тип ошибки, сгенерированной службой Message Queuing. </returns>
    </member>
    <member name="T:System.Messaging.MessageQueueInstaller">
      <summary>Позволяет установить и настроить очередь, требующуюся для работы приложения.Этот класс вызывается программой установки, например служебной программой InstallUtil.exe, при установке <see cref="T:System.Messaging.MessageQueue" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueueInstaller" />.Не устанавливает никаких свойств экземпляра.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueueInstaller" />, задавая параметры установки равными значениям существующего экземпляра <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="componentToCopy">Компонент <see cref="T:System.Messaging.MessageQueue" />, параметры которого определяют параметры свойств новой установленной очереди. </param>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Authenticate">
      <summary>Получает или задает значение, показывающее, будет ли установленная очередь принимать только сообщения, прошедшие проверку подлинности.</summary>
      <returns>Значение true, если очередь принимает только сообщения, прошедшие проверку подлинности; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.BasePriority">
      <summary>Получает или устанавливает базовый приоритет, используемый для маршрутизации сообщений общей очереди в сети.</summary>
      <returns>Элементарный базовый приоритет для всех сообщений, переданных в общую очередь.Значение по умолчанию равно нулю (0).</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Category">
      <summary>Получает или устанавливает тип очереди, зависящий от реализации.</summary>
      <returns>Идентификатор <see cref="T:System.Guid" />, представляющий категорию очереди (или идентификатор типа Message Queuing), что позволяет приложениям разделять свои очереди на категории в соответствии с порядком их использования.Значение по умолчанию — Guid.empty.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)">
      <summary>Завершает процесс установки, фиксируя сведения об установке <see cref="T:System.Messaging.MessageQueue" />, записанные в реестр методом <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />.Этот метод предназначен для использования средствами установки, которые автоматически вызывают соответствующие методы.</summary>
      <param name="savedState">Объект <see cref="T:System.Collections.IDictionary" />, содержащий состояние компьютера после установки. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>Копирует значения свойств компонента <see cref="T:System.Messaging.MessageQueue" />, которые требуются во время установки для очереди сообщений.</summary>
      <param name="component">Интерфейс <see cref="T:System.ComponentModel.IComponent" />, используемый в качестве шаблона для <see cref="T:System.Messaging.MessageQueueInstaller" />. </param>
      <exception cref="T:System.ArgumentException">Компонент, связанный с <see cref="T:System.Messaging.MessageQueueInstaller" />, не является <see cref="T:System.Messaging.MessageQueue" />. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.EncryptionRequired">
      <summary>Получает или задает значение, указывающее, будет ли очередь принимать только конфиденциальные, или зашифрованные сообщения.</summary>
      <returns>Одно из значений <see cref="T:System.Messaging.EncryptionRequired" />, показывающее уровень шифрования, необходимый при передаче сообщения в очередь.Значение по умолчанию — Optional.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)">
      <summary>Выполняет установку и записывает сведения об очереди сообщений в реестр.Этот метод предназначен для использования средствами установки, которые автоматически вызывают соответствующие методы.</summary>
      <param name="stateSaver">Объект <see cref="T:System.Collections.IDictionary" />, используемый в целях сохранения информации, необходимой для выполнения фиксации, отката к предыдущей точке или операции деинсталляции. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <summary>Определяет, может ли указанный установщик обрабатывать тот же тип установки, что и данный установщик.</summary>
      <returns>Значение true, если данный установщик и установщик, заданный параметром <paramref name="otherInstaller" />, могут выполнять один и тот же тип установки, в противном случае — значение false.</returns>
      <param name="otherInstaller">Установщик для сравнения. </param>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Label">
      <summary>Получает или задает описание очереди.</summary>
      <returns>Метка, описывающая очередь сообщений.Значением по умолчанию является пустая строка ("").</returns>
      <exception cref="T:System.ArgumentException">Параметр <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> имеет значение null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize">
      <summary>Получает или задает максимальный размер журнала, связанного с данной очередью.</summary>
      <returns>Максимальный размер (в килобайтах) очереди журнала, в которую записываются сообщения, удаленные из очереди.Значение по умолчанию для Message Queuing не имеет ограничения.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize">
      <summary>Получает или задает максимальный размер очереди.</summary>
      <returns>Максимальный размер очереди в килобайтах.Значение по умолчанию для Message Queuing не имеет ограничения.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MulticastAddress">
      <summary>Introduced in MSMQ 3.0.Gets or sets the multicast address associated with the queue.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий допустимый групповой адрес (в виде, показанном ниже) или значение null, которое указывает, что очередь не связана с групповым адресом. Копировать код&lt;address&gt;:&lt;port&gt;
</returns>
      <exception cref="T:System.PlatformNotSupportedException">Приложение MSMQ 3.0 не установлено.</exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Path">
      <summary>Получает или задает местоположение очереди, на которую ссылается данный объект.</summary>
      <returns>Путь, представляющий местоположение очереди в сети.</returns>
      <exception cref="T:System.ArgumentException">Установлено недопустимое значение <see cref="P:System.Messaging.MessageQueueInstaller.Path" />, возможно, вследствие неправильного синтаксиса.-или- Параметр <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> имеет значение null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Permissions">
      <summary>Получает или задает разрешения, связанные с очередью.</summary>
      <returns>Объект <see cref="T:System.Messaging.AccessControlList" />, содержащий одну или более записей управления доступом, описывающих доверенных лиц и разрешения, предоставляемые для работы с очередью.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)">
      <summary>Восстанавливает компьютер в состояние, в котором он находился до установки, путем отката сведений об очереди, записанных в реестр процедурой установки.Этот метод предназначен для использования средствами установки, которые автоматически вызывают соответствующие методы.</summary>
      <param name="savedState">Объект <see cref="T:System.Collections.IDictionary" />, содержащий состояние компьютера до установки. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Transactional">
      <summary>Получает или задает значение, указывающее, принимает ли очередь только сообщения, отправляемые как часть транзакции.</summary>
      <returns>Значение true, если очередь принимает только сообщения, передаваемые как часть транзакции; в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>Удаляет установку путем удаления из реестра сведений об очереди.Этот метод предназначен для использования средствами удаления установки, которые автоматически вызывают соответствующие методы.</summary>
      <param name="savedState">Объект <see cref="T:System.Collections.IDictionary" />, содержащий состояние компьютера после установки. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.UninstallAction">
      <summary>Получает или задает значение, указывающее, что установщик делает с очередью во время деинсталляции: удаляет ее, восстанавливает до состояния, предшествовавшего установке, или же оставляет ее в текущем состоянии.</summary>
      <returns>Одно из значений <see cref="T:System.Configuration.Install.UninstallAction" /> указывающее, в каком состоянии будет очередь при деинсталляции <see cref="T:System.Messaging.MessageQueue" />.Значение по умолчанию — Remove.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.UseJournalQueue">
      <summary>Получает или задает значение, указывающее, будут ли сообщения, извлекаемые из очереди, копироваться в связанную очередь журнала.</summary>
      <returns>Значение true, если сообщения, извлекаемые из очереди, необходимо копировать в очередь журнала, в противном случае — значение false.Значение по умолчанию — false.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueuePermission">
      <summary>Позволяет контролировать разрешения на доступ к коду для обмена сообщениями.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueuePermission" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueuePermission" /> с указанными уровнями доступа и путем к очереди.</summary>
      <param name="permissionAccess">Одно из значений <see cref="T:System.Messaging.MessageQueuePermissionAccess" />. </param>
      <param name="path">Путь к очереди, на которую ссылается <see cref="T:System.Messaging.MessageQueue" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueuePermission" /> с указанными уровнями доступа, используемым компьютером, описанием очереди и категорией очереди.</summary>
      <param name="permissionAccess">Одно из значений <see cref="T:System.Messaging.MessageQueuePermissionAccess" />. </param>
      <param name="machineName">Имя компьютера, на котором расположена очередь Message Queuing. </param>
      <param name="label">Описание очереди. </param>
      <param name="category">Категория очереди (идентификатор типа Message Queuing). </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the specified permission access level entries.</summary>
      <param name="permissionAccessEntries">Массив объектов <see cref="T:System.Messaging.MessageQueuePermissionEntry" />.The <see cref="P:System.Messaging.MessageQueuePermission.PermissionEntries" /> property is set to this value.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the specified permission state.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Copy">
      <summary>Creates and returns an identical copy of the current permission object.</summary>
      <returns>Копия текущего объекта разрешения.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)">
      <summary>Восстанавливает объект безопасности с определенным состоянием из кодировки XML.</summary>
      <param name="securityElement">Кодировка XML, используемая для восстановления объекта безопасности. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)">
      <summary>Возвращает новый объект разрешений, предоставляющий пересечение текущего и заданного объектов разрешений.</summary>
      <returns>Новый объект разрешений, представляющий собой пересечение текущего и заданного объектов разрешений.Этот новый объект разрешений представляет собой ссылку со значением NULL (Nothing в Visual Basic), если пересечение пусто.</returns>
      <param name="target">Объект разрешений, пересекающийся с текущим объектом разрешений.Должен относиться к тому же типу, что и текущий объект разрешений.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Возвращает значение, указывающее, является ли текущий объект разрешений подмножеством заданного объекта разрешений.</summary>
      <returns>Значение true, если текущий объект разрешений является подмножеством заданного объекта разрешений; в противном случае — значение false.</returns>
      <param name="target">Объект разрешений, для которого требуется проверить связь подмножеств.Этот объект должен относиться к тому же типу, что и текущий объект разрешений.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.IsUnrestricted">
      <summary>Возвращает значение, указывающее, может ли разрешение быть представлено как неограниченное без знания его семантики.</summary>
      <returns>Значение true, если разрешение может быть представлено как неограниченное; в противном случае — значение false. </returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermission.PermissionEntries">
      <summary>Получает коллекцию из элементов разрешений для данного запроса разрешений.</summary>
      <returns>Коллекция <see cref="T:System.Messaging.MessageQueuePermissionEntryCollection" />, которая содержит элементы разрешений для этого запроса разрешений.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.ToXml">
      <summary>Создает кодировку XML для объекта безопасности и его текущего состояния.</summary>
      <returns>Кодировка XML для объекта безопасности, включая все сведения о состоянии.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)">
      <summary>Возвращает новый объект разрешений, представляющий собой объединение текущего и заданного объектов разрешений.</summary>
      <returns>Новый объект разрешения, представляющий собой объединение текущего и заданного объектов разрешений.</returns>
      <param name="target">Объект разрешений для комбинирования с текущим объектом разрешений.Должен относиться к тому же типу, что и текущий объект разрешений.</param>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionAccess">
      <summary>Определяет уровни доступа, используемые классами разрешений <see cref="N:System.Messaging" />.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.None">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> has no permissions.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Browse">
      <summary>Объект <see cref="T:System.Messaging.MessageQueue" /> позволяет выполнять просмотр в доступных очередях.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Send">
      <summary>Объект <see cref="T:System.Messaging.MessageQueue" /> позволяет выполнять просмотр в доступных очередях и передавать сообщения.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Peek">
      <summary>Объект <see cref="T:System.Messaging.MessageQueue" /> позволяет просматривать доступные очереди и читать сообщения в очереди.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Receive">
      <summary>Объект <see cref="T:System.Messaging.MessageQueue" /> позволяет просматривать доступные очереди, читать сообщения в очереди и принимать сообщения.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Administer">
      <summary>Объект <see cref="T:System.Messaging.MessageQueue" /> позволяет просматривать доступные очереди, читать сообщения в очереди, передавать и принимать сообщения.</summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionAttribute">
      <summary>Разрешает декларативные проверки разрешений <see cref="T:System.Messaging.MessageQueue" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermissionAttribute" /> class.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Category">
      <summary>Gets or sets the queue category.</summary>
      <returns>Категория очереди (идентификатор типа для Message Queuing), которая позволяет приложению разделить очереди на категории.</returns>
      <exception cref="T:System.InvalidOperationException">Значение равно null. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionAttribute.CreatePermission">
      <summary>Создает разрешения на основе запрошенных значений уровня доступа, категории, метки, имени компьютера и пути, которые задаются в свойствах <see cref="P:System.Messaging.MessageQueuePermissionAttribute.PermissionAccess" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Category" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Label" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.MachineName" /> и <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Path" /> атрибута.</summary>
      <returns>Интерфейс <see cref="T:System.Security.IPermission" />, представляющий созданное разрешение.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Label">
      <summary>Получает или задает описание очереди.</summary>
      <returns>Метка очереди сообщения.</returns>
      <exception cref="T:System.InvalidOperationException">Значение равно null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.MachineName">
      <summary>Получает или задает имя компьютера, на котором расположена очередь Message Queuing.</summary>
      <returns>Имя компьютера, на котором расположена очередь.</returns>
      <exception cref="T:System.InvalidOperationException">Значение равно null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Path">
      <summary>Получает или задает путь очереди.</summary>
      <returns>Очередь, на которую ссылается объект <see cref="T:System.Messaging.MessageQueue" />.</returns>
      <exception cref="T:System.InvalidOperationException">Значение равно null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.PermissionAccess">
      <summary>Получает или задает уровни доступа к разрешениям, используемые в запросе разрешений.</summary>
      <returns>Поразрядное сочетание значений <see cref="T:System.Messaging.MessageQueuePermissionAccess" />.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionEntry">
      <summary>Определяет наименьшую единицу разрешения управления доступом для кода, заданную для обмена сообщениями.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> с указанными уровнями доступа к разрешениям и путем к очереди.</summary>
      <param name="permissionAccess">Поразрядное сочетание значений <see cref="T:System.Messaging.MessageQueuePermissionAccess" />.Это значение устанавливается для свойства <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" />.</param>
      <param name="path">Путь к очереди, на которую ссылается объект <see cref="T:System.Messaging.MessageQueue" />.Это значение устанавливается для свойства <see cref="P:System.Messaging.MessageQueuePermissionEntry.Path" />.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> с указанными уровнями доступа к разрешениям, именем компьютера, на котором расположена очередь, описанием очереди и категорией очереди.</summary>
      <param name="permissionAccess">Поразрядное сочетание значений <see cref="T:System.Messaging.MessageQueuePermissionAccess" />.Это значение устанавливается для свойства <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" />.</param>
      <param name="machineName">Имя компьютера, на котором расположена очередь Message Queuing.Это значение устанавливается для свойства <see cref="P:System.Messaging.MessageQueuePermissionEntry.MachineName" />.</param>
      <param name="label">Описание очереди.Это значение устанавливается для свойства <see cref="P:System.Messaging.MessageQueuePermissionEntry.Label" />.</param>
      <param name="category">Категория очереди (идентификатор типа Message Queuing).Это значение устанавливается для свойства <see cref="P:System.Messaging.MessageQueuePermissionEntry.Category" />.</param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Category">
      <summary>Получает категорию очереди.</summary>
      <returns>Категория очереди (идентификатор типа Message Queuing), которая позволяет приложению разделить очереди на категории.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Label">
      <summary>Получает описание очереди.</summary>
      <returns>Метка очереди сообщения.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.MachineName">
      <summary>Получает имя компьютера, на котором расположена очередь Message Queuing.</summary>
      <returns>Имя компьютера, на котором расположена очередь.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Path">
      <summary>Получает путь очереди.</summary>
      <returns>Очередь, на которую ссылается объект <see cref="T:System.Messaging.MessageQueue" />.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess">
      <summary>Получает уровни доступа к разрешениям, используемым в запросе разрешений.</summary>
      <returns>Поразрядное сочетание значений <see cref="T:System.Messaging.MessageQueuePermissionAccess" />.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionEntryCollection">
      <summary>Contains a strongly typed collection of <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> objects.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Add(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Adds a specified <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> to this collection.</summary>
      <returns>The zero-based index of the added <see cref="T:System.Messaging.MessageQueuePermissionEntry" />.</returns>
      <param name="value">The <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> to add. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntry[])">
      <summary>Добавляет набор указанных записей разрешений в данную коллекцию.</summary>
      <param name="value">Массив объектов типа <see cref="T:System.Messaging.MessageQueuePermissionEntry" />, содержащий добавляемые записи разрешения. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntryCollection)">
      <summary>Добавляет набор указанных записей разрешений в данную коллекцию.</summary>
      <param name="value">A <see cref="T:System.Messaging.MessageQueuePermissionEntryCollection" /> that contains the permission entries to add. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Contains(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Determines whether this collection contains a specified <see cref="T:System.Messaging.MessageQueuePermissionEntry" />.</summary>
      <returns>true if the specified <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> belongs to this collection; otherwise, false.</returns>
      <param name="value">Искомый объект <see cref="T:System.Messaging.MessageQueuePermissionEntry" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.CopyTo(System.Messaging.MessageQueuePermissionEntry[],System.Int32)">
      <summary>Copies the permission entries from this collection to an array, starting at a particular index of the array.</summary>
      <param name="array">Массив объектов типа <see cref="T:System.Messaging.MessageQueuePermissionEntry" />, который получает записи разрешений коллекции. </param>
      <param name="index">The zero-based index at which to begin copying the permission entries. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.IndexOf(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Определяет индекс указанной записи разрешения в данной коллекции.</summary>
      <returns>The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.</returns>
      <param name="value">Запись разрешения, которую требуется найти. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Insert(System.Int32,System.Messaging.MessageQueuePermissionEntry)">
      <summary>Вставляет запись разрешения в данную коллекцию по указанному индексу.</summary>
      <param name="index">Отсчитываемый с нуля индекс в коллекции, с которого вставляется запись разрешения. </param>
      <param name="value">The permission entry to insert into this collection. </param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntryCollection.Item(System.Int32)">
      <summary>Gets or sets the object at a specified index.</summary>
      <returns>Объект <see cref="T:System.Messaging.MessageQueuePermissionEntry" />, находящийся по указанному индексу.</returns>
      <param name="index">Отсчитываемый с нуля индекс в коллекции. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnClear">
      <summary>Выполняет дополнительные пользовательские действия после очистки содержимого коллекции.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>Выполняет дополнительные пользовательские действия перед вставкой в коллекцию новой записи разрешения.</summary>
      <param name="index">Отсчитываемый с нуля индекс, по которому следует вставить значение <paramref name="value" />. </param>
      <param name="value">Новое значение записи разрешения в позиции с индексом <paramref name="index" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>Выполняет дополнительные пользовательские действия при удалении новой записи разрешения из коллекции.</summary>
      <param name="index">Отсчитываемый с нуля индекс, по которому может быть найдено значение <paramref name="value" />. </param>
      <param name="value">Запись разрешения, которую требуется удалить из позиции с индексом <paramref name="index" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Выполняет дополнительные пользовательские действия перед заданием значения в коллекции.</summary>
      <param name="index">Отсчитываемый с нуля индекс, по которому может быть найдено значение <paramref name="oldValue" />.</param>
      <param name="oldValue">Значение, которое требуется заменить значением <paramref name="newValue" />. </param>
      <param name="newValue">Новое значение записи разрешения в позиции с индексом <paramref name="index" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Remove(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Удаляет указанную запись разрешения из этой коллекции.</summary>
      <param name="value">Удаляемая запись разрешения. </param>
    </member>
    <member name="T:System.Messaging.MessageQueueTransaction">
      <summary>Обеспечивает внутреннюю транзакцию службы Message Queuing.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueTransaction" /> class.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Abort">
      <summary>Выполняет откат отложенной внутренней транзакции.</summary>
      <exception cref="T:System.InvalidOperationException">Внутренняя транзакция, для которой предпринята попытка отката, не начата. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">Возникла внутренняя ошибка Message Queuing. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Begin">
      <summary>Начинает новую внутреннюю транзакцию Message Queuing.</summary>
      <exception cref="T:System.InvalidOperationException">Данная транзакция уже начата. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">Возникла внутренняя ошибка Message Queuing. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Commit">
      <summary>Фиксирует отложенную внутреннюю транзакцию.</summary>
      <exception cref="T:System.InvalidOperationException">Транзакция, для которой предпринята попытка фиксации, не начата. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">Возникла внутренняя ошибка Message Queuing. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Messaging.MessageQueueTransaction" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueTransaction" /> and optionally releases the managed resources.</summary>
      <param name="disposing">Значение true позволяет освободить управляемые и неуправляемые ресурсы; значение false позволяет освободить только неуправляемые ресурсы. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Finalize">
      <summary>Освобождает ресурсы, удерживаемые текущим экземпляром.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueTransaction.Status">
      <summary>Получает статус данной транзакции.</summary>
      <returns>Одно из значений <see cref="T:System.Messaging.MessageQueueTransactionStatus" />, показывающее, была ли данная транзакция зафиксирована, прервана, инициализирована или отложена.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueueTransactionStatus">
      <summary>Задает состояние внутренней транзакции Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Aborted">
      <summary>Данная транзакция прервана и об этом уведомлены все участники.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Committed">
      <summary>Данная транзакция зафиксирована и об этом уведомлены все участники.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Initialized">
      <summary>Транзакция инициализирована.Транзакция еще не начата.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Pending">
      <summary>Транзакция начата.Ни фиксация, ни откат транзакции еще не выполнены.</summary>
    </member>
    <member name="T:System.Messaging.MessageQueueTransactionType">
      <summary>Задает тип транзакции Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.None">
      <summary>Операция не будет транзакционной.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.Automatic">
      <summary>Тип транзакции, используемой для Microsoft Transaction Server (MTS) или служб COM+ 1.0.Если контекст транзакции MTS уже существует, он будет использован при передаче или приеме сообщения.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.Single">
      <summary>Тип транзакции, используемой для единичных внутренних транзакций.</summary>
    </member>
    <member name="T:System.Messaging.MessageType">
      <summary>Идентифицирует тип сообщения.Сообщение может быть обычным сообщением Message Queuing, положительным или отрицательным подтверждающим сообщением или сообщением-отчетом.</summary>
    </member>
    <member name="F:System.Messaging.MessageType.Acknowledgment">
      <summary>Подтверждающее сообщение.</summary>
    </member>
    <member name="F:System.Messaging.MessageType.Normal">
      <summary>Обычное сообщение Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.MessageType.Report">
      <summary>Сообщение-отчет.</summary>
    </member>
    <member name="T:System.Messaging.MessagingDescriptionAttribute">
      <summary>Задает описание свойства или события.</summary>
    </member>
    <member name="M:System.Messaging.MessagingDescriptionAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessagingDescriptionAttribute" />, используя заданное описание.</summary>
      <param name="description">Текст описания, определяемый приложением. </param>
    </member>
    <member name="P:System.Messaging.MessagingDescriptionAttribute.Description">
      <summary>Получает описание текста, связанного с наблюдаемым элементом.</summary>
      <returns>Описание, определяемое приложением.</returns>
    </member>
    <member name="T:System.Messaging.PeekAction">
      <summary>Показывает, следует ли считывать в очереди текущее сообщение или следующее сообщение.</summary>
    </member>
    <member name="F:System.Messaging.PeekAction.Current">
      <summary>Считывает текущее сообщение в очереди.</summary>
    </member>
    <member name="F:System.Messaging.PeekAction.Next">
      <summary>Считывает следующее сообщение в очереди.</summary>
    </member>
    <member name="T:System.Messaging.PeekCompletedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Messaging.MessageQueue.PeekCompleted" />.Когда асинхронная операция считывания вызывает обработчик событий, экземпляр этого класса передается в обработчик.</summary>
    </member>
    <member name="P:System.Messaging.PeekCompletedEventArgs.AsyncResult">
      <summary>Получает или задает результат запрошенной асинхронной операции.</summary>
      <returns>Объект <see cref="T:System.IAsyncResult" />, содержащий данные, связанные с операцией считывания.</returns>
    </member>
    <member name="P:System.Messaging.PeekCompletedEventArgs.Message">
      <summary>Получает сообщение, связанное с данной асинхронной операцией считывания.</summary>
      <returns>Объект <see cref="T:System.Messaging.Message" />, представляющий собой конечный результат асинхронной операции считывания. </returns>
      <exception cref="T:System.Messaging.MessageQueueException">Невозможно извлечь <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" />.Возможно, в асинхронной операции истек срок действия тайм-аута.</exception>
    </member>
    <member name="T:System.Messaging.PeekCompletedEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> класса <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="sender">Источник события, <see cref="T:System.Messaging.MessageQueue" />. </param>
      <param name="e">Объект <see cref="T:System.Messaging.PeekCompletedEventArgs" />, содержащий информацию события. </param>
    </member>
    <member name="T:System.Messaging.QueueAccessMode">
      <summary>Задает режим доступа для объекта <see cref="T:System.Messaging.MessageQueue" /> на момент его создания.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Send">
      <summary>В очереди можно только отправлять сообщения.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Peek">
      <summary>В очереди можно только считывать сообщения.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Receive">
      <summary>В очереди можно считывать и получать сообщения.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.PeekAndAdmin">
      <summary>В очереди можно считывать сообщения.Очередь может также очищаться.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.ReceiveAndAdmin">
      <summary>В очереди можно получать сообщения.Очередь может также очищаться.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.SendAndReceive">
      <summary>В очереди можно считывать, получать и отправлять сообщения.</summary>
    </member>
    <member name="T:System.Messaging.ReceiveCompletedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />.Когда асинхронная операция получения вызывает обработчик событий, экземпляр этого класса передается в обработчик.</summary>
    </member>
    <member name="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
      <summary>Получает или задает результат запрошенной асинхронной операции.</summary>
      <returns>
        <see cref="T:System.IAsyncResult" />, содержащий данные, связанные с операцией получения.</returns>
    </member>
    <member name="P:System.Messaging.ReceiveCompletedEventArgs.Message">
      <summary>Получает сообщение, связанное с данной асинхронной операцией получения.</summary>
      <returns>Объект <see cref="T:System.Messaging.Message" />, представляющий собой конечный результат асинхронной операции получения. </returns>
      <exception cref="T:System.Messaging.MessageQueueException">Невозможно извлечь <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" />.Возможно, в асинхронной операции истек срок действия тайм-аута.</exception>
    </member>
    <member name="T:System.Messaging.ReceiveCompletedEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> класса <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="sender">Источник события, <see cref="T:System.Messaging.MessageQueue" />. </param>
      <param name="e">Объект <see cref="T:System.Messaging.ReceiveCompletedEventArgs" />, содержащий данные, относящиеся к событию. </param>
    </member>
    <member name="T:System.Messaging.SecurityContext">
      <summary>Представляет контекст безопасности для сообщения в очереди.</summary>
    </member>
    <member name="M:System.Messaging.SecurityContext.Dispose">
      <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Messaging.SecurityContext" />.</summary>
    </member>
    <member name="T:System.Messaging.StandardAccessRights">
      <summary>Задает набор стандартных прав доступа, соответствующих операциям, общим для большинства типов защищаемых объектов.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Delete">
      <summary>Право на удаление объекта.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.ReadSecurity">
      <summary>Право на чтение сведений в дескрипторе безопасности объекта.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.WriteSecurity">
      <summary>Право на изменение списка управления доступом на уровне пользователей (DACL) в дескрипторе безопасности.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Synchronize">
      <summary>Право на использование данного объекта для синхронизации.Это позволяет потоку ожидать до тех пор, пока данный объект не окажется в определенном состоянии.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.ModifyOwner">
      <summary>Право на изменение владельца в дескрипторе безопасности объекта.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Read">
      <summary>Право на чтение сведений в дескрипторе безопасности объекта.Read is currently defined to equal ReadSecurity.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Write">
      <summary>Право на чтение сведений в дескрипторе безопасности объекта.Write is currently defined to equal ReadSecurity.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Execute">
      <summary>Право на чтение сведений в дескрипторе безопасности объекта.В Windows 2000 и Windows NT дескриптор безопасности содержит сведения о безопасности защищаемого объекта.It identifies the object's owner and primary group.Execute is currently defined to equal ReadSecurity.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Required">
      <summary>Комбинирует доступ Delete, ReadSecurity, WriteSecurity и ModifyOwner.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.All">
      <summary>Комбинирует доступ Delete, ReadSecurity, WriteSecurity, ModifyOwner и Synchronize.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.None">
      <summary>Нет доступа.</summary>
    </member>
    <member name="T:System.Messaging.Trustee">
      <summary>Задает учетную запись пользователя, учетную запись группы или сеанс входа в систему, к которым применим элемент контроля доступа.</summary>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.Trustee" /> без задания каких-либо его свойств в отношении чтения и записи.</summary>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.Trustee" /> с типом Unknown, устанавливая свойство <see cref="P:System.Messaging.Trustee.Name" /> равным заданному значению, а свойство <see cref="P:System.Messaging.Trustee.SystemName" /> равным null.</summary>
      <param name="name">Значение, которое присваивается свойству <see cref="P:System.Messaging.Trustee.Name" />. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> — null. </exception>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.Trustee" /> с типом Unknown, устанавливая свойства <see cref="P:System.Messaging.Trustee.Name" /> и SystemName равными заданным значениям.</summary>
      <param name="name">Значение, которое присваивается свойству <see cref="P:System.Messaging.Trustee.Name" />. </param>
      <param name="systemName">Значение, которое присваивается свойству <see cref="P:System.Messaging.Trustee.SystemName" />. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> — null. </exception>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.Trustee" /> заданного типа, устанавливая свойства <see cref="P:System.Messaging.Trustee.Name" /> и <see cref="P:System.Messaging.Trustee.SystemName" /> равными заданным значениям.</summary>
      <param name="name">Значение, которое присваивается свойству <see cref="P:System.Messaging.Trustee.Name" />. </param>
      <param name="systemName">Значение, которое присваивается свойству <see cref="P:System.Messaging.Trustee.SystemName" />. </param>
      <param name="trusteeType">Объект <see cref="T:System.Messaging.TrusteeType" />, показывающий тип учетной записи доверенного лица. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> — null. </exception>
    </member>
    <member name="P:System.Messaging.Trustee.Name">
      <summary>Получает или задает имя доверенного лица.</summary>
      <returns>Имя учетной записи, которой будут назначены новые права.Значение по умолчанию — null.</returns>
      <exception cref="T:System.ArgumentNullException">Значение свойства <see cref="P:System.Messaging.Trustee.Name" /> равно null. </exception>
    </member>
    <member name="P:System.Messaging.Trustee.SystemName">
      <summary>Получает или задает компьютер, на котором проводится поиск учетной записи доверенного лица.</summary>
      <returns>Локальный или удаленный компьютер, на котором существует данная учетная запись.Значение по умолчанию — null; это означает, что поиск имени будет выполняться на локальном компьютере.</returns>
    </member>
    <member name="P:System.Messaging.Trustee.TrusteeType">
      <summary>Получает или задает тип доверенного лица, который определяет, кем является это доверенное лицо — пользователем, группой, компьютером, доменом или псевдонимом.</summary>
      <returns>Объект <see cref="T:System.Messaging.TrusteeType" /> указывает тип учетной записи данного доверенного лица в системе.Значение по умолчанию — Unknown.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Заданный тип доверенного лица не является одним из членов перечисления <see cref="T:System.Messaging.TrusteeType" />. </exception>
    </member>
    <member name="T:System.Messaging.TrusteeType">
      <summary>Задает тип доверенного лица.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Unknown">
      <summary>Тип доверенного лица неизвестен, но необязательно тип является недопустимым.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.User">
      <summary>Данное доверенное лицо — пользователь.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Group">
      <summary>Данное доверенное лицо — группа.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Domain">
      <summary>Данное доверенное лицо — домен.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Alias">
      <summary>Данное доверенное лицо — псевдоним.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Computer">
      <summary>Данное доверенное лицо — компьютер.</summary>
    </member>
    <member name="T:System.Messaging.XmlMessageFormatter">
      <summary>Сериализует объекты в текст сообщения или десериализует текст сообщения в объекты, используя для этого формат XML, основанный на определении схемы XSD.</summary>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" /> без набора типов целевых объектов.</summary>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" />, устанавливая типы целевых объектов, передаваемых как массив (полностью определенных) строковых значений.</summary>
      <param name="targetTypeNames">Массив типа <see cref="T:System.String" />, задающий набор возможных типов, десериализация которых будет выполняться модулем форматирования из предоставляемого сообщения.Эти значения должны быть полностью определены, например, "MyNamespace.MyOrders, MyOrdersAssemblyName".</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="targetTypeNames" /> — null. </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" />, устанавливая типы целевых объектов, передаваемых как массив типов объектов.</summary>
      <param name="targetTypes">Массив типа <see cref="T:System.Type" />, задающий набор возможных типов, десериализация которых будет выполняться модулем форматирования из предоставляемого сообщения. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="targetTypes" /> — null. </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>Определяет, может ли модуль форматирования десериализовать сообщение.</summary>
      <returns>Значение true, если XML-модуль форматирования может десериализовать сообщение; в противном случае — значение false.</returns>
      <param name="message">Объект <see cref="T:System.Messaging.Message" /> для проверки. </param>
      <exception cref="T:System.InvalidOperationException">Ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />, ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> не установлены. </exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> — null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Clone">
      <summary>Создает экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" />, свойства чтения и записи (наборы типов целевых объектов) которого такие же, как и у текущего экземпляра <see cref="T:System.Messaging.XmlMessageFormatter" />.</summary>
      <returns>Объект со свойствами, идентичными свойствам данного экземпляра <see cref="T:System.Messaging.XmlMessageFormatter" />, но с метаданными, которые не определяют его как экземпляр класса модуля форматирования.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
      <summary>Читает содержимое из данного сообщения и создает объект, содержащий десериализованное сообщение.</summary>
      <returns>Десериализованное сообщение.</returns>
      <param name="message">Десериализуемое сообщение <see cref="T:System.Messaging.Message" /> в XML-формате. </param>
      <exception cref="T:System.InvalidOperationException">Ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />, ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> не установлены.-или- Экземпляр, сериализуемый в тело сообщения, не согласуется ни с одной из схем, представленных типами в свойствах <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> и <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />. </exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> — null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
      <summary>Задает набор возможных типов, десериализация которых будет выполняться модулем форматирования из тела предоставляемого сообщения.</summary>
      <returns>Массив типа <see cref="T:System.String" />, задающий типы объектов, десериализуемых из тела сообщения при чтении данного сообщения.</returns>
      <exception cref="T:System.ArgumentNullException">Значение свойства <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> равно null. </exception>
    </member>
    <member name="P:System.Messaging.XmlMessageFormatter.TargetTypes">
      <summary>Задает набор возможных типов, десериализация которых будет выполняться модулем форматирования из тела предоставляемого сообщения.</summary>
      <returns>Массив типа <see cref="T:System.Type" />, задающий типы объектов, десериализуемых из тела сообщения при чтении данного сообщения.</returns>
      <exception cref="T:System.ArgumentNullException">Значение свойства <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> равно null. </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>Выполняет сериализацию объекта в текст сообщения.</summary>
      <param name="message">Сообщение <see cref="T:System.Messaging.Message" />, свойство <see cref="P:System.Messaging.Message.Body" /> которого будет содержать сериализованный объект. </param>
      <param name="obj">Объект <see cref="T:System.Object" />, сериализуемый в тело сообщения. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="message" /> — null.-или- Значение параметра <paramref name="obj" /> — null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Messaging.Design.QueuePathDialog">
      <summary>Представляет элемент управления редактора пути.</summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.#ctor(System.IServiceProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.Design.QueuePathDialog" /> с помощью указанного поставщика услуг.</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />, который может использоваться для получения услуг.</param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.#ctor(System.Windows.Forms.Design.IUIService)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.Design.QueuePathDialog" />, используя указанную службу пользовательского интерфейса.</summary>
      <param name="uiService">
        <see cref="T:System.Windows.Forms.Design.IUIService" /> разрешает взаимодействие с пользовательским интерфейсом размещающего объекта среды разработки.</param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.ChoosePath">
      <summary>Обновляет элемент управления редактора пути при выборе пути к очереди.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.DoubleClicked(System.Object,System.EventArgs)">
      <summary>Occurs when the control is double-clicked.</summary>
      <param name="source">Источник события.</param>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
      <summary>Обработчик событий для события закрытия формы элемента управления редактора пути к очереди.</summary>
      <param name="e">Объект <see cref="T:System.Windows.Forms.FormClosingEventArgs" />, содержащий аргументы для обработчика событий закрытия формы.</param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.OnHandleCreated(System.EventArgs)">
      <summary>Обработчик событий для события создания формы элемента управления редактора пути к очереди.</summary>
      <param name="e">Объект <see cref="T:System.Windows.Forms.FormClosingEventArgs" />, содержащий аргументы для обработчика событий создания формы.</param>
    </member>
    <member name="P:System.Messaging.Design.QueuePathDialog.Path">
      <summary>Получает путь к очереди.</summary>
      <returns>Путь к очереди.</returns>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.SelectQueue(System.Messaging.MessageQueue)">
      <summary>Выбирает заданную очередь.</summary>
      <param name="queue">Очередь <see cref="T:System.Messaging.MessageQueue" />, которую нужно выбрать.</param>
    </member>
    <member name="T:System.Messaging.Design.QueuePathEditor">
      <summary>Предоставляет пользовательский интерфейс для выбора пути к очереди сообщений.</summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathEditor.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.Design.QueuePathEditor" />.</summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Изменяет значение заданной очереди сообщений с помощью заданного контекста дескриптора типа и поставщика услуг.</summary>
      <returns>Новое значение пути к очереди сообщений. </returns>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий дополнительные сведения о контексте. </param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />, который редактор может использовать для получения услуг. </param>
      <param name="value">Очередь сообщений, которую нужно изменить. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.Design.QueuePathEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns the editing style used by the <see cref="Overload:System.Messaging.Design.QueuePathEditor.EditValue" /> method. </summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />.</returns>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий дополнительные сведения о контексте. </param>
    </member>
  </members>
</doc>