<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary>Specifies the amount of input or output checking that the created <see cref="T:System.Xml.XmlReader" /> and <see cref="T:System.Xml.XmlWriter" /> objects perform.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary>The <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.Xml.XmlWriter" /> object automatically detects whether document or fragment checking should be performed, and does the appropriate checking.In the case where you are wrapping another <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.Xml.XmlWriter" /> object, the outer object does not do any additional conformance checking.Conformance checking is left up to the underlying object.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary>The XML data is a well-formed XML fragment.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary>The XML data is in conformance to the rules for a well-formed XML 1.0 document.</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary>Задает параметры обработки DTD.Объект <see cref="T:System.Xml.XmlReaderSettings" /> использует перечисление <see cref="T:System.Xml.DtdProcessing" />.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary>Указывает, что при обнаружении DTD будет создано исключение <see cref="T:System.Xml.XmlException" /> с сообщением о том, что DTD запрещены.Это поведение установлено по умолчанию.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary>Элемент DOCTYPE будет проигнорирован.Обработка DTD выполнена не будет.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary>Используется для анализа DTD.</summary>
    </member>
    <member name="T:System.Xml.EntityHandling">
      <summary>Specifies how the <see cref="T:System.Xml.XmlTextReader" /> or <see cref="T:System.Xml.XmlValidatingReader" /> handle entities.</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandEntities">
      <summary>Expands all entities and returns the expanded nodes.</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandCharEntities">
      <summary>Expands character entities and returns general entities as <see cref="F:System.Xml.XmlNodeType.EntityReference" /> nodes. </summary>
    </member>
    <member name="T:System.Xml.Formatting">
      <summary>Specifies formatting options for the <see cref="T:System.Xml.XmlTextWriter" />.</summary>
    </member>
    <member name="F:System.Xml.Formatting.None">
      <summary>No special formatting is applied.This is the default.</summary>
    </member>
    <member name="F:System.Xml.Formatting.Indented">
      <summary>Causes child elements to be indented according to the <see cref="P:System.Xml.XmlTextWriter.Indentation" /> and <see cref="P:System.Xml.XmlTextWriter.IndentChar" /> settings. </summary>
    </member>
    <member name="T:System.Xml.IHasXmlNode">
      <summary>Enables a class to return an <see cref="T:System.Xml.XmlNode" /> from the current context or position.</summary>
    </member>
    <member name="M:System.Xml.IHasXmlNode.GetNode">
      <summary>Returns the <see cref="T:System.Xml.XmlNode" /> for the current position.</summary>
      <returns>The XmlNode for the current position.</returns>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary>Provides an interface to enable a class to return line and position information.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary>Gets a value indicating whether the class can return line information.</summary>
      <returns>true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> can be provided; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary>Gets the current line number.</summary>
      <returns>The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> returns false).</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary>Gets the current line position.</summary>
      <returns>The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> returns false).</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary>Provides read-only access to a set of prefix and namespace mappings.</summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Gets a collection of defined prefix-namespace mappings that are currently in scope.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> that contains the current in-scope namespaces.</returns>
      <param name="scope">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</param>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary>Gets the namespace URI mapped to the specified prefix.</summary>
      <returns>The namespace URI that is mapped to the prefix; null if the prefix is not mapped to a namespace URI.</returns>
      <param name="prefix">The prefix whose namespace URI you wish to find.</param>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary>Gets the prefix that is mapped to the specified namespace URI.</summary>
      <returns>The prefix that is mapped to the namespace URI; null if the namespace URI is not mapped to a prefix.</returns>
      <param name="namespaceName">The namespace URI whose prefix you wish to find.</param>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary>Указывает, нужно ли удалять дубликаты объявлений в объекте <see cref="T:System.Xml.XmlWriter" />. </summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary>Указывает, что удалять дубликаты объявлений не будут удалены.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary>Указывает, что дубликаты объявлений будут удалены.Чтобы дубликат пространства имен был удален, должны совпадать префиксы пространств имен.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary>Implements a single-threaded <see cref="T:System.Xml.XmlNameTable" />.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary>Initializes a new instance of the NameTable class.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Atomizes the specified string and adds it to the NameTable.</summary>
      <returns>The atomized string or the existing string if one already exists in the NameTable.If <paramref name="len" /> is zero, String.Empty is returned.</returns>
      <param name="key">The character array containing the string to add. </param>
      <param name="start">The zero-based index into the array specifying the first character of the string. </param>
      <param name="len">Количество знаков в строке. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />-or- <paramref name="start" /> &gt;= <paramref name="key" />.Length -or- <paramref name="len" /> &gt;= <paramref name="key" />.Length The above conditions do not cause an exception to be thrown if <paramref name="len" /> =0. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary>Atomizes the specified string and adds it to the NameTable.</summary>
      <returns>The atomized string or the existing string if it already exists in the NameTable.</returns>
      <param name="key">Строка для добавления. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Gets the atomized string containing the same characters as the specified range of characters in the given array.</summary>
      <returns>The atomized string or null if the string has not already been atomized.If <paramref name="len" /> is zero, String.Empty is returned.</returns>
      <param name="key">The character array containing the name to find. </param>
      <param name="start">The zero-based index into the array specifying the first character of the name. </param>
      <param name="len">The number of characters in the name. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />-or- <paramref name="start" /> &gt;= <paramref name="key" />.Length -or- <paramref name="len" /> &gt;= <paramref name="key" />.Length The above conditions do not cause an exception to be thrown if <paramref name="len" /> =0. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary>Gets the atomized string with the specified value.</summary>
      <returns>The atomized string object or null if the string has not already been atomized.</returns>
      <param name="value">The name to find. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null. </exception>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary>Specifies how to handle line breaks.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary>New line characters are replaced to match the character specified in the <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />  property.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary>New line characters are entitized.This setting preserves all characters when the output is read by a normalizing <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary>The new line characters are unchanged.The output is the same as the input.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary>Specifies the state of the reader.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary>The Read method has not been called.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary>Вызван метод Read.Additional methods may be called on the reader.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary>An error occurred that prevents the read operation from continuing.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary>The end of the file has been reached successfully.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary>Вызван метод <see cref="M:System.Xml.XmlReader.Close" />.</summary>
    </member>
    <member name="T:System.Xml.ValidationType">
      <summary>Specifies the type of validation to perform.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.None">
      <summary>No validation is performed.This setting creates an XML 1.0 compliant non-validating parser.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Auto">
      <summary>Validates if DTD or schema information is found.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.DTD">
      <summary>Validates according to the DTD.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.XDR">
      <summary>Validate according to XML-Data Reduced (XDR) schemas, including inline XDR schemas.XDR schemas are recognized using the x-schema namespace prefix or the <see cref="P:System.Xml.XmlValidatingReader.Schemas" /> property.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Schema">
      <summary>Validate according to XML Schema definition language (XSD) schemas, including inline XML Schemas.XML Schemas are associated with namespace URIs either by using the schemaLocation attribute or the provided Schemas property.</summary>
    </member>
    <member name="T:System.Xml.WhitespaceHandling">
      <summary>Specifies how white space is handled.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.All">
      <summary>Return Whitespace and SignificantWhitespace nodes.This is the default.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.Significant">
      <summary>Return SignificantWhitespace nodes only.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.None">
      <summary>Return no Whitespace and no SignificantWhitespace nodes.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary>Specifies the state of the <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary>Indicates that a Write method has not yet been called.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary>Indicates that the prolog is being written.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary>Indicates that an element start tag is being written.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary>Indicates that an attribute value is being written.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary>Indicates that element content is being written.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary>Indicates that the <see cref="M:System.Xml.XmlWriter.Close" /> method has been called.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary>An exception has been thrown, which has left the <see cref="T:System.Xml.XmlWriter" /> in an invalid state.You can call the <see cref="M:System.Xml.XmlWriter.Close" /> method to put the <see cref="T:System.Xml.XmlWriter" /> in the <see cref="F:System.Xml.WriteState.Closed" /> state.Any other <see cref="T:System.Xml.XmlWriter" /> method calls results in an <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="T:System.Xml.XmlAttribute">
      <summary>Represents an attribute.Valid and default values for the attribute are defined in a document type definition (DTD) or schema.</summary>
    </member>
    <member name="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlAttribute" /> class.</summary>
      <param name="prefix">The namespace prefix.</param>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">The namespace uniform resource identifier (URI).</param>
      <param name="doc">The parent XML document.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)">
      <summary>Adds the specified node to the end of the list of child nodes, of this node.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> added.</returns>
      <param name="newChild">The <see cref="T:System.Xml.XmlNode" /> to add.</param>
      <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.The <paramref name="newChild" /> is an ancestor of this node. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="newChild" /> was created from a different document than the one that created this node.This node is read-only. </exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.BaseURI">
      <summary>Gets the base Uniform Resource Identifier (URI) of the node.</summary>
      <returns>The location from which the node was loaded or String.Empty if the node has no base URI.Attribute nodes have the same base URI as their owner element.If an attribute node does not have an owner element, BaseURI returns String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
      <summary>Creates a duplicate of this node.</summary>
      <returns>The duplicate node.</returns>
      <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself </param>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerText">
      <summary>Gets or sets the concatenated values of the node and all its children.</summary>
      <returns>The concatenated values of the node and all its children.For attribute nodes, this property has the same functionality as the <see cref="P:System.Xml.XmlAttribute.Value" /> property.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerXml">
      <summary>Gets or sets the value of the attribute.</summary>
      <returns>Значение атрибута.</returns>
      <exception cref="T:System.Xml.XmlException">The XML specified when setting this property is not well-formed. </exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Inserts the specified node immediately after the specified reference node.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> inserted.</returns>
      <param name="newChild">The <see cref="T:System.Xml.XmlNode" /> to insert. </param>
      <param name="refChild">The <see cref="T:System.Xml.XmlNode" /> that is the reference node.The <paramref name="newChild" /> is placed after the <paramref name="refChild" />.</param>
      <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.The <paramref name="newChild" /> is an ancestor of this node. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="newChild" /> was created from a different document than the one that created this node.The <paramref name="refChild" /> is not a child of this node.This node is read-only. </exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Inserts the specified node immediately before the specified reference node.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> inserted.</returns>
      <param name="newChild">The <see cref="T:System.Xml.XmlNode" /> to insert. </param>
      <param name="refChild">The <see cref="T:System.Xml.XmlNode" /> that is the reference node.The <paramref name="newChild" /> is placed before this node.</param>
      <exception cref="T:System.InvalidOperationException">The current node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.The <paramref name="newChild" /> is an ancestor of this node. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="newChild" /> was created from a different document than the one that created this node.The <paramref name="refChild" /> is not a child of this node.This node is read-only. </exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.LocalName">
      <summary>Gets the local name of the node.</summary>
      <returns>The name of the attribute node with the prefix removed.In the following example &lt;book bk:genre= 'novel'&gt;, the LocalName of the attribute is genre.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Name">
      <summary>Gets the qualified name of the node.</summary>
      <returns>The qualified name of the attribute node.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NamespaceURI">
      <summary>Gets the namespace URI of this node.</summary>
      <returns>The namespace URI of this node.If the attribute is not explicitly given a namespace, this property returns String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NodeType">
      <summary>Gets the type of the current node.</summary>
      <returns>The node type for XmlAttribute nodes is XmlNodeType.Attribute.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerDocument">
      <summary>Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</summary>
      <returns>An <see cref="T:System.Xml.XmlDocument" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerElement">
      <summary>Gets the <see cref="T:System.Xml.XmlElement" /> to which the attribute belongs.</summary>
      <returns>The XmlElement that the attribute belongs to or null if this attribute is not part of an XmlElement.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.ParentNode">
      <summary>Gets the parent of this node.For XmlAttribute nodes, this property always returns null.</summary>
      <returns>For XmlAttribute nodes, this property always returns null.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Prefix">
      <summary>Gets or sets the namespace prefix of this node.</summary>
      <returns>The namespace prefix of this node.If there is no prefix, this property returns String.Empty.</returns>
      <exception cref="T:System.ArgumentException">This node is read-only. </exception>
      <exception cref="T:System.Xml.XmlException">The specified prefix contains an invalid character.The specified prefix is malformed.The namespaceURI of this node is null.The specified prefix is "xml", and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".This node is an attribute, the specified prefix is "xmlns", and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/".This node is an attribute, and the qualifiedName of this node is "xmlns" [Namespaces]. </exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)">
      <summary>Adds the specified node to the beginning of the list of child nodes for this node.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> added.</returns>
      <param name="newChild">The <see cref="T:System.Xml.XmlNode" /> to add.If it is an <see cref="T:System.Xml.XmlDocumentFragment" />, the entire contents of the document fragment are moved into the child list of this node.</param>
      <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.The <paramref name="newChild" /> is an ancestor of this node. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="newChild" /> was created from a different document than the one that created this node.This node is read-only. </exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)">
      <summary>Removes the specified child node.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> removed.</returns>
      <param name="oldChild">The <see cref="T:System.Xml.XmlNode" /> to remove.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="oldChild" /> is not a child of this node.Or this node is read-only.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Replaces the child node specified with the new child node specified.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> replaced.</returns>
      <param name="newChild">The new child <see cref="T:System.Xml.XmlNode" />.</param>
      <param name="oldChild">Объект <see cref="T:System.Xml.XmlNode" /> для замены. </param>
      <exception cref="T:System.InvalidOperationException">This node is of a type that does not allow child nodes of the type of the <paramref name="newChild" /> node.The <paramref name="newChild" /> is an ancestor of this node. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="newChild" /> was created from a different document than the one that created this node.This node is read-only.The <paramref name="oldChild" /> is not a child of this node. </exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.SchemaInfo">
      <summary>Gets the post-schema-validation-infoset that has been assigned to this node as a result of schema validation.</summary>
      <returns>An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> containing the post-schema-validation-infoset of this node.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Specified">
      <summary>Gets a value indicating whether the attribute value was explicitly set.</summary>
      <returns>true if this attribute was explicitly given a value in the original instance document; otherwise, false.A value of false indicates that the value of the attribute came from the DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Value">
      <summary>Gets or sets the value of the node.</summary>
      <returns>The value returned depends on the <see cref="P:System.Xml.XmlNode.NodeType" /> of the node.For XmlAttribute nodes, this property is the value of attribute.</returns>
      <exception cref="T:System.ArgumentException">The node is read-only and a set operation is called. </exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)">
      <summary>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="T:System.Xml.XmlAttributeCollection">
      <summary>Представляет коллекцию атрибутов, к которым можно получить доступ по имени или по индексу.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
      <summary>Вставляет указанный атрибут как последний узел коллекции.</summary>
      <returns>XmlAttribute, который требуется добавить в коллекцию.</returns>
      <param name="node">Вставляемый объект <see cref="T:System.Xml.XmlAttribute" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="node" /> был создан из документа, отличающегося от того, который создал данную коллекцию. </exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
      <summary>Копирует объекты <see cref="T:System.Xml.XmlAttribute" /> из этой коллекции в заданный массив.</summary>
      <param name="array">Массив, который является конечным массивом для объектов, копируемых из коллекции. </param>
      <param name="index">Индекс массива, с которого начинается копирование. </param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Вставляет указанный атрибут непосредственно после заданного атрибута ссылки.</summary>
      <returns>Класс XmlAttribute, вставляемый в коллекцию.</returns>
      <param name="newNode">Вставляемый объект <see cref="T:System.Xml.XmlAttribute" />. </param>
      <param name="refNode">Объект <see cref="T:System.Xml.XmlAttribute" />, являющийся атрибутом ссылки.<paramref name="newNode" /> располагается после <paramref name="refNode" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newNode" /> был создан из документа, отличающегося от того, который создал данную коллекцию.Или <paramref name="refNode" /> не является членом данной коллекции.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Вставляет указанный атрибут непосредственно перед заданным атрибутом ссылки.</summary>
      <returns>Класс XmlAttribute, вставляемый в коллекцию.</returns>
      <param name="newNode">Вставляемый объект <see cref="T:System.Xml.XmlAttribute" />. </param>
      <param name="refNode">Объект <see cref="T:System.Xml.XmlAttribute" />, являющийся атрибутом ссылки.Элемент <paramref name="newNode" /> помещается перед элементом <paramref name="refNode" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newNode" /> был создан из документа, отличающегося от того, который создал данную коллекцию.Или <paramref name="refNode" /> не является членом данной коллекции.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)">
      <summary>Получает атрибут с указанным индексом.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlAttribute" /> по указанному индексу.</returns>
      <param name="i">Индекс атрибута. </param>
      <exception cref="T:System.IndexOutOfRangeException">Переданное значение индекса находится за пределами диапазона. </exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
      <summary>Получает атрибут с заданным именем.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlAttribute" /> с заданным именем.Если атрибут не существует, это свойство возвращает значение null.</returns>
      <param name="name">Проверенное имя атрибута. </param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
      <summary>Возвращает атрибут с заданным локальным именем и URI пространства имен.</summary>
      <returns>Параметр <see cref="T:System.Xml.XmlAttribute" /> с заданным локальным именем и URI пространства имен.Если атрибут не существует, это свойство возвращает значение null.</returns>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
      <summary>Вставляет указанный атрибут как первый узел коллекции.</summary>
      <returns>Атрибут XmlAttribute, добавленный в коллекцию.</returns>
      <param name="node">Вставляемый объект <see cref="T:System.Xml.XmlAttribute" />. </param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)">
      <summary>Удаляет указанный атрибут из коллекции.</summary>
      <returns>узел удален или равен null, если он не найден в коллекции.</returns>
      <param name="node">Удаляемый объект <see cref="T:System.Xml.XmlAttribute" />. </param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAll">
      <summary>Удаляет все атрибуты из коллекции.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
      <summary>Удаляет из коллекции атрибут, соответствующий указанному индексу.</summary>
      <returns>Возвращает значение null, если по указанному индексу атрибут отсутствует.</returns>
      <param name="i">Индекс удаляемого узла.Первый узел имеет индекс 0.</param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
      <summary>Добавляет узел <see cref="T:System.Xml.XmlNode" /> с помощью свойства <see cref="P:System.Xml.XmlNode.Name" /></summary>
      <returns>Если узел <paramref name="node" /> заменяет существующий узел с таким же именем, то возвращается старый узел; в противном случае возвращается добавленный узел.</returns>
      <param name="node">узел атрибута, предназначенный для помещения в коллекцию.Позже узел будет доступен по своему имени.Если узел с таким именем уже присутствует в коллекции, он замещается новым; в противном случае узел добавляется в конец коллекции.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="node" /> был создан из <see cref="T:System.Xml.XmlDocument" />, отличающегося от того, который создал данную коллекцию.Этот объект XmlAttributeCollection доступен только для чтения. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> представляет собой <see cref="T:System.Xml.XmlAttribute" />, который уже является атрибутом другого объекта <see cref="T:System.Xml.XmlElement" />.Для повторного использования атрибутов в других элементах необходимо клонировать объекты XmlAttribute, которые требуется повторно использовать.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Описание этого элемента см. в описании свойства <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</summary>
      <param name="array">Массив, который является конечным массивом для объектов, копируемых из коллекции. </param>
      <param name="index">Индекс массива, с которого начинается копирование. </param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Xml.XmlAttributeCollection.System.Collections.ICollection.Count" />.</summary>
      <returns>Возвращает значение типа int, содержащее число атрибутов.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Xml.XmlAttributeCollection.System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Возвращает значение true, если коллекция синхронизирована.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Xml.XmlAttributeCollection.System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Возвращает объект <see cref="T:System.Object" />, который является корнем коллекции.</returns>
    </member>
    <member name="T:System.Xml.XmlCDataSection">
      <summary>Представляет раздел CDATA.</summary>
    </member>
    <member name="M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlCDataSection" />.</summary>
      <param name="data">Объект <see cref="T:System.String" />, содержащий знаковые данные.</param>
      <param name="doc">Объект <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <returns>Точная копия узла.</returns>
      <param name="deep">Значение true для рекурсивного создания точной копии поддерева указанного узла; false только для создания точной копии самого узла.Поскольку узлы CDATA не имеют дочерних узлов, независимо от настройки параметра точная копия узла всегда будет включать содержимое данных.</param>
    </member>
    <member name="P:System.Xml.XmlCDataSection.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>узлы CDATA имеют локальное имя #cdata-section.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.Name">
      <summary>Возвращает проверенное имя узла.</summary>
      <returns>узлы CDATA имеют локальное имя #cdata-section.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Тип узла.Для узлов CDATA значение равно XmlNodeType.CDATA.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.ParentNode"></member>
    <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет дочерний узел этого узла в заданном классе <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Объект XmlWriter, в который требуется выполнить сохранение. </param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">XmlWriter, в котором необходимо выполнить сохранение. </param>
    </member>
    <member name="T:System.Xml.XmlCharacterData">
      <summary>Обеспечивает методы обработки текста, которые используются несколькими классами.</summary>
    </member>
    <member name="M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlCharacterData" />.</summary>
      <param name="data">Строка, содержащая символьные данные, которые необходимо добавить в документ.</param>
      <param name="doc">Объект <see cref="T:System.Xml.XmlDocument" />, который должен содержать символьные данные.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.AppendData(System.String)">
      <summary>Добавляет заданную строку в конец знаковых данных узла.</summary>
      <param name="strData">Строка, вставляемая в существующую строку. </param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Data">
      <summary>Содержит данные узла.</summary>
      <returns>Данные текущего узла.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
      <summary>Удаляет диапазон знаков из узла.</summary>
      <param name="offset">Позиция в строке, с которой начинается удаление. </param>
      <param name="count">Число символов для удаления. </param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.InnerText">
      <summary>Возвращает или задает последовательно соединенные значения узла и его дочерних узлов.</summary>
      <returns>Последовательно соединенные значения узла и его дочерних узлов.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)">
      <summary>Вставляет заданную строку со смещением в указанное число знаков.</summary>
      <param name="offset">Позиция в строке для вставки предлагаемых данных строки. </param>
      <param name="strData">Данные строки, вставляемые в существующую строку. </param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Length">
      <summary>Возвращает длину данных в знаках.</summary>
      <returns>Длина строки в знаках в свойстве <see cref="P:System.Xml.XmlCharacterData.Data" />.Длина может быть равна нулю, то есть узлы CharacterData могут быть пустыми.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary>Замещает заданное количество знаков, начиная с указанного смещения в заданной строке.</summary>
      <param name="offset">Позиция в строке, с которой начинается замещение. </param>
      <param name="count">Число знаков для замещения. </param>
      <param name="strData">Новые данные, заменяющие старые данные строки. </param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
      <summary>Возвращает подстроку полной строки из заданного диапазона.</summary>
      <returns>Подстрока, соответствующая указанному диапазону.</returns>
      <param name="offset">Позиция в строке, с которой начинается извлечение.Нулевое смещение означает, что началом данных является начальная пиксель.</param>
      <param name="count">Число извлекаемых знаков. </param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Value">
      <summary>Возвращает или задает значение узла.</summary>
      <returns>Значение узла.</returns>
      <exception cref="T:System.ArgumentException">Узел доступен только для чтения. </exception>
    </member>
    <member name="T:System.Xml.XmlComment">
      <summary>Represents the content of an XML comment.</summary>
    </member>
    <member name="M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlComment" /> class.</summary>
      <param name="comment">The content of the comment element.</param>
      <param name="doc">The parent XML document.</param>
    </member>
    <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
      <summary>Creates a duplicate of this node.</summary>
      <returns>The cloned node.</returns>
      <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.Because comment nodes do not have children, the cloned node always includes the text content, regardless of the parameter setting.</param>
    </member>
    <member name="P:System.Xml.XmlComment.LocalName">
      <summary>Gets the local name of the node.</summary>
      <returns>For comment nodes, the value is #comment.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.Name">
      <summary>Gets the qualified name of the node.</summary>
      <returns>For comment nodes, the value is #comment.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.NodeType">
      <summary>Gets the type of the current node.</summary>
      <returns>For comment nodes, the value is XmlNodeType.Comment.</returns>
    </member>
    <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.Because comment nodes do not have children, this method has no effect.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)">
      <summary>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary>Кодирует и декодирует имена XML и предоставляет методы для преобразования между типами общеязыковой среды выполнения и типами языков определения схем XML (XSD).При преобразовании типов данных возвращаемые значения не зависят от языка.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlConvert" />. </summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary>Декодирует имя.Этот метод изменяет действие методов <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> и <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" /> на обратное.</summary>
      <returns>Декодированное имя.</returns>
      <param name="name">Преобразуемое имя. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary>Преобразует имя в допустимое локальное имя XML.</summary>
      <returns>Закодированное имя.</returns>
      <param name="name">Имя для кодирования. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary>Преобразует имя в допустимое имя XML.</summary>
      <returns>Возвращает имя с любыми недопустимыми знаками, замещенными escape-строкой.</returns>
      <param name="name">Преобразуемое имя. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary>Проверяет допустимость имени в соответствии со спецификацией XML.</summary>
      <returns>Закодированное имя.</returns>
      <param name="name">Имя для кодирования. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым знаком, отличающимся от двоеточия.</summary>
      <returns>Возвращает значение true, если знак является допустимым знаком, отличным от двоеточия; в противном случае — значение false.</returns>
      <param name="ch">Знак, который необходимо проверить на то, что он не является двоеточием.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary>Возвращает экземпляр переданного знака, если знак в аргументе являются допустимым знаком открытого идентификатора; в противном случае возвращает значение null.</summary>
      <returns>Возвращает переданный знак, если он является допустимым знаком открытого идентификатора; в противном случае возвращает значение null.</returns>
      <param name="ch">Объект <see cref="T:System.Char" /> для проверки.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым значением типа начального знака имени.</summary>
      <returns>Значение true, если знак является допустимым значением типа начального знака имени; в противном случае — значение false. </returns>
      <param name="ch">Символ, подлежащий проверке.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым знаком пробела XML.</summary>
      <returns>Значение true, если переданный знак является допустимым знаком пробела XML; в противном случае — значение false.</returns>
      <param name="ch">Символ, подлежащий проверке.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary>Проверяет, что переданный знак является допустимым знаком XML.</summary>
      <returns>Значение true, если переданный знак является допустимым знаком XML; в противном случае — значение false.</returns>
      <param name="ch">Символ, подлежащий проверке.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary>Проверяет, что переданная пара знаков-заместителей является допустимым знаком XML.</summary>
      <returns>Значение true, если переданная пара знаков-заместителей является допустимым знаком XML; в противном случае — значение false.</returns>
      <param name="lowChar">Знак-заместитель для поверки.</param>
      <param name="highChar">Знак-заместитель для поверки.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.Boolean" />.</summary>
      <returns>Значение Boolean равно true или false.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> не представляет значение Boolean. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.Byte" />.</summary>
      <returns>Эквивалент строки в формате Byte.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Byte.MinValue" /> или больше значения <see cref="F:System.Byte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.Char" />.</summary>
      <returns>Char, представляющий отдельный знак.</returns>
      <param name="s">Строка, содержащая отдельный преобразуемый знак. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null. </exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> имеет несколько символов. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.DateTime" />.</summary>
      <returns>Аналог строки DateTime.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> является пустой строкой или его формат неправилен. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.DateTime" />.</summary>
      <returns>Аналог строки DateTime.</returns>
      <param name="s">Преобразуемая строка. </param>
      <param name="format">Структура формата, который применяется к преобразованному значению DateTime.Допустимы форматы типа yyyy-MM-ddTHH:mm:sszzzzzz и его подмножества.Строка проверяется по этому формату.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Значение <paramref name="s" /> или <paramref name="format" /> равно String.Empty — или — Строка <paramref name="s" /> не содержит дату и время, соответствующие параметру <paramref name="format" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.DateTime" />.</summary>
      <returns>Аналог строки DateTime.</returns>
      <param name="s">Преобразуемая строка. </param>
      <param name="formats">Массив, содержащий структуры формата, который применяется к преобразованному значению DateTime.Допустимы форматы типа yyyy-MM-ddTHH:mm:sszzzzzz и его подмножества.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Значение <paramref name="s" /> или элемент параметра <paramref name="formats" /> равен String.Empty — или — Строка <paramref name="s" /> не содержит дату и время, соответствующие какому-либо элементу параметра <paramref name="formats" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.DateTime" /> с помощью указанного <see cref="T:System.Xml.XmlDateTimeSerializationMode" /></summary>
      <returns>
        <see cref="T:System.DateTime" /> является эквивалентом <see cref="T:System.String" />.</returns>
      <param name="s">Преобразуемое значение <see cref="T:System.String" />.</param>
      <param name="dateTimeOption">Одно из значений <see cref="T:System.Xml.XmlDateTimeSerializationMode" />, указывающее, следует ли преобразовывать данные в локальное время или сохранять их в универсальном времени, если дата является универсальной.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> имеет значение null;</exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="dateTimeOption" /> равно null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> является пустой строкой или его формат недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary>Преобразует предоставленный <see cref="T:System.String" /> в аналог <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Эквивалент <see cref="T:System.DateTimeOffset" /> предоставленной строки.</returns>
      <param name="s">Преобразуемая строка.ПримечаниеСтрока должна соответствовать поднабору в соответствии с рекомендацией W3C по типу XML dateTime.Дополнительные сведения см. на веб-сайте http://www.w3.org/TR/xmlschema-2/#dateTime.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Аргумент, переданный этому методу находится вне диапазона допустимых значений.Дополнительные сведения о допустимых значениях см. в разделе <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.FormatException">Аргумент, переданный этому методу не соответствует подмножеству рекомендации W3C по типу XML dateTime.Дополнительные сведения см. на веб-сайте http://www.w3.org/TR/xmlschema-2/#dateTime.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary>Преобразует предоставленный <see cref="T:System.String" /> в аналог <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Эквивалент <see cref="T:System.DateTimeOffset" /> предоставленной строки.</returns>
      <param name="s">Преобразуемая строка.</param>
      <param name="format">Формат, из которого преобразуется параметр <paramref name="s" />.Параметр формата может быть любым поднабором в соответствии с рекомендацией W3C по типу XML dateTime.(Дополнительные сведения см. на веб-сайте http://www.w3.org/TR/xmlschema-2/#dateTime). Строка <paramref name="s" /> проверяется по этому формату.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> или <paramref name="format" /> является пустой строкой или его формат не соответствует указанному формату.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary>Преобразует предоставленный <see cref="T:System.String" /> в аналог <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Эквивалент <see cref="T:System.DateTimeOffset" /> предоставленной строки.</returns>
      <param name="s">Преобразуемая строка.</param>
      <param name="formats">Массив форматов, из которого можно преобразовать параметр <paramref name="s" />.Каждый формат в параметре <paramref name="formats" /> может быть любым поднабором в соответствии с рекомендацией W3C по типу XML dateTime.(Дополнительные сведения см. на веб-сайте http://www.w3.org/TR/xmlschema-2/#dateTime). Строка <paramref name="s" /> проверяется по одному из этих форматов.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary>Преобразует значение <see cref="T:System.String" /> в эквивалентное значение <see cref="T:System.Decimal" />.</summary>
      <returns>Эквивалент строки в формате Decimal.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в аналог <see cref="T:System.Double" />.</summary>
      <returns>Эквивалент строки в формате Double.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Double.MinValue" /> или больше значения <see cref="F:System.Double.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.Guid" />.</summary>
      <returns>Аналог строки Guid.</returns>
      <param name="s">Преобразуемая строка. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.Int16" />.</summary>
      <returns>Аналог строки Int16.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int16.MinValue" /> или больше значения <see cref="F:System.Int16.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.Int32" />.</summary>
      <returns>Аналог строки Int32.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int32.MinValue" /> или больше значения <see cref="F:System.Int32.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.Int64" />.</summary>
      <returns>Аналог строки Int64.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int64.MinValue" /> или больше значения <see cref="F:System.Int64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.SByte" />.</summary>
      <returns>Аналог строки SByte.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.SByte.MinValue" /> или больше значения <see cref="F:System.SByte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в аналог <see cref="T:System.Single" />.</summary>
      <returns>Эквивалент строки в формате Single.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Single.MinValue" /> или больше значения <see cref="F:System.Single.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary>Преобразовывает <see cref="T:System.Boolean" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление Boolean, то есть true или false.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
      <summary>Преобразовывает <see cref="T:System.Byte" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Byte.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary>Преобразует <see cref="T:System.Char" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Char.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
      <summary>Преобразовывает <see cref="T:System.DateTime" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта DateTime в формат yyyy-MM-ddTHH:mm:ss, где T представляет собой буквенную константу.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
      <summary>Преобразовывает <see cref="T:System.DateTime" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта DateTime в заданном формате.</returns>
      <param name="value">Преобразуемое значение. </param>
      <param name="format">Структура формата, определяющая способ отображения преобразованной строки.Допустимы форматы типа yyyy-MM-ddTHH:mm:sszzzzzz и его подмножества.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Преобразует <see cref="T:System.DateTime" /> в <see cref="T:System.String" /> с помощью указанного <see cref="T:System.Xml.XmlDateTimeSerializationMode" /></summary>
      <returns>Эквивалент <see cref="T:System.String" /> для значения <see cref="T:System.DateTime" />.</returns>
      <param name="value">Преобразуемое значение <see cref="T:System.DateTime" />.</param>
      <param name="dateTimeOption">Одно из значений типа <see cref="T:System.Xml.XmlDateTimeSerializationMode" />, указывающее, как следует обрабатывать значение <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="dateTimeOption" /> является недопустимым.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> или <paramref name="dateTimeOption" /> — null.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary>Преобразует предоставленный параметр <see cref="T:System.DateTimeOffset" /> в структуру <see cref="T:System.String" />.</summary>
      <returns>Представление <see cref="T:System.String" /> объекта <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="value">Преобразуемый параметр <see cref="T:System.DateTimeOffset" />.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary>Преобразовывает предоставленное значение <see cref="T:System.DateTimeOffset" /> в значение <see cref="T:System.String" /> в указанном формате.</summary>
      <returns>Представление <see cref="T:System.String" /> в указанном формате предоставленного <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="value">Преобразуемый параметр <see cref="T:System.DateTimeOffset" />.</param>
      <param name="format">Формат, в который преобразуется параметр <paramref name="s" />.Параметр формата может быть любым поднабором в соответствии с рекомендацией W3C по типу XML dateTime.(Дополнительные сведения см. на веб-сайте http://www.w3.org/TR/xmlschema-2/#dateTime).</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary>Преобразовывает <see cref="T:System.Decimal" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Decimal.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary>Преобразовывает <see cref="T:System.Double" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Double.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary>Преобразовывает <see cref="T:System.Guid" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Guid.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary>Преобразовывает <see cref="T:System.Int16" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Int16.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary>Преобразовывает <see cref="T:System.Int32" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Int32.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary>Преобразует <see cref="T:System.Int64" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Int64.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary>Преобразует <see cref="T:System.SByte" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта SByte.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary>Преобразовывает <see cref="T:System.Single" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта Single.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary>Преобразовывает <see cref="T:System.TimeSpan" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта TimeSpan.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
      <summary>Преобразует <see cref="T:System.UInt16" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта UInt16.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary>Преобразует <see cref="T:System.UInt32" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта UInt32.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary>Преобразует <see cref="T:System.UInt64" /> в <see cref="T:System.String" />.</summary>
      <returns>Строковое представление объекта UInt64.</returns>
      <param name="value">Преобразуемое значение. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary>Преобразует значение <see cref="T:System.String" /> в эквивалентное значение <see cref="T:System.TimeSpan" />.</summary>
      <returns>Аналог строки TimeSpan.</returns>
      <param name="s">Преобразуемая строка.Формат строки должен соответствовать рекомендации W3C по схемам XML (часть 2 о типах данных), посвященной продолжительности.</param>
      <exception cref="T:System.FormatException">Формат <paramref name="s" /> не является правильным для представления значения TimeSpan. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary>Преобразовывает <see cref="T:System.String" /> в аналог <see cref="T:System.UInt16" />.</summary>
      <returns>Эквивалент строки в формате UInt16.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt16.MinValue" /> или больше значения <see cref="F:System.UInt16.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в аналог <see cref="T:System.UInt32" />.</summary>
      <returns>Эквивалент строки в формате UInt32.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt32.MinValue" /> или больше значения <see cref="F:System.UInt32.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary>Преобразует <see cref="T:System.String" /> в аналог <see cref="T:System.UInt64" />.</summary>
      <returns>Эквивалент строки в формате UInt64.</returns>
      <param name="s">Преобразуемая строка. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> имеет значение null; </exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным. </exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt64.MinValue" /> или больше значения <see cref="F:System.UInt64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary>Проверяет допустимость имени в соответствии с рекомендацией W3C Extended Markup Language.</summary>
      <returns>Указанное имя не является допустимым именем XML.</returns>
      <param name="name">Имя для проверки. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> не является допустимым именем XML. </exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="name" /> равно null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary>Проверяет, что имя является допустимым именем NCName в соответствии с рекомендациями по XML консорциума W3C.NCName — это имя, которое не может содержать двоеточия.</summary>
      <returns>Указанное имя не является допустимым именем NCName.</returns>
      <param name="name">Имя для проверки. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="name" /> равно null или String.Empty. </exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> не является допустимым именем без двоеточия. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary>Проверяет, является ли строка допустимым NMTOKEN, в соответствии с рекомендацией W3C XML, часть 2, посвященная типам данных.</summary>
      <returns>Лексема имени, если является допустимым NMTOKEN.</returns>
      <param name="name">Строка, которую следует проверить.</param>
      <exception cref="T:System.Xml.XmlException">Строка не является допустимым токеном имени.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary>Возвращает экземпляр переданной строки, если все знаки в строковом аргументе являются допустимыми знаками открытых идентификаторов.</summary>
      <returns>Возвращает переданную строку, если все знаки в аргументе являются допустимыми знаками открытых идентификаторов.</returns>
      <param name="publicId">Объект <see cref="T:System.String" />, содержащий идентификатор для проверки.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
      <summary>Проверяет, является ли строка допустимой лексемой, в соответствии с рекомендацией W3C XML, часть 2, посвященная типам данных.</summary>
      <returns>Лексема, если является допустимой.</returns>
      <param name="token">Строковое значение, которое следует проверить.</param>
      <exception cref="T:System.Xml.XmlException">Значение строки не является допустимым токеном имени.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary>Возвращает экземпляр переданной строки, если все знаки в строковом аргументе являются допустимыми знаками пробела. </summary>
      <returns>Возвращает экземпляр переданной строки, если все знаки в строковом аргументе являются допустимыми знаками пробела; в противном случае возвращает значение null.</returns>
      <param name="content">Объект <see cref="T:System.String" /> для проверки.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary>Возвращает экземпляр переданной строки, если все знаки и пары знаков-заместителей в строковом аргументе являются допустимыми знаками XML; в противном случае возвращает значение null. </summary>
      <returns>Возвращает экземпляр переданной строки, если все знаки и пары знаков-заместителей в строковом аргументе являются допустимыми знаками XML; в противном случае возвращает значение null.</returns>
      <param name="content">Объект <see cref="T:System.String" />, содержащий знаки для проверки.</param>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary>Specifies how to treat the time value when converting between string and <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary>Treat as local time.If the <see cref="T:System.DateTime" /> object represents a Coordinated Universal Time (UTC), it is converted to the local time.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary>Treat as a UTC.If the <see cref="T:System.DateTime" /> object represents a local time, it is converted to a UTC.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary>Treat as a local time if a <see cref="T:System.DateTime" /> is being converted to a string.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary>Time zone information should be preserved when converting.</summary>
    </member>
    <member name="T:System.Xml.XmlDeclaration">
      <summary>Represents the XML declaration node &lt;?xml version='1.0'...?&gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlDeclaration" /> class.</summary>
      <param name="version">The XML version; see the <see cref="P:System.Xml.XmlDeclaration.Version" /> property.</param>
      <param name="encoding">The encoding scheme; see the <see cref="P:System.Xml.XmlDeclaration.Encoding" /> property.</param>
      <param name="standalone">Indicates whether the XML document depends on an external DTD; see the <see cref="P:System.Xml.XmlDeclaration.Standalone" /> property.</param>
      <param name="doc">The parent XML document.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
      <summary>Creates a duplicate of this node.</summary>
      <returns>The cloned node.</returns>
      <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.Because XmlDeclaration nodes do not have children, the cloned node always includes the data value, regardless of the parameter setting.</param>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Encoding">
      <summary>Gets or sets the encoding level of the XML document.</summary>
      <returns>The valid character encoding name.The most commonly supported character encoding names for XML are the following:Категория Encoding Names Unicode UTF-8, UTF-16 ISO 10646 ISO-10646-UCS-2, ISO-10646-UCS-4 ISO 8859 ISO-8859-n (where "n" is a digit from 1 to 9) JIS X-0208-1997 ISO-2022-JP, Shift_JIS, EUC-JP This value is optional.If a value is not set, this property returns String.Empty.If an encoding attribute is not included, UTF-8 encoding is assumed when the document is written or saved out.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.InnerText">
      <summary>Gets or sets the concatenated values of the XmlDeclaration.</summary>
      <returns>The concatenated values of the XmlDeclaration (that is, everything between &lt;?xml and ?&gt;).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.LocalName">
      <summary>Gets the local name of the node.</summary>
      <returns>For XmlDeclaration nodes, the local name is xml.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Name">
      <summary>Gets the qualified name of the node.</summary>
      <returns>For XmlDeclaration nodes, the name is xml.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.NodeType">
      <summary>Gets the type of the current node.</summary>
      <returns>For XmlDeclaration nodes, this value is XmlNodeType.XmlDeclaration.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Standalone">
      <summary>Gets or sets the value of the standalone attribute.</summary>
      <returns>Valid values are yes if all entity declarations required by the XML document are contained within the document or no if an external document type definition (DTD) is required.If a standalone attribute is not present in the XML declaration, this property returns String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Value">
      <summary>Gets or sets the value of the XmlDeclaration.</summary>
      <returns>The contents of the XmlDeclaration (that is, everything between &lt;?xml and ?&gt;).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Version">
      <summary>Gets the XML version of the document.</summary>
      <returns>Это значение всегда равно 1.0.</returns>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Saves the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.Because XmlDeclaration nodes do not have children, this method has no effect.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)">
      <summary>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="T:System.Xml.XmlDocument">
      <summary>Предоставляет XML-документ.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)">
      <summary>Инициализирует новый экземпляр класса XmlDocument с указанным объектом <see cref="T:System.Xml.XmlImplementation" />.</summary>
      <param name="imp">Объект XmlImplementation , который нужно использовать. </param>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса XmlDocument с указанным объектом <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nt">Объект XmlNameTable , который нужно использовать. </param>
    </member>
    <member name="P:System.Xml.XmlDocument.BaseURI">
      <summary>Возвращает базовый URI текущего узла.</summary>
      <returns>Размещение, из которого загружен узел.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <returns>Скопированный узел XmlDocument.</returns>
      <param name="deep">Значение true для рекурсивного создания точной копии поддерева указанного узла; false только для создания точной копии самого узла. </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlAttribute" /> с указанным свойством <see cref="P:System.Xml.XmlDocument.Name" />.</summary>
      <returns>Новая область XmlAttribute.</returns>
      <param name="name">Проверенное имя атрибута.Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за первым двоеточием.Свойство <see cref="P:System.Xml.XmlNode.NamespaceURI" /> остается пустым, если префикс не является распознаваемым встроенным префиксом, например xmlns.В этом случае NamespaceURI имеет значение http://www.w3.org/2000/xmlns/.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlAttribute" /> с помощью указанного проверенного имени и свойства <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <returns>Новая область XmlAttribute.</returns>
      <param name="qualifiedName">Проверенное имя атрибута.Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за двоеточием.</param>
      <param name="namespaceURI">URI пространства имен атрибута.Если проверенное имя содержит префикс xmlns, то этот параметр должен иметь значение http://www.w3.org/2000/xmlns/.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlAttribute" /> с помощью указанного типа <see cref="P:System.Xml.XmlNode.Prefix" />, а также свойств <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <returns>Новая область XmlAttribute.</returns>
      <param name="prefix">Префикс атрибута (если существует).String.Empty равно значению null.</param>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута (если существует).String.Empty равно значению null.Если значение параметра <paramref name="prefix" /> равно xmlns, этот параметр должен иметь значение http://www.w3.org/2000/xmlns/. В противном случае создается исключение.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlCDataSection" />, содержащий указанные данные.</summary>
      <returns>Новая область XmlCDataSection.</returns>
      <param name="data">Содержимое нового класса XmlCDataSection. </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlComment" />, содержащий указанные данные.</summary>
      <returns>Новая область XmlComment.</returns>
      <param name="data">Содержимое нового класса XmlComment. </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
      <summary>Создает атрибут по умолчанию с помощью указанного префикса, локального имени и URI пространства имен.</summary>
      <returns>Новая область <see cref="T:System.Xml.XmlAttribute" />.</returns>
      <param name="prefix">Префикс атрибута (если существует). </param>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута (если существует). </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
      <summary>Создает <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <returns>Новая область XmlDocumentFragment.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary>Возвращает новый объект <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <returns>Новая область XmlDocumentType.</returns>
      <param name="name">Имя типа документа. </param>
      <param name="publicId">Общий идентификатор типа документа или значение null.Можно указать общий URI и идентификатор системы для определения местоположения внешнего поднабора DTD.</param>
      <param name="systemId">Идентификатор системы типа документа или значение null.Задает URL-адрес местоположения файла внешнего поднабора DTD.</param>
      <param name="internalSubset">Внутренний набор DTD типа документа или значение null. </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
      <summary>Создает элемент с указанным именем.</summary>
      <returns>Новая область XmlElement.</returns>
      <param name="name">Полное имя элемента.Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за двоеточием.Проверенное имя не может содержать префикс xmlns.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlElement" /> с помощью проверенного имени и свойства <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <returns>Новая область XmlElement.</returns>
      <param name="qualifiedName">Полное имя элемента.Если имя содержит двоеточие, свойство <see cref="P:System.Xml.XmlNode.Prefix" /> отражает часть имени, предшествующую ему, а свойство <see cref="P:System.Xml.XmlDocument.LocalName" /> — ту часть, которая следует за двоеточием.Проверенное имя не может содержать префикс xmlns.</param>
      <param name="namespaceURI">URI пространства имен элемента. </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Создает элемент с заданными свойствами <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <returns>Новая область <see cref="T:System.Xml.XmlElement" />.</returns>
      <param name="prefix">Префикс нового элемента (если существует).String.Empty равно значению null.</param>
      <param name="localName">Локальное имя нового элемента. </param>
      <param name="namespaceURI">URI пространства имен нового элемента (если существует).String.Empty равно значению null.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlEntityReference" /> с указанным именем.</summary>
      <returns>Новая область XmlEntityReference.</returns>
      <param name="name">Имя ссылки на сущность. </param>
      <exception cref="T:System.ArgumentException">Недопустимое имя (например, имена, начинающиеся с "#", — недопустимые.) </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator">
      <summary>Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации в данном документе.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Создает объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации в данном документе при позиционировании на указанном <see cref="T:System.Xml.XmlNode" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
      <param name="node">узел <see cref="T:System.Xml.XmlNode" />, который будет служить исходной позицией навигатора. </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlNode" /> с помощью указанного типа узла, а также свойств <see cref="P:System.Xml.XmlDocument.Name" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <returns>Новая область XmlNode.</returns>
      <param name="nodeTypeString">Строковая версия типа <see cref="T:System.Xml.XmlNodeType" /> нового узла.Этот параметр должен принимать одно из значений, перечисленных в следующей таблице.</param>
      <param name="name">Проверенное имя нового узла.Если имя содержит двоеточие, оно разбивается на компоненты <see cref="P:System.Xml.XmlNode.Prefix" /> и <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI">URI пространства имен нового узла. </param>
      <exception cref="T:System.ArgumentException">Имя не было указано и XmlNodeType требует имени; или <paramref name="nodeTypeString" /> не является одной из перечисленных ниже строк. </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
      <summary>Создает объект <see cref="T:System.Xml.XmlNode" /> с помощью указанного типа <see cref="T:System.Xml.XmlNodeType" />, а также свойств <see cref="P:System.Xml.XmlDocument.Name" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <returns>Новая область XmlNode.</returns>
      <param name="type">Тип XmlNodeType нового узла. </param>
      <param name="name">Проверенное имя нового узла.Если имя содержит двоеточие, оно разбивается на компоненты <see cref="P:System.Xml.XmlNode.Prefix" /> и <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI">URI пространства имен нового узла. </param>
      <exception cref="T:System.ArgumentException">Имя не было указано и XmlNodeType требует имени. </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlNode" /> с помощью указанного типа <see cref="T:System.Xml.XmlNodeType" />, а также свойств <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <returns>Новая область XmlNode.</returns>
      <param name="type">Тип XmlNodeType нового узла. </param>
      <param name="prefix">Префикс нового узла. </param>
      <param name="name">Локальное имя нового узла. </param>
      <param name="namespaceURI">URI пространства имен нового узла. </param>
      <exception cref="T:System.ArgumentException">Имя не было указано и XmlNodeType требует имени. </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlProcessingInstruction" /> с помощью указанного имени и данных.</summary>
      <returns>Новая область XmlProcessingInstruction.</returns>
      <param name="target">Имя инструкции обработки. </param>
      <param name="data">Данные для инструкции обработки. </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>Создает узел <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <returns>Новый узел XmlSignificantWhitespace.</returns>
      <param name="text">Строка должна содержать только следующие знаки: &amp;#20; &amp;#10; &amp;#13; и &amp;#9; </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
      <summary>Создает <see cref="T:System.Xml.XmlText" /> с указанным текстом.</summary>
      <returns>Новый узел XmlText.</returns>
      <param name="text">Текст для узла Text. </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
      <summary>Создает узел <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <returns>Новый узел XmlWhitespace.</returns>
      <param name="text">Строка должна содержать только следующие знаки: &amp;#20; &amp;#10; &amp;#13; и &amp;#9; </param>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
      <summary>Создает узел <see cref="T:System.Xml.XmlDeclaration" /> с указанными значениями.</summary>
      <returns>Новый узел XmlDeclaration.</returns>
      <param name="version">Номер версии должен быть равен 1.0. </param>
      <param name="encoding">Значение атрибута кодировки.Эта кодировка используется при сохранении <see cref="T:System.Xml.XmlDocument" /> в файле или потоке, поэтому она должна быть задана как строка, поддерживаемая классом <see cref="T:System.Text.Encoding" />. В противном случае в работе метода <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> возникает сбой.Если она имеет значение null или String.Empty, метод Save не записывает атрибут кодировки в объявление XML и используется кодировка UTF-8, заданная по умолчанию.Примечание. Если XmlDocument сохранен в <see cref="T:System.IO.TextWriter" /> или <see cref="T:System.Xml.XmlTextWriter" />, это значение кодировки не учитывается.Вместо нее используется кодировка TextWriter или XmlTextWriter.Таким образом обеспечивается возможность чтения записанного XML с помощью правильной кодировки.</param>
      <param name="standalone">Значение должно быть равно yes или no.Если значение равно null или String.Empty, метод Save не записывает в объявление XML атрибут standalone.</param>
      <exception cref="T:System.ArgumentException">Значения <paramref name="version" /> или <paramref name="standalone" /> отличаются от указанных выше. </exception>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentElement">
      <summary>Возвращает корневой <see cref="T:System.Xml.XmlElement" /> для документа.</summary>
      <returns>XmlElement, представляющий корень дерева XML-документов.Если корень не существует, возвращается значение null.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentType">
      <summary>Возвращает узел, содержащий объявление DOCTYPE.</summary>
      <returns>Класс <see cref="T:System.Xml.XmlNode" />, содержащий DocumentType (объявление DOCTYPE).</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
      <summary>Возвращает элемент <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором.</summary>
      <returns>Элемент XmlElement с соответствующим кодом или значение null, если соответствующий элемент не найден.</returns>
      <param name="elementId">Идентификатор атрибута для сопоставления. </param>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
      <summary>Возвращает <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех элементов-потомков, соответствующих указанному свойству <see cref="P:System.Xml.XmlDocument.Name" />.</summary>
      <returns>Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов.Если ни один из узлов не соответствует <paramref name="name" />, возвращаемая коллекция будет пустой.</returns>
      <param name="name">Сопоставляемое проверенное имя.Оно противопоставляется свойству Name соответствующего узла.Специальное значение "*" соответствует всем тегам.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
      <summary>Возвращает <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех элементов-потомков, соответствующих указанным свойствам <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <returns>Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов.Если ни один из узлов не соответствует указанным параметрам <paramref name="localName" /> и <paramref name="namespaceURI" />, возвращаемая коллекция будет пустой.</returns>
      <param name="localName">Сопоставляемый параметр LocalName.Специальное значение "*" соответствует всем тегам.</param>
      <param name="namespaceURI">Сопоставляемый параметр NamespaceURI. </param>
    </member>
    <member name="P:System.Xml.XmlDocument.Implementation">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlImplementation" /> для текущего документа.</summary>
      <returns>Объект XmlImplementation для текущего документа.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
      <summary>Импортирует в текущий документ узел из другого документа.</summary>
      <returns>Импортированный узел <see cref="T:System.Xml.XmlNode" />.</returns>
      <param name="node">Импортируемый узел. </param>
      <param name="deep">Значение true — выполняется полное точное копирование; в противном случае — false. </param>
      <exception cref="T:System.InvalidOperationException">Вызов этого метода для типа узла, который не может быть импортирован. </exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerText">
      <summary>Получает сцепленные значения узла и всех его дочерних узлов.</summary>
      <returns>Связанные значения узла и все его дочерние узлы.</returns>
      <exception cref="T:System.InvalidOperationException">Присвоение значения свойству <see cref="P:System.Xml.XmlDocument.InnerText" /> запрещено.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerXml">
      <summary>Возвращает или задает разметку, отражающую дочерние узлы текущего узла.</summary>
      <returns>Разметка дочерних узлов текущего узла.</returns>
      <exception cref="T:System.Xml.XmlException">Формат XML, указанного при задании этого свойства, не является правильным. </exception>
    </member>
    <member name="P:System.Xml.XmlDocument.IsReadOnly">
      <summary>Возвращает значение, определяющее, доступен ли текущий узел только для чтения.</summary>
      <returns>Значение true, если текущий узел доступен только для чтения; в противном случае — значение false.Узлы XmlDocument всегда возвращают значение false.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
      <summary>Загружает XML-документ из указанного потока.</summary>
      <param name="inStream">Поток, содержащий загружаемый документ XML. </param>
      <exception cref="T:System.Xml.XmlException">Есть ошибка загрузки или синтаксического анализа в XML.В этом случае возникает <see cref="T:System.IO.FileNotFoundException" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.TextReader)">
      <summary>Загружает XML-документ из указанного <see cref="T:System.IO.TextReader" />.</summary>
      <param name="txtReader">TextReader, используемый для передачи данных XML в документ. </param>
      <exception cref="T:System.Xml.XmlException">Есть ошибка загрузки или синтаксического анализа в XML.В этом случае документ остается пустым.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.String)">
      <summary>Загружает XML-документ из указанного URL-адреса.</summary>
      <param name="filename">Адрес URL файла, содержащего загружаемый документ XML.URL-адрес может ссылаться на локальный файл или являться HTTP-ссылкой (веб-адресом).</param>
      <exception cref="T:System.Xml.XmlException">Есть ошибка загрузки или синтаксического анализа в XML.В этом случае возникает <see cref="T:System.IO.FileNotFoundException" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, как указано <see cref="F:System.IO.Path.InvalidPathChars" />. </exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="filename" /> имеет значение null. </exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или и то и другое превышает наибольшую возможную длину, определенную системой.Например, для платформ на основе Windows длина пути не должна превышать 248 символов, а имен файлов не более 260 символов.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь недопустим (например, он соответствует неподключенному диску). </exception>
      <exception cref="T:System.IO.IOException">При открытии файла возникла ошибка ввода-вывода. </exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="filename" /> указывает файл, разрешенный только для чтения.–либо– Эта операция не поддерживается на текущей платформе.–либо– <paramref name="filename" /> определяет каталог.–либо– Вызывающий оператор не имеет необходимого разрешения. </exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный в <paramref name="filename" />, не найден. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="filename" /> имеет недопустимый формат. </exception>
      <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения. </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
      <summary>Загружает XML-документ из указанного <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">XmlReader, используемый для передачи данных XML в документ. </param>
      <exception cref="T:System.Xml.XmlException">Есть ошибка загрузки или синтаксического анализа в XML.В этом случае документ остается пустым.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
      <summary>Загружает XML-документ из указанной строки.</summary>
      <param name="xml">Строка, содержащая загружаемый XML-документ. </param>
      <exception cref="T:System.Xml.XmlException">Есть ошибка загрузки или синтаксического анализа в XML.В этом случае документ остается пустым.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для узлов XmlDocument локальное имя равно #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Name">
      <summary>Возвращает проверенное имя узла.</summary>
      <returns>Для узлов XmlDocument имя равно #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NameTable">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
      <returns>Класс XmlNameTable, позволяющий возвращать разделенную версию строки в документе.</returns>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanged">
      <summary>Возникает при изменении свойства <see cref="P:System.Xml.XmlNode.Value" /> узла, принадлежащего данному документу.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanging">
      <summary>Возникает при намерении изменить свойство <see cref="P:System.Xml.XmlNode.Value" /> узла, принадлежащего данному документу.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserted">
      <summary>Возникает при вставке узла, принадлежащего данному документу, в другой узел.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserting">
      <summary>Возникает при намерении вставить узел, принадлежащий данному документу, в другой узел.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoved">
      <summary>Возникает при удалении узла, принадлежащего данному документу, из родительского узла.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoving">
      <summary>Возникает при намерении удалить из документа узел, принадлежащий данному документу.</summary>
    </member>
    <member name="P:System.Xml.XmlDocument.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Тип узла.Для узлов XmlDocument это значение равно XmlNodeType.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.OwnerDocument">
      <summary>Возвращает <see cref="T:System.Xml.XmlDocument" />, к которому принадлежит текущий узел.</summary>
      <returns>Для узлов XmlDocument (свойство <see cref="P:System.Xml.XmlDocument.NodeType" /> равно XmlNodeType.Document) это свойство всегда возвращает значение null.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.ParentNode">
      <summary>Возвращает родительский узел для данного узла (только для тех узлов, которые могут их иметь).</summary>
      <returns>Всегда возвращает значение null.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.PreserveWhitespace">
      <summary>Возвращает или задает значение, определяющее, будут ли сохранены пробелы в содержимом элемента.</summary>
      <returns>Значение true, если пробел будет сохранен; в противном случае — false.По умолчанию установлено значение false.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
      <summary>Создает объект <see cref="T:System.Xml.XmlNode" /> на основе данных из <see cref="T:System.Xml.XmlReader" />.Средство чтения должно располагаться на узле или атрибуте.</summary>
      <returns>Новый узел XmlNode или значение null, если больше узлов не существует.</returns>
      <param name="reader">Источник XML. </param>
      <exception cref="T:System.NullReferenceException">Средство чтения расположено в типе узла, который не преобразует допустимый узел DOM (например, EndElement или EndEntity). </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
      <summary>Сохраняет XML-документ в указанном потоке.</summary>
      <param name="outStream">Поток, в который будет выполняться сохранение. </param>
      <exception cref="T:System.Xml.XmlException">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления). </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
      <summary>Сохраняет XML-документ в указанном <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">TextWriter, в котором необходимо выполнить сохранение. </param>
      <exception cref="T:System.Xml.XmlException">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления). </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.String)">
      <summary>Сохраняет XML-документ в указанном файле.</summary>
      <param name="filename">Место в файле, где нужно сохранить документ. </param>
      <exception cref="T:System.Xml.XmlException">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления). </exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
      <summary>Сохраняет XML-документ в указанном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">XmlWriter, в котором необходимо выполнить сохранение. </param>
      <exception cref="T:System.Xml.XmlException">Операция не приведет к созданию XML-документа с правильным форматом (например, в документе не будет элемента документа или будут повторяющиеся XML-объявления). </exception>
    </member>
    <member name="P:System.Xml.XmlDocument.SchemaInfo">
      <summary>Возвращает набор сведений после проверки схемы этого узла.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />, представляющий набор сведений после проверки схемы этого узла.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Schemas">
      <summary>Возвращает или задает объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, связанный с объектом <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий схемы языка определения XML-схем, связанный с этим <see cref="T:System.Xml.XmlDocument" />; в противном случае — пустой объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)">
      <summary>Проверяет <see cref="T:System.Xml.XmlDocument" /> по схемам языка XSD, содержащимся в свойстве <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler">Объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />, который получает сведения о предупреждениях и ошибках, возникающих при проверке схемы.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Возникло событие проверки схемы, и не задан объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)">
      <summary>Проверяет указанный объект <see cref="T:System.Xml.XmlNode" /> по схемам языка XSD, содержащимся в свойстве <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler">Объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />, который получает сведения о предупреждениях и ошибках, возникающих при проверке схемы.</param>
      <param name="nodeToValidate">Объект <see cref="T:System.Xml.XmlNode" />, созданный из <see cref="T:System.Xml.XmlDocument" /> в целях проверки.</param>
      <exception cref="T:System.ArgumentException">Параметр объекта <see cref="T:System.Xml.XmlNode" /> не был создан из <see cref="T:System.Xml.XmlDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр объекта <see cref="T:System.Xml.XmlNode" /> не является элементом, атрибутом, фрагментом документа или корневым узлом.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Возникло событие проверки схемы, и не задан объект <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы XmlDocument в заданном классе <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xw">XmlWriter, в котором необходимо выполнить сохранение. </param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел XmlDocument в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">XmlWriter, в котором необходимо выполнить сохранение. </param>
    </member>
    <member name="P:System.Xml.XmlDocument.XmlResolver">
      <summary>Задает <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения внешних ресурсов.</summary>
      <returns>Объект XmlResolver , который нужно использовать.Чтобы указать XmlResolver в .NET Framework версии 1.1, вызывающий оператор должен быть надежным.</returns>
      <exception cref="T:System.Xml.XmlException">Этому свойству задается значение null, и обнаружено внешнее определение DTD или сущность. </exception>
    </member>
    <member name="T:System.Xml.XmlDocumentFragment">
      <summary>Represents a lightweight object that is useful for tree insert operations.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlDocumentFragment" /> class.</summary>
      <param name="ownerDocument">The XML document that is the source of the fragment.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
      <summary>Creates a duplicate of this node.</summary>
      <returns>The cloned node.</returns>
      <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.InnerXml">
      <summary>Gets or sets the markup representing the children of this node.</summary>
      <returns>The markup of the children of this node.</returns>
      <exception cref="T:System.Xml.XmlException">The XML specified when setting this property is not well-formed. </exception>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.LocalName">
      <summary>Gets the local name of the node.</summary>
      <returns>For XmlDocumentFragment nodes, the local name is #document-fragment.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.Name">
      <summary>Gets the qualified name of the node.</summary>
      <returns>For XmlDocumentFragment, the name is #document-fragment.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.NodeType">
      <summary>Gets the type of the current node.</summary>
      <returns>For XmlDocumentFragment nodes, this value is XmlNodeType.DocumentFragment.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.OwnerDocument">
      <summary>Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</summary>
      <returns>The XmlDocument to which this node belongs.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.ParentNode">
      <summary>Gets the parent of this node (for nodes that can have parents).</summary>
      <returns>The parent of this node.For XmlDocumentFragment nodes, this property is always null.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
      <summary>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="T:System.Xml.XmlDocumentType">
      <summary>Представляет объявление типа документа.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name">Проверенное имя; см. свойство <see cref="P:System.Xml.XmlDocumentType.Name" />.</param>
      <param name="publicId">Открытый идентификатор; см. свойство <see cref="P:System.Xml.XmlDocumentType.PublicId" />.</param>
      <param name="systemId">Системный идентификатор; см. свойство <see cref="P:System.Xml.XmlDocumentType.SystemId" />.</param>
      <param name="internalSubset">Внутренний поднабор DTD; см. свойство <see cref="P:System.Xml.XmlDocumentType.InternalSubset" />.</param>
      <param name="doc">Родительский документ.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.</summary>
      <returns>Точная копия узла.</returns>
      <param name="deep">Значение true для рекурсивного создания точной копии поддерева указанного узла; false только для создания точной копии самого узла.Для узлов типа документа точная копия узла всегда включает поддерево независимо от значения параметра.</param>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Entities">
      <summary>Возвращает коллекцию узлов <see cref="T:System.Xml.XmlEntity" />, объявленных в объявлении типа документа.</summary>
      <returns>Элемент <see cref="T:System.Xml.XmlNamedNodeMap" />, содержащий узлы XmlEntity.Возвращаемый элемент XmlNamedNodeMap доступен только для чтения.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.InternalSubset">
      <summary>Возвращает полное значение внутреннего набора DTD для объявления DOCTYPE.</summary>
      <returns>Внутренний набор DTD для DOCTYPE.Если внутренний набор DTD отсутствует, возвращается String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.IsReadOnly">
      <summary>Возвращает значение, определяющее, доступен ли узел только для чтения.</summary>
      <returns>Значение true, если узел доступен только для чтения; в противном случае — false.Поскольку узлы DocumentType доступны только для чтения, это свойство всегда возвращает значение true.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.LocalName">
      <summary>Возвращает локальное имя узла.</summary>
      <returns>Для узлов DocumentType это свойство возвращает имя типа документа.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Name">
      <summary>Возвращает проверенное имя узла.</summary>
      <returns>Для узлов DocumentType это свойство возвращает имя типа документа.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Для узлов DocumentType это значение равно XmlNodeType.DocumentType.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Notations">
      <summary>Возвращает коллекцию узлов <see cref="T:System.Xml.XmlNotation" />, представленных в объявлении типа документа.</summary>
      <returns>Элемент <see cref="T:System.Xml.XmlNamedNodeMap" />, содержащий узлы XmlNotation.Возвращаемый элемент XmlNamedNodeMap доступен только для чтения.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.PublicId">
      <summary>Возвращает значение общего идентификатора для объявления DOCTYPE.</summary>
      <returns>Общий идентификатор для DOCTYPE.Если общий идентификатор отсутствует, возвращается значение null.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.SystemId">
      <summary>Возвращает значение идентификатора системы для объявления DOCTYPE.</summary>
      <returns>Идентификатор системы для DOCTYPE.Если идентификатор системы отсутствует, возвращается значение null.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы в заданном классе <see cref="T:System.Xml.XmlWriter" />.Для узлов XmlDocumentType этот метод бесполезен.</summary>
      <param name="w">XmlWriter, в котором необходимо выполнить сохранение. </param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">XmlWriter, в котором необходимо выполнить сохранение. </param>
    </member>
    <member name="T:System.Xml.XmlElement">
      <summary>Represents an element.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlElement" /> class.</summary>
      <param name="prefix">The namespace prefix; see the <see cref="P:System.Xml.XmlElement.Prefix" /> property.</param>
      <param name="localName">The local name; see the <see cref="P:System.Xml.XmlElement.LocalName" /> property.</param>
      <param name="namespaceURI">The namespace URI; see the <see cref="P:System.Xml.XmlElement.NamespaceURI" /> property.</param>
      <param name="doc">The parent XML document.</param>
    </member>
    <member name="P:System.Xml.XmlElement.Attributes">
      <summary>Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the list of attributes for this node.</summary>
      <returns>
        <see cref="T:System.Xml.XmlAttributeCollection" /> containing the list of attributes for this node.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
      <summary>Creates a duplicate of this node.</summary>
      <returns>The cloned node.</returns>
      <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself (and its attributes if the node is an XmlElement). </param>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
      <summary>Returns the value for the attribute with the specified name.</summary>
      <returns>Значение указанного атрибута.An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</returns>
      <param name="name">Имя извлекаемого атрибута.This is a qualified name.It is matched against the Name property of the matching node.</param>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
      <summary>Returns the value for the attribute with the specified local name and namespace URI.</summary>
      <returns>Значение указанного атрибута.An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</returns>
      <param name="localName">The local name of the attribute to retrieve. </param>
      <param name="namespaceURI">The namespace URI of the attribute to retrieve. </param>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
      <summary>Returns the XmlAttribute with the specified name.</summary>
      <returns>The specified XmlAttribute or null if a matching attribute was not found.</returns>
      <param name="name">Имя извлекаемого атрибута.This is a qualified name.It is matched against the Name property of the matching node.</param>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
      <summary>Returns the <see cref="T:System.Xml.XmlAttribute" /> with the specified local name and namespace URI.</summary>
      <returns>The specified XmlAttribute or null if a matching attribute was not found.</returns>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
      <summary>Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlElement.Name" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</returns>
      <param name="name">The name tag to match.This is a qualified name.It is matched against the Name property of the matching node.The asterisk (*) is a special value that matches all tags.</param>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
      <summary>Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlElement.LocalName" /> and <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</returns>
      <param name="localName">The local name to match.The asterisk (*) is a special value that matches all tags.</param>
      <param name="namespaceURI">The namespace URI to match. </param>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
      <summary>Determines whether the current node has an attribute with the specified name.</summary>
      <returns>true if the current node has the specified attribute; otherwise, false.</returns>
      <param name="name">The name of the attribute to find.This is a qualified name.It is matched against the Name property of the matching node.</param>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
      <summary>Determines whether the current node has an attribute with the specified local name and namespace URI.</summary>
      <returns>true if the current node has the specified attribute; otherwise, false.</returns>
      <param name="localName">The local name of the attribute to find. </param>
      <param name="namespaceURI">The namespace URI of the attribute to find. </param>
    </member>
    <member name="P:System.Xml.XmlElement.HasAttributes">
      <summary>Gets a boolean value indicating whether the current node has any attributes.</summary>
      <returns>true if the current node has attributes; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerText">
      <summary>Gets or sets the concatenated values of the node and all its children.</summary>
      <returns>The concatenated values of the node and all its children.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerXml">
      <summary>Gets or sets the markup representing just the children of this node.</summary>
      <returns>The markup of the children of this node.</returns>
      <exception cref="T:System.Xml.XmlException">The XML specified when setting this property is not well-formed. </exception>
    </member>
    <member name="P:System.Xml.XmlElement.IsEmpty">
      <summary>Gets or sets the tag format of the element.</summary>
      <returns>Returns true if the element is to be serialized in the short tag format "&lt;item/&gt;"; false for the long format "&lt;item&gt;&lt;/item&gt;".When setting this property, if set to true, the children of the element are removed and the element is serialized in the short tag format.If set to false, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.This property is a Microsoft extension to the Document Object Model (DOM).</returns>
    </member>
    <member name="P:System.Xml.XmlElement.LocalName">
      <summary>Gets the local name of the current node.</summary>
      <returns>The name of the current node with the prefix removed.For example, LocalName is book for the element &lt;bk:book&gt;.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Name">
      <summary>Gets the qualified name of the node.</summary>
      <returns>The qualified name of the node.For XmlElement nodes, this is the tag name of the element.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NamespaceURI">
      <summary>Gets the namespace URI of this node.</summary>
      <returns>The namespace URI of this node.If there is no namespace URI, this property returns String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NextSibling">
      <summary>Gets the <see cref="T:System.Xml.XmlNode" /> immediately following this element.</summary>
      <returns>The XmlNode immediately following this element.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NodeType">
      <summary>Gets the type of the current node.</summary>
      <returns>Тип узла.For XmlElement nodes, this value is XmlNodeType.Element.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.OwnerDocument">
      <summary>Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</summary>
      <returns>The XmlDocument to which this element belongs.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.ParentNode"></member>
    <member name="P:System.Xml.XmlElement.Prefix">
      <summary>Gets or sets the namespace prefix of this node.</summary>
      <returns>The namespace prefix of this node.If there is no prefix, this property returns String.Empty.</returns>
      <exception cref="T:System.ArgumentException">This node is read-only </exception>
      <exception cref="T:System.Xml.XmlException">The specified prefix contains an invalid character.The specified prefix is malformed.The namespaceURI of this node is null.The specified prefix is "xml" and the namespaceURI of this node is different from http://www.w3.org/XML/1998/namespace. </exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAll">
      <summary>Removes all specified attributes and children of the current node.Default attributes are not removed.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAllAttributes">
      <summary>Removes all specified attributes from the element.Default attributes are not removed.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
      <summary>Removes an attribute by name.</summary>
      <param name="name">The name of the attribute to remove.This is a qualified name.It is matched against the Name property of the matching node.</param>
      <exception cref="T:System.ArgumentException">узел доступен только для чтения. </exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
      <summary>Removes an attribute with the specified local name and namespace URI.(If the removed attribute has a default value, it is immediately replaced).</summary>
      <param name="localName">The local name of the attribute to remove. </param>
      <param name="namespaceURI">The namespace URI of the attribute to remove. </param>
      <exception cref="T:System.ArgumentException">узел доступен только для чтения. </exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
      <summary>Removes the attribute node with the specified index from the element.(If the removed attribute has a default value, it is immediately replaced).</summary>
      <returns>The attribute node removed or null if there is no node at the given index.</returns>
      <param name="i">The index of the node to remove.The first node has index 0.</param>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
      <summary>Removes the <see cref="T:System.Xml.XmlAttribute" /> specified by the local name and namespace URI.(If the removed attribute has a default value, it is immediately replaced).</summary>
      <returns>The removed XmlAttribute or null if the XmlElement does not have a matching attribute node.</returns>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
      <exception cref="T:System.ArgumentException">This node is read-only. </exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
      <summary>Удаляет указанный объект <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <returns>The removed XmlAttribute or null if <paramref name="oldAttr" /> is not an attribute node of the XmlElement.</returns>
      <param name="oldAttr">The XmlAttribute node to remove.If the removed attribute has a default value, it is immediately replaced.</param>
      <exception cref="T:System.ArgumentException">This node is read-only. </exception>
    </member>
    <member name="P:System.Xml.XmlElement.SchemaInfo">
      <summary>Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</summary>
      <returns>An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the post schema validation infoset of this node.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
      <summary>Sets the value of the attribute with the specified name.</summary>
      <param name="name">The name of the attribute to create or alter.This is a qualified name.If the name contains a colon it is parsed into prefix and local name components.</param>
      <param name="value">The value to set for the attribute. </param>
      <exception cref="T:System.Xml.XmlException">The specified name contains an invalid character. </exception>
      <exception cref="T:System.ArgumentException">узел доступен только для чтения. </exception>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
      <summary>Sets the value of the attribute with the specified local name and namespace URI.</summary>
      <returns>Значение атрибута.</returns>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
      <param name="value">The value to set for the attribute. </param>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
      <summary>Adds the specified <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <returns>The XmlAttribute to add.</returns>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
      <summary>Adds the specified <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <returns>If the attribute replaces an existing attribute with the same name, the old XmlAttribute is returned; otherwise, null is returned.</returns>
      <param name="newAttr">The XmlAttribute node to add to the attribute collection for this element. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="newAttr" /> was created from a different document than the one that created this node.Or this node is read-only.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="newAttr" /> is already an attribute of another XmlElement object.You must explicitly clone XmlAttribute nodes to re-use them in other XmlElement objects.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="T:System.Xml.XmlEntity">
      <summary>Представляет объявление сущности, например &lt;!ENTITY ...&gt;.</summary>
    </member>
    <member name="P:System.Xml.XmlEntity.BaseURI">
      <summary>Получает универсальный код ресурса (URI) текущего узла.</summary>
      <returns>Размещение, из которого загружен узел.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.Невозможно получить точные копии узлов сущности.При вызове этого метода для объекта <see cref="T:System.Xml.XmlEntity" /> создается исключение.</summary>
      <returns>Возвращает копию узла <see cref="T:System.Xml.XmlNode" />, из которого вызывается метод.</returns>
      <param name="deep">Значение true для рекурсивного создания точной копии поддерева указанного узла; false только для создания точной копии самого узла.</param>
      <exception cref="T:System.InvalidOperationException">Невозможно получить точные копии узлов сущности.При вызове этого метода для объекта <see cref="T:System.Xml.XmlEntity" /> создается исключение.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerText">
      <summary>Последовательно соединенные значения узла и его дочерних узлов.</summary>
      <returns>Последовательно соединенные значения узла и его дочерних узлов.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задания значения свойства. </exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerXml">
      <summary>Возвращает разметку, отражающую дочерние узлы данного узла.</summary>
      <returns>Для узлов XmlEntity возвращается String.Empty.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задания значения свойства. </exception>
    </member>
    <member name="P:System.Xml.XmlEntity.IsReadOnly">
      <summary>Возвращает значение, определяющее, доступен ли узел только для чтения.</summary>
      <returns>Значение true, если узел доступен только для чтения; в противном случае — false.Поскольку узлы XmlEntity доступны только для чтения, это свойство всегда возвращает значение true.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.LocalName">
      <summary>Возвращает имя узла без префикса пространства имен.</summary>
      <returns>Для узлов XmlEntity это свойство возвращает имя сущности.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.Name">
      <summary>Возвращает имя узла.</summary>
      <returns>Имя сущности.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NodeType">
      <summary>Возвращает тип узла.</summary>
      <returns>Тип узла.Для узлов XmlEntity значение равно XmlNodeType.Entity.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NotationName">
      <summary>Возвращает имя дополнительного атрибута NDATA для объявления сущности.</summary>
      <returns>Имя атрибута NDATA.Если атрибут NDATA отсутствует, возвращается значение null.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.OuterXml">
      <summary>Возвращает разметку, представляющую данный узел и все его дочерние узлы.</summary>
      <returns>Для узлов XmlEntity возвращается String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.PublicId">
      <summary>Возвращает значение открытого идентификатора для объявления сущности.</summary>
      <returns>Общий идентификатор для сущности.Если общий идентификатор отсутствует, возвращается значение null.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.SystemId">
      <summary>Возвращает значение идентификатора системы для объявления сущности.</summary>
      <returns>Идентификатор системы для сущности.Если идентификатор системы отсутствует, возвращается значение null.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет все дочерние узлы в заданном классе <see cref="T:System.Xml.XmlWriter" />.Для узлов XmlEntity этот метод бесполезен.</summary>
      <param name="w">XmlWriter, в котором необходимо выполнить сохранение. </param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.Для узлов XmlEntity этот метод бесполезен.</summary>
      <param name="w">XmlWriter, в котором необходимо выполнить сохранение. </param>
    </member>
    <member name="T:System.Xml.XmlEntityReference">
      <summary>Represents an entity reference node.</summary>
    </member>
    <member name="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlEntityReference" /> class.</summary>
      <param name="name">The name of the entity reference; see the <see cref="P:System.Xml.XmlEntityReference.Name" /> property.</param>
      <param name="doc">The parent XML document.</param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.BaseURI">
      <summary>Gets the base Uniform Resource Identifier (URI) of the current node.</summary>
      <returns>The location from which the node was loaded.</returns>
    </member>
    <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
      <summary>Creates a duplicate of this node.</summary>
      <returns>The cloned node.</returns>
      <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.For XmlEntityReference nodes, this method always returns an entity reference node with no children.The replacement text is set when the node is inserted into a parent.</param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.IsReadOnly">
      <summary>Gets a value indicating whether the node is read-only.</summary>
      <returns>true if the node is read-only; otherwise false.Because XmlEntityReference nodes are read-only, this property always returns true.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.LocalName">
      <summary>Gets the local name of the node.</summary>
      <returns>For XmlEntityReference nodes, this property returns the name of the entity referenced.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Name">
      <summary>Gets the name of the node.</summary>
      <returns>The name of the entity referenced.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.NodeType">
      <summary>Gets the type of the node.</summary>
      <returns>Тип узла.For XmlEntityReference nodes, the value is XmlNodeType.EntityReference.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Value">
      <summary>Gets or sets the value of the node.</summary>
      <returns>The value of the node.For XmlEntityReference nodes, this property returns null.</returns>
      <exception cref="T:System.ArgumentException">Node is read-only. </exception>
      <exception cref="T:System.InvalidOperationException">Setting the property. </exception>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
      <summary>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary>Подробные сведения о последнем исключении.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary>Initializes a new instance of the XmlException class.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the XmlException class using the information in the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</summary>
      <param name="info">Объект SerializationInfo, содержащий все свойства класса XmlException. </param>
      <param name="context">Объект StreamingContext, содержащий сведения о контексте. </param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary>Initializes a new instance of the XmlException class with a specified error message.</summary>
      <param name="message">Описание ошибки. </param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the XmlException class.</summary>
      <param name="message">The description of the error condition. </param>
      <param name="innerException">
        <see cref="T:System.Exception" />, породивший XmlException (при наличии).This value can be null.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the XmlException class with the specified message, inner exception, line number, and line position.</summary>
      <param name="message">Описание ошибки. </param>
      <param name="innerException">The exception that is the cause of the current exception.This value can be null.</param>
      <param name="lineNumber">Номер строки, показывающий, где произошла ошибка. </param>
      <param name="linePosition">Размещение строки, показывающее, где произошла ошибка. </param>
    </member>
    <member name="M:System.Xml.XmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Streams all the XmlException properties into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class for the given <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">The SerializationInfo object. </param>
      <param name="context">The StreamingContext object. </param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary>Получает номер строки, показывающий, где произошла ошибка.</summary>
      <returns>Номер строки, показывающий, где произошла ошибка.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary>Получает размещение строки, показывающее, где произошла ошибка.</summary>
      <returns>Размещение строки, показывающее, где произошла ошибка.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary>Gets a message describing the current exception.</summary>
      <returns>The error message that explains the reason for the exception.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary>Gets the location of the XML file.</summary>
      <returns>The source URI for the XML data.If there is no source URI, this property returns null.</returns>
    </member>
    <member name="T:System.Xml.XmlImplementation">
      <summary>Defines the context for a set of <see cref="T:System.Xml.XmlDocument" /> objects.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Xml.XmlImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlImplementation" /> class with the <see cref="T:System.Xml.XmlNameTable" /> specified.</summary>
      <param name="nt">An <see cref="T:System.Xml.XmlNameTable" /> object.</param>
    </member>
    <member name="M:System.Xml.XmlImplementation.CreateDocument">
      <summary>Creates a new <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns>The new XmlDocument object.</returns>
    </member>
    <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
      <summary>Tests if the Document Object Model (DOM) implementation implements a specific feature.</summary>
      <returns>true if the feature is implemented in the specified version; otherwise, false.The following table shows the combinations that cause HasFeature to return true.strFeature strVersion XML 1.0 XML 2.0 </returns>
      <param name="strFeature">The package name of the feature to test.This name is not case-sensitive.</param>
      <param name="strVersion">This is the version number of the package name to test.If the version is not specified (null), supporting any version of the feature causes the method to return true.</param>
    </member>
    <member name="T:System.Xml.XmlLinkedNode">
      <summary>Gets the node immediately preceding or following this node.</summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.NextSibling">
      <summary>Gets the node immediately following this node.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> immediately following this node or null if one does not exist.</returns>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.PreviousSibling">
      <summary>Gets the node immediately preceding this node.</summary>
      <returns>The preceding <see cref="T:System.Xml.XmlNode" /> or null if one does not exist.</returns>
    </member>
    <member name="T:System.Xml.XmlNamedNodeMap">
      <summary>Represents a collection of nodes that can be accessed by name or index.</summary>
    </member>
    <member name="P:System.Xml.XmlNamedNodeMap.Count">
      <summary>Gets the number of nodes in the XmlNamedNodeMap.</summary>
      <returns>The number of nodes.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
      <summary>Provides support for the "foreach" style iteration over the collection of nodes in the XmlNamedNodeMap.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
      <summary>Retrieves an <see cref="T:System.Xml.XmlNode" /> specified by name.</summary>
      <returns>An XmlNode with the specified name or null if a matching node is not found.</returns>
      <param name="name">The qualified name of the node to retrieve.It is matched against the <see cref="P:System.Xml.XmlNode.Name" /> property of the matching node.</param>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
      <summary>Retrieves a node with the matching <see cref="P:System.Xml.XmlNode.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlNode" /> with the matching local name and namespace URI or null if a matching node was not found.</returns>
      <param name="localName">The local name of the node to retrieve. </param>
      <param name="namespaceURI">The namespace Uniform Resource Identifier (URI) of the node to retrieve. </param>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
      <summary>Retrieves the node at the specified index in the XmlNamedNodeMap.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> at the specified index.If <paramref name="index" /> is less than 0 or greater than or equal to the <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> property, null is returned.</returns>
      <param name="index">The index position of the node to retrieve from the XmlNamedNodeMap.The index is zero-based; therefore, the index of the first node is 0 and the index of the last node is <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> -1.</param>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
      <summary>Removes the node from the XmlNamedNodeMap.</summary>
      <returns>The XmlNode removed from this XmlNamedNodeMap or null if a matching node was not found.</returns>
      <param name="name">The qualified name of the node to remove.The name is matched against the <see cref="P:System.Xml.XmlNode.Name" /> property of the matching node.</param>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
      <summary>Removes a node with the matching <see cref="P:System.Xml.XmlNode.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> removed or null if a matching node was not found.</returns>
      <param name="localName">The local name of the node to remove. </param>
      <param name="namespaceURI">The namespace URI of the node to remove. </param>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
      <summary>Adds an <see cref="T:System.Xml.XmlNode" /> using its <see cref="P:System.Xml.XmlNode.Name" /> property </summary>
      <returns>If the <paramref name="node" /> replaces an existing node with the same name, the old node is returned; otherwise, null is returned.</returns>
      <param name="node">An XmlNode to store in the XmlNamedNodeMap.If a node with that name is already present in the map, it is replaced by the new one.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="node" /> was created from a different <see cref="T:System.Xml.XmlDocument" /> than the one that created the XmlNamedNodeMap; or the XmlNamedNodeMap is read-only. </exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary>Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces. </summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlNamespaceManager" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nameTable">The <see cref="T:System.Xml.XmlNameTable" /> to use. </param>
      <exception cref="T:System.NullReferenceException">null is passed to the constructor </exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary>Adds the given namespace to the collection.</summary>
      <param name="prefix">The prefix to associate with the namespace being added.Use String.Empty to add a default namespace.ПримечаниеIf the <see cref="T:System.Xml.XmlNamespaceManager" /> will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified.If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace.For more information about XPath expressions and the <see cref="T:System.Xml.XmlNamespaceManager" />, refer to the <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> and <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" /> methods.</param>
      <param name="uri">The namespace to add. </param>
      <exception cref="T:System.ArgumentException">The value for <paramref name="prefix" /> is "xml" or "xmlns". </exception>
      <exception cref="T:System.ArgumentNullException">The value for <paramref name="prefix" /> or <paramref name="uri" /> is null. </exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary>Gets the namespace URI for the default namespace.</summary>
      <returns>Returns the namespace URI for the default namespace, or String.Empty if there is no default namespace.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary>Returns an enumerator to use to iterate through the namespaces in the <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> containing the prefixes stored by the <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringDictionary" /> object containing a collection of namespace and prefix pairs currently in scope.</returns>
      <param name="scope">An <see cref="T:System.Xml.XmlNamespaceScope" /> value that specifies the type of namespace nodes to return.</param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary>Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.</summary>
      <returns>true if there is a namespace defined; otherwise, false.</returns>
      <param name="prefix">The prefix of the namespace you want to find. </param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary>Получает URI пространства имен для указанного префикса.</summary>
      <returns>Returns the namespace URI for <paramref name="prefix" /> or null if there is no mapped namespace.The returned string is atomized.For more information on atomized strings, see <see cref="T:System.Xml.XmlNameTable" />.</returns>
      <param name="prefix">Префикс, URI пространства имен которого необходимо разрешить.To match the default namespace, pass String.Empty.</param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary>Finds the prefix declared for the given namespace URI.</summary>
      <returns>The matching prefix.If there is no mapped prefix, the method returns String.Empty.If a null value is supplied, then null is returned.</returns>
      <param name="uri">The namespace to resolve for the prefix. </param>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary>Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this object.</summary>
      <returns>The <see cref="T:System.Xml.XmlNameTable" /> used by this object.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary>Pops a namespace scope off the stack.</summary>
      <returns>true if there are namespace scopes left on the stack; false if there are no more namespaces to pop.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary>Pushes a namespace scope onto the stack.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary>Removes the given namespace for the given prefix.</summary>
      <param name="prefix">The prefix for the namespace </param>
      <param name="uri">The namespace to remove for the given prefix.The namespace removed is from the current namespace scope.Namespaces outside the current scope are ignored.</param>
      <exception cref="T:System.ArgumentNullException">The value of <paramref name="prefix" /> or <paramref name="uri" /> is null. </exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary>Определяет область пространства имен.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary>Все пространства имен, определенные в области текущего узла.This includes the xmlns:xml namespace which is always declared implicitly.Порядок возвращения пространств имен не задан.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary>All namespaces defined in the scope of the current node, excluding the xmlns:xml namespace, which is always declared implicitly.Порядок возвращения пространств имен не задан.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary>Все пространства имен, определенные локально для текущего узла.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary>Таблица атомизированных объектов строки.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlNameTable" />. </summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе атомизирует заданную строку и добавляет ее в таблицу XmlNameTable.</summary>
      <returns>Новая атомизированная строка или существующая строка, если таковая уже имеется.Если параметр length имеет значение нуль, возвращается String.Empty.</returns>
      <param name="array">Массив символов, содержащий добавляемое имя. </param>
      <param name="offset">Отсчитываемый от нуля индекс в массиве, задающий первый символ имени. </param>
      <param name="length">Число символов в имени. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />— или — <paramref name="offset" /> &gt;= <paramref name="array" />.Length — или — <paramref name="length" /> &gt; <paramref name="array" />.Length Вышеприведенные условия не вызывают исключение, если <paramref name="length" /> =0. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0. </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary>При переопределении в производном классе атомизирует заданную строку и добавляет ее в таблицу XmlNameTable.</summary>
      <returns>Новая атомизированная строка или существующая строка, если таковая уже имеется.</returns>
      <param name="array">Добавляемое имя. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> имеет значение null; </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе получает атомизированную строку, содержащую те же символы, что и заданный диапазон символов в заданном массиве.</summary>
      <returns>Атомизированная строка или значение null, если строка еще не атомизирована.Если параметр <paramref name="length" /> имеет значение нуль, возвращается объект String.Empty.</returns>
      <param name="array">Массив символов, содержащий искомое имя. </param>
      <param name="offset">Отсчитываемый от нуля индекс в массиве, задающий первый символ имени. </param>
      <param name="length">Число символов в имени. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />— или — <paramref name="offset" /> &gt;= <paramref name="array" />.Length — или — <paramref name="length" /> &gt; <paramref name="array" />.Length Вышеприведенные условия не вызывают исключение, если <paramref name="length" /> =0. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0. </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary>При переопределении в производном классе получает атомизированную строку, содержащую то же значение, что и заданная строка.</summary>
      <returns>Атомизированная строка или значение null, если строка еще не атомизирована.</returns>
      <param name="array">Искомое имя. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> имеет значение null; </exception>
    </member>
    <member name="T:System.Xml.XmlNode">
      <summary>Предоставляет отдельный узел в XML-документе. </summary>
    </member>
    <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
      <summary>Добавляет указанный узел в конец списка дочерних узлов данного узла.</summary>
      <returns>Добавленный узел.</returns>
      <param name="newChild">Добавляемый узел.Все содержимое узла, которое должно быть добавлено, перемещается в указанное расположение.</param>
      <exception cref="T:System.InvalidOperationException">Этот узел имеет тип, не разрешающий дочерние узлы типа узла <paramref name="newChild" />.<paramref name="newChild" /> является предком данного узла. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> был создан из документа, отличающегося от того, который создал данный узел.Данный узел доступен только для чтения. </exception>
    </member>
    <member name="P:System.Xml.XmlNode.Attributes">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlAttributeCollection" />, содержащий атрибуты данного узла.</summary>
      <returns>Класс XmlAttributeCollection, содержащий атрибуты узла.Если узел имеет тип XmlNodeType.Element, возвращаются атрибуты узла.В противном случае это свойство возвращает значение null.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.BaseURI">
      <summary>Возвращает базовый URI текущего узла.</summary>
      <returns>Место, из которого был загружен узел, или String.Empty, если базовый URI узла отсутствует.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ChildNodes">
      <summary>Возвращает все дочерние узлы данного узла.</summary>
      <returns>Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий все дочерние узлы данного узла.Если дочерние узлы отсутствуют, это свойство возвращает пустой <see cref="T:System.Xml.XmlNodeList" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Clone">
      <summary>Создает дубликат этого узла.</summary>
      <returns>Точная копия узла.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
      <summary>При переопределении в производном классе создает копию узла.</summary>
      <returns>Точная копия узла.</returns>
      <param name="deep">Значение true для рекурсивного создания точной копии поддерева указанного узла; false только для создания точной копии самого узла. </param>
      <exception cref="T:System.InvalidOperationException">Вызов этого метода для типа узла, для которого не может быть создана точная копия. </exception>
    </member>
    <member name="M:System.Xml.XmlNode.CreateNavigator">
      <summary>Создает класс <see cref="T:System.Xml.XPath.XPathNavigator" /> для перемещения данного объекта.</summary>
      <returns>Объект XPathNavigator.XPathNavigator размещается на узле, из которого вызывается метод.Он не размещается на корневом узле документа.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.FirstChild">
      <summary>Возвращает первый дочерний узел данного узла.</summary>
      <returns>Первый дочерний узел данного узла.Если такой узел отсутствует, возвращается значение null.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetEnumerator">
      <summary>Предоставляет поддержку для всех итераций стиля в узлах XmlNode.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
      <summary>Ищет наиболее точное объявление xmlns для заданного префикса, принадлежащего ограниченной области действия текущего узла, и возвращает URI пространства имен в объявлении.</summary>
      <returns>URI пространства имен указанного префикса.</returns>
      <param name="prefix">Префикс, для которого следует найти URI пространства имен. </param>
    </member>
    <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
      <summary>Ищет наиболее точное объявление xmlns для URI пространства имен, принадлежащего области действия текущего узла, и возвращает префикс, определенный в этом объявлении.</summary>
      <returns>Префикс для указанного URI пространства имен.</returns>
      <param name="namespaceURI">URI пространства имен, для которого требуется найти префикс. </param>
    </member>
    <member name="P:System.Xml.XmlNode.HasChildNodes">
      <summary>Возвращает значение, показывающее наличие дочерних узлов у текущего узла.</summary>
      <returns>Значение true, если узел имеет дочерние узлы; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerText">
      <summary>Возвращает или задает связанные значения узла, а также все его дочерние узлы.</summary>
      <returns>Связанные значения узла и все его дочерние узлы.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerXml">
      <summary>Возвращает или задает разметку, отражающую только дочерние узлы данного узла.</summary>
      <returns>Разметка дочерних узлов данного узла.ПримечаниеInnerXml не возвращает атрибуты, используемые по умолчанию.</returns>
      <exception cref="T:System.InvalidOperationException">Установка этого свойства на узле, который не может иметь дочерних узлов. </exception>
      <exception cref="T:System.Xml.XmlException">Формат XML, указанного при задании этого свойства, не является правильным. </exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Вставляет заданный узел сразу после указанного узла ссылки.</summary>
      <returns>Вставленный узел.</returns>
      <param name="newChild">XmlNode для вставки. </param>
      <param name="refChild">узлом ссылки является XmlNode.<paramref name="newNode" /> располагается после <paramref name="refNode" />.</param>
      <exception cref="T:System.InvalidOperationException">Этот узел имеет тип, не разрешающий дочерние узлы типа узла <paramref name="newChild" />.<paramref name="newChild" /> является предком данного узла. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> был создан из документа, отличающегося от того, который создал данный узел.<paramref name="refChild" /> не является дочерним элементом этого узла.Данный узел доступен только для чтения. </exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Вставляет заданный узел сразу перед указанным узлом ссылки.</summary>
      <returns>Вставленный узел.</returns>
      <param name="newChild">XmlNode для вставки. </param>
      <param name="refChild">узлом ссылки является XmlNode.<paramref name="newChild" /> размещен перед данным узлом.</param>
      <exception cref="T:System.InvalidOperationException">Текущий узел имеет тип, не разрешающий дочерние узлы типа узла <paramref name="newChild" />.<paramref name="newChild" /> является предком данного узла. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> был создан из документа, отличающегося от того, который создал данный узел.<paramref name="refChild" /> не является дочерним элементом этого узла.Данный узел доступен только для чтения. </exception>
    </member>
    <member name="P:System.Xml.XmlNode.IsReadOnly">
      <summary>Возвращает значение, определяющее, доступен ли узел только для чтения.</summary>
      <returns>Значение true, если узел доступен только для чтения; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String)">
      <summary>Возвращает первый дочерний элемент с помощью указанного свойства <see cref="P:System.Xml.XmlNode.Name" />.</summary>
      <returns>Первый объект <see cref="T:System.Xml.XmlElement" />, соответствующий указанному имени.</returns>
      <param name="name">Проверенное имя загружаемого элемента. </param>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
      <summary>Возвращает первый дочерний элемент с помощью указанного свойства <see cref="P:System.Xml.XmlNode.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <returns>Первый объект <see cref="T:System.Xml.XmlElement" /> с соответствующими параметрами <paramref name="localname" /> и <paramref name="ns" />.</returns>
      <param name="localname">Локальное имя элемента. </param>
      <param name="ns">URI пространства имен элемента. </param>
    </member>
    <member name="P:System.Xml.XmlNode.LastChild">
      <summary>Возвращает последний дочерний узел данного узла.</summary>
      <returns>Последний дочерний узел данного узла.Если такой узел отсутствует, возвращается значение null.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LocalName">
      <summary>При переопределении в производном классе получает локальное имя узла.</summary>
      <returns>Имя узла с удаленным префиксом.Например, LocalName — это книга для элемента &lt;bk:book&gt;.Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла. Тип Имя Attribute Локальное имя атрибута. CDATA #cdata-section Comment #comment Document #document DocumentFragment #document-fragment DocumentType Имя типа документа. Element Локальное имя элемента. Entity Имя сущности. EntityReference Имя сущности, на которую существует ссылка. Notation Имя представления. ProcessingInstruction Конечное приложение инструкции обработки. Text #text Whitespace #whitespace SignificantWhitespace #significant-whitespace XmlDeclaration #xml-declaration </returns>
    </member>
    <member name="P:System.Xml.XmlNode.Name">
      <summary>При переопределении в производном классе получает проверенное имя узла.</summary>
      <returns>Проверенное имя узла.Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла.Тип Имя Attribute Проверенное имя атрибута. CDATA #cdata-section Comment #comment Document #document DocumentFragment #document-fragment DocumentType Имя типа документа. Element Полное имя элемента. Entity Имя сущности. EntityReference Имя сущности, на которую существует ссылка. Notation Имя представления. ProcessingInstruction Конечное приложение инструкции обработки. Text #text Whitespace #whitespace SignificantWhitespace #significant-whitespace XmlDeclaration #xml-declaration </returns>
    </member>
    <member name="P:System.Xml.XmlNode.NamespaceURI">
      <summary>Возвращает URI пространства имен данного узла.</summary>
      <returns>URI пространства имен данного узла.Если URI пространства имен отсутствует, возвращается String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NextSibling">
      <summary>Возвращает узел, следующий сразу за данным узлом.</summary>
      <returns>Следующий XmlNode.Если следующий узел отсутствует, возвращается значение null.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NodeType">
      <summary>При переопределении в производном классе получает тип текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlNodeType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Normalize">
      <summary>Помещает все узлы XmlText на максимальную глубину поддерева, расположенного под данным узлом XmlNode, в обычную форму, где узлы XmlText разделяются только разметкой (теги, примечания, комментарии, инструкции обработки, разделы CDATA и ссылки на сущности). Смежные узлы XmlText отсутствуют.</summary>
    </member>
    <member name="P:System.Xml.XmlNode.OuterXml">
      <summary>Возвращает разметку, предоставляющую данный узел и все его дочерние узлы.</summary>
      <returns>Разметка, содержащая данный узел и все его дочерние узлы.ПримечаниеOuterXml не возвращает атрибуты, используемые по умолчанию.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.OwnerDocument">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlDocument" />, которому принадлежит данный узел.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDocument" />, к которому принадлежит данный узел.Если узел является объектом <see cref="T:System.Xml.XmlDocument" /> (NodeType равен XmlNodeType.Document), это свойство возвращает значение null.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ParentNode">
      <summary>Возвращает родительский узел для данного узла (только для тех узлов, которые могут их иметь).</summary>
      <returns>XmlNode, являющийся родительским узлом текущего узла.Если узел уже создан, но еще не добавлен в дерево или, если узел был из дерева удален, родительский узел равен null.Для всех других узлов возвращаемое значение зависит от свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла.В следующей таблице для свойства ParentNode описаны возможные возвращаемые значения.NodeType Возвращаемое значение свойства ParentNode Attribute, Document, DocumentFragment, Entity, Notation Возвращает значение null; эти узлы не имеют родительских узлов. CDATA Возвращает ссылку на сущность или элемент, содержащую раздел CDATA. Comment Возвращает элемент, ссылку на сущность, тип документа или документ, содержащий комментарий. DocumentType Возвращает узел документа. Element Возвращает родительский узел элемента.Если элемент является корневым узлом дерева, родительский узел является узлом документа.EntityReference Возвращает элемент, атрибут или ссылку на сущность, содержащую ссылку на сущность. ProcessingInstruction Возвращает документ, элемент, тип документа или ссылку на сущность, содержащую инструкцию обработки. Text Возвращает родительский элемент, атрибут или ссылку на сущность, содержащую текстовый узел. </returns>
    </member>
    <member name="P:System.Xml.XmlNode.Prefix">
      <summary>Возвращает или задает префикс пространства имен данного узла.</summary>
      <returns>Префикс пространства имен данного узла.Например, Prefix — это книга для элемента &lt;bk:book&gt;.Если префикс отсутствует, данное свойство возвращает String.Empty.</returns>
      <exception cref="T:System.ArgumentException">Данный узел доступен только для чтения. </exception>
      <exception cref="T:System.Xml.XmlException">Заданный префикс содержит недопустимый символ.Неверный формат заданного префикса.Указан префикс "xml", а URI пространства имен данного узла отличается от "http://www.w3.org/XML/1998/namespace".Данный узел является атрибутом, указан префикс "xmlns", а URI пространства имен данного узла отличается от "http://www.w3.org/2000/xmlns".Данный узел является атрибутом, полное имя данного узла — "xmlns". </exception>
    </member>
    <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
      <summary>Добавляет указанный узел в начало списка дочерних узлов данного узла.</summary>
      <returns>Добавленный узел.</returns>
      <param name="newChild">Добавляемый узел.Все содержимое узла, которое должно быть добавлено, перемещается в указанное расположение.</param>
      <exception cref="T:System.InvalidOperationException">Этот узел имеет тип, не разрешающий дочерние узлы типа узла <paramref name="newChild" />.<paramref name="newChild" /> является предком данного узла. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> был создан из документа, отличающегося от того, который создал данный узел.Данный узел доступен только для чтения. </exception>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousSibling">
      <summary>Возвращает узел, непосредственно предшествующий данному узлу.</summary>
      <returns>Предшествующий XmlNode.Если предшествующий узел отсутствует, возвращается значение null.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveAll">
      <summary>Удаляет все дочерние узлы и (или) атрибуты текущего узла.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
      <summary>Удаляет указанный дочерний узел.</summary>
      <returns>Удаленный узел.</returns>
      <param name="oldChild">Удаленный узел. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldChild" /> не является дочерним элементом этого узла.Или данный узел доступен только для чтения.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Заменяет дочерний узел <paramref name="oldChild" /> на узел <paramref name="newChild" />.</summary>
      <returns>Замененный узел.</returns>
      <param name="newChild">Новый узел для помещения в список дочерних элементов. </param>
      <param name="oldChild">Замененный узел в списке. </param>
      <exception cref="T:System.InvalidOperationException">Этот узел имеет тип, не разрешающий дочерние узлы типа узла <paramref name="newChild" />.<paramref name="newChild" /> является предком данного узла. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> был создан из документа, отличающегося от того, который создал данный узел.Данный узел доступен только для чтения.<paramref name="oldChild" /> не является дочерним элементом этого узла. </exception>
    </member>
    <member name="P:System.Xml.XmlNode.SchemaInfo">
      <summary>Получает набор сведений после проверки схемы, который был назначен для этого узла в результате проверки схемы.</summary>
      <returns> Объект <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />, содержащий набор сведений после проверки схемы для этого узла.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
      <summary>Выбирает список узлов, в соответствии с выражением XPath.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNodeList" />, содержащий коллекцию узлов, соответствующих запросу XPath.XmlNodeList не должно фактически подключаться к документу XML.То есть изменения, которые были внесены в документ XML, могут не отображаться в XmlNodeList и наоборот.</returns>
      <param name="xpath">Выражение XPath. </param>
      <exception cref="T:System.Xml.XPath.XPathException">Выражение XPath, содержащее префикс. </exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Выбирает список узлов, в соответствии с выражением XPath.Префиксы, найденные в выражении XPath, разрешаются с помощью предоставленного <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNodeList" />, содержащий коллекцию узлов, соответствующих запросу XPath.XmlNodeList не должно фактически подключаться к документу XML.То есть изменения, которые были внесены в документ XML, могут не отображаться в XmlNodeList и наоборот.</returns>
      <param name="xpath">Выражение XPath. </param>
      <param name="nsmgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> служит для разрешения пространств имен для префиксов в выражении XPath. </param>
      <exception cref="T:System.Xml.XPath.XPathException">Выражение XPath содержит префикс, который не определен в XmlNamespaceManager. </exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
      <summary>Выделяет первый объект XmlNode, соответствующий выражению XPath.</summary>
      <returns>Первый объект XmlNode, соответствующий запросу XPath, или значение null, если соответствующий узел не найден.XmlNode не должно фактически подключаться к документу XML.То есть изменения, которые были внесены в документ XML, могут не отображаться в XmlNode и наоборот.</returns>
      <param name="xpath">Выражение XPath. </param>
      <exception cref="T:System.Xml.XPath.XPathException">Выражение XPath, содержащее префикс. </exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Выделяет первый объект XmlNode, соответствующий выражению XPath.Префиксы, найденные в выражении XPath, разрешаются с помощью предоставленного <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>Первый объект XmlNode, соответствующий запросу XPath, или значение null, если соответствующий узел не найден.XmlNode не должно фактически подключаться к документу XML.То есть изменения, которые были внесены в документ XML, могут не отображаться в XmlNode и наоборот.</returns>
      <param name="xpath">Выражение XPath. </param>
      <param name="nsmgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> служит для разрешения пространств имен для префиксов в выражении XPath. </param>
      <exception cref="T:System.Xml.XPath.XPathException">Выражение XPath содержит префикс, который не определен в XmlNamespaceManager. </exception>
    </member>
    <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
      <summary>Проверяет, присутствует ли определенное средство в реализации DOM.</summary>
      <returns>Значение true, если в указанной версии средство реализовано; в противном случае — false.В следующей таблице перечислены сочетания, возвращающие значение true.Функция Version XML 1.0 XML 2.0 </returns>
      <param name="feature">Имя пакета проверяемого средства.Это имя не учитывает регистр.</param>
      <param name="version">Это номер версии проверяемого имени пакета.Если версия не указана (null), поддержка любой версии средства заставляет метод возвращать значение True.</param>
    </member>
    <member name="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</summary>
      <returns>Возвращает перечислитель для коллекции.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#ICloneable#Clone">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.XmlNode.Clone" />.</summary>
      <returns>Возвращает копию узла, из которого он вызван.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Value">
      <summary>Возвращает или задает значение узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlNode.NodeType" /> узла. Тип Значение Attribute Значение атрибута. CDATASection Содержимое раздела CDATA. Comment Содержимое комментария. Document null. DocumentFragment null. DocumentType null. Элемент null.Для доступа к значению узла элемента можно использовать свойство <see cref="P:System.Xml.XmlElement.InnerText" /> или <see cref="P:System.Xml.XmlElement.InnerXml" />.Entity null. EntityReference null. Notation null. ProcessingInstruction Все содержимое, исключая назначение. Text Содержимое текстового узла. SignificantWhitespace Знаки пустого пространства.Пустое пространство может содержать один или более знаков пробела, возвратов каретки, переводов строки или знаков табуляции.Whitespace Знаки пустого пространства.Пустое пространство может содержать один или более знаков пробела, возвратов каретки, переводов строки или знаков табуляции.XmlDeclaration Содержимое объявления (между &lt;?xml и ?&gt;). </returns>
      <exception cref="T:System.ArgumentException">Установка значения узла, доступного только для чтения. </exception>
      <exception cref="T:System.InvalidOperationException">Установка значения узла, который не должен иметь значения (например, узла элемента). </exception>
    </member>
    <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
      <summary>При переопределении в производном классе сохраняет все дочерние узлы данного узла в указанном классе <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">XmlWriter, в котором необходимо выполнить сохранение. </param>
    </member>
    <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
      <summary>При переопределении в производном классе сохраняет текущий узел в указанном <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">XmlWriter, в котором необходимо выполнить сохранение. </param>
    </member>
    <member name="T:System.Xml.XmlNodeChangedAction">
      <summary>Specifies the type of node change.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Insert">
      <summary>A node is being inserted in the tree.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Remove">
      <summary>A node is being removed from the tree.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Change">
      <summary>A node value is being changed.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> and <see cref="E:System.Xml.XmlDocument.NodeRemoving" /> events.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlNodeChangedEventArgs" /> class.</summary>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, создавший событие.</param>
      <param name="oldParent">The old parent <see cref="T:System.Xml.XmlNode" /> of the <see cref="T:System.Xml.XmlNode" /> that generated the event.</param>
      <param name="newParent">The new parent <see cref="T:System.Xml.XmlNode" /> of the <see cref="T:System.Xml.XmlNode" /> that generated the event.</param>
      <param name="oldValue">The old value of the <see cref="T:System.Xml.XmlNode" /> that generated the event.</param>
      <param name="newValue">The new value of the <see cref="T:System.Xml.XmlNode" /> that generated the event.</param>
      <param name="action">The <see cref="T:System.Xml.XmlNodeChangedAction" />.</param>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Action">
      <summary>Gets a value indicating what type of node change event is occurring.</summary>
      <returns>An XmlNodeChangedAction value describing the node change event.XmlNodeChangedAction Value Description Insert A node has been or will be inserted. Remove A node has been or will be removed. Change A node has been or will be changed. ПримечаниеThe Action value does not differentiate between when the event occurred (before or after).You can create separate event handlers to handle both instances.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewParent">
      <summary>Gets the value of the <see cref="P:System.Xml.XmlNode.ParentNode" /> after the operation completes.</summary>
      <returns>The value of the ParentNode after the operation completes.This property returns null if the node is being removed.ПримечаниеFor attribute nodes this property returns the <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewValue">
      <summary>Gets the new value of the node.</summary>
      <returns>Новое значение узла.This property returns null if the node is neither an attribute nor a text node, or if the node is being removed.If called in a <see cref="E:System.Xml.XmlDocument.NodeChanging" /> event, NewValue returns the value of the node if the change is successful.If called in a <see cref="E:System.Xml.XmlDocument.NodeChanged" /> event, NewValue returns the current value of the node.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Node">
      <summary>Gets the <see cref="T:System.Xml.XmlNode" /> that is being added, removed or changed.</summary>
      <returns>The XmlNode that is being added, removed or changed; this property never returns null.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldParent">
      <summary>Gets the value of the <see cref="P:System.Xml.XmlNode.ParentNode" /> before the operation began.</summary>
      <returns>The value of the ParentNode before the operation began.This property returns null if the node did not have a parent.ПримечаниеFor attribute nodes this property returns the <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldValue">
      <summary>Gets the original value of the node.</summary>
      <returns>The original value of the node.This property returns null if the node is neither an attribute nor a text node, or if the node is being inserted.If called in a <see cref="E:System.Xml.XmlDocument.NodeChanging" /> event, OldValue returns the current value of the node that will be replaced if the change is successful.If called in a <see cref="E:System.Xml.XmlDocument.NodeChanged" /> event, OldValue returns the value of node prior to the change.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventHandler">
      <summary>Represents the method that handles <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> and <see cref="E:System.Xml.XmlDocument.NodeRemoving" /> events.</summary>
      <param name="sender">Источник события. </param>
      <param name="e">An <see cref="T:System.Xml.XmlNodeChangedEventArgs" /> containing the event data. </param>
    </member>
    <member name="T:System.Xml.XmlNodeList">
      <summary>Represents an ordered collection of nodes.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlNodeList" /> class.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeList.Count">
      <summary>Gets the number of nodes in the XmlNodeList.</summary>
      <returns>The number of nodes.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.GetEnumerator">
      <summary>Provides a simple "foreach" style iteration over the collection of nodes in the XmlNodeList.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
      <summary>Retrieves a node at the given index.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> in the collection.If <paramref name="index" /> is greater than or equal to the number of nodes in the list, this returns null.</returns>
      <param name="index">Zero-based index into the list of nodes. </param>
    </member>
    <member name="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
      <summary>Retrieves a node at the given index.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> in the collection.If index is greater than or equal to the number of nodes in the list, this returns null.</returns>
      <param name="i">Zero-based index into the list of nodes. </param>
    </member>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary>Describes the document order of a node compared to a second node.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary>The current node of this navigator is before the current node of the supplied navigator.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary>The current node of this navigator is after the current node of the supplied navigator.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary>The two navigators are positioned on the same node.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary>The node positions cannot be determined in document order, relative to each other.Это может произойти, если два узла находятся в различных деревьях.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeReader">
      <summary>Предоставляет средство чтения, обеспечивающее быстрый прямой доступ (без кэширования) к данным XML в классе <see cref="T:System.Xml.XmlNode" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
      <summary>Инициализирует новый экземпляр класса XmlNodeReader с помощью указанного класса <see cref="T:System.Xml.XmlNode" />.</summary>
      <param name="node">Класс XmlNode, который требуется считать. </param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.AttributeCount">
      <summary>Возвращает число атрибутов текущего узла.</summary>
      <returns>Число атрибутов текущего узла.В это число включены атрибуты, используемые по умолчанию.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.BaseURI">
      <summary>Возвращает базовый URI текущего узла.</summary>
      <returns>Базовый URI текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
      <summary>Возвращает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlNodeReader" /> методы чтения двоичного содержимого.</summary>
      <returns>Значение true, если реализуются методы чтения двоичного содержимого; в противном случае — false.Для класса <see cref="T:System.Xml.XmlNodeReader" /> оно возвращает значение true.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanResolveEntity">
      <summary>Возвращает значение, определяющее возможность анализа и разрешения объектов с помощью данного средства чтения.</summary>
      <returns>Значение true, если средство чтения позволяет анализировать и разрешать объекты; в противном случае — false.XmlNodeReader всегда возвращает значение true.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Close">
      <summary>Изменяет значение свойства <see cref="P:System.Xml.XmlNodeReader.ReadState" /> на Closed.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Depth">
      <summary>Возвращает глубину текущего узла в XML-документе.</summary>
      <returns>Глубина текущего узла в XML-документе.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.EOF">
      <summary>Возвращает значение, определяющее, установлено ли средство чтения в конец потока.</summary>
      <returns>Значение true, если средство чтения установлено в конец потока; в противном случае — false.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
      <summary>Возвращает значение атрибута с заданным индексом.</summary>
      <returns>Значение указанного атрибута.</returns>
      <param name="attributeIndex">Индекс атрибута.Индексация начинается с нуля.(Индекс первого атрибута равен нулю).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше или равен 0 или больше или равен <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />. </exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
      <summary>Возвращает значение атрибута с указанным именем.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден, возвращается значение null.</returns>
      <param name="name">Проверенное имя атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
      <summary>Получает значение атрибута с заданным локальным именем и URI пространства имен.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден, возвращается значение null.</returns>
      <param name="name">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasAttributes">
      <summary>Получает значение, указывающее, имеются ли у текущего узла какие-либо атрибуты.</summary>
      <returns>Значение true, если текущий узел содержит атрибуты; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasValue">
      <summary>Возвращает значение, определяющие наличие свойства <see cref="P:System.Xml.XmlNodeReader.Value" /> у текущего узла.</summary>
      <returns>Значение true, если узел, на котором расположено средство чтения, может иметь значение Value; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsDefault">
      <summary>Возвращает значение, определяющее, является ли текущий узел атрибутом, созданным из значения по умолчанию, определенного в DTD или схеме.</summary>
      <returns>Значение true, если текущий узел является атрибутом, значение которого было создано из значения по умолчанию, определенного в DTD или схеме; значение false, если значение атрибута было задано явно.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsEmptyElement">
      <summary>Возвращает значение, определяющее является ли текущий узел пустым элементом (например, &lt;MyElement/&gt;).</summary>
      <returns>Значение true, если текущий узел является элементом (свойство <see cref="P:System.Xml.XmlNodeReader.NodeType" /> имеет значение XmlNodeType.Element) и заканчивается на /&gt;; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.LocalName">
      <summary>Получает локальное имя текущего узла.</summary>
      <returns>Имя текущего узла с удаленным префиксом.Например, LocalName имеет значение book для элемента &lt;bk:book&gt;.Для безымянных типов узлов (например, Text, Comment и т. д.) данное свойство возвращает String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
      <summary>Разрешает префикс пространства имен в ограниченной области действия текущего элемента.</summary>
      <returns>URI пространства имен, которое отображает префикс, или значение null, если соответствующий префикс не найден.</returns>
      <param name="prefix">Префикс, для которого требуется обработать URI пространства имен.Чтобы сопоставить пространство имен по умолчанию, необходимо передать пустую строку.Эту строку не следует разделять.</param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
      <summary>Перемещает к атрибуту с указанным индексом.</summary>
      <param name="attributeIndex">Индекс атрибута. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше или равен 0 или больше или равен <see cref="P:System.Xml.XmlReader.AttributeCount" />. </exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
      <summary>Перемещает к атрибуту с указанным именем.</summary>
      <returns>Значение true, если атрибут найден; в противном случае — false.Если значение false, позиция средства чтения не изменяется.</returns>
      <param name="name">Проверенное имя атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
      <summary>Перемещает к атрибуту с указанным локальным именем и URI пространства имен.</summary>
      <returns>Значение true, если атрибут найден; в противном случае — false.Если значение false, позиция средства чтения не изменяется.</returns>
      <param name="name">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToElement">
      <summary>Перемещает к элементу, содержащему текущий узел атрибута.</summary>
      <returns>Значение true, если средство чтения находится на атрибуте (средство чтения перемещается к элементу с этим атрибутом); в противном случае — false (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
      <summary>Перемещается к первому атрибуту.</summary>
      <returns>Значение true, если атрибут существует (средство чтения перемещается к первому атрибуту); в противном случае — false (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
      <summary>Перемещается к следующему атрибуту.</summary>
      <returns>Значение true, если присутствует следующий атрибут; значение false, если другие атрибуты отсутствуют.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Name">
      <summary>Возвращает проверенное имя текущего узла.</summary>
      <returns>Проверенное имя текущего узла.Например, Name имеет значение bk:book для элемента &lt;bk:book&gt;.Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlNodeReader.NodeType" /> узла.Следующие типы узлов возвращают представленные значения.Другие типы узлов возвращают пустую строку.Тип узла Имя AttributeИмя атрибута. DocumentTypeИмя типа документа. ElementИмя тега. EntityReferenceИмя сущности, на которую существует ссылка. ProcessingInstructionКонечное приложение инструкции обработки. XmlDeclarationСтрока символов xml. </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
      <summary>Возвращает URI пространства имен (определенное в спецификации W3C Namespace) узла, на котором расположено средство чтения.</summary>
      <returns>URI пространства имен текущего узла; в противном случае — пустая строка.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NameTable">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
      <returns>Класс XmlNameTable, позволяющий получать в узле разделенную версию строки.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlNodeType" />, предоставляющее тип текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Prefix">
      <summary>Возвращает префикс пространства имен, связанный с текущим узлом.</summary>
      <returns>Префикс пространства имен, связанный с текущим узлом.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Read">
      <summary>Считывает следующий узел из потока.</summary>
      <returns>Значение true, если чтение прошло успешно; значение false, если отсутствуют узлы для чтения.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadAttributeValue">
      <summary>Разбирает значение атрибута в один или несколько узлов Text, EntityReference или EndEntity.</summary>
      <returns>Значение true, если присутствуют возвращаемые узлы.Значение false, если средство чтения не расположено на узле атрибута при первом вызове или все значения атрибута считаны.Пустой атрибут (например, misc="") возвращает значение true с отдельным узлом, имеющим значение String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и раскодирует содержимое Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом Element.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Невозможно преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и раскодирует содержимое BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом Element.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Невозможно преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.ReadState">
      <summary>Возвращает состояние средства чтения.</summary>
      <returns>Одно из значений объекта <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadString">
      <summary>Считывает содержимое элемента или текстового узла в виде строки.</summary>
      <returns>Содержимое элемента или текстового узла, который может включать узлы CDATA, Text и т. д.Если средство чтения находится не на узле элемента или текстовом узле, а также если отсутствует возвращаемый текст, это может быть пустая строка.Ïðèìå÷àíèå. Текстовым узлом может быть текстовый узел элемента или текстовый узел атрибута.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ResolveEntity">
      <summary>Разрешает ссылки на сущности для узлов EntityReference.</summary>
      <exception cref="T:System.InvalidOperationException">Средство чтения не расположено на узле EntityReference. </exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.SchemaInfo">
      <summary>Получает сведения схемы, которые были назначены для текущего узла.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> содержит сведения схемы для текущего узла.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Skip">
      <summary>Пропускает дочерний узел текущего узла.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IDictionary" />, который содержит находящиеся в области видимости пространства имен.</returns>
      <param name="scope">Объект <see cref="T:System.Xml.XmlNamespaceScope" />.</param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая имя пространства имен.</returns>
      <param name="prefix">Строка <see cref="T:System.String" />, содержащая префикс пространства имен.</param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий префикс пространства имен.</returns>
      <param name="namespaceName">Объект <see cref="T:System.String" />, определяющий пространство имен.</param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Value">
      <summary>Возвращает текстовое значение текущего узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlNodeReader.NodeType" /> узла.В следующей таблице представлен список возвращаемых типов узлов со значениями.Другие типы узлов возвращают String.Empty.Тип узла Значение AttributeЗначение атрибута. CDATAСодержимое раздела CDATA. CommentСодержимое комментария. DocumentTypeВнутреннее подмножество. ProcessingInstructionПолное содержимое, исключая конечное приложение. SignificantWhitespaceПустое пространство в разметке модели со смешанным содержимым. TextСодержимое текстового узла. WhitespaceПустое пространство между разметкой. XmlDeclarationСодержимое объявления. </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlLang">
      <summary>Возвращает текущую ограниченную область действия xml:lang.</summary>
      <returns>Текущая ограниченная область действия xml:lang.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlSpace">
      <summary>Возвращает текущую ограниченную область действия xml:space.</summary>
      <returns>Одно из значений объекта <see cref="T:System.Xml.XmlSpace" />.Если ограниченная область действия xml:space отсутствует, данное свойство принимает значение XmlSpace.None.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary>Specifies the type of node.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary>This is returned by the <see cref="T:System.Xml.XmlReader" /> if a Read method has not been called.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary>An element (for example, &lt;item&gt; ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary>An attribute (for example, id='123' ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary>Текстовое содержимое узла.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary>A CDATA section (for example, &lt;![CDATA[my escaped text]]&gt; ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary>A reference to an entity (for example, &amp;num; ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary>An entity declaration (for example, &lt;!ENTITY...&gt; ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary>A processing instruction (for example, &lt;?pi test?&gt; ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary>A comment (for example, &lt;!-- my comment --&gt; ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary>A document object that, as the root of the document tree, provides access to the entire XML document.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary>The document type declaration, indicated by the following tag (for example, &lt;!DOCTYPE...&gt; ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary>A document fragment.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary>A notation in the document type declaration (for example, &lt;!NOTATION...&gt; ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary>White space between markup.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary>White space between markup in a mixed content model or white space within the xml:space="preserve" scope.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary>An end element tag (for example, &lt;/item&gt; ).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary>Returned when XmlReader gets to the end of the entity replacement as a result of a call to <see cref="M:System.Xml.XmlReader.ResolveEntity" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary>The XML declaration (for example, &lt;?xml version='1.0'?&gt; ).</summary>
    </member>
    <member name="T:System.Xml.XmlNotation">
      <summary>Предоставляет объявление представления, например &lt;!NOTATION ...&gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlNotation.CloneNode(System.Boolean)">
      <summary>Создает дубликат этого узла.Невозможно создать точную копию узлов представлений.При вызове этого метода для объекта <see cref="T:System.Xml.XmlNotation" /> создается исключение.</summary>
      <returns>Возвращает копию узла <see cref="T:System.Xml.XmlNode" />, из которого вызывается метод.</returns>
      <param name="deep">Значение true для рекурсивного создания точной копии поддерева указанного узла; false только для создания точной копии самого узла.</param>
      <exception cref="T:System.InvalidOperationException">Невозможно создать точную копию узлов представлений.При вызове этого метода для объекта <see cref="T:System.Xml.XmlNotation" /> создается исключение.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.InnerXml">
      <summary>Возвращает разметку, отражающую дочерние узлы данного узла.</summary>
      <returns>Для узлов XmlNotation возвращается String.Empty.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка задания значения свойства. </exception>
    </member>
    <member name="P:System.Xml.XmlNotation.IsReadOnly">
      <summary>Возвращает значение, определяющее, доступен ли узел только для чтения.</summary>
      <returns>Значение true, если узел доступен только для чтения; в противном случае — false.Поскольку узлы XmlNotation доступны только для чтения, это свойство всегда возвращает значение true.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.LocalName">
      <summary>Возвращает имя текущего узла без префикса пространства имен.</summary>
      <returns>Для узлов XmlNotation это свойство возвращает имя представления.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.Name">
      <summary>Возвращает имя текущего узла.</summary>
      <returns>Имя представления.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Тип узла.Для узлов XmlNotation значение равно XmlNodeType.Notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.OuterXml">
      <summary>Возвращает разметку, представляющую данный узел и все его дочерние узлы.</summary>
      <returns>Для узлов XmlNotation возвращается String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.PublicId">
      <summary>Возвращает значение открытого идентификатора для объявления представления.</summary>
      <returns>Общий идентификатор для представления.Если общий идентификатор отсутствует, возвращается значение null.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.SystemId">
      <summary>Возвращает значение идентификатора системы для объявления представления.</summary>
      <returns>Идентификатор системы для представления.Если идентификатор системы отсутствует, возвращается значение null.</returns>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Сохраняет дочерний узел этого узла в заданном классе <see cref="T:System.Xml.XmlWriter" />.Этот метод не влияет на узлы XmlNotation.</summary>
      <param name="w">XmlWriter, в котором необходимо выполнить сохранение. </param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
      <summary>Сохраняет узел в заданном <see cref="T:System.Xml.XmlWriter" />.Этот метод не влияет на узлы XmlNotation.</summary>
      <param name="w">XmlWriter, в котором необходимо выполнить сохранение. </param>
    </member>
    <member name="T:System.Xml.XmlOutputMethod">
      <summary>Specifies the method used to serialize the <see cref="T:System.Xml.XmlWriter" /> output. </summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Xml">
      <summary>Serialize according to the XML 1.0 rules.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Html">
      <summary>Serialize according to the HTML rules specified by XSLT.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Text">
      <summary>Serialize text blocks only.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.AutoDetect">
      <summary>Use the XSLT rules to choose between the <see cref="F:System.Xml.XmlOutputMethod.Xml" /> and <see cref="F:System.Xml.XmlOutputMethod.Html" /> output methods at runtime.</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary>Предоставляет все контекстные данные, необходимые <see cref="T:System.Xml.XmlReader" /> для анализа фрагмента XML.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary>Инициализирует новый экземпляр класса XmlParserContext с помощью указанных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, базового URI, xml:space, xml:lang и значений типов документов.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для разъединения строк.Если значение параметра равно null, вместо этого класса используется таблица имен, которая служит для создания <paramref name="nsMgr" />.Дополнительные сведения о разъединенных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение null. </param>
      <param name="docTypeName">Имя объявления типа документа. </param>
      <param name="pubId">Открытый идентификатор. </param>
      <param name="sysId">Идентификатор системы. </param>
      <param name="internalSubset">Внутренний набор DTD.Набор DTD используется для разрешения сущностей, но не для проверки документа.</param>
      <param name="baseURI">Базовый URI для фрагмента XML (размещение, из которого загружен фрагмент). </param>
      <param name="xmlLang">Область xml:lang. </param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, показывающее область xml:space. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> отличается от таблицы XmlNameTable, использованной для построения <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса XmlParserContext с помощью указанных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, базового URI, xml:space, xml:lang, кодировки и значений типов документов.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для разъединения строк.Если значение параметра равно null, вместо этого класса используется таблица имен, которая служит для создания <paramref name="nsMgr" />.Дополнительные сведения о разъединенных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение null. </param>
      <param name="docTypeName">Имя объявления типа документа. </param>
      <param name="pubId">Открытый идентификатор. </param>
      <param name="sysId">Идентификатор системы. </param>
      <param name="internalSubset">Внутренний набор DTD.DTD используется для разрешения сущностей, но не для проверки документа.</param>
      <param name="baseURI">Базовый URI для фрагмента XML (размещение, из которого загружен фрагмент). </param>
      <param name="xmlLang">Область xml:lang. </param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, показывающее область xml:space. </param>
      <param name="enc">Объект <see cref="T:System.Text.Encoding" />, показывающий параметр кодировки. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> отличается от таблицы XmlNameTable, использованной для построения <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary>Инициализирует новый экземпляр класса XmlParserContext с помощью заданных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, xml:lang и xml:space.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для разъединения строк.Если значение параметра равно null, вместо этого класса используется таблица имен, которая служит для создания <paramref name="nsMgr" />.Дополнительные сведения о разъединенных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение null. </param>
      <param name="xmlLang">Область xml:lang. </param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, показывающее область xml:space. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> отличается от таблицы XmlNameTable, использованной для построения <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Инициализирует новый экземпляр класса XmlParserContext с помощью указанных значений <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, xml:lang, xml:space и кодировки.</summary>
      <param name="nt">Класс <see cref="T:System.Xml.XmlNameTable" />, используемый для разъединения строк.Если значение параметра равно null, вместо этого класса используется таблица имен, которая служит для создания <paramref name="nsMgr" />.Дополнительные сведения о разъединенных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Класс <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для поиска сведений о пространстве имен, или значение null. </param>
      <param name="xmlLang">Область xml:lang. </param>
      <param name="xmlSpace">Значение <see cref="T:System.Xml.XmlSpace" />, показывающее область xml:space. </param>
      <param name="enc">Объект <see cref="T:System.Text.Encoding" />, показывающий параметр кодировки. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> отличается от таблицы XmlNameTable, использованной для построения <paramref name="nsMgr" />. </exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary>Получает или задает базовый URI.</summary>
      <returns>Базовый URI, используемый для разрешения файла DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary>Получает или задает имя объявления типа документа.</summary>
      <returns>Имя объявления типа документа.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary>Получает или задает тип кодировки.</summary>
      <returns>Объект <see cref="T:System.Text.Encoding" />, показывающий тип кодировки.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary>Получает или задает внутренний набор DTD.</summary>
      <returns>Внутренний набор DTD.Например, данное свойство возвращает содержимое между квадратными скобками &lt;!DOCTYPE doc [...]&gt;.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary>Возвращает или задает класс <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>Диспетчер XmlNamespaceManager.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary>Получает класс <see cref="T:System.Xml.XmlNameTable" />, используемый для разъединения строк.Дополнительные сведения о разъединенных строках см. в разделе <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <returns>Объект XmlNameTable.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary>Получает или задает открытый идентификатор.</summary>
      <returns>Открытый идентификатор.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary>Получает или задает идентификатор системы.</summary>
      <returns>Идентификатор системы.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary>Получает или задает текущую область xml:lang.</summary>
      <returns>Текущая ограниченная область действия xml:lang.Если в области отсутствует xml:lang, возвращается значение String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary>Получает или задает текущую область xml:space.</summary>
      <returns>Значение <see cref="T:System.Xml.XmlSpace" />, показывающее область xml:space.</returns>
    </member>
    <member name="T:System.Xml.XmlProcessingInstruction">
      <summary>Represents a processing instruction, which XML defines to keep processor-specific information in the text of the document.</summary>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlProcessingInstruction" /> class.</summary>
      <param name="target">The target of the processing instruction; see the <see cref="P:System.Xml.XmlProcessingInstruction.Target" /> property.</param>
      <param name="data">The content of the instruction; see the <see cref="P:System.Xml.XmlProcessingInstruction.Data" /> property.</param>
      <param name="doc">The parent XML document.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
      <summary>Creates a duplicate of this node.</summary>
      <returns>The duplicate node.</returns>
      <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Data">
      <summary>Gets or sets the content of the processing instruction, excluding the target.</summary>
      <returns>The content of the processing instruction, excluding the target.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.InnerText">
      <summary>Gets or sets the concatenated values of the node and all its children.</summary>
      <returns>The concatenated values of the node and all its children.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
      <summary>Gets the local name of the node.</summary>
      <returns>For processing instruction nodes, this property returns the target of the processing instruction.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Name">
      <summary>Gets the qualified name of the node.</summary>
      <returns>For processing instruction nodes, this property returns the target of the processing instruction.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.NodeType">
      <summary>Gets the type of the current node.</summary>
      <returns>For XmlProcessingInstruction nodes, this value is XmlNodeType.ProcessingInstruction.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Target">
      <summary>Gets the target of the processing instruction.</summary>
      <returns>Цель инструкции обработки.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Value">
      <summary>Gets or sets the value of the node.</summary>
      <returns>The entire content of the processing instruction, excluding the target.</returns>
      <exception cref="T:System.ArgumentException">Node is read-only. </exception>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.Because ProcessingInstruction nodes do not have children, this method has no effect.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary>Represents an XML qualified name.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlQualifiedName" /> class.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlQualifiedName" /> class with the specified name.</summary>
      <param name="name">The local name to use as the name of the <see cref="T:System.Xml.XmlQualifiedName" /> object. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlQualifiedName" /> class with the specified name and namespace.</summary>
      <param name="name">The local name to use as the name of the <see cref="T:System.Xml.XmlQualifiedName" /> object. </param>
      <param name="ns">The namespace for the <see cref="T:System.Xml.XmlQualifiedName" /> object. </param>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary>Provides an empty <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Xml.XmlQualifiedName" /> object is equal to the current <see cref="T:System.Xml.XmlQualifiedName" /> object. </summary>
      <returns>true if the two are the same instance object; otherwise, false.</returns>
      <param name="other">The <see cref="T:System.Xml.XmlQualifiedName" /> to compare. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Хэш-код объекта.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary>Gets a value indicating whether the <see cref="T:System.Xml.XmlQualifiedName" /> is empty.</summary>
      <returns>true if name and namespace are empty strings; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary>Gets a string representation of the qualified name of the <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>A string representation of the qualified name or String.Empty if a name is not defined for the object.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary>Gets a string representation of the namespace of the <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>A string representation of the namespace or String.Empty if a namespace is not defined for the object.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compares two <see cref="T:System.Xml.XmlQualifiedName" /> objects.</summary>
      <returns>true if the two objects have the same name and namespace values; otherwise, false.</returns>
      <param name="a">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения. </param>
      <param name="b">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compares two <see cref="T:System.Xml.XmlQualifiedName" /> objects.</summary>
      <returns>true if the name and namespace values for the two objects differ; otherwise, false.</returns>
      <param name="a">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения. </param>
      <param name="b">Объект <see cref="T:System.Xml.XmlQualifiedName" /> для сравнения. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary>Returns the string value of the <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>The string value of the <see cref="T:System.Xml.XmlQualifiedName" /> in the format of namespace:localname.If the object does not have a namespace defined, this method returns just the local name.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary>Returns the string value of the <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>The string value of the <see cref="T:System.Xml.XmlQualifiedName" /> in the format of namespace:localname.If the object does not have a namespace defined, this method returns just the local name.</returns>
      <param name="name">Имя объекта. </param>
      <param name="ns">The namespace of the object. </param>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary>Предоставляет средство чтения, обеспечивающее быстрый прямой доступ (без кэширования) к данным XML.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary>Инициализирует новый экземпляр класса XmlReader.</summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary>При переопределении в производном классе получает количество атрибутов текущего узла.</summary>
      <returns>Число атрибутов текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary>При переопределении в производном классе получает базовый URI текущего узла.</summary>
      <returns>Базовый URI текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary>Возвращает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlReader" /> методы чтения двоичного содержимого.</summary>
      <returns>Значение true, если реализуются методы чтения двоичного содержимого; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary>Возвращает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlReader" /> метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />. </summary>
      <returns>Значение true, если объект <see cref="T:System.Xml.XmlReader" /> реализует метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary>Возвращает значение, определяющее возможность анализа и разрешения объектов с помощью данного средства чтения.</summary>
      <returns>Значение true, если средство чтения позволяет анализировать и разрешать объекты; в противном случае — false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary>При переопределении в производном классе изменяет значение свойства <see cref="P:System.Xml.XmlReader.ReadState" /> на Closed.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного потока.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, используемый для считывания данных, содержащихся в потоке. </returns>
      <param name="input">Поток, содержащий данные XML. <see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки.После определения эта кодировка используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно null.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Xml.XmlReader" /> не обладает достаточными разрешениями для доступа к расположению XML-данных.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с указанным потоком и объектом <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">Поток, содержащий данные XML. <see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки.После определения эта кодировка используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlReader" /> .Это значение может быть равно null.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного потока, базового URI и объекта <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">Поток, содержащий данные XML. <see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки.После определения эта кодировка используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlReader" /> .Это значение может быть равно null.</param>
      <param name="baseUri">Базовый URI считываемой сущности или документа.Это значение может быть равно null.Примечание по безопасностиБазовый URI, используемый для разрешения относительного URI документа XML.Не используйте базовый URI из непроверенного источника.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанного потока, <see cref="T:System.Xml.XmlReaderSettings" /> и объектов <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">Поток, содержащий данные XML. <see cref="T:System.Xml.XmlReader" /> просматривает первые байты потока в поисках метки порядка следования байтов или другого признака кодировки.После определения эта кодировка используется в последующем считывании потока, а процедура обработки продолжает анализировать входные данные как поток символов Юникода.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlReader" /> .Это значение может быть равно null.</param>
      <param name="inputContext">Объект <see cref="T:System.Xml.XmlParserContext" /> предоставляет контекстную информацию, необходимую для анализа фрагмента XML.Контекстные сведения могут содержать используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущий xml:lang, область xml:space, базовый URI и DTD.Это значение может быть равно null.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с указанным <see cref="T:System.IO.TextReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" />, из которого следует считывать данные XML.Так как <see cref="T:System.IO.TextReader" /> возвращает поток символов Юникода, указанная в объявлении XML кодировка не используется <see cref="T:System.Xml.XmlReader" /> для раскодирования потока данных.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанных объектов <see cref="T:System.IO.TextReader" /> и <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" />, из которого следует считывать данные XML.Так как <see cref="T:System.IO.TextReader" /> возвращает поток символов Юникода, указанная в объявлении XML кодировка не используется <see cref="T:System.Xml.XmlReader" /> для раскодирования потока данных.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового объекта <see cref="T:System.Xml.XmlReader" /> .Это значение может быть равно null.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary>Создается новый экземпляр <see cref="T:System.Xml.XmlReader" /> с помощью указанного <see cref="T:System.IO.TextReader" />, <see cref="T:System.Xml.XmlReaderSettings" /> и базового URI.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" />, из которого следует считывать данные XML.Так как <see cref="T:System.IO.TextReader" /> возвращает поток символов Юникода, указанная в объявлении XML кодировка не используется <see cref="T:System.Xml.XmlReader" /> для раскодирования потока данных.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlReader" /> .Это значение может быть равно null.</param>
      <param name="baseUri">Базовый URI считываемой сущности или документа.Это значение может быть равно null.Примечание по безопасностиБазовый URI, используемый для разрешения относительного URI документа XML.Не используйте базовый URI из непроверенного источника.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с использованием указанных объектов <see cref="T:System.IO.TextReader" />, <see cref="T:System.Xml.XmlReaderSettings" /> и <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" />, из которого следует считывать данные XML.Так как <see cref="T:System.IO.TextReader" /> возвращает поток символов Юникода, указанная в объявлении XML кодировка не используется <see cref="T:System.Xml.XmlReader" /> для раскодирования потока данных.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlReader" /> .Это значение может быть равно null.</param>
      <param name="inputContext">Объект <see cref="T:System.Xml.XmlParserContext" /> предоставляет контекстную информацию, необходимую для анализа фрагмента XML.Контекстные сведения могут содержать используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущий xml:lang, область xml:space, базовый URI и DTD.Это значение может быть равно null.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="input" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Значения присвоены как свойству <see cref="P:System.Xml.XmlReaderSettings.NameTable" />, так и свойству <see cref="P:System.Xml.XmlParserContext.NameTable" />.(Только одно из этих свойств NameTable можно установить и использовать).</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с указанным URI.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML. </returns>
      <param name="inputUri">URI файла с XML-данными.Класс <see cref="T:System.Xml.XmlUrlResolver" /> используется для преобразования пути к классическому формату данных.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="inputUri" /> равно null.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Xml.XmlReader" /> не обладает достаточными разрешениями для доступа к расположению XML-данных.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, указанный параметром URI, не существует.</exception>
      <exception cref="T:System.UriFormatException">Формат параметра URI является неправильным.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary>Создает новый экземпляр с указанным URI и <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="inputUri">URI файла с XML-данными.Объект <see cref="T:System.Xml.XmlResolver" /> в объекте <see cref="T:System.Xml.XmlReaderSettings" /> используется для преобразования пути в стандартный формат данных.Если <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> равно null, используется объект <see cref="T:System.Xml.XmlUrlResolver" />.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlReader" /> .Это значение может быть равно null.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="inputUri" /> равно null.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл, заданный параметром URI.</exception>
      <exception cref="T:System.UriFormatException">Формат параметра URI является неправильным.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с помощью указанного URI, <see cref="T:System.Xml.XmlReaderSettings" /> и объектов <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" /> для считывания данных XML.</returns>
      <param name="inputUri">URI файла с XML-данными.Объект <see cref="T:System.Xml.XmlResolver" /> в объекте <see cref="T:System.Xml.XmlReaderSettings" /> используется для преобразования пути в стандартный формат данных.Если <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> равно null, используется объект <see cref="T:System.Xml.XmlUrlResolver" />.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlReader" /> .Это значение может быть равно null.</param>
      <param name="inputContext">Объект <see cref="T:System.Xml.XmlParserContext" /> предоставляет контекстную информацию, необходимую для анализа фрагмента XML.Контекстные сведения могут содержать используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущий xml:lang, область xml:space, базовый URI и DTD.Это значение может быть равно null.</param>
      <exception cref="T:System.ArgumentNullException">Значение inputUri равно null.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Xml.XmlReader" /> не обладает достаточными разрешениями для доступа к расположению XML-данных.</exception>
      <exception cref="T:System.ArgumentException">Значения присвоены как свойству <see cref="P:System.Xml.XmlReaderSettings.NameTable" />, так и свойству <see cref="P:System.Xml.XmlParserContext.NameTable" />.(Только одно из этих свойств NameTable можно установить и использовать).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти файл, заданный параметром URI.</exception>
      <exception cref="T:System.UriFormatException">Формат параметра URI является неправильным.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlReader" /> с указанными объектами <see cref="T:System.Xml.XmlReader" /> и <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Возвращает объект <see cref="T:System.Xml.XmlReader" />, являющийся оболочкой указанного объекта <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, который следует использовать в качестве базового средства чтения.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlReader" /> .Уровень соответствия объекта <see cref="T:System.Xml.XmlReaderSettings" /> должен или быть равным уровню соответствия базового средства чтения, или иметь значение <see cref="F:System.Xml.ConformanceLevel.Auto" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="reader" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Если объект <see cref="T:System.Xml.XmlReaderSettings" /> задает уровень соответствия, который не согласован с уровнем соответствия базового средства чтения.–либо–Базовый объект <see cref="T:System.Xml.XmlReader" /> находится в соответствии <see cref="F:System.Xml.ReadState.Error" /> или <see cref="F:System.Xml.ReadState.Closed" />.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary>При переопределении в производном классе получает глубину текущего узла в XML-документе.</summary>
      <returns>Глубина текущего узла в XML-документе.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Xml.XmlReader" />, а при необходимости освобождает также управляемые ресурсы. </summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary>При переопределении в производном классе получает значение, показывающее, установлено ли средство чтения в конец потока.</summary>
      <returns>Значение true, если средство чтения установлено в конец потока; в противном случае — false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary>При переопределении в производном классе получает значение атрибута по указанному индексу.</summary>
      <returns>Значение указанного атрибута.Этот метод не перемещает средство чтения.</returns>
      <param name="i">Индекс атрибута.Индексация начинается с нуля.(Индекс первого атрибута равен нулю).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> выходит за пределы допустимого диапазона.Оно должно быть неотрицательным и меньшим, чем размер коллекции атрибутов.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанным свойством <see cref="P:System.Xml.XmlReader.Name" />.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден или значение равно String.Empty, возвращается значение null.</returns>
      <param name="name">Проверенное имя атрибута. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанными свойствами <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден или значение равно String.Empty, возвращается значение null.Этот метод не перемещает средство чтения.</returns>
      <param name="name">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary>Получает значение, указывающее, имеются ли у текущего узла какие-либо атрибуты.</summary>
      <returns>Значение true, если текущий узел содержит атрибуты; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary>При переопределении в производном классе получает значение, показывающее, имеет ли текущий узел свойство <see cref="P:System.Xml.XmlReader.Value" />.</summary>
      <returns>Значение true, если узел, на котором расположено средство чтения, может иметь значение Value; в противном случае — false.Если значение равно false, узел принимает значение String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary>При переопределении в производном классе получает значение, определяющее, является текущий узел атрибутом, созданным из значения по умолчанию, определенного в DTD или схеме.</summary>
      <returns>Значение true, если текущий узел является атрибутом, значение которого было создано из значения по умолчанию, определенного в DTD или схеме; значение false, если значение атрибута было задано явно.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary>При переопределении в производном классе получает значение, определяющее, является ли текущий узел пустым элементом (например, &lt;MyElement/&gt;).</summary>
      <returns>Значение true, если текущий узел является элементом (свойство <see cref="P:System.Xml.XmlReader.NodeType" /> имеет значение XmlNodeType.Element), который заканчивается на /&gt;; в противном случае — false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary>Возвращает значение, определяющее, является ли строковый аргумент допустимым именем XML.</summary>
      <returns>Значение true, если имя является допустимым; в противном случае — false.</returns>
      <param name="str">Имя для проверки. </param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="str" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary>Возвращает значение, определяющее, является ли строковый аргумент допустимой лексемой имени XML.</summary>
      <returns>Значение true, если аргумент является допустимой лексемой имени; в противном случае — false.</returns>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="str" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary>Вызывает метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента.</summary>
      <returns>Значение true, если метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> находит открывающий тег или пустой тег элемента; значение false, если тип найденного узла отличается от XmlNodeType.Element.</returns>
      <exception cref="T:System.Xml.XmlException">В входном потоке обнаружен неправильный XML-код. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary>Вызывает метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента, а также соответствует ли значение свойства <see cref="P:System.Xml.XmlReader.Name" /> элемента заданному аргументу.</summary>
      <returns>Значение true, если полученный в результате узел является элементом, а свойство Name совпадает с указанной строкой.Значение false, если обнаружен узел с типом, отличным от XmlNodeType.Element, или если свойство Name элемента не совпадает с указанной строкой.</returns>
      <param name="name">Строка противопоставляется значению свойства Name найденного элемента. </param>
      <exception cref="T:System.Xml.XmlException">В входном потоке обнаружен неправильный XML-код. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary>Вызывает метод <see cref="M:System.Xml.XmlReader.MoveToContent" /> и проверяет, является ли текущий узел содержимого открывающим тегом или пустым тегом элемента, а также соответствуют ли значения свойств <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> элемента заданным строкам.</summary>
      <returns>Значение true, если полученный в результате узел является элементом.Значение false, если обнаружен узел с типом, отличным от XmlNodeType.Element, или если свойства LocalName и NamespaceURI элемента не совпадают с указанными строками.</returns>
      <param name="localname">Строка, которая противопоставляется значению свойства LocalName найденного элемента. </param>
      <param name="ns">Строка, которая противопоставляется значению свойства NamespaceURI найденного элемента. </param>
      <exception cref="T:System.Xml.XmlException">В входном потоке обнаружен неправильный XML-код. </exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary>При переопределении в производном классе получает значение атрибута по указанному индексу.</summary>
      <returns>Значение указанного атрибута.</returns>
      <param name="i">Индекс атрибута. </param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанным свойством <see cref="P:System.Xml.XmlReader.Name" />.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден, возвращается значение null.</returns>
      <param name="name">Проверенное имя атрибута. </param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary>При переопределении в производном классе получает значение атрибута с указанными свойствами <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден, возвращается значение null.</returns>
      <param name="name">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary>При переопределении в производном классе получает локальное имя текущего узла.</summary>
      <returns>Имя текущего узла с удаленным префиксом.Например, LocalName имеет значение book для элемента &lt;bk:book&gt;.Для безымянных типов узлов (например, Text, Comment и т. д.) данное свойство возвращает String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary>При переопределении в производном классе разрешает префикс пространства имен в ограниченной области действия текущего элемента.</summary>
      <returns>URI пространства имен, которое отображает префикс, или значение null, если соответствующий префикс не найден.</returns>
      <param name="prefix">Префикс, для которого требуется обработать URI пространства имен.Чтобы сопоставить пространство имен по умолчанию, необходимо передать пустую строку.</param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary>При переопределении в производном классе перемещает к атрибуту с указанным индексом.</summary>
      <param name="i">Индекс атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary>При переопределении в производном классе перемещает к атрибуту с указанным <see cref="P:System.Xml.XmlReader.Name" />.</summary>
      <returns>Значение true, если атрибут найден; в противном случае — false.Если значение false, позиция средства чтения не изменяется.</returns>
      <param name="name">Проверенное имя атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary>При переопределении в производном классе перемещает к атрибуту с указанными <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</summary>
      <returns>Значение true, если атрибут найден; в противном случае — false.Если значение false, позиция средства чтения не изменяется.</returns>
      <param name="name">Локальное имя атрибута. </param>
      <param name="ns">URI пространства имен атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary>Проверяет, является ли текущий узел узлом содержимого (текст без пустого пространства, CDATA, Element, EndElement, EntityReference или EndEntity).Если узел не является узлом содержимого, средство чтения пропускает этот узел и переходит в конец файла или к следующему узлу содержимого.Пропускаются узлы следующих типов: ProcessingInstruction, DocumentType, Comment, Whitespace и SignificantWhitespace.</summary>
      <returns>Значение <see cref="P:System.Xml.XmlReader.NodeType" /> для текущего узла, найденного с помощью метода, или значение XmlNodeType.None, если средство чтения достигло конца потока входных данных.</returns>
      <exception cref="T:System.Xml.XmlException">В входном потоке обнаружен неправильный XML-код. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary>При переопределении в производном классе перемещает к элементу, содержащему текущий узел атрибута.</summary>
      <returns>Значение true, если средство чтения находится на атрибуте (средство чтения перемещается к элементу с этим атрибутом); в противном случае — false (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary>При переопределении в производном классе перемещает к первому атрибуту.</summary>
      <returns>Значение true, если атрибут существует (средство чтения перемещается к первому атрибуту); в противном случае — false (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary>При переопределении в производном классе перемещает к следующему атрибуту.</summary>
      <returns>Значение true, если присутствует следующий атрибут; значение false, если другие атрибуты отсутствуют.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary>При переопределении в производном классе получает проверенное имя текущего узла.</summary>
      <returns>Проверенное имя текущего узла.Например, Name имеет значение bk:book для элемента &lt;bk:book&gt;.Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlReader.NodeType" /> узла.Следующие типы узлов возвращают представленные значения.Другие типы узлов возвращают пустую строку.Тип узла Имя AttributeИмя атрибута. DocumentTypeИмя типа документа. ElementИмя тега. EntityReferenceИмя сущности, на которую существует ссылка. ProcessingInstructionКонечное приложение инструкции обработки. XmlDeclarationСтрока символов xml. </returns>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary>При переопределении в производном классе получает URI пространства имен (определенное в спецификации W3C Namespace) узла, на котором расположено средство чтения.</summary>
      <returns>URI пространства имен текущего узла; в противном случае — пустая строка.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary>При переопределении в производном классе получает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
      <returns>Класс XmlNameTable, позволяющий получать в узле разделенную версию строки.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary>При переопределении в производном классе получает тип текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlNodeType" />, предоставляющее тип текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary>При переопределении в производном классе получает префикс пространства имен, связанный с текущим узлом.</summary>
      <returns>Префикс пространства имен, связанный с текущим узлом.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.QuoteChar">
      <summary>При переопределении в производном классе получает знак кавычек для выделения значения узла атрибута.</summary>
      <returns>Знак кавычек (" или ') для выделения значения узла атрибута.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary>При переопределении в производном классе считывает из потока следующий узел.</summary>
      <returns>Значение true, если чтение прошло успешно; значение false, если отсутствуют узлы для чтения.</returns>
      <exception cref="T:System.Xml.XmlException">При синтаксическом анализе XML возникла ошибка. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary>При переопределении в производном классе разбирает значение атрибута в один или более узлов Text, EntityReference или EndEntity.</summary>
      <returns>Значение true, если присутствуют возвращаемые узлы.Значение false, если средство чтения не расположено на узле атрибута при первом вызове или все значения атрибута считаны.Пустой атрибут (например, misc="") возвращает значение true с отдельным узлом, имеющим значение String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Прочитывает содержимое объекта указанного типа.</summary>
      <returns>Объединенное текстовое содержимое или значение атрибута, преобразованное в требуемый тип.</returns>
      <param name="returnType">Тип возвращаемого значения.ПримечаниеС выпуском платформы .NET Framework 3.5 значение параметра <paramref name="returnType" /> может быть типа <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.Например, этот объект можно использовать при преобразовании объекта <see cref="T:System.Xml.XmlQualifiedName" /> в xs:string.Это значение может быть равно null.</param>
      <exception cref="T:System.FormatException">Содержимое имеет неверный формат для конечного типа.</exception>
      <exception cref="T:System.InvalidCastException">Попытка приведения недопустима.</exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="returnType" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не принадлежит к поддерживаемому типу узлов.Дополнительные сведения приведены в таблице ниже.</exception>
      <exception cref="T:System.OverflowException">Чтение Decimal.MaxValue.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary>Считывает содержимое текста в текущей позиции как значение Boolean.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary>Считывает содержимое текста в текущей позиции как объект <see cref="T:System.DateTime" />.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary>Считывает содержимое текста в текущей позиции как объект <see cref="T:System.Decimal" />.</summary>
      <returns>Содержимое текста в текущей позиции как объект <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary>Считывает содержимое текста в текущей позиции как число с плавающей запятой двойной точности.</summary>
      <returns>Текстовое содержимое в виде числа с плавающей запятой двойной точности.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary>Считывает содержимое текста в текущей позиции как число с плавающей запятой одинарной точности.</summary>
      <returns>Содержимое текста в текущей позиции как число с плавающей запятой одинарной точности.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary>Считывает содержимое текста в текущей позиции как целое 32-разрядное число со знаком.</summary>
      <returns>Содержимое как целое 32-разрядное число со знаком.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary>Считывает содержимое текста в текущей позиции как целое 64-разрядное число со знаком.</summary>
      <returns>Содержимое как целое 64-разрядное число со знаком.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary>Считывает содержимое текста в текущей позиции как значение <see cref="T:System.Object" />.</summary>
      <returns>Текстовое содержимое является самым подходящим объектом CLR.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary>Считывает содержимое текста в текущей позиции как объект <see cref="T:System.String" />.</summary>
      <returns>Текстовое содержимое в виде объекта <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidCastException">Попытка приведения недопустима.</exception>
      <exception cref="T:System.FormatException">Формат строки недопустим.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Считывает содержимое элемента в качестве требуемого типа.</summary>
      <returns>Невозможно преобразовать этот элемент в требуемый типизированный объект.</returns>
      <param name="returnType">Тип возвращаемого значения.ПримечаниеС выпуском платформы .NET Framework 3.5 значение параметра <paramref name="returnType" /> может быть типа <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.OverflowException">Чтение Decimal.MaxValue.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary>Проверяет, сопоставлен ли URI локального имени и пространства имен с URI текущего элемента, затем считывает содержимое элемента требуемого типа.</summary>
      <returns>Невозможно преобразовать этот элемент в требуемый типизированный объект.</returns>
      <param name="returnType">Тип возвращаемого значения.ПримечаниеС выпуском платформы .NET Framework 3.5 значение параметра <paramref name="returnType" /> может быть типа <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения любых префиксов пространств имен, имеющих отношение к преобразованию типов.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
      <exception cref="T:System.OverflowException">Чтение Decimal.MaxValue.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и раскодирует содержимое Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Невозможно преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и раскодирует содержимое BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Невозможно преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary>Прочитывает текущий элемент и возвращает содержимое в качестве объекта <see cref="T:System.Boolean" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента нельзя преобразовать в объект <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.Boolean" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Boolean" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary>Прочитывает текущий элемент и возвращает содержимое в качестве объекта <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента нельзя преобразовать в объект <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.DateTime" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.DateTime" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary>Считывает текущий элемент и возвращает содержимое объекта <see cref="T:System.Decimal" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента нельзя преобразовать в <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.Decimal" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.Decimal" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента нельзя преобразовать в <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary>Считывает текущий элемент и возвращает содержимое как число с плавающей запятой двойной точности.</summary>
      <returns>Содержимое элемента в виде числа с плавающей запятой двойной точности.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента нельзя преобразовать в число с плавающей запятой двойной точности.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как число с плавающей запятой двойной точности.</summary>
      <returns>Содержимое элемента в виде числа с плавающей запятой двойной точности.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary>Считывает текущий элемент и возвращает содержимое как число с плавающей запятой одинарной точности.</summary>
      <returns>Содержимое элемента в виде числа с плавающей запятой одинарной точности.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента нельзя преобразовать в число с плавающей запятой одиночной точности.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как число с плавающей запятой одинарной точности.</summary>
      <returns>Содержимое элемента в виде числа с плавающей запятой одинарной точности.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента нельзя преобразовать в число с плавающей запятой одиночной точности.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary>Считывает текущий элемент и возвращает содержимое в виде 32-разрядного целого числа со знаком.</summary>
      <returns>Содержимое элемента как целое 32-разрядное число со знаком.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента не может быть преобразовано в 32-разрядное целое число со знаком.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как 32-разрядное целое число со знаком.</summary>
      <returns>Содержимое элемента как целое 32-разрядное число со знаком.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента не может быть преобразовано в 32-разрядное целое число со знаком.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary>Считывает текущий элемент и возвращает содержимое как 64-разрядное целое число со знаком.</summary>
      <returns>Содержимое элемента как целое 64-разрядное число со знаком.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента не может быть преобразовано в 64-разрядное целое число со знаком.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как 64-разрядное целое число со знаком.</summary>
      <returns>Содержимое элемента как целое 64-разрядное число со знаком.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента не может быть преобразовано в 64-разрядное целое число со знаком.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary>Прочитывает текущий элемент и возвращает содержимое в качестве объекта <see cref="T:System.Object" />.</summary>
      <returns>Упакованный объект CLR наиболее подходящего типа.Свойство <see cref="P:System.Xml.XmlReader.ValueType" /> служит для определения подходящего типа CLR.Если содержимое является типом списка, этот метод возвращает массив упакованных объектов соответствующего типа.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента невозможно преобразовать в запрошенный тип</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.Object" />.</summary>
      <returns>Упакованный объект CLR наиболее подходящего типа.Свойство <see cref="P:System.Xml.XmlReader.ValueType" /> служит для определения подходящего типа CLR.Если содержимое является типом списка, этот метод возвращает массив упакованных объектов соответствующего типа.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента невозможно преобразовать в запрошенный тип.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary>Прочитывает текущий элемент и возвращает содержимое в качестве объекта <see cref="T:System.String" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента нельзя преобразовать в объект <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary>Проверяет соответствие указанного URI локального имени и пространства имен с URI текущего элемента, затем считывает текущий элемент и возвращает содержимое как объект <see cref="T:System.String" />.</summary>
      <returns>Содержимое элемента в виде объекта <see cref="T:System.String" />.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> не расположен на элементе.</exception>
      <exception cref="T:System.Xml.XmlException">Текущий элемент содержит дочерние элементы.–либо–Содержимое элемента нельзя преобразовать в объект <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">Метод вызван с аргументами null.</exception>
      <exception cref="T:System.ArgumentException">Указанное локальное имя и URI пространства имен не совпадают с аналогичными параметрами текущего считываемого элемента.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString">
      <summary>Считывает текстовый элемент.</summary>
      <returns>Текст, содержащийся в считываемом элементе.Пустая строка, если элемент является пустым (&lt;item&gt;&lt;/item&gt; или &lt;item/&gt;).</returns>
      <exception cref="T:System.Xml.XmlException">Следующий узел содержимого не является открывающим тегом или найденный элемент не содержит простого текстового значения. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
      <summary>Проверяет перед чтением текстового элемента соответствие значения свойства <see cref="P:System.Xml.XmlReader.Name" /> найденного элемента и заданной строки.</summary>
      <returns>Текст, содержащийся в считываемом элементе.Пустая строка, если элемент является пустым (&lt;item&gt;&lt;/item&gt; или &lt;item/&gt;).</returns>
      <param name="name">Имя для проверки. </param>
      <exception cref="T:System.Xml.XmlException">Если следующий узел содержимого не является открывающим тегом, элемент Name не соответствует заданному аргументу или найденный элемент не содержит простого текстового значения. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
      <summary>Проверяет перед чтением текстового элемента соответствие значений свойств <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> найденного элемента и заданных строк.</summary>
      <returns>Текст, содержащийся в считываемом элементе.Пустая строка, если элемент является пустым (&lt;item&gt;&lt;/item&gt; или &lt;item/&gt;).</returns>
      <param name="localname">Локальное имя для проверки. </param>
      <param name="ns">URI пространства имен для проверки. </param>
      <exception cref="T:System.Xml.XmlException">Если следующий узел содержимого не является открывающим тегом, элемент LocalName или NamespaceURI не соответствует заданным аргументам или найденный элемент не содержит простого текстового значения. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary>Проверяет, является ли текущий узел содержимого закрывающим тегом, и перемещает средство чтения на следующий узел.</summary>
      <exception cref="T:System.Xml.XmlException">Текущий узел не является закрывающим тегом или если неверный XML встречается в потоке входных данных. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary>При переопределении в производном классе считывает все содержимое, включая разметку, как строку.</summary>
      <returns>Все содержимое XML-кода, включая разметку, на текущем узле.Если текущий узел не имеет дочерних узлов, возвращается пустая строка.Если текущий узел является элементом или атрибутом, возвращается пустая строка.</returns>
      <exception cref="T:System.Xml.XmlException">XML с неправильным форматом или произошла ошибка при разборе XML. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary>При переопределении в производном классе считывает содержимое в виде строки, включая разметку, предоставляющую этот узел и все его дочерние узлы.</summary>
      <returns>Если средство чтения находится на узле элемента или атрибута, данный метод возвращает все содержимое XML текущего узла и всех его дочерних узлов, включая разметку; в противном случае возвращается пустая строка.</returns>
      <exception cref="T:System.Xml.XmlException">XML с неправильным форматом или произошла ошибка при разборе XML. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary>Проверяет, является ли текущий узел элементом и перемещает средство чтения на следующий узел.</summary>
      <exception cref="T:System.Xml.XmlException">В входном потоке обнаружен неправильный XML. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary>Проверяет, является ли текущий узел элементом с заданным <see cref="P:System.Xml.XmlReader.Name" />, и перемещает средство чтения на следующий узел.</summary>
      <param name="name">Полное имя элемента. </param>
      <exception cref="T:System.Xml.XmlException">В входном потоке обнаружен неправильный XML. –либо– <see cref="P:System.Xml.XmlReader.Name" /> элемента не соответствует заданному <paramref name="name" />. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary>Проверяет, является ли текущий узел элементом с заданным <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" />, и перемещает средство чтения на следующий узел.</summary>
      <param name="localname">Локальное имя элемента. </param>
      <param name="ns">URI пространства имен элемента. </param>
      <exception cref="T:System.Xml.XmlException">В входном потоке обнаружен неправильный XML.–либо–Свойства <see cref="P:System.Xml.XmlReader.LocalName" /> и <see cref="P:System.Xml.XmlReader.NamespaceURI" /> найденного элемента не совпадают с предоставленными аргументами. </exception>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary>При переопределении в производном классе получает состояние средства чтения.</summary>
      <returns>Одно из значений объекта <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadString">
      <summary>При переопределении в производном классе считывает содержимое узла элемента или текстового узла в виде строки.</summary>
      <returns>Содержимое элемента или пустая строка.</returns>
      <exception cref="T:System.Xml.XmlException">При синтаксическом анализе XML возникла ошибка. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary>Возвращает новый экземпляр XmlReader, который может использоваться для считывания текущего узла и всех его потомков.</summary>
      <returns>Новый экземпляр XmlReader задается как ReadState.Initial.Вызов метода <see cref="M:System.Xml.XmlReader.Read" /> приводит к позиционированию нового средства чтения XmlReader на узле, который являлся текущим до вызова метода ReadSubtree.</returns>
      <exception cref="T:System.InvalidOperationException">XmlReader не расположен на элементе при вызове этого метода.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary>Переводит <see cref="T:System.Xml.XmlReader" /> к следующему сопоставленному элементу-потомку с указанным проверенным именем.</summary>
      <returns>true, если найден сопоставленный элемент-потомок; в противном случае — false.Если сопоставленный дочерний элемент не найден, средство чтения <see cref="T:System.Xml.XmlReader" /> позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является XmlNodeType.EndElement) родительского элемента.Если средство чтения <see cref="T:System.Xml.XmlReader" /> не позиционируется на элементе при вызове метода <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />, последний возвращает значение false и позиция <see cref="T:System.Xml.XmlReader" /> не изменяется.</returns>
      <param name="name">Проверенное имя элемента, на который следует переместиться.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary>Переводит <see cref="T:System.Xml.XmlReader" /> к следующему элементу-потомку с указанным локальным именем и URI пространства имен.</summary>
      <returns>true, если найден сопоставленный элемент-потомок; в противном случае — false.Если сопоставленный дочерний элемент не найден, средство чтения <see cref="T:System.Xml.XmlReader" /> позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является XmlNodeType.EndElement) родительского элемента.Если средство чтения <see cref="T:System.Xml.XmlReader" /> не позиционируется на элементе при вызове метода <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />, последний возвращает значение false и позиция <see cref="T:System.Xml.XmlReader" /> не изменяется.</returns>
      <param name="localName">Локальное имя элемента, на который следует переместиться.</param>
      <param name="namespaceURI">URI пространства имен элемента, на который следует переместиться.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary>Производит чтение до обнаружения элемента с указанным проверенным именем.</summary>
      <returns>Значение true, если найден соответствующий элемент; в противном случае —false и перемещение <see cref="T:System.Xml.XmlReader" /> в конец файла.</returns>
      <param name="name">Проверенное имя элемента.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary>Производит чтение до обнаружения указанного URI локального имени и пространства имен.</summary>
      <returns>Значение true, если найден соответствующий элемент; в противном случае —false и перемещение <see cref="T:System.Xml.XmlReader" /> в конец файла.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary>Переводит XmlReader к следующему сопоставленному родственному элементу с указанным проверенным именем.</summary>
      <returns>true, если найден сопоставленный родственный элемент; в противном случае — false.Если сопоставленный родственный элемент не найден, средство чтения XmlReader позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является XmlNodeType.EndElement) родительского элемента.</returns>
      <param name="name">Проверенное имя родственного элемента, на который следует переместиться.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary>Переводит XmlReader к следующему родственному элементу с указанным локальным именем и URI пространства имен.</summary>
      <returns>true, если найден сопоставленный родственный элемент; в противном случае — false.Если сопоставленный родственный элемент не найден, средство чтения XmlReader позиционируется на закрывающем теге (<see cref="P:System.Xml.XmlReader.NodeType" /> является XmlNodeType.EndElement) родительского элемента.</returns>
      <param name="localName">Локальное имя родственного элемента, на который следует переместиться.</param>
      <param name="namespaceURI">URI пространства имен родственного элемента, на который следует переместиться.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает большие потоки текста, внедренного в XML-документ.</summary>
      <returns>Количество символов, считанных в буфер.При отсутствии текстового содержимого возвращается нуль.</returns>
      <param name="buffer">Массив знаков, выполняющий функции буфера, в который записывается текстовое содержимое.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где <see cref="T:System.Xml.XmlReader" /> может начать копировать результаты.</param>
      <param name="count">Максимальное число копируемых в буфер символов.Этим методом возвращается фактическое количество скопированных символов.</param>
      <exception cref="T:System.InvalidOperationException">У текущего узла нет значения (<see cref="P:System.Xml.XmlReader.HasValue" /> —  false).</exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Данные XML не являются правильно сформированными.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary>При переопределении в производном классе разрешает ссылки для сущностей для узлов EntityReference.</summary>
      <exception cref="T:System.InvalidOperationException">Средство чтения не расположено на узле EntityReference; эта реализация средства чтения не может разрешить сущности (<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> возвращает false). </exception>
    </member>
    <member name="P:System.Xml.XmlReader.SchemaInfo">
      <summary>Получает сведения схемы, которые были назначены для текущего узла в результате проверки схемы.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> содержит сведения схемы для текущего узла.Сведения схемы могут быть заданы для элементов, атрибутов или текстовых узлов со значением <see cref="P:System.Xml.XmlReader.ValueType" />, не являющимся нулевым (типизированные значения).Если текущий узел не является одним из приведенных выше типов узлов или если экземпляр XmlReader не указывает сведений схемы, это свойство возвращает null.Если это свойство вызывается из объекта <see cref="T:System.Xml.XmlTextReader" /> или <see cref="T:System.Xml.XmlValidatingReader" />, это свойство всегда возвращает null.Эти реализации XmlReader не раскрывают сведений схемы посредством свойства SchemaInfo.ПримечаниеЕсли требуется получить набор сведений PSVI (Post-Schema-Validation Information) для элемента, поместите объект чтения на конечный тег элемента, а не на его начальный элемент.Сведения PSVI доступны через свойство SchemaInfo объекта чтения.Проверяющий объект чтения, который создается с помощью метода <see cref="Overload:System.Xml.XmlReader.Create" />, и свойство <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> которого имеет значение <see cref="F:System.Xml.ValidationType.Schema" />, содержит полные сведения PSVI для элемента только в том случае, если объект чтения помещается на конечный тег элемента.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlReaderSettings" />, используемый для создания этого экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReaderSettings" />, использованный для создания этого экземпляра средства чтения.Если это средство чтения не было создано с помощью метода <see cref="Overload:System.Xml.XmlReader.Create" />, это свойство возвращает null.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary>Пропускает дочерний узел текущего узла.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.System#IDisposable#Dispose">
      <summary>Описание этого элемента см. в разделе, посвященном <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary>При переопределении в производном классе получает текстовое значение текущего узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlReader.NodeType" /> узла.В следующей таблице представлен список возвращаемых типов узлов со значениями.Все прочие типы узлов возвращают значение String.Empty.Тип узла Значение AttributeЗначение атрибута. CDATAСодержимое раздела CDATA. CommentСодержимое комментария. DocumentTypeВнутреннее подмножество. ProcessingInstructionПолное содержимое, исключая конечное приложение. SignificantWhitespaceПустое пространство в разметке модели со смешанным содержимым. TextСодержимое текстового узла. WhitespaceПустое пространство между разметкой. XmlDeclarationСодержимое объявления. </returns>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary>Возвращает тип CLR текущего узла.</summary>
      <returns>Тип CLR, соответствующий типизированному значению узла.Значение по умолчанию – System.String.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary>При переопределении в производном классе получает текущую ограниченную область действия xml:lang.</summary>
      <returns>Текущая ограниченная область действия xml:lang.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary>При переопределении в производном классе получает текущую ограниченную область действия xml:space.</summary>
      <returns>Одно из значений объекта <see cref="T:System.Xml.XmlSpace" />.Если ограниченная область действия xml:space отсутствует, данное свойство принимает значение XmlSpace.None.</returns>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary>Определяет набор возможностей, которые поддерживаются для объекта <see cref="T:System.Xml.XmlReader" />, созданного методом <see cref="Overload:System.Xml.XmlReader.Create" />. </summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary>Возвращает или задает значение, показывающее, осуществляется ли проверка символов.</summary>
      <returns>Значение true — проверка осуществляется; в противном случае — false.Значение по умолчанию – true.ПримечаниеЕсли средство чтения <see cref="T:System.Xml.XmlReader" /> обрабатывает текстовые данные, всегда происходит проверка допустимости XML-имен и текстового содержимого независимо от значения этого свойства.Задание свойству <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> значения false отключает проверку символов для ссылок на сущности символов.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary>Создает копию экземпляра <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Точная копия объекта <see cref="T:System.Xml.XmlReaderSettings" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary>Возвращает или задает значение, указывающее, следует ли закрыть основной поток или <see cref="T:System.IO.TextReader" /> при закрытии средства чтения.</summary>
      <returns>Значение true — закрыть основной поток или <see cref="T:System.IO.TextReader" /> при закрытии средства чтения; в противном случае — false.По умолчанию установлено значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary>Возвращает или задает уровень соответствия для <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.ConformanceLevel" />.Значением по умолчанию является ConformanceLevel.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary>Получает или задает перечисление <see cref="T:System.Xml.DtdProcessing" />.</summary>
      <returns>Перечисление <see cref="T:System.Xml.DtdProcessing" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary>Возвращает или задает значение, указывающее, следует ли игнорировать комментарии.</summary>
      <returns>true — игнорировать комментарии; в противном случае false.По умолчанию установлено значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary>Возвращает или задает значение, указывающее, следует ли игнорировать инструкции обработки.</summary>
      <returns>true — игнорировать инструкции обработки; в противном случае false.По умолчанию установлено значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary>Возвращает или задает значение, определяющее, будет ли игнорироваться незначительное пустое пространство.</summary>
      <returns>Значение true, если пустое пространство будет игнорироваться; в противном случае — false.По умолчанию установлено значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary>Возвращает или задает смещение номера строки объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Смещение номера строки.Значение по умолчанию равно 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary>Возвращает или задает смещение позиции строки объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Смещение номера строки.Значение по умолчанию равно 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary>Возвращает или задает значение, указывающее максимальное допустимое количество символов в документе, которые возникают вследствие разворачивания сущностей.</summary>
      <returns>Наибольшее число символов для чтения.Значение по умолчанию равно 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary>Возвращает или задает значение, указывающее максимальное допустимое количество символов в XML-документе.Нуль (0) означает отсутствие ограничений на размер XML-документа.Значение, не равное нулю, указывает максимальный размер в символах.</summary>
      <returns>Наибольшее число символов в XML-документе.Значение по умолчанию равно 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary>Возвращает или задает таблицу <see cref="T:System.Xml.XmlNameTable" />, используемую для разделенных сравнений строк.</summary>
      <returns>Таблица <see cref="T:System.Xml.XmlNameTable" />, в которой хранятся все разделенные строки, используемые экземплярами <see cref="T:System.Xml.XmlReader" />, созданными с помощью объекта <see cref="T:System.Xml.XmlReaderSettings" />.По умолчанию установлено значение null.Созданный экземпляр <see cref="T:System.Xml.XmlReader" /> будет использовать новую пустую таблицу <see cref="T:System.Xml.NameTable" />, если это значение будет равно null.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ProhibitDtd">
      <summary>Возвращает или задает значение, определяющее, следует ли запретить обработку DTD.Данное свойство вышло из употребления.Вместо этого следует использовать метод <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
      <returns>Значение true для запрещения обработки DTD; в противном случае — false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary>Повторно загружает значения по умолчанию для элементов класса параметров.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Schemas">
      <summary>Возвращает или задает <see cref="T:System.Xml.Schema.XmlSchemaSet" /> для использования при проверке схемы.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, который нужно использовать.Значением по умолчанию является пустой объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="E:System.Xml.XmlReaderSettings.ValidationEventHandler">
      <summary>Происходит при нахождении средством чтения ошибок проверки.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationFlags">
      <summary>Возвращает или задает значение, указывающее параметры проверки схемы.Этот параметр применим к объектам проверки схемы <see cref="T:System.Xml.XmlReader" /> (значение свойства <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> равно ValidationType.Schema).</summary>
      <returns>Набор значений <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />.Поля <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> и <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> по умолчанию включены.<see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> и <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> по умолчанию отключены.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationType">
      <summary>Возвращает или задает значение, показывающее, будет ли <see cref="T:System.Xml.XmlReader" /> при считывании выполнять проверку типа назначения.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.ValidationType" />.Значение по умолчанию равно ValidationType.None.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary>Задает <see cref="T:System.Xml.XmlResolver" />, используемый для доступа ко внешним документам.</summary>
      <returns>
        <see cref="T:System.Xml.XmlResolver" />, используемый для доступа ко внешним документам.Если задано значение null, создается исключение <see cref="T:System.Xml.XmlException" /> при попытке <see cref="T:System.Xml.XmlReader" /> получить доступ к внешнему ресурсу.По умолчанию используется новый <see cref="T:System.Xml.XmlUrlResolver" /> без учетных данных.</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary>Разрешает внешние ресурсы XML, имена которых заданы с помощью URI. </summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlResolver" />.</summary>
    </member>
    <member name="P:System.Xml.XmlResolver.Credentials">
      <summary>При переопределении в производном классе задает учетные данные для проверки подлинности веб-запросов.</summary>
      <returns>Объект <see cref="T:System.Net.ICredentials" />.Если свойство не задано, значением по умолчанию становится null — XmlResolver не имеет учетных данных пользователя.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>При переопределении в производном классе отображает URI в объект, содержащий текущий ресурс.</summary>
      <returns>Объект System.IO.Stream или значение null, если в качестве типа не указан поток.</returns>
      <param name="absoluteUri">URI, возвращаемый методом <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />. </param>
      <param name="role">При разрешении URI в текущей версии данный параметр не используется.Это используется с целью расширения дальнейших возможностей.Например, его можно отобразить в xlink:role и использовать в других скриптах при реализации в качестве аргумента.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта.В текущей версии возвращаются только объекты System.IO.Stream.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> не является типом Stream. </exception>
      <exception cref="T:System.UriFormatException">Указанный URI не является абсолютным URI. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> имеет значение null; </exception>
      <exception cref="T:System.Exception">Есть ошибка среды выполнения (например, разрыв подключения сервера). </exception>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary>При переопределении в производном классе разрешает абсолютный URI из базовых и относительных URI.</summary>
      <returns>Класс <see cref="T:System.Uri" />, предоставляющий абсолютный URI или значение null, если невозможно разрешить относительный URI.</returns>
      <param name="baseUri">Базовый URI, используемый для разрешения относительного URI. </param>
      <param name="relativeUri">URI, которые нужно разрешить.URI может быть как абсолютным, так и относительным.Если URI является абсолютным, данное значение замещает значение <paramref name="baseUri" />.Если относительным, то абсолютный URI является сочетанием относительного и <paramref name="baseUri" />.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="relativeUri" /> ― null.</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary>Этот метод позволяет расширять распознаватель, чтобы он мог возвращать типы, отличные от <see cref="T:System.IO.Stream" />.</summary>
      <returns>Возвращает значение true, если тип <paramref name="type" /> поддерживается.</returns>
      <param name="absoluteUri">Универсальный код ресурса (URI).</param>
      <param name="type">Возвращаемый тип.</param>
    </member>
    <member name="T:System.Xml.XmlSecureResolver">
      <summary>Helps to secure another implementation of <see cref="T:System.Xml.XmlResolver" /> by wrapping the <see cref="T:System.Xml.XmlResolver" /> object and restricting the resources that the underlying <see cref="T:System.Xml.XmlResolver" /> has access to.</summary>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlSecureResolver" /> class with the <see cref="T:System.Xml.XmlResolver" /> and <see cref="T:System.Security.PermissionSet" /> specified.</summary>
      <param name="resolver">The <see cref="T:System.Xml.XmlResolver" /> wrapped by the <see cref="T:System.Xml.XmlSecureResolver" />. </param>
      <param name="permissionSet">The <see cref="T:System.Security.PermissionSet" /> to apply to the underlying <see cref="T:System.Xml.XmlResolver" />.The <see cref="T:System.Xml.XmlSecureResolver" /> calls <see cref="M:System.Security.PermissionSet.PermitOnly" /> on the <see cref="T:System.Security.PermissionSet" /> before calling <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> on the underlying <see cref="T:System.Xml.XmlResolver" />.</param>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlSecureResolver" /> class with the <see cref="T:System.Xml.XmlResolver" /> and <see cref="T:System.Security.Policy.Evidence" /> specified.</summary>
      <param name="resolver">The <see cref="T:System.Xml.XmlResolver" /> wrapped by the <see cref="T:System.Xml.XmlSecureResolver" />. </param>
      <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> used to create the <see cref="T:System.Security.PermissionSet" /> that will be applied to the underlying <see cref="T:System.Xml.XmlResolver" />.The <see cref="T:System.Xml.XmlSecureResolver" /> calls <see cref="M:System.Security.PermissionSet.PermitOnly" /> on the created <see cref="T:System.Security.PermissionSet" /> before calling <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> on the underlying <see cref="T:System.Xml.XmlResolver" />.</param>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlSecureResolver" /> class with the <see cref="T:System.Xml.XmlResolver" /> and URL provided.</summary>
      <param name="resolver">The <see cref="T:System.Xml.XmlResolver" /> wrapped by the <see cref="T:System.Xml.XmlSecureResolver" />. </param>
      <param name="securityUrl">The URL used to create the <see cref="T:System.Security.PermissionSet" /> that will be applied to the underlying <see cref="T:System.Xml.XmlResolver" />.The <see cref="T:System.Xml.XmlSecureResolver" /> calls <see cref="M:System.Security.PermissionSet.PermitOnly" /> on the created <see cref="T:System.Security.PermissionSet" /> before calling <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> on the underlying <see cref="T:System.Xml.XmlResolver" />.</param>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
      <summary>Creates <see cref="T:System.Security.Policy.Evidence" /> using the supplied URL.</summary>
      <returns>The <see cref="T:System.Security.Policy.Evidence" /> object generated from the supplied URL as defined by the default policy.</returns>
      <param name="securityUrl">The URL used to create the <see cref="T:System.Security.Policy.Evidence" /> object. </param>
    </member>
    <member name="P:System.Xml.XmlSecureResolver.Credentials">
      <summary>Sets credentials used to authenticate Web requests.</summary>
      <returns>An <see cref="T:System.Net.ICredentials" /> object.The <see cref="T:System.Xml.XmlSecureResolver" /> sets the given credentials on the underlying <see cref="T:System.Xml.XmlResolver" />.If this property is not set, the value defaults to null; that is, the <see cref="T:System.Xml.XmlSecureResolver" /> has no user credentials.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Securely maps a URI to an object containing the actual resource.This method temporarily sets the <see cref="T:System.Security.PermissionSet" /> created in the constructor by calling <see cref="M:System.Security.PermissionSet.PermitOnly" /> before calling GetEntity on the underlying <see cref="T:System.Xml.XmlResolver" /> to open the resource.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object returned by calling GetEntity on the underlying <see cref="T:System.Xml.XmlResolver" />.If a type other than stream is specified, null is returned.</returns>
      <param name="absoluteUri">The URI returned from <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />. </param>
      <param name="role">The current version does not use this parameter when resolving URIs.This is provided for future extensibility purposes.For example, this can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.</param>
      <param name="ofObjectToReturn">The type of object to return.The current version only returns <see cref="T:System.IO.Stream" /> objects.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> is neither null nor a <see cref="T:System.IO.Stream" /> type. </exception>
      <exception cref="T:System.UriFormatException">The specified URI is not an absolute URI. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="absoluteUri" /> is null. </exception>
      <exception cref="T:System.Exception">There is a runtime error (for example, an interrupted server connection). </exception>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
      <summary>Resolves the absolute URI from the base and relative URIs by calling ResolveUri on the underlying <see cref="T:System.Xml.XmlResolver" />.</summary>
      <returns>A <see cref="T:System.Uri" /> representing the absolute URI or null if the relative URI cannot be resolved (returned by calling ResolveUri on the underlying <see cref="T:System.Xml.XmlResolver" />).</returns>
      <param name="baseUri">The base URI used to resolve the relative URI. </param>
      <param name="relativeUri">The URI to resolve.The URI can be absolute or relative.If absolute, this value effectively replaces the <paramref name="baseUri" /> value.If relative, it combines with the <paramref name="baseUri" /> to make an absolute URI.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri" /> is null. </exception>
    </member>
    <member name="T:System.Xml.XmlSignificantWhitespace">
      <summary>Represents white space between markup in a mixed content node or white space within an xml:space= 'preserve' scope.This is also referred to as significant white space.</summary>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlSignificantWhitespace" /> class.</summary>
      <param name="strData">The white space characters of the node.</param>
      <param name="doc">The <see cref="T:System.Xml.XmlDocument" /> object.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
      <summary>Creates a duplicate of this node.</summary>
      <returns>The cloned node.</returns>
      <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.For significant white space nodes, the cloned node always includes the data value, regardless of the parameter setting.</param>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.LocalName">
      <summary>Gets the local name of the node.</summary>
      <returns>For XmlSignificantWhitespace nodes, this property returns #significant-whitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Name">
      <summary>Gets the qualified name of the node.</summary>
      <returns>For XmlSignificantWhitespace nodes, this property returns #significant-whitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.NodeType">
      <summary>Gets the type of the current node.</summary>
      <returns>For XmlSignificantWhitespace nodes, this value is XmlNodeType.SignificantWhitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.ParentNode">
      <summary>Gets the parent of the current node.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> parent node of the current node.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Value">
      <summary>Gets or sets the value of the node.</summary>
      <returns>The white space characters found in the node.</returns>
      <exception cref="T:System.ArgumentException">Setting Value to invalid white space characters. </exception>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary>Specifies the current xml:space scope.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary>No xml:space scope.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary>The xml:space scope equals default.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary>The xml:space scope equals preserve.</summary>
    </member>
    <member name="T:System.Xml.XmlText">
      <summary>Represents the text content of an element or attribute.</summary>
    </member>
    <member name="M:System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlText" /> class.</summary>
      <param name="strData">The content of the node; see the <see cref="P:System.Xml.XmlText.Value" /> property.</param>
      <param name="doc">The parent XML document.</param>
    </member>
    <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
      <summary>Creates a duplicate of this node.</summary>
      <returns>The cloned node.</returns>
      <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
    </member>
    <member name="P:System.Xml.XmlText.LocalName">
      <summary>Gets the local name of the node.</summary>
      <returns>For text nodes, this property returns #text.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Name">
      <summary>Gets the qualified name of the node.</summary>
      <returns>For text nodes, this property returns #text.</returns>
    </member>
    <member name="P:System.Xml.XmlText.NodeType">
      <summary>Gets the type of the current node.</summary>
      <returns>For text nodes, this value is XmlNodeType.Text.</returns>
    </member>
    <member name="P:System.Xml.XmlText.ParentNode"></member>
    <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
      <summary>Splits the node into two nodes at the specified offset, keeping both in the tree as siblings.</summary>
      <returns>The new node.</returns>
      <param name="offset">The offset at which to split the node. </param>
    </member>
    <member name="P:System.Xml.XmlText.Value">
      <summary>Gets or sets the value of the node.</summary>
      <returns>Содержимое текстового узла.</returns>
    </member>
    <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.XmlText nodes do not have children, so this method has no effect.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="M:System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)">
      <summary>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The XmlWriter to which you want to save. </param>
    </member>
    <member name="T:System.Xml.XmlTextReader">
      <summary>Предоставляет средство чтения, обеспечивающее быстрый прямой доступ (без кэширования) к данным XML.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor">
      <summary>Выполняет инициализацию нового экземпляра XmlTextReader.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным потоком.</summary>
      <param name="input">Поток, содержащий считываемые XML-данные. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанными потоком и классом <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="input">Поток, содержащий считываемые XML-данные. </param>
      <param name="nt">Объект XmlNameTable , который нужно использовать. </param>
      <exception cref="T:System.NullReferenceException">Значение параметра <paramref name="input" /> или <paramref name="nt" /> — null. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанными потоком <see cref="T:System.Xml.XmlNodeType" /> и <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment">Поток, содержащий анализируемый фрагмент XML. </param>
      <param name="fragType">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML.Также определяется содержимое фрагмента.(См. таблицу, приведенную ниже).</param>
      <param name="context">Класс <see cref="T:System.Xml.XmlParserContext" />, в котором анализируется <paramref name="xmlFragment" />.Это включает в себя используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущий xml:lang и область xml:space.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> не элемент, не атрибут и не документ XmlNodeType. </exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="xmlFragment" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным объектом <see cref="T:System.IO.TextReader" />.</summary>
      <param name="input">TextReader, содержащий считываемые XML-данные. </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с заданными свойствами <see cref="T:System.IO.TextReader" /> и <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="input">TextReader, содержащий считываемые XML-данные. </param>
      <param name="nt">Объект XmlNameTable , который нужно использовать. </param>
      <exception cref="T:System.NullReferenceException">Значение <paramref name="nt" /> равно null. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным файлом.</summary>
      <param name="url">URL-адрес файла с XML-данными.Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.</param>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти указанный файл.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Не удается найти часть имени файла или каталога.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="url" /> содержит пустую строку.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить удаленное имя–либо–Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">Параметр <paramref name="url" /> представляет недопустимый URI.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным URL-адресом и потоком.</summary>
      <param name="url">URL-адрес, используемый для разрешения внешних ресурсов.Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.</param>
      <param name="input">Поток, содержащий считываемые XML-данные. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанными URL-адресом, потоком и классом <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="url">URL-адрес, используемый для разрешения внешних ресурсов.Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.Если <paramref name="url" /> - null, BaseURI присваивается String.Empty.</param>
      <param name="input">Поток, содержащий считываемые XML-данные. </param>
      <param name="nt">Объект XmlNameTable , который нужно использовать. </param>
      <exception cref="T:System.NullReferenceException">Значение параметра <paramref name="input" /> или <paramref name="nt" /> — null. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным URL-адресом и свойством <see cref="T:System.IO.TextReader" />.</summary>
      <param name="url">URL-адрес, используемый для разрешения внешних ресурсов.Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.</param>
      <param name="input">TextReader, содержащий считываемые XML-данные. </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным URL-адресом и свойствами <see cref="T:System.IO.TextReader" /> и <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="url">URL-адрес, используемый для разрешения внешних ресурсов.Для свойства <see cref="P:System.Xml.XmlTextReader.BaseURI" /> задано это значение.Если <paramref name="url" /> - null, BaseURI присваивается String.Empty.</param>
      <param name="input">TextReader, содержащий считываемые XML-данные. </param>
      <param name="nt">Объект XmlNameTable , который нужно использовать. </param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="nt" /> равно null. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным файлом и классом <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="url">URL-адрес файла, содержащего считываемые данные XML. </param>
      <param name="nt">Объект XmlNameTable , который нужно использовать. </param>
      <exception cref="T:System.NullReferenceException">Значение <paramref name="nt" /> равно null.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти указанный файл.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Не удается найти часть имени файла или каталога.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="url" /> содержит пустую строку.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить удаленное имя–либо–Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">Параметр <paramref name="url" /> представляет недопустимый URI.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанной строкой <see cref="T:System.Xml.XmlNodeType" /> и <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment">Строка, содержащая анализируемый фрагмент XML. </param>
      <param name="fragType">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML.Также определяется содержимое строки фрагмента.(См. таблицу, приведенную ниже).</param>
      <param name="context">Класс <see cref="T:System.Xml.XmlParserContext" />, в котором анализируется <paramref name="xmlFragment" />.Это включает в себя используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущий xml:lang и область xml:space.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> не является Element, Attribute или DocumentXmlNodeType. </exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="xmlFragment" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlTextReader" /> с указанным объектом <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nt">Объект XmlNameTable , который нужно использовать. </param>
    </member>
    <member name="P:System.Xml.XmlTextReader.AttributeCount">
      <summary>Возвращает число атрибутов текущего узла.</summary>
      <returns>Число атрибутов текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.BaseURI">
      <summary>Возвращает базовый URI текущего узла.</summary>
      <returns>Базовый URI текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadBinaryContent">
      <summary>Возвращает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlTextReader" /> методы чтения двоичного содержимого.</summary>
      <returns>Значение true, если реализуются методы чтения двоичного содержимого; в противном случае — false.Для класса <see cref="T:System.Xml.XmlTextReader" /> оно возвращает значение true.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadValueChunk">
      <summary>Возвращает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlTextReader" /> метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns>Значение true, если объект <see cref="T:System.Xml.XmlTextReader" /> реализует метод <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; в противном случае false.Для класса <see cref="T:System.Xml.XmlTextReader" /> оно возвращает значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanResolveEntity">
      <summary>Возвращает значение, определяющее возможность анализа и разрешения объектов с помощью данного средства чтения.</summary>
      <returns>Значение true, если средство чтения позволяет анализировать и разрешать объекты; в противном случае — false.Для класса XmlTextReader оно возвращает значение true.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Close">
      <summary>Изменяет значение свойства <see cref="P:System.Xml.XmlReader.ReadState" /> на Closed.</summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Depth">
      <summary>Возвращает глубину текущего узла в XML-документе.</summary>
      <returns>Глубина текущего узла в XML-документе.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.DtdProcessing">
      <summary>Получает или задает перечисление <see cref="T:System.Xml.DtdProcessing" />.</summary>
      <returns>Перечисление <see cref="T:System.Xml.DtdProcessing" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Encoding">
      <summary>Возвращает кодировку для документа.</summary>
      <returns>Значение кодировки.Если атрибут кодировки и метка порядка следования байтов отсутствуют, по умолчанию используется кодировка UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EntityHandling">
      <summary>Возвращает или задает значение, определяющее способ обработки объектов средством чтения.</summary>
      <returns>Одно из значений объекта <see cref="T:System.Xml.EntityHandling" />.Если атрибут EntityHandling не задан, по умолчанию для этого атрибута используется значение EntityHandling.ExpandCharEntities.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EOF">
      <summary>Возвращает значение, определяющее, установлено ли средство чтения в конец потока.</summary>
      <returns>Значение true, если средство чтения установлено в конец потока; в противном случае — false.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
      <summary>Возвращает значение атрибута с заданным индексом.</summary>
      <returns>Значение указанного атрибута.</returns>
      <param name="i">Индекс атрибута.Индексация начинается с нуля.(Индекс первого атрибута равен нулю).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше или равен 0 или больше или равен <see cref="P:System.Xml.XmlTextReader.AttributeCount" />. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
      <summary>Возвращает значение атрибута с указанным именем.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден, возвращается значение null.</returns>
      <param name="name">Проверенное имя атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
      <summary>Возвращает значение атрибута с заданным локальным именем и URI пространства имен.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден, возвращается значение null.Этот метод не перемещает средство чтения.</returns>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Возвращает коллекцию, содержащую все пространства имен, которые в настоящий момент находятся в области.</summary>
      <returns>Объект <see cref="T:System.Collections.IDictionary" />, содержащий все текущие пространства имен в области.Если средство чтения не позиционировано на элементе, возвращается пустой словарь (без пространств имен).</returns>
      <param name="scope">С помощью значения <see cref="T:System.Xml.XmlNamespaceScope" /> указывается тип узлов пространства имен, которые следует возвратить.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetRemainder">
      <summary>Возвращает оставшуюся часть XML-кода, находящегося в буфере.</summary>
      <returns>Объект <see cref="T:System.IO.TextReader" />, содержащий оставшуюся часть XML-кода, находящегося в буфере.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.HasLineInfo">
      <summary>Возвращает значение, определяющее возможность возвращения классом сведений о строке.</summary>
      <returns>Значение true, если класс может возвратить сведения о строке, в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.HasValue">
      <summary>Возвращает значение, определяющие наличие у текущего узла свойства <see cref="P:System.Xml.XmlTextReader.Value" />, значение которого отличается от String.Empty.</summary>
      <returns>Значение true, если узел, на котором расположено средство чтения, может иметь значение Value; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsDefault">
      <summary>Возвращает значение, определяющее, является ли текущий узел атрибутом, созданным из значения по умолчанию, определенного в DTD или схеме.</summary>
      <returns>Данное свойство всегда возвращает значение false.(<see cref="T:System.Xml.XmlTextReader" /> не расширяет атрибуты по умолчанию).</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsEmptyElement">
      <summary>Возвращает значение, определяющее является ли текущий узел пустым элементом (например, &lt;MyElement/&gt;).</summary>
      <returns>Значение true, если текущий узел является элементом (свойство <see cref="P:System.Xml.XmlTextReader.NodeType" /> имеет значение XmlNodeType.Element), который заканчивается на /&gt;; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LineNumber">
      <summary>Получает текущий номер строки.</summary>
      <returns>Текущий номер строки.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LinePosition">
      <summary>Получает текущее положение строки.</summary>
      <returns>Текущее положение строки.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LocalName">
      <summary>Получает локальное имя текущего узла.</summary>
      <returns>Имя текущего узла с удаленным префиксом.Например, LocalName имеет значение book для элемента &lt;bk:book&gt;.Для безымянных типов узлов (например, Text, Comment и т. д.) данное свойство возвращает String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
      <summary>Разрешает префикс пространства имен в ограниченной области действия текущего элемента.</summary>
      <returns>URI пространства имен, которое отображает префикс, или значение null, если соответствующий префикс не найден.</returns>
      <param name="prefix">Префикс, для которого требуется обработать URI пространства имен.Чтобы сопоставить пространство имен по умолчанию, необходимо передать пустую строку.Эту строку не следует разделять.</param>
      <exception cref="T:System.ArgumentNullException">Свойству <see cref="P:System.Xml.XmlTextReader.Namespaces" /> присваивается значение true, а значение свойства <paramref name="prefix" /> равно null. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
      <summary>Перемещает к атрибуту с указанным индексом.</summary>
      <param name="i">Индекс атрибута. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше или равен 0 или больше или равен <see cref="P:System.Xml.XmlReader.AttributeCount" />. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
      <summary>Перемещает к атрибуту с указанным именем.</summary>
      <returns>Значение true, если атрибут найден; в противном случае — false.Если значение false, позиция средства чтения не изменяется.</returns>
      <param name="name">Проверенное имя атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
      <summary>Перемещает к атрибуту с указанным локальным именем и URI пространства имен.</summary>
      <returns>Значение true, если атрибут найден; в противном случае — false.Если значение false, позиция средства чтения не изменяется.</returns>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToElement">
      <summary>Перемещает к элементу, содержащему текущий узел атрибута.</summary>
      <returns>Значение true, если средство чтения находится на атрибуте (средство чтения перемещается к элементу с этим атрибутом); в противном случае — false (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
      <summary>Перемещается к первому атрибуту.</summary>
      <returns>Значение true, если атрибут существует (средство чтения перемещается к первому атрибуту); в противном случае — false (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToNextAttribute">
      <summary>Перемещается к следующему атрибуту.</summary>
      <returns>Значение true, если присутствует следующий атрибут; значение false, если другие атрибуты отсутствуют.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Name">
      <summary>Возвращает проверенное имя текущего узла.</summary>
      <returns>Проверенное имя текущего узла.Например, Name имеет значение bk:book для элемента &lt;bk:book&gt;.Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlTextReader.NodeType" /> узла.Следующие типы узлов возвращают представленные значения.Другие типы узлов возвращают пустую строку.Тип узла Имя AttributeИмя атрибута. DocumentTypeИмя типа документа. ElementИмя тега. EntityReferenceИмя сущности, на которую существует ссылка. ProcessingInstructionКонечное приложение инструкции обработки. XmlDeclarationСтрока символов xml. </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Namespaces">
      <summary>Возвращает или задает значение, показывающее, осуществляется ли поддержка пространства имен.</summary>
      <returns>Значение true — поддержка осуществляется; в противном случае — false.Значением по умолчанию true.</returns>
      <exception cref="T:System.InvalidOperationException">Установка этого свойства после того, как выполнена операция чтения (значение <see cref="P:System.Xml.XmlTextReader.ReadState" /> не равно ReadState.Initial). </exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.NamespaceURI">
      <summary>Возвращает URI пространства имен (определенное в спецификации W3C Namespace) узла, на котором расположено средство чтения.</summary>
      <returns>URI пространства имен текущего узла; в противном случае — пустая строка.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NameTable">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
      <returns>Класс XmlNameTable, позволяющий получать в узле разделенную версию строки.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlNodeType" />, предоставляющее тип текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Normalization">
      <summary>Возвращает или задает значение, определяющее необходимость нормализации пробелов и значений атрибутов.</summary>
      <returns>Значение true — нормализовать; в противном случае — false.По умолчанию установлено значение false.</returns>
      <exception cref="T:System.InvalidOperationException">Установка значения этого свойства после закрытия средства чтения (<see cref="P:System.Xml.XmlTextReader.ReadState" /> равно ReadState.Closed). </exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.Prefix">
      <summary>Возвращает префикс пространства имен, связанный с текущим узлом.</summary>
      <returns>Префикс пространства имен, связанный с текущим узлом.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ProhibitDtd">
      <summary>Возвращает или задает значение, определяющее, следует ли разрешить обработку DTD.Данное свойство вышло из употребления.Вместо этого следует использовать метод <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
      <returns>Значение true для отключение обработки DTD; в противном случае — false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.QuoteChar">
      <summary>Возвращает знак кавычек для выделения значения узла атрибута.</summary>
      <returns>Знак кавычек (" или ') для выделения значения узла атрибута.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Read">
      <summary>Считывает следующий узел из потока.</summary>
      <returns>Значение true, если чтение прошло успешно; значение false, если отсутствуют узлы для чтения.</returns>
      <exception cref="T:System.Xml.XmlException">При анализе XML возникла ошибка. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadAttributeValue">
      <summary>Разбирает значение атрибута в один или несколько узлов Text, EntityReference или EndEntity.</summary>
      <returns>Значение true, если присутствуют возвращаемые узлы.Значение false, если средство чтения не расположено на узле атрибута при первом вызове или все значения атрибута считаны.Пустой атрибут (например, misc="") возвращает значение true с отдельным узлом, имеющим значение String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Декодирует Base64 и возвращает результат в виде раскодированных двоичных байтов.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="array">Массив знаков, выполняющий функции буфера, в который записывается текстовое содержимое. </param>
      <param name="offset">Начинающийся с нуля индекс в массиве, указывающий место, с которого метод начнет запись в буфер. </param>
      <param name="len">Число байтов для записи в буфер. </param>
      <exception cref="T:System.Xml.XmlException">Недопустимая последовательность Base64. </exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="array" /> равно null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> &lt; 0 или  <paramref name="len" /> &lt; 0 или  <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Декодирует BinHex и возвращает результат в виде раскодированных двоичных байтов.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="array">Массив байтов, выполняющий функции буфера, в который записываются раскодированные двоичные байты. </param>
      <param name="offset">Начинающийся с нуля индекс в массиве, указывающий место, с которого метод начнет запись в буфер. </param>
      <param name="len">Число байтов для записи в буфер. </param>
      <exception cref="T:System.Xml.XmlException">Недопустимая последовательность BinHex. </exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="array" /> равно null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> &lt; 0 или  <paramref name="len" /> &lt; 0 или  <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает текстовое содержимое элемента в буфер знаков.Этот метод создан для чтения больших потоков внедренного текста путем его последовательного вызова.</summary>
      <returns>Число прочитанных знаков.Если средство чтения находится не на элементе или отсутствует возвращаемый текст, это число может быть равно 0.</returns>
      <param name="buffer">Массив знаков, выполняющий функции буфера, в который записывается текстовое содержимое. </param>
      <param name="index">Положение в <paramref name="buffer" />, с которого метод начинает запись текстового содержимого. </param>
      <param name="count">Число знаков, записываемых в <paramref name="buffer" />. </param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="count" /> больше, чем значение, указанное в параметре <paramref name="buffer" /> (размер буфера: <paramref name="index" />). </exception>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />&lt; 0 или <paramref name="count" />&lt; 0. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> не поддерживается в текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Эта реализация <see cref="T:System.Xml.XmlTextReader" /> не поддерживает данный метод.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и раскодирует содержимое Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Эта реализация <see cref="T:System.Xml.XmlTextReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Невозможно преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и раскодирует содержимое BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Эта реализация <see cref="T:System.Xml.XmlReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Невозможно преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.ReadState">
      <summary>Возвращает состояние средства чтения.</summary>
      <returns>Одно из значений объекта <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadString">
      <summary>Считывает содержимое элемента или текстового узла в виде строки.</summary>
      <returns>Содержимое текстового узла или узла элемента.Если средство чтения находится не на узле элемента или текстовом узле, а также если отсутствует возвращаемый текст, это может быть пустая строка.Ïðèìå÷àíèå. Текстовым узлом может быть текстовый узел элемента или текстовый узел атрибута.</returns>
      <exception cref="T:System.Xml.XmlException">При анализе XML возникла ошибка. </exception>
      <exception cref="T:System.InvalidOperationException">Предпринята попытка выполнения недопустимой операции. </exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResetState">
      <summary>Сбрасывает состояние средства чтения на ReadState.Initial.</summary>
      <exception cref="T:System.InvalidOperationException">Вызывает ResetState, если средство чтения создано с помощью <see cref="T:System.Xml.XmlParserContext" />. </exception>
      <exception cref="T:System.Xml.XmlException">У документов в одном потоке разная кодировка.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResolveEntity">
      <summary>Разрешает ссылки на сущности для узлов EntityReference.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.Skip">
      <summary>Пропускает дочерний узел текущего узла.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IDictionary" />, содержащий все текущие пространства имен в области.</returns>
      <param name="scope">С помощью значения <see cref="T:System.Xml.XmlNamespaceScope" /> указывается тип узлов пространства имен, которые следует возвратить.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Описание этого элемента см. в разделе, посвященном <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <returns>URI пространства имен, сопоставленное с префиксом; null, если префикс не сопоставлен с URI пространства имен.</returns>
      <param name="prefix">Префикс, URI пространства имен которого нужно найти.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Описание этого элемента см. в разделе, посвященном <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <returns>Префикс, сопоставленный URI пространства имен; null если URI пространства имен не сопоставлено с префиксом.</returns>
      <param name="namespaceName">URI пространства имен, префикс которого нужно найти.</param>
    </member>
    <member name="P:System.Xml.XmlTextReader.Value">
      <summary>Получает текстовое значение текущего узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlTextReader.NodeType" /> узла.В следующей таблице представлен список возвращаемых типов узлов со значениями.Все прочие типы узлов возвращают значение String.Empty.Тип узла Значение AttributeЗначение атрибута. CDATAСодержимое раздела CDATA. CommentСодержимое комментария. DocumentTypeВнутреннее подмножество. ProcessingInstructionПолное содержимое, исключая конечное приложение. SignificantWhitespaceПустое пространство в области xml:space= 'preserve'. TextСодержимое текстового узла. WhitespaceПустое пространство между разметкой. XmlDeclarationСодержимое объявления. </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.WhitespaceHandling">
      <summary>Возвращает или задает значение, определяющее способ обработки пустого пространства.</summary>
      <returns>Одно из значений объекта <see cref="T:System.Xml.WhitespaceHandling" />.По умолчанию используется значение WhitespaceHandling.All (возвращает узлы Whitespace и SignificantWhitespace).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Указано недопустимое значение. </exception>
      <exception cref="T:System.InvalidOperationException">Установка значения этого свойства после закрытия средства чтения (<see cref="P:System.Xml.XmlTextReader.ReadState" /> равно ReadState.Closed). </exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlLang">
      <summary>Возвращает текущую ограниченную область действия xml:lang.</summary>
      <returns>Текущая ограниченная область действия xml:lang.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlResolver">
      <summary>Задает <see cref="T:System.Xml.XmlResolver" /> для разрешения ссылок на DTD.</summary>
      <returns>Объект XmlResolver , который нужно использовать.Если он имеет значение null, внешние ресурсы не разрешаются.В .NET Framework версии 1.1 вызывающий объект должен иметь полное доверие, чтобы иметь возможность указывать XmlResolver.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlSpace">
      <summary>Возвращает текущую ограниченную область действия xml:space.</summary>
      <returns>Одно из значений объекта <see cref="T:System.Xml.XmlSpace" />.Если ограниченная область действия xml:space отсутствует, данное свойство принимает значение XmlSpace.None.</returns>
    </member>
    <member name="T:System.Xml.XmlTextWriter">
      <summary>Представляет средство записи, предоставляющее способ быстрого прямого создания потоков (без кэширования) или файлов с данными XML, которые соответствуют рекомендациям консорциума W3C по языку XML версии 1.0 и пространств имен в XML. </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Создает экземпляр класса XmlTextWriter с помощью указанного потока и кодировки.</summary>
      <param name="w">Поток, в который будет выполняться запись. </param>
      <param name="encoding">Создаваемая кодировка.Если для кодировки задано значение null, для потока используется кодировка UTF-8, а атрибут кодировки исключается из ProcessingInstruction.</param>
      <exception cref="T:System.ArgumentException">Кодировка не поддерживается или не может быть записано в поток. </exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="w" /> имеет значение null. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Инициализирует новый экземпляр класса XmlTextWriter с помощью указанного класса <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="w">Класс TextWriter, в который будет осуществлена запись.Предполагается, что для TextWriter задана верная кодировка.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
      <summary>Создает экземпляр класса <see cref="T:System.Xml.XmlTextWriter" /> с помощью указанного файла.</summary>
      <param name="filename">Имя файла, в который осуществляется запись.Если файл существует, он будет сокращен и в него будет записано новое содержимое.</param>
      <param name="encoding">Создаваемая кодировка.Если для кодировки задано значение null, для файла используется кодировка UTF-8, а атрибут кодировки исключается из ProcessingInstruction.</param>
      <exception cref="T:System.ArgumentException">Кодировка не поддерживается, имя файла является пустым, содержит только пробелы или один или несколько недопустимых символов. </exception>
      <exception cref="T:System.UnauthorizedAccessException">Доступ запрещен. </exception>
      <exception cref="T:System.ArgumentNullException">Имя файла — null. </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Не найден каталог для записи. </exception>
      <exception cref="T:System.IO.IOException">Имя файла включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома. </exception>
      <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет необходимого разрешения. </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.BaseStream">
      <summary>Возвращает основной объект потока.</summary>
      <returns>Поток, в который осуществляется запись с помощью XmlTextWriter или значение null, если XmlTextWriter создан с помощью класса <see cref="T:System.IO.TextWriter" />, который не наследуется от класса <see cref="T:System.IO.StreamWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Close">
      <summary>Закрывает данный поток и основной поток.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Flush">
      <summary>Сбрасывает в основной поток содержимое буфера, а также очищает основной поток.</summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Formatting">
      <summary>Определяет способ форматирования выходных данных.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Formatting" />.По умолчанию используется значение Formatting.None (без форматирования).</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Indentation">
      <summary>Возвращает или задает количество записываемых IndentChars для каждого уровня в иерархии, если свойство <see cref="P:System.Xml.XmlTextWriter.Formatting" /> имеет значение Formatting.Indented.</summary>
      <returns>Количество IndentChars для каждого уровня.Значение по умолчанию равно 2.</returns>
      <exception cref="T:System.ArgumentException">Свойству присвоено отрицательное значение. </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.IndentChar">
      <summary>Возвращает или задает знак для отступа, если свойство <see cref="P:System.Xml.XmlTextWriter.Formatting" /> имеет значение Formatting.Indented.</summary>
      <returns>Знак, используемый в качестве отступа.Значение по умолчанию — space.ПримечаниеXmlTextWriter позволяет задать это свойство для любого знака.Для обеспечения допустимости XML-кода необходимо указать знак пустого пространства: 0x9, 0x10, 0x13 или 0x20.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
      <summary>Возвращает ближайший префикс для URI пространства имен, определенный в текущей области пространства имен.</summary>
      <returns>Соответствующий префикс.Или значение null, если в текущей области отсутствует соответствующий URI пространства имен.</returns>
      <param name="ns">URI пространства имен, для которого требуется найти префикс. </param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="ns" /> — null или String.Empty. </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Namespaces">
      <summary>Возвращает или задает значение, показывающее, осуществляется ли поддержка пространства имен.</summary>
      <returns>Значение true — пространства имен поддерживаются; в противном случае — false.Значение по умолчанию – true.</returns>
      <exception cref="T:System.InvalidOperationException">Это свойство можно изменить только в состоянии WriteState.Start. </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.QuoteChar">
      <summary>Возвращает или задает знак, используемый для заключения значений атрибутов в кавычки.</summary>
      <returns>Знак, используемый для заключения значений атрибутов в кавычки.Это должны быть либо одинарные (&amp;#39;), либо двойные (&amp;#34;) кавычки.По умолчанию используются двойные кавычки.</returns>
      <exception cref="T:System.ArgumentException">Задание этому свойству значения, отличное от одинарные или двойные кавычки. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Преобразует указанный набор двоичных байтов к виду base64 и выводит получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов. </param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов. </param>
      <param name="count">Количество записываемых байтов. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> имеет значение null. </exception>
      <exception cref="T:System.ArgumentException">Длина буфера за вычетом значения параметра <paramref name="index" /> меньше значения параметра <paramref name="count" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля. </exception>
      <exception cref="T:System.InvalidOperationException">Параметр <see cref="P:System.Xml.XmlTextWriter.WriteState" /> имеет значение Closed. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Преобразует указанный набор двоичных байтов к виду binhex и выводит получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов. </param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов. </param>
      <param name="count">Количество записываемых байтов. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> имеет значение null. </exception>
      <exception cref="T:System.ArgumentException">Длина буфера за вычетом значения параметра <paramref name="index" /> меньше значения параметра <paramref name="count" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля. </exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="P:System.Xml.XmlTextWriter.WriteState" /> закрыт. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
      <summary>Считывает блок &lt;![CDATA[...]]&gt;, содержащий заданный текст.</summary>
      <param name="text">Текст, записываемый в блок CDATA. </param>
      <exception cref="T:System.ArgumentException">Текст приведет к плохому формированию документа XML. </exception>
      <exception cref="T:System.InvalidOperationException">Параметр <see cref="P:System.Xml.XmlTextWriter.WriteState" /> имеет значение Closed. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
      <summary>Вызывает создание сущности знака для указанного значения знака Юникода.</summary>
      <param name="ch">Знак Юникода, для которого создается сущность. </param>
      <exception cref="T:System.ArgumentException">Символ находится в диапазоне пары символов-суррогатов, 0xd800 - 0xdfff; или текст приведет к плохому формированию документа XML. </exception>
      <exception cref="T:System.InvalidOperationException">Параметр <see cref="P:System.Xml.XmlTextWriter.WriteState" /> имеет значение Closed. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Записывает текст в буфер за один раз.</summary>
      <param name="buffer">Массив знаков, содержащий текст для записи. </param>
      <param name="index">Позиция в буфере, с которой начинается запись текста. </param>
      <param name="count">Количество символов для записи. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> имеет значение null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля. –либо–Длина буфера за вычетом <paramref name="index" /> меньше <paramref name="count" />;вызов приводит к разделению знаков пары символов-заместителей или к недопустимой записи пары заместителей.</exception>
      <exception cref="T:System.InvalidOperationException">Объект <see cref="P:System.Xml.XmlTextWriter.WriteState" /> закрыт. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
      <summary>Считывает примечание &lt;!--...--&gt;, содержащее заданный текст.</summary>
      <param name="text">Текст, записываемый в примечание. </param>
      <exception cref="T:System.ArgumentException">Текст приведет к плохому формированию документа XML. </exception>
      <exception cref="T:System.InvalidOperationException">Параметр <see cref="P:System.Xml.XmlTextWriter.WriteState" /> имеет значение Closed. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</summary>
      <param name="name">Имя DOCTYPE.Не должно быть пустым.</param>
      <param name="pubid">Если значение не равно нулю, записывается также PUBLIC "pubid" "sysid", где <paramref name="pubid" /> и <paramref name="sysid" /> заменяются значениями заданных аргументов. </param>
      <param name="sysid">Если параметр <paramref name="pubid" /> имеет значение null, а параметр <paramref name="sysid" /> не равен нулю, записывается SYSTEM "sysid", где <paramref name="sysid" /> замещается значением данного аргумента. </param>
      <param name="subset">Если не равно нулю, записывается [subset], где subset замещается значением данного аргумента. </param>
      <exception cref="T:System.InvalidOperationException">Этот метод был вызван вне пролога (после корневого элемента). </exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="name" /> равно null или String.Empty.–либо– Значение <paramref name="name" /> приведет к недопустимый XML. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndAttribute">
      <summary>Закрывает вызов предыдущего метода <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndDocument">
      <summary>Закрывает все открытые элементы или атрибуты и возвращает средство записи в состояние Start.</summary>
      <exception cref="T:System.ArgumentException">Недопустимым документ XML. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndElement">
      <summary>Закрывает один элемент и извлекает соответствующую область пространства имен.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
      <summary>Выводит ссылку на сущность в виде &amp;name;.</summary>
      <param name="name">Имя ссылки на сущность. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" />nullString.Empty; или текст приведет к плохому формированию документа XML. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteFullEndElement">
      <summary>Закрывает один элемент и извлекает соответствующую область пространства имен.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
      <summary>Записывает указанное имя, гарантируя его допустимость согласно рекомендации W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Имя для записи. </param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> не является допустимым именем XML; или <paramref name="name" /> равен null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
      <summary>Записывает указанное имя, гарантируя, что это допустимый NmToken согласно рекомендации W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Имя для записи. </param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> не является допустимым NmToken; или <paramref name="name" /> равен null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>Выводит инструкцию обработки с пробелом между именем и текстом в следующем виде: &lt;?имя текст?&gt;.</summary>
      <param name="name">Имя инструкции обработки. </param>
      <param name="text">Текст для инструкции обработки. </param>
      <exception cref="T:System.ArgumentException">Текст приведет к плохому формированию документа XML.Значение параметра <paramref name="name" /> — null или String.Empty.Этот метод используется для создания XML-объявление после того, как <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> уже был вызван. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
      <summary>Считывает проверенное имя пространства имен.Этот метод ищет префикс для пространства имен в его области.</summary>
      <param name="localName">Локальное имя для записи. </param>
      <param name="ns">URI пространства имен, который связывается с именем. </param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="localName" /> — null или String.Empty.<paramref name="localName" /> не является допустимым именем в соответствии со спецификацией пространств имен W3C. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Переписывает исходную разметку буфера знаков (вручную).</summary>
      <param name="buffer">Массив знаков, содержащий текст для записи. </param>
      <param name="index">Позиция в буфере, с которой начинается запись текста. </param>
      <param name="count">Количество символов для записи. </param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="buffer" /> имеет значение null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.–либо–Длина буфера за вычетом значения параметра <paramref name="index" /> меньше значения параметра <paramref name="count" />. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
      <summary>Переписывает исходную разметку строки (вручную).</summary>
      <param name="data">Строка, содержащая текст для записи. </param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Записывает начальное значение атрибута.</summary>
      <param name="prefix">Префикс Namespace атрибута. </param>
      <param name="localName">LocalName атрибута. </param>
      <param name="ns">NamespaceURI атрибута. </param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="localName" /> — null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument">
      <summary>Записывает объявление XML с номером версии 1.0.</summary>
      <exception cref="T:System.InvalidOperationException">Это не первый метод записи, вызываемый после конструктора. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
      <summary>Записывает объявление XML с номером версии 1.0 и атрибутом standalone.</summary>
      <param name="standalone">Если значение равно true, записывается "standalone=yes"; если false, записывается "standalone=no". </param>
      <exception cref="T:System.InvalidOperationException">Это не первый метод записи, вызываемый после конструктора. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>Записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</summary>
      <param name="prefix">Префикс URI пространства имен элемента. </param>
      <param name="localName">Локальное имя элемента. </param>
      <param name="ns">URI пространства имен, который связывается с элементом.Если пространство имен уже находится в области и с ним связан префикс, средство записи автоматически запишет этот префикс.</param>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто. </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.WriteState">
      <summary>Возвращает состояние средства записи.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteString(System.String)">
      <summary>Записывает заданное текстовое содержимое.</summary>
      <param name="text">Текст для записи. </param>
      <exception cref="T:System.ArgumentException">Строка текста содержит недопустимую суррогатную пару. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Создает и записывает сущность знака-заместителя для пары знаков-заместителей.</summary>
      <param name="lowChar">Младший знак-заместитель.Это должно быть значение в диапазоне от 0xDC00 до 0xDFFF.</param>
      <param name="highChar">Старший знак-заместитель.Это должно быть значение в диапазоне от 0xD800 до 0xDBFF.</param>
      <exception cref="T:System.Exception">Передан недопустимая суррогатной пары символов. </exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
      <summary>Считывает указанное пустое пространство.</summary>
      <param name="ws">Строка знаков пустого пространства. </param>
      <exception cref="T:System.ArgumentException">Строка содержит символы, отличные от пробелов. </exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlLang">
      <summary>Возвращает текущую ограниченную область действия xml:lang.</summary>
      <returns>Текущие значения xml:lang или null, если в текущей области отсутствует xml:lang.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlSpace">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlSpace" />, представляющий текущую область xml:space.</summary>
      <returns>Объект XmlSpace, представляющий текущую область xml:space.Значение Oписание Отсутствует Значение, задаваемое по умолчанию, если область xml:space отсутствует. Default Текущая область — xml:space="default". Preserve Текущая область — xml:space="preserve". </returns>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary>Represents the XML type for the string.This allows the string to be read as a particular XML type, for example a CDATA section type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary>CDATA type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary>ID type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary>IDREF type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary>IDREFS type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary>ENTITY type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary>ENTITIES type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary>NMTOKEN type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary>NMTOKENS type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary>NOTATION type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary>ENUMERATION type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary>QName type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary>NCName type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary>No type.</summary>
    </member>
    <member name="T:System.Xml.XmlUrlResolver">
      <summary>Разрешает внешние ресурсы XML, имена которых заданы с помощью URI.</summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.#ctor">
      <summary>Создает новый экземпляр XmlUrlResolver класса.</summary>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.CachePolicy">
      <summary>Получает или задает политику кэширования для соответствующего объекта <see cref="T:System.Net.WebRequest" />.</summary>
      <returns>Объект <see cref="T:System.Net.Cache.RequestCachePolicy" />.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Credentials">
      <summary>Задает учетные данные, используемые для проверки подлинности веб-запросов.</summary>
      <returns>Объект <see cref="T:System.Net.ICredentials" />.Если свойство не задано, значением по умолчанию становится null — XmlUrlResolver не имеет учетных данных пользователя.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Отображает URI в объект, содержащий текущий ресурс.</summary>
      <returns>Объект System.IO.Stream или значение null, если в качестве типа не указан поток.</returns>
      <param name="absoluteUri">URI, возвращаемый методом <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">При загрузке URI в текущей реализации данный параметр не используется.Это используется с целью расширения дальнейших возможностей.Например, его можно отобразить в xlink:role и использовать в других скриптах при реализации в качестве аргумента.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта.В текущей реализации возвращаются только объекты System.IO.Stream.</param>
      <exception cref="T:System.Xml.XmlException">Параметр <paramref name="ofObjectToReturn" /> не является ни null, ни типом Stream. </exception>
      <exception cref="T:System.UriFormatException">Указанный URI не является абсолютным URI. </exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="absoluteUri" /> имеет значение null. </exception>
      <exception cref="T:System.Exception">Есть ошибка среды выполнения (например, разрыв подключения сервера). </exception>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Proxy">
      <summary>Получает или задает сетевой прокси-сервер для соответствующего объекта <see cref="T:System.Net.WebRequest" />.</summary>
      <returns>
        <see cref="T:System.Net.IwebProxy" /> для доступа к данному интернет-ресурсу.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary>Разрешает абсолютный URI на основе базового и относительного URI.</summary>
      <returns>Класс <see cref="T:System.Uri" />, представляющий абсолютный URI или значение null, если невозможно разрешить относительный URI.</returns>
      <param name="baseUri">Базовый URI, используемый для разрешения относительного URI.</param>
      <param name="relativeUri">URI, которые нужно разрешить.URI может быть как абсолютным, так и относительным.Если URI является абсолютным, данное значение замещает значение <paramref name="baseUri" />.Если относительным, то абсолютный URI является сочетанием относительного и <paramref name="baseUri" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri " /> равно null или <paramref name="relativeUri" /> равно null.</exception>
    </member>
    <member name="T:System.Xml.XmlValidatingReader">
      <summary>Представляет средство чтения, которое предоставляет проверку DTD, схемы XDR и языка определения схемы XML.</summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Инициализирует новый экземпляр класса XmlValidatingReader с указанными значениями.</summary>
      <param name="xmlFragment">Поток, содержащий анализируемый фрагмент XML. </param>
      <param name="fragType">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML.Определяется содержимое фрагмента (см. таблицу ниже).</param>
      <param name="context">Класс <see cref="T:System.Xml.XmlParserContext" />, в котором анализируется фрагмент XML.Это включает в себя используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущий xml:lang и область xml:space.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> не относится к одному из разрешенных типов узлов, перечисленных в таблице ниже. </exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Инициализирует новый экземпляр класса XmlValidatingReader с указанными значениями.</summary>
      <param name="xmlFragment">Строка, содержащая анализируемый фрагмент XML. </param>
      <param name="fragType">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML.Определяется также содержимое строки фрагмента (см. таблицу ниже).</param>
      <param name="context">Класс <see cref="T:System.Xml.XmlParserContext" />, в котором анализируется фрагмент XML.Это включает в себя используемый класс <see cref="T:System.Xml.NameTable" />, кодировку, область пространства имен, текущий xml:lang и область xml:space.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> не относится к одному из разрешенных типов узлов, перечисленных в таблице ниже. </exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
      <summary>Инициализирует новый экземпляр класса XmlValidatingReader, который служит для проверки содержимого, возвращаемого заданным <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Класс XmlReader, из которого при проверке данных выполняется чтение.Текущая реализация поддерживает только <see cref="T:System.Xml.XmlTextReader" />.</param>
      <exception cref="T:System.ArgumentException">Указанное средство чтения не является XmlTextReader. </exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.AttributeCount">
      <summary>Возвращает число атрибутов текущего узла.</summary>
      <returns>Число атрибутов текущего узла.В это число включены атрибуты, используемые по умолчанию.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.BaseURI">
      <summary>Возвращает базовый URI текущего узла.</summary>
      <returns>Базовый URI текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
      <summary>Возвращает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlValidatingReader" /> методы чтения двоичного содержимого.</summary>
      <returns>Значение true, если реализуются методы чтения двоичного содержимого; в противном случае — false.Для класса <see cref="T:System.Xml.XmlValidatingReader" /> оно возвращает значение true.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanResolveEntity">
      <summary>Возвращает значение, определяющее возможность анализа и разрешения объектов с помощью данного средства чтения.</summary>
      <returns>Значение true, если средство чтения позволяет анализировать и разрешать объекты; в противном случае — false.XmlValidatingReader всегда возвращает значение true.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Close">
      <summary>Изменяет значение свойства <see cref="P:System.Xml.XmlReader.ReadState" /> на Closed.</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Depth">
      <summary>Возвращает глубину текущего узла в XML-документе.</summary>
      <returns>Глубина текущего узла в XML-документе.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Encoding">
      <summary>Возвращает атрибут кодировки для документа.</summary>
      <returns>Значение кодировки.Если атрибут кодировки и метка порядка следования байтов отсутствуют, по умолчанию используется кодировка UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EntityHandling">
      <summary>Возвращает или задает значение, определяющее способ обработки объектов средством чтения.</summary>
      <returns>Одно из значений объекта <see cref="T:System.Xml.EntityHandling" />.Если значение EntityHandling не указано, по умолчанию используется значение EntityHandling.ExpandEntities.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Указано недопустимое значение. </exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EOF">
      <summary>Возвращает значение, определяющее, установлено ли средство чтения в конец потока.</summary>
      <returns>Значение true, если средство чтения установлено в конец потока; в противном случае — false.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
      <summary>Возвращает значение атрибута с заданным индексом.</summary>
      <returns>Значение указанного атрибута.</returns>
      <param name="i">Индекс атрибута.Индексация начинается с нуля.(Индекс первого атрибута равен нулю).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше или равен 0 или больше или равен <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />. </exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
      <summary>Возвращает значение атрибута с указанным именем.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден, возвращается значение null.</returns>
      <param name="name">Проверенное имя атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
      <summary>Возвращает значение атрибута с заданным локальным именем и URI пространства имен.</summary>
      <returns>Значение указанного атрибута.Если атрибут не найден, возвращается значение null.Этот метод не перемещает средство чтения.</returns>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.HasLineInfo">
      <summary>Возвращает значение, определяющее возможность возвращения классом сведений о строке.</summary>
      <returns>Значение true, если класс может возвратить сведения о строке, в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.HasValue">
      <summary>Возвращает значение, определяющие наличие у текущего узла свойства <see cref="P:System.Xml.XmlValidatingReader.Value" />, значение которого отличается от String.Empty.</summary>
      <returns>Значение true, если узел, на котором расположено средство чтения, может иметь значение Value; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsDefault">
      <summary>Возвращает значение, определяющее, является ли текущий узел атрибутом, созданным из значения по умолчанию, определенного в DTD или схеме.</summary>
      <returns>Значение true, если текущий узел является атрибутом, значение которого было создано из значения по умолчанию, определенного в DTD или схеме; значение false, если значение атрибута было задано явно.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsEmptyElement">
      <summary>Возвращает значение, определяющее является ли текущий узел пустым элементом (например, &lt;MyElement/&gt;).</summary>
      <returns>Значение true, если текущий узел является элементом (свойство <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> имеет значение XmlNodeType.Element), который заканчивается на /&gt;; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LineNumber">
      <summary>Получает текущий номер строки.</summary>
      <returns>Текущий номер строки.Начальное значение свойства — 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LinePosition">
      <summary>Получает текущее положение строки.</summary>
      <returns>Текущее положение строки.Начальное значение свойства — 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LocalName">
      <summary>Получает локальное имя текущего узла.</summary>
      <returns>Имя текущего узла с удаленным префиксом.Например, LocalName имеет значение book для элемента &lt;bk:book&gt;.Для безымянных типов узлов (например, Text, Comment и т. д.) данное свойство возвращает String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
      <summary>Разрешает префикс пространства имен в ограниченной области действия текущего элемента.</summary>
      <returns>URI пространства имен, которое отображает префикс, или значение null, если соответствующий префикс не найден.</returns>
      <param name="prefix">Префикс, URI пространства имен которого следует разрешить.Чтобы сопоставить пространство имен по умолчанию, необходимо передать пустую строку.</param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
      <summary>Перемещает к атрибуту с указанным индексом.</summary>
      <param name="i">Индекс атрибута. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше или равен 0 или больше или равен <see cref="P:System.Xml.XmlReader.AttributeCount" />. </exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
      <summary>Перемещает к атрибуту с указанным именем.</summary>
      <returns>Значение true, если атрибут найден; в противном случае — false.Если значение false, позиция средства чтения не изменяется.</returns>
      <param name="name">Проверенное имя атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
      <summary>Перемещается на атрибут с заданным локальным именем и URI пространства имен.</summary>
      <returns>Значение true, если атрибут найден; в противном случае — false.Если значение false, позиция средства чтения не изменяется.</returns>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="namespaceURI">URI пространства имен атрибута. </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToElement">
      <summary>Перемещает к элементу, содержащему текущий узел атрибута.</summary>
      <returns>Значение true, если средство чтения находится на атрибуте (средство чтения перемещается к элементу с этим атрибутом); в противном случае — false (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
      <summary>Перемещается к первому атрибуту.</summary>
      <returns>Значение true, если атрибут существует (средство чтения перемещается к первому атрибуту); в противном случае — false (позиция средства чтения не изменяется).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
      <summary>Перемещается к следующему атрибуту.</summary>
      <returns>Значение true, если присутствует следующий атрибут; значение false, если другие атрибуты отсутствуют.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Name">
      <summary>Возвращает проверенное имя текущего узла.</summary>
      <returns>Проверенное имя текущего узла.Например, Name имеет значение bk:book для элемента &lt;bk:book&gt;.Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> узла.Следующие типы узлов возвращают представленные значения.Другие типы узлов возвращают пустую строку.Тип узла Имя AttributeИмя атрибута. DocumentTypeИмя типа документа. ElementИмя тега. EntityReferenceИмя сущности, на которую существует ссылка. ProcessingInstructionКонечное приложение инструкции обработки. XmlDeclarationСтрока символов xml. </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Namespaces">
      <summary>Возвращает или задает значение, показывающее, осуществляется ли поддержка пространства имен.</summary>
      <returns>Значение true — поддержка осуществляется; в противном случае — false.Значение по умолчанию – true.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NamespaceURI">
      <summary>При переопределении в производном классе получает URI пространства имен (определенное в спецификации W3C, посвященной пространствам имен) узла, на котором расположено средство чтения.</summary>
      <returns>URI пространства имен текущего узла; в противном случае — пустая строка.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NameTable">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
      <returns>Класс XmlNameTable, позволяющий получать в узле разделенную версию строки.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NodeType">
      <summary>Возвращает тип текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlNodeType" />, предоставляющее тип текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Prefix">
      <summary>Возвращает префикс пространства имен, связанный с текущим узлом.</summary>
      <returns>Префикс пространства имен, связанный с текущим узлом.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.QuoteChar">
      <summary>Возвращает знак кавычек для выделения значения узла атрибута.</summary>
      <returns>Знак кавычек (" или ') для выделения значения узла атрибута.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Read">
      <summary>Считывает следующий узел из потока.</summary>
      <returns>Значение true, если чтение прошло успешно; значение false, если отсутствуют узлы для чтения.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
      <summary>Разбирает значение атрибута в один или несколько узлов Text, EntityReference или EndEntity.</summary>
      <returns>Значение true, если присутствуют возвращаемые узлы.Значение false, если средство чтения не расположено на узле атрибута при первом вызове или все значения атрибута считаны.Пустой атрибут (например, misc="") возвращает значение true с отдельным узлом, имеющим значение String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает содержимое и возвращает раскодированные двоичные байты BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Эта реализация <see cref="T:System.Xml.XmlValidatingReader" /> не поддерживает данный метод.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и раскодирует содержимое Base64.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Эта реализация <see cref="T:System.Xml.XmlValidatingReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Невозможно преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Считывает элемент и раскодирует содержимое BinHex.</summary>
      <returns>Число байтов, записываемых в буфер.</returns>
      <param name="buffer">Буфер, в который копируется получаемый текст.Это значение не может быть равно null.</param>
      <param name="index">Смещение в буфере, где следует начать копировать результат.</param>
      <param name="count">Максимальное число копируемых в буфер байтов.Этим методом возвращается фактическое количество скопированных байтов.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение count индекса в буфере или индекса + больше, чем выделенный размер буфера.</exception>
      <exception cref="T:System.NotSupportedException">Эта реализация <see cref="T:System.Xml.XmlValidatingReader" /> не поддерживает данный метод.</exception>
      <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
      <exception cref="T:System.FormatException">Невозможно преобразовать содержимое в требуемый тип.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Reader">
      <summary>Возвращает класс <see cref="T:System.Xml.XmlReader" />, используемый для создания XmlValidatingReader.</summary>
      <returns>XmlReader, задающий конструктор.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ReadState">
      <summary>Возвращает состояние средства чтения.</summary>
      <returns>Одно из значений объекта <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadString">
      <summary>Считывает содержимое элемента или текстового узла в виде строки.</summary>
      <returns>Содержимое текстового узла или узла элемента.Если средство чтения находится не на узле элемента или текстовом узле, а также если отсутствует возвращаемый текст, это может быть пустая строка.ПримечаниеТекстовым узлом может быть текстовый узел элемента или текстовый узел атрибута.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadTypedValue">
      <summary>Возвращает тип общеязыковой среды выполнения для указанного типа языка определения схем XML (XSD).</summary>
      <returns>Тип общеязыковой среды выполнения для указанного типа XSD.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ResolveEntity">
      <summary>Разрешает ссылки на сущности для узлов EntityReference.</summary>
      <exception cref="T:System.InvalidOperationException">Средство чтения не расположено на узле EntityReference. </exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Schemas">
      <summary>Возвращает класс <see cref="T:System.Xml.Schema.XmlSchemaCollection" />, который будет использоваться при проверке данных.</summary>
      <returns>Класс XmlSchemaCollection, используемый при проверке данных.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.SchemaType">
      <summary>Возвращает объект с типом схемы.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> или <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, тип которого зависит от типа (XSD-схема или определяемый пользователем тип simpleType или complexType), к которому принадлежит значение узла; значение null, если у текущего узла отсутствует тип схемы.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <returns>Объект T:System.Collections.IDictionary, определяющий пространства имен в области действия.</returns>
      <param name="scope">Объект <see cref="T:System.Xml.XmlNamespaceScope" />, определяющий область действия объекта чтения.</param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <returns>Строковое значение, содержащее универсальный код ресурса (URI) пространства имен, связанный с данным префиксом.</returns>
      <param name="prefix">Префикс пространства имен.</param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <returns>Строковое значение, содержащее префикс пространства имен, связанный со значением <paramref name="namespaceName" />.</returns>
      <param name="namespaceName">Пространство имен, связанное с префиксом.</param>
    </member>
    <member name="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
      <summary>Задает обработчик событий для получения сведений об ошибках проверки DTD, XDR- и XSD-схем.</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ValidationType">
      <summary>Возвращает или задает значение, указывающее тип выполняемой проверки.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.ValidationType" />.Если это свойство не задано, то по умолчанию используется тип ValidationType.Auto.</returns>
      <exception cref="T:System.InvalidOperationException">Задает значение свойства после вызова Read. </exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Value">
      <summary>Возвращает текстовое значение текущего узла.</summary>
      <returns>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> узла.В следующей таблице представлен список возвращаемых типов узлов со значениями.Другие типы узлов возвращают String.Empty.Тип узла Значение AttributeЗначение атрибута. CDATAСодержимое раздела CDATA. CommentСодержимое комментария. DocumentTypeВнутреннее подмножество. ProcessingInstructionПолное содержимое, исключая конечное приложение. SignificantWhitespaceПустое пространство в разметке модели со смешанным содержимым. TextСодержимое текстового узла. WhitespaceПустое пространство между разметкой. XmlDeclarationСодержимое объявления. </returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlLang">
      <summary>Возвращает текущую ограниченную область действия xml:lang.</summary>
      <returns>Текущая ограниченная область действия xml:lang.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlResolver">
      <summary>Задает <see cref="T:System.Xml.XmlResolver" /> для разрешения внешних DTD и ссылок на расположение схем.Кроме того, XmlResolver используется для обработки любых импортированных или добавленных элементов, найденных в XSD-схемах.</summary>
      <returns>Объект XmlResolver, который нужно использовать.Если он имеет значение null, внешние ресурсы не разрешаются.В .NET Framework версии 1.1 вызывающий объект должен иметь полное доверие, чтобы иметь возможность указывать XmlResolver.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlSpace">
      <summary>Возвращает текущую ограниченную область действия xml:space.</summary>
      <returns>Одно из значений объекта <see cref="T:System.Xml.XmlSpace" />.Если ограниченная область действия xml:space отсутствует, данное свойство принимает значение XmlSpace.None.</returns>
    </member>
    <member name="T:System.Xml.XmlWhitespace">
      <summary>Represents white space in element content.</summary>
    </member>
    <member name="M:System.Xml.XmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.XmlWhitespace" /> class.</summary>
      <param name="strData">The white space characters of the node.</param>
      <param name="doc">The <see cref="T:System.Xml.XmlDocument" /> object.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
      <summary>Creates a duplicate of this node.</summary>
      <returns>The cloned node.</returns>
      <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.For white space nodes, the cloned node always includes the data value, regardless of the parameter setting.</param>
    </member>
    <member name="P:System.Xml.XmlWhitespace.LocalName">
      <summary>Gets the local name of the node.</summary>
      <returns>For XmlWhitespace nodes, this property returns #whitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Name">
      <summary>Gets the qualified name of the node.</summary>
      <returns>For XmlWhitespace nodes, this property returns #whitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.NodeType">
      <summary>Gets the type of the node.</summary>
      <returns>For XmlWhitespace nodes, the value is <see cref="F:System.Xml.XmlNodeType.Whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.ParentNode">
      <summary>Gets the parent of the current node.</summary>
      <returns>The <see cref="T:System.Xml.XmlNode" /> parent node of the current node.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Value">
      <summary>Gets or sets the value of the node.</summary>
      <returns>The white space characters found in the node.</returns>
      <exception cref="T:System.ArgumentException">Setting <see cref="P:System.Xml.XmlWhitespace.Value" /> to invalid white space characters. </exception>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The <see cref="T:System.Xml.XmlWriter" /> to which you want to save. </param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">The <see cref="T:System.Xml.XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary>Представляет средство записи, обеспечивающее быстрый прямой способ (без кэширования) создания потоков файлов, содержащих XML-данные.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary>При переопределении в производном классе закрывает данный поток и основной поток.</summary>
      <exception cref="T:System.InvalidOperationException">Вызов для записи дополнительных выходных данных выполнен после вызова Close или результатом данного вызова является неверный XML-документ. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанного потока.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Поток, в который будет выполняться запись.<see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stream" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с помощью потока и объекта <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Поток, в который будет выполняться запись.<see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному потоку.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlWriter" /> .Если значение равно null, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.Если <see cref="T:System.Xml.XmlWriter" /> используется вместе с методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, необходимо использовать свойство <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> для получения объекта <see cref="T:System.Xml.XmlWriterSettings" /> с верными параметрами.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stream" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с помощью указанного <see cref="T:System.IO.TextWriter" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.IO.TextWriter" />, в которое необходимо записать.<see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному <see cref="T:System.IO.TextWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="text" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" />, используя объекты <see cref="T:System.IO.TextWriter" /> и <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.IO.TextWriter" />, в которое необходимо записать.<see cref="T:System.Xml.XmlWriter" /> записывает синтаксис текста XML 1.0 и добавляет его к указанному <see cref="T:System.IO.TextWriter" />.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlWriter" /> .Если значение равно null, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.Если <see cref="T:System.Xml.XmlWriter" /> используется вместе с методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, необходимо использовать свойство <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> для получения объекта <see cref="T:System.Xml.XmlWriterSettings" /> с верными параметрами.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="text" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанного имени файла.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="outputFileName">Файл, в который будет выполняться запись.Метод <see cref="T:System.Xml.XmlWriter" /> создает файл по указанному пути и записывает в него, используя синтаксис текста XML 1.0.Параметр <paramref name="outputFileName" /> должен являться путем файловой системы.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="url" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с помощью имени файла и объекта <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="outputFileName">Файл, в который будет выполняться запись.Метод <see cref="T:System.Xml.XmlWriter" /> создает файл по указанному пути и записывает в него, используя синтаксис текста XML 1.0.Параметр <paramref name="outputFileName" /> должен являться путем файловой системы.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlWriter" /> .Если значение равно null, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.Если <see cref="T:System.Xml.XmlWriter" /> используется вместе с методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, необходимо использовать свойство <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> для получения объекта <see cref="T:System.Xml.XmlWriterSettings" /> с верными параметрами.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="url" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с помощью указанного <see cref="T:System.Text.StringBuilder" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Класс <see cref="T:System.Text.StringBuilder" />, с помощью которого осуществляется запись.Содержимое, записанное методом <see cref="T:System.Xml.XmlWriter" />, добавляется в <see cref="T:System.Text.StringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="builder" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием объектов <see cref="T:System.Text.StringBuilder" /> и <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Класс <see cref="T:System.Text.StringBuilder" />, с помощью которого осуществляется запись.Содержимое, записанное методом <see cref="T:System.Xml.XmlWriter" />, добавляется к <see cref="T:System.Text.StringBuilder" />.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlWriter" /> .Если значение равно null, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.Если <see cref="T:System.Xml.XmlWriter" /> используется вместе с методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, необходимо использовать свойство <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> для получения объекта <see cref="T:System.Xml.XmlWriterSettings" /> с верными параметрами.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="builder" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с помощью указанного объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, являющийся оболочкой указанного объекта <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Объект <see cref="T:System.Xml.XmlWriter" />, который следует использовать в качестве базового средства записи.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="writer" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary>Создает новый экземпляр <see cref="T:System.Xml.XmlWriter" /> с использованием указанных объектов <see cref="T:System.Xml.XmlWriter" /> и <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, являющийся оболочкой указанного объекта <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Объект <see cref="T:System.Xml.XmlWriter" />, который следует использовать в качестве базового средства записи.</param>
      <param name="settings">Объект <see cref="T:System.Xml.XmlWriterSettings" />, использованный для настройки нового экземпляра<see cref="T:System.Xml.XmlWriter" /> .Если значение равно null, используется <see cref="T:System.Xml.XmlWriterSettings" /> с параметрами по умолчанию.Если <see cref="T:System.Xml.XmlWriter" /> используется вместе с методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, необходимо использовать свойство <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> для получения объекта <see cref="T:System.Xml.XmlWriterSettings" /> с верными параметрами.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="writer" /> равно null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xml.XmlWriter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение true, чтобы освободить все ресурсы (управляемые и неуправляемые); значение false, чтобы освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary>При переопределении в производном классе сбрасывает в основной поток содержимое буфера, а также очищает основной поток.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary>При переопределении в производном классе возвращает ближайший префикс для URI пространства имен, определенный в текущей области пространства имен.</summary>
      <returns>Соответствующий префикс или значение null, если в текущей области отсутствует соответствующий URI пространства имен.</returns>
      <param name="ns">URI пространства имен, префикс которого нужно найти. </param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="ns" /> — null или String.Empty. </exception>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary>Получает объект <see cref="T:System.Xml.XmlWriterSettings" />, используемый для создания данного экземпляра <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriterSettings" />, используемый для создания этого экземпляра средства записи.Если это средство записи не было создано с помощью метода <see cref="Overload:System.Xml.XmlWriter.Create" />, это свойство возвращает null.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.System#IDisposable#Dispose">
      <summary>Описание этого элемента см. в разделе, посвященном <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary>При переопределении в производном классе считывает все атрибуты, найденные в текущей позиции в классе <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">XmlReader, из которого происходит копирование атрибутов. </param>
      <param name="defattr">Значение true — копирование атрибутов по умолчанию из класса XmlReader; в противном случае — false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> имеет значение null; </exception>
      <exception cref="T:System.Xml.XmlException">Средство чтения не расположено на узле elementattributeXmlDeclaration. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary>При переопределении в производном классе считывает атрибут с указанным локальным именем и значением.</summary>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="value">Значение атрибута. </param>
      <exception cref="T:System.InvalidOperationException">Состояние записи не WriteState.Element или средство записи закрыто. </exception>
      <exception cref="T:System.ArgumentException">Атрибут xml:space или xml:lang является недопустимым. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary>При переопределении в производном классе записывает атрибут с указанным локальным именем, URI пространства имен и значением.</summary>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="ns">URI пространства имен, который связывается с атрибутом. </param>
      <param name="value">Значение атрибута. </param>
      <exception cref="T:System.InvalidOperationException">Состояние записи не WriteState.Element или средство записи закрыто. </exception>
      <exception cref="T:System.ArgumentException">Атрибут xml:space или xml:lang является недопустимым. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary>При переопределении в производном классе считывает атрибут с указанным префиксом, локальным именем, URI пространства имен и значением.</summary>
      <param name="prefix">Префикс пространства имен атрибута. </param>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="ns">URI пространства имен атрибута. </param>
      <param name="value">Значение атрибута. </param>
      <exception cref="T:System.InvalidOperationException">Состояние записи не WriteState.Element или средство записи закрыто. </exception>
      <exception cref="T:System.ArgumentException">Атрибут xml:space или xml:lang является недопустимым. </exception>
      <exception cref="T:System.Xml.XmlException">Значение <paramref name="localName" /> или <paramref name="ns" /> равно null. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе преобразует указанный набор двоичных байтов к виду Base64 и выводит получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов. </param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов. </param>
      <param name="count">Количество записываемых байтов. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> имеет значение null; </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра равно <paramref name="index" /> или <paramref name="count" /> меньше нуля. — или —Длина буфера за вычетом значения параметра <paramref name="index" /> меньше значения параметра <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе преобразует указанный набор двоичных байтов как BinHex и выводит получившийся текст.</summary>
      <param name="buffer">Кодируемый массив байтов. </param>
      <param name="index">Позиция в буфере, с которой начинается запись байтов. </param>
      <param name="count">Количество записываемых байтов. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> имеет значение null; </exception>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто или находится в состоянии ошибки.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра равно <paramref name="index" /> или <paramref name="count" /> меньше нуля. — или —Длина буфера за вычетом значения параметра <paramref name="index" /> меньше значения параметра <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary>При переопределении в производном классе считывает блок &lt;![CDATA[...]]&gt;, содержащий заданный текст.</summary>
      <param name="text">Текст, записываемый в блок CDATA. </param>
      <exception cref="T:System.ArgumentException">Текст приведет к плохому формированию документа XML. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary>При переопределении в производном классе вызывает создание сущности знака для указанного значения знака Юникода.</summary>
      <param name="ch">Знак Юникода, для которого создается сущность. </param>
      <exception cref="T:System.ArgumentException">Символ находится в диапазоне пары символов-суррогатов, 0xd800 - 0xdfff. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>При переопределении в производном классе записывает текст в один буфер за раз.</summary>
      <param name="buffer">Массив знаков, содержащий текст для записи. </param>
      <param name="index">Позиция в буфере, с которой начинается запись текста. </param>
      <param name="count">Количество символов для записи. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> имеет значение null; </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра равно <paramref name="index" /> или <paramref name="count" /> меньше нуля. — или —Длина буфера за вычетом <paramref name="index" /> меньше <paramref name="count" />; вызов приводит к разделению знаков пары символов-заместителей или к недопустимой записи пары заместителей.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="buffer" /> является недопустимым.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary>При переопределении в производном классе считывает примечание &lt;!--...--&gt;, содержащее заданный текст.</summary>
      <param name="text">Текст, записываемый в примечание. </param>
      <exception cref="T:System.ArgumentException">Текст приведет к плохому формированию документа XML. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>При переопределении в производном классе записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</summary>
      <param name="name">Имя DOCTYPE.Не должно быть пустым.</param>
      <param name="pubid">Если значение не равно нулю, записывается также PUBLIC "pubid" "sysid", где <paramref name="pubid" /> и <paramref name="sysid" /> заменяются значениями заданных аргументов. </param>
      <param name="sysid">Если параметр <paramref name="pubid" /> имеет значение null, а параметр <paramref name="sysid" /> не равен нулю, записывается SYSTEM "sysid", где <paramref name="sysid" /> замещается значением данного аргумента. </param>
      <param name="subset">Если не равно нулю, записывается [subset], где subset замещается значением данного аргумента. </param>
      <exception cref="T:System.InvalidOperationException">Этот метод был вызван вне пролога (после корневого элемента). </exception>
      <exception cref="T:System.ArgumentException">Значение <paramref name="name" /> приведет к недопустимому XML. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary>Записывает элемент с заданными локальным именем и значением.</summary>
      <param name="localName">Локальное имя элемента. </param>
      <param name="value">Значение элемента. </param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="localName" /> — null или пустая строка.— или —Значение параметра является недопустимым.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Записывает элемент с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя элемента. </param>
      <param name="ns">URI пространства имен, который связывается с элементом. </param>
      <param name="value">Значение элемента. </param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="localName" /> — null или пустая строка.— или —Значение параметра является недопустимым. </exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary>Записывает элемент с заданным локальным именем и URI пространства имен.</summary>
      <param name="prefix">Префикс элемента.</param>
      <param name="localName">Локальное имя элемента.</param>
      <param name="ns">URI пространства имен элемента.</param>
      <param name="value">Значение элемента.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="localName" /> — null или пустая строка.— или —Значение параметра является недопустимым.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary>При переопределении в производном классе закрывает вызов предыдущего метода <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary>При переопределении в производном классе закрывает все открытые элементы или атрибуты и возвращает средство записи в состояние Start.</summary>
      <exception cref="T:System.ArgumentException">Недопустимый документ XML. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary>При переопределении в производном классе закрывает один элемент и извлекает соответствующую область пространства имен.</summary>
      <exception cref="T:System.InvalidOperationException">Это приводит к недопустимому XML-документу. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary>При переопределении в производном классе считывает ссылку на сущность в виде &amp;name;.</summary>
      <param name="name">Имя ссылки на сущность. </param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="name" /> — null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary>При переопределении в производном классе закрывает один элемент и извлекает соответствующую область пространства имен.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary>При переопределении в производном классе считывает указанное имя, гарантируя его допустимость согласно рекомендации W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Записываемое имя. </param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> не является допустимым именем XML; или <paramref name="name" /> равен null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary>При переопределении в производном классе считывает указанное имя, гарантируя допустимость NmToken согласно рекомендациям W3C по языку XML версии 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Записываемое имя. </param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> не является допустимым NmToken; или <paramref name="name" /> равен null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>При переопределении в производном классе копирует все данные из средства чтения в средство записи и перемещает средство чтения в начало следующего узла того же уровня.</summary>
      <param name="reader">Класс <see cref="T:System.Xml.XmlReader" />, из которого выполняется чтение. </param>
      <param name="defattr">Значение true — копирование атрибутов по умолчанию из класса XmlReader; в противном случае — false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> имеет значение null; </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> содержит недопустимые символы. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>Копирует все из объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> в средство записи.Позиция <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменной.</summary>
      <param name="navigator">
        <see cref="T:System.Xml.XPath.XPathNavigator" />, из которого следует выполнить копирование.</param>
      <param name="defattr">Значение true — копирование атрибутов по умолчанию; в противном случае — false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>При переопределении в производном классе выводит инструкцию обработки с пробелом между именем и текстом в следующем виде: &lt;?имя текст?&gt;.</summary>
      <param name="name">Имя инструкции обработки. </param>
      <param name="text">Текст для инструкции обработки. </param>
      <exception cref="T:System.ArgumentException">Текст приведет к плохому формированию документа XML.Значение параметра <paramref name="name" /> — null или String.Empty.Этот метод используется для создания XML-объявления после того, как <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> уже был вызван. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary>При переопределении в производном классе считывает проверенное имя пространства имен.Этот метод ищет префикс для пространства имен в его области.</summary>
      <param name="localName">Локальное имя для записи. </param>
      <param name="ns">URI пространства имен для имени. </param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="localName" /> — null или String.Empty.<paramref name="localName" /> является недопустимым именем. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Считывает исходную разметку из буфера знаков (вручную) при переопределении в производном классе.</summary>
      <param name="buffer">Массив знаков, содержащий текст для записи. </param>
      <param name="index">Позиция в буфере, с которой начинается запись текста. </param>
      <param name="count">Количество символов для записи. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> имеет значение null; </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра равно <paramref name="index" /> или <paramref name="count" /> меньше нуля. — или —Длина буфера за вычетом значения параметра <paramref name="index" /> меньше значения параметра <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary>Считывает исходную разметку из строки (вручную) при переопределении в производном классе.</summary>
      <param name="data">Строка, содержащая текст для записи. </param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="data" /> — null или String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary>Записывает начала атрибута с заданным локальным именем.</summary>
      <param name="localName">Локальное имя атрибута.</param>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто. </exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary>Записывает начала атрибута с заданным локальным именем и URI пространства имен.</summary>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="ns">URI пространства имен атрибута. </param>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>При переопределении в производном классе записывает начало атрибута с указанным префиксом, локальным именем и URI пространства имен.</summary>
      <param name="prefix">Префикс пространства имен атрибута. </param>
      <param name="localName">Локальное имя атрибута. </param>
      <param name="ns">URI пространства имен атрибута. </param>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary>При переопределении в производном классе записывает объявление XML с номером версии 1.0.</summary>
      <exception cref="T:System.InvalidOperationException">Это не первый метод записи, вызываемый после конструктора. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary>При переопределении в производном классе записывает объявление XML с номером версии "1.0" и автономным атрибутом.</summary>
      <param name="standalone">Если значение равно true, записывается "standalone=yes"; если false, записывается "standalone=no". </param>
      <exception cref="T:System.InvalidOperationException">Это не первый метод записи, вызываемый после конструктора. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary>При переопределении в производном классе считывает открывающий тег с указанным локальным именем.</summary>
      <param name="localName">Локальное имя элемента. </param>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто. </exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary>При переопределении в производном классе записывает указанный открывающий тег и связывает его с заданным пространством имен.</summary>
      <param name="localName">Локальное имя элемента. </param>
      <param name="ns">URI пространства имен, который связывается с элементом.Если пространство имен уже находится в области и с ним связан префикс, средство записи автоматически запишет этот префикс.</param>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто. </exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>При переопределении в производном классе записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</summary>
      <param name="prefix">Префикс URI пространства имен элемента. </param>
      <param name="localName">Локальное имя элемента. </param>
      <param name="ns">URI пространства имен, который связывается с элементом. </param>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто. </exception>
      <exception cref="T:System.Text.EncoderFallbackException">В буфере присутствует символ, который является допустимым символом XML, но недопустим для кодирования вывода.Например, если выходные данные в кодировке ASCII, для имен элементов и атрибутов следует использовать только символы из диапазона от 0 до 127.Недопустимый символ может быть в аргументе этого метода или в каком-либо аргументе предыдущих методов, которые осуществляли запись в буфер.Такие знаки экранируются по возможности с помощью ссылок на сущности знаков (например, в текстовых узлах или значениях атрибутов).Однако ссылка на сущность знака не допускается в именах элементов и атрибутов, комментариях, инструкциях по обработке и разделах CDATA.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary>Возвращает состояние средства записи при переопределении в производном классе.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary>Записывает заданное текстовое содержимое при переопределении в производном классе.</summary>
      <param name="text">Текст для записи. </param>
      <exception cref="T:System.ArgumentException">Строка текста содержит недопустимую суррогатную пару. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>При переопределении в производном классе создает и записывает сущность знака-заместителя для пары знаков-заместителей.</summary>
      <param name="lowChar">Младший знак-заместитель.Это должно быть значение в диапазоне от 0xDC00 до 0xDFFF.</param>
      <param name="highChar">Старший знак-заместитель.Это должно быть значение в диапазоне от 0xD800 до 0xDBFF.</param>
      <exception cref="T:System.ArgumentException">Передана недопустимая суррогатная пара символов. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary>Записывает значение <see cref="T:System.Boolean" />.</summary>
      <param name="value">Значение <see cref="T:System.Boolean" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary>Записывает значение <see cref="T:System.DateTime" />.</summary>
      <param name="value">Значение типа <see cref="T:System.DateTime" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary>Записывает значение <see cref="T:System.Decimal" />.</summary>
      <param name="value">Значение типа <see cref="T:System.Decimal" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary>Записывает значение <see cref="T:System.Double" />.</summary>
      <param name="value">Значение типа <see cref="T:System.Double" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary>Записывает значение <see cref="T:System.Int32" />.</summary>
      <param name="value">Значение типа <see cref="T:System.Int32" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary>Записывает значение <see cref="T:System.Int64" />.</summary>
      <param name="value">Значение типа <see cref="T:System.Int64" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary>Записывает значение объекта.</summary>
      <param name="value">Значение объекта для записи. ПримечаниеС выпуском платформы .NET Framework 3.5 этот метод принимает <see cref="T:System.DateTimeOffset" /> в качестве параметра.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Средство записи закрыто или находится в состоянии ошибки.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary>Записывает число с плавающей запятой обычной точности.</summary>
      <param name="value">Обычной точности число с плавающей запятой для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary>Записывает значение <see cref="T:System.String" />.</summary>
      <param name="value">Значение типа <see cref="T:System.String" /> для записи.</param>
      <exception cref="T:System.ArgumentException">Указано недопустимое значение.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary>При переопределении в производном классе считывает указанный пробел.</summary>
      <param name="ws">Строка пробелов. </param>
      <exception cref="T:System.ArgumentException">Строка содержит символы, отличные от пробелов. </exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary>При переопределении в производном классе получает текущую ограниченную область действия xml:lang.</summary>
      <returns>Текущая ограниченная область действия xml:lang.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary>При переопределении в производном классе возвращает класс <see cref="T:System.Xml.XmlSpace" />, предоставляющий текущую область xml:space.</summary>
      <returns>Объект XmlSpace, представляющий текущую область xml:space.Значение Описание NoneЗначение, задаваемое по умолчанию, если область xml:space отсутствует. DefaultТекущая область — xml:space="default". PreserveТекущая область — xml:space="preserve". </returns>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary>Задает набор функций, которые должны поддерживаться объектом <see cref="T:System.Xml.XmlWriter" />, создаваемым с помощью метода <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary>Возвращает или задает значение, показывающее, осуществляется ли проверка символов.</summary>
      <returns>Значение true — проверка осуществляется; в противном случае — false.Значение по умолчанию — true.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary>Создает копию экземпляра <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Точная копия объекта <see cref="T:System.Xml.XmlWriterSettings" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary>Возвращает или задает значение, указывающее, следует ли объекту <see cref="T:System.Xml.XmlWriter" /> закрывать также и основной поток или <see cref="T:System.IO.TextWriter" /> при вызове метода <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns>Значение true, если следует закрыть и основной поток или <see cref="T:System.IO.TextWriter" />; в противном случае — false.По умолчанию установлено значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary>Возвращает или задает уровень соответствия для <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.ConformanceLevel" />.Значением по умолчанию является ConformanceLevel.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary>Получает или задает тип используемой кодировки текста.</summary>
      <returns>Используемая кодировка текста.Значение по умолчанию — Encoding.UTF8.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary>Возвращает или задает значение, указывающее, следует ли использовать отступ для элементов.</summary>
      <returns>Значение true, если необходимо записывать отдельные элементы в новых строках с отступом; в противном случае — false.По умолчанию установлено значение false.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary>Возвращает или задает строку символов, которую следует использовать при отступах.Этот параметр используется, если значение свойства <see cref="P:System.Xml.XmlWriterSettings.Indent" /> равно true.</summary>
      <returns>Строка символов, которую следует использовать при отступах.Может принять любое строчное значение.Однако в целях обеспечения допустимого XML-кода, необходимо указывать только допустимые символы строковых пробелов, например символы пробела, табуляции, возврата каретки или перевода строки.По умолчанию используется два пробела.</returns>
      <exception cref="T:System.ArgumentNullException">Свойству <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> присваивается значение null. </exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary>Получает или задает значение, указывающие, должен ли объект <see cref="T:System.Xml.XmlWriter" /> при записи содержимого XML удалять дубликаты объявлений пространств имен.По умолчанию объект записи выводит объявления пространств имен, присутствующие в его распознавателе пространств имен.</summary>
      <returns>Перечисление <see cref="T:System.Xml.NamespaceHandling" />, которое указывает, нужно ли удалять дубликаты объявлений пространств имен в объекте <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary>Возвращает или задает строку символов, которую следует использовать для разрывов строк. </summary>
      <returns>Строка символов, которую следует использовать для разрывов строк.Может принять любое строчное значение.Однако в целях обеспечения допустимого XML-кода, необходимо указывать только допустимые символы строковых пробелов, например символы пробела, табуляции, возврата каретки или перевода строки.Значение по умолчанию — \r\n (возврат каретки, новая строка).</returns>
      <exception cref="T:System.ArgumentNullException">Свойству <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> присваивается значение null. </exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary>Возвращает или задает значение, показывающее, осуществляется нормализация разрывов строк в выходных данных.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.NewLineHandling" />.Значением по умолчанию является <see cref="F:System.Xml.NewLineHandling.Replace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary>Возвращает или задает значение, указывающее, следует ли записывать атрибуты в новой строке.</summary>
      <returns>Значение true, если необходимо записывать атрибуты в отдельные строки; в противном случае — false.По умолчанию установлено значение false.ПримечаниеЭтот параметр ни на что не влияет, если значение свойства  <see cref="P:System.Xml.XmlWriterSettings.Indent" /> равно false.Если значение объекта <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> равно true, каждому атрибуту предшествует новая строка и дополнительный уровень отступа.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary>Возвращает или задает значение, определяющее, следует ли записывать XML-объявление.</summary>
      <returns>Значение true, если необходимо исключить XML-объявление; в противном случае — false.Значением по умолчанию является false; XML-объявление записывается.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OutputMethod">
      <summary>Возвращает метод, используемый для сериализации выходных данных объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XmlOutputMethod" />.Значением по умолчанию является <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary>Повторно загружает значения по умолчанию для элементов класса параметров.</summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Settings">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlReaderSettings" />, используемый для создания этого экземпляра <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReaderSettings" />, используемый для создания этого экземпляра <see cref="T:System.Xml.XmlTextReader" />; null если средство чтения не было создано с помощью метода <see cref="Overload:System.Xml.XmlReader.Create" />. </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.FromBinHexString(System.String)"></member>
    <member name="M:System.Xml.XmlConvert.ToBinHexString(System.Byte[])"></member>
    <member name="P:System.Xml.XmlResolver.NameTable"></member>
    <member name="T:System.Xml.Resolvers.XmlKnownDtds">
      <summary>Перечисление <see cref="T:System.Xml.Resolvers.XmlKnownDtds" /> используется распознавателем <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />и определяет известные DTD, распознаваемые с помощью <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.None">
      <summary>Указывает, что <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> не будет распознавать никакие предопределенные DTD.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Xhtml10">
      <summary>Указывает, что <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> будет распознавать DTD и сущности, определенные в спецификации XHTML 1.0. </summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Rss091">
      <summary>Указывает, что <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> будет распознавать DTD и сущности, определенные в спецификации RSS 0.91.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.All">
      <summary>Указывает, что <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> будет распознавать все поддерживаемые в данный момент DTD.Это поведение установлено по умолчанию.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlPreloadedResolver">
      <summary>Тип <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> используется для предварительной записи в кэш определений DTD и потоков XML. </summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />. </summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> указанными предварительно загруженными известными DTD. </summary>
      <param name="preloadedDtds">Известные DTD, которые необходимо предварительно записать в кэш. </param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> указанным резервным распознавателем.</summary>
      <param name="fallbackResolver">XmlResolver, XmlXapResolver или собственный распознаватель пользователя.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> указанным резервным распознавателем и предварительно загруженными известными DTD. </summary>
      <param name="fallbackResolver">XmlResolver, XmlXapResolver или собственный распознаватель пользователя.</param>
      <param name="preloadedDtds">Известные DTD, которые необходимо предварительно записать в кэш. </param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> указанным резервным распознавателем, предварительно загруженными известными DTD и компаратором проверки на равенство URI.</summary>
      <param name="fallbackResolver">XmlResolver, XmlXapResolver или собственный распознаватель пользователя.</param>
      <param name="preloadedDtds">Известные DTD, которые необходимо предварительно записать в кэш.</param>
      <param name="uriComparer">Реализация универсального интерфейса <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, которую следует использовать при сравнении кодов URI.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
      <summary>Добавляет объект <see cref="T:System.IO.Stream" />, байтовый массив или строку с предварительно загруженными данными в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> и сопоставляет его универсальному коду ресурса (URI).Если хранилище уже содержит сопоставление с таким же кодом URI, существующее сопоставление переопределяется.</summary>
      <param name="uri">Код URI данных, добавляемых в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Байтовый массив с данными, соответствующий заданному коду URI.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> или <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
      <summary>Добавляет объект <see cref="T:System.IO.Stream" />, байтовый массив или строку с предварительно загруженными данными в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> и сопоставляет его универсальному коду ресурса (URI).Если хранилище уже содержит сопоставление с таким же кодом URI, существующее сопоставление переопределяется.</summary>
      <param name="uri">Код URI данных, добавляемых в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Байтовый массив с данными, соответствующий заданному коду URI.</param>
      <param name="offset">Позиция в заданном байтовом массиве, с которой начинаются данные.</param>
      <param name="count">Количество байтов, которое следует считать из байтового массива, начиная с указанной позиции.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> или <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="offset" /> или <paramref name="count" /> меньше 0.— или —Длина <paramref name="value" /> за вычетом <paramref name="offset" /> меньше значения <paramref name="count." /></exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
      <summary>Добавляет объект <see cref="T:System.IO.Stream" />, байтовый массив или строку с предварительно загруженными данными в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> и сопоставляет его универсальному коду ресурса (URI).Если хранилище уже содержит сопоставление с таким же кодом URI, существующее сопоставление переопределяется.</summary>
      <param name="uri">Код URI данных, добавляемых в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Объект <see cref="T:System.IO.Stream" /> с данными, соответствующий заданному коду URI.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> или <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
      <summary>Добавляет объект <see cref="T:System.IO.Stream" />, байтовый массив или строку с предварительно загруженными данными в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> и сопоставляет его универсальному коду ресурса (URI).Если хранилище уже содержит сопоставление с таким же кодом URI, существующее сопоставление переопределяется.</summary>
      <param name="uri">Код URI данных, добавляемых в хранилище <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Объект String с данными, соответствующий заданному коду URI.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> или <paramref name="value" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
      <summary>Задает учетные данные, используемые для проверки подлинности соответствующего запроса <see cref="T:System.Net.WebRequest" />.</summary>
      <returns>Объект <see cref="T:System.Net.ICredentials" />. </returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Сопоставляет код URI объекту, содержащему фактический ресурс. </summary>
      <returns>Объект <see cref="T:System.IO.Stream" /> или <see cref="T:System.IO.TextReader" />.</returns>
      <param name="absoluteUri">Код URI, возвращаемый методом <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">В текущей версии .NET Framework для Silverlight этот параметр не используется при распознавании URI.Этот параметр предоставлен с целью расширения возможностей в будущем.Например, этот параметр можно сопоставить роли xlink:role и использовать в качестве зависящего от реализации аргумента в других сценариях.</param>
      <param name="ofObjectToReturn">Тип возвращаемого объекта.Распознаватель <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> поддерживает объекты <see cref="T:System.IO.Stream" /> и объекты <see cref="T:System.IO.TextReader" /> для кодов URI, добавленных в виде значений типа String.Если запрашиваемый тип не поддерживается распознавателем, создается исключение.Чтобы определить, поддерживается ли определенный тип Type распознавателем, воспользуйтесь методом <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> имеет значение null;</exception>
      <exception cref="T:System.Xml.XmlException">Не удается разрешить URI, переданный в параметре <paramref name="absoluteUri" />.— или —<paramref name="ofObjectToReturn" /> не является поддерживаемым типом.</exception>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
      <summary>Получает коллекцию предварительно загруженных кодов URI.</summary>
      <returns>Коллекция предварительно загруженных кодов URI.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
      <summary>Удаляет данные, соответствующие коду URI, из распознавателя <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />. </summary>
      <param name="uri">Код URI данных, которые необходимо удалить из хранилища <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
      <summary>Возвращает значение true, если метод GetEntity распознавателя может распознать заданный код URI и сопоставить его экземпляру заданного типа <see cref="T:System.Type" />.</summary>
      <returns>Возвращает значение типа <see cref="T:System.Uri" /> или null.</returns>
      <param name="baseUri">Универсальный код ресурса (URI).</param>
      <param name="relativeUri">Относительный URI в виде <see cref="T:System.String" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> имеет значение null;</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
      <summary>Возвращает значение true, если метод GetEntity распознавателя может распознать заданный код URI и сопоставить его экземпляру заданного типа <see cref="T:System.Type" />.</summary>
      <returns>Возвращает значение true, если тип <see cref="T:System.Type" /> поддерживается; в противном случае возвращает значение false.</returns>
      <param name="type">Запрошенный тип <see cref="T:System.Type" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> имеет значение null;</exception>
    </member>
    <member name="T:System.Xml.Schema.IXmlSchemaInfo">
      <summary>Определяет набор сведений после проверки схемы для проверенного узла XML.</summary>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsDefault">
      <summary>Получает значение, которое отражает, установлен ли проверенный узел XML в результате значения по умолчанию, применяемого в ходе проверки XSD-схемы.</summary>
      <returns>true, если проверенный узел XML установлен в результате значения по умолчанию, применяемого в ходе проверки схемы; в противном случае, false.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsNil">
      <summary>Получает значение, которое отражает, может ли проверенный узел XML иметь нулевое значение.</summary>
      <returns>true, если проверенный узел XML имеет нулевое значение; в противном случае, false.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.MemberType">
      <summary>Получает динамический тип схемы для проверенного узла XML.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute">
      <summary>Gets the compiled <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> that corresponds to this validated XML node.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaElement">
      <summary>Gets the compiled <see cref="T:System.Xml.Schema.XmlSchemaElement" /> that corresponds to this validated XML node.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType">
      <summary>Получает статический тип XSD-схемы данного проверенного узла XML.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.Validity">
      <summary>Получает значение <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> данного проверенного узла XML.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> value.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventArgs">
      <summary>Возвращает подробные сведения, связанные с ValidationEventHandler.</summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Exception">
      <summary>Получает исключение <see cref="T:System.Xml.Schema.XmlSchemaException" />, связанное с событием проверки.</summary>
      <returns>Исключение XmlSchemaException, связанное с событием проверки.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
      <summary>Получает текстовое описание, соответствующее событию проверки.</summary>
      <returns>Текстовое описание.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Severity">
      <summary>Получает сведения о серьезности события проверки.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSeverityType" />, представляющее серьезность события проверки.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventHandler">
      <summary>Представляет метод обратного вызова, обрабатывающий события проверки схемы XML и <see cref="T:System.Xml.Schema.ValidationEventArgs" />.</summary>
      <param name="sender">Источник события. ПримечаниеОпределите тип отправителя перед его использованием в коде.Невозможно предполагать, что отправитель является экземпляром определенного типа.Также нет гарантии, что отправитель не равняется NULL.Все операции приведения необходимо помещать внутрь алгоритмов, обрабатывающих сбои.</param>
      <param name="e">Данные события. </param>
    </member>
    <member name="T:System.Xml.Schema.XmlAtomicValue">
      <summary>Представляет типизированное значение проверяемого XML-элемента или атрибута.Класс <see cref="T:System.Xml.Schema.XmlAtomicValue" /> не наследуется.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.Clone">
      <summary>Возвращает копию данного объекта <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>Копия объекта <see cref="T:System.Xml.Schema.XmlAtomicValue" /> данного объекта <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.IsNode">
      <summary>Возвращает значение, указывающее, является ли проверяемый XML- элемент или атрибут узлом XPath или атомарным значением.</summary>
      <returns>true, если проверяемый XML-элемент или атрибут является узлом XPath; false, если проверяемый XML-элемент или атрибут является атомарным значением.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone">
      <summary>Описание данного члена см. в разделе <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />.</summary>
      <returns>Возвращает копию данного объекта <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ToString">
      <summary>Возвращает значение string проверяемого XML-элемента или атрибута.</summary>
      <returns>Значение string проверяемого XML-элемента или атрибута.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.TypedValue">
      <summary>Возвращает текущий проверяемый XML-элемент или атрибут как объект в рамке наиболее подходящего типа Microsoft .NET Framework согласно типу его схемы</summary>
      <returns>Текущий проверяемый XML-элемент или атрибут как объект в рамке наиболее подходящего типа платформы .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.Value">
      <summary>Возвращает значение string проверяемого XML-элемента или атрибута.</summary>
      <returns>Значение string проверяемого XML-элемента или атрибута.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута, приведенное к указанному тип, используя указанный объект <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения префиксов пространств имен.</summary>
      <returns>Значение проверяемого XML-элемента или атрибута, приведенное к запрошенному типу.</returns>
      <param name="type">Тип, к которому требуется привести возвращаемое значение проверяемого XML-элемента или атрибута.</param>
      <param name="nsResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространств имен.</param>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для конечного типа.</exception>
      <exception cref="T:System.InvalidCastException">Попытка приведения недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения привела к переполнению.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута как <see cref="T:System.Boolean" />.</summary>
      <returns>Значение проверяемого XML-элемента или атрибута как <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для типа <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка приведения к <see cref="T:System.Boolean" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута как <see cref="T:System.DateTime" />.</summary>
      <returns>Значение проверяемого XML-элемента или атрибута как <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для типа <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка приведения к <see cref="T:System.DateTime" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDouble">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута как <see cref="T:System.Double" />.</summary>
      <returns>Значение проверяемого XML-элемента или атрибута как <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для типа <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка приведения к <see cref="T:System.Double" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения привела к переполнению.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsInt">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута как <see cref="T:System.Int32" />.</summary>
      <returns>Значение проверяемого XML-элемента или атрибута как <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для типа <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка приведения к <see cref="T:System.Int32" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения привела к переполнению.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsLong">
      <summary>Возвращает значение проверяемого XML-элемента или атрибута как <see cref="T:System.Int64" />.</summary>
      <returns>Значение проверяемого XML-элемента или атрибута как <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">Неправильный формат значения проверяемого XML-элемента или атрибута для типа <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка приведения к <see cref="T:System.Int64" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения привела к переполнению.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueType">
      <summary>Возвращает тип Microsoft .NET Framework проверяемого значения XML-элемента или атрибута.</summary>
      <returns>Тип .NET Framework проверяемого значения XML-элемента или атрибута.Значение по умолчанию — <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.XmlType">
      <summary>Возвращает <see cref="T:System.Xml.Schema.XmlSchemaType" /> для проверяемого XML-элемента или атрибута.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> для проверяемого XML-элемента или атрибута.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary>Встроенное представление схемы XML, как указано в схеме XML консорциума W3C, Часть 1: Структуры и схема XML, Часть 2: Спецификации типов данных.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
      <summary>Возвращает или задает форму для атрибутов, объявленных в целевом пространстве имен схемы.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaForm" />, указывающее, требуется ли уточнение имен атрибутов из целевого пространства имен путем указания префикса пространства имен.Значение по умолчанию — <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
      <summary>Получает значение после компиляции схемы всех групп глобальных атрибутов в схеме.</summary>
      <returns>Коллекция <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, содержащая все группы глобальных атрибутов в схеме.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Attributes">
      <summary>Получает значение после компиляции схемы всех атрибутов схемы.</summary>
      <returns>Коллекция <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, содержащая все атрибуты схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.BlockDefault">
      <summary>Возвращает или задает атрибут blockDefault, устанавливающий значение по умолчанию атрибута block для типов элементов и сложных типов в targetNamespace схемы.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />, представляющее различные способы предотвращения создания производных типов.Значение по умолчанию — XmlSchemaDerivationMethod.None.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
      <summary>Компилирует объектную модель схемы XML (Schema Object Model, SOM) в сведения о схеме для проверки.Используется для проверки синтаксической и семантической структуры программно реализованной модели SOM.Семантическая проверка действительности выполняется во время компиляции.</summary>
      <param name="validationEventHandler">Обработчик событий проверки, получающий сведения об ошибках проверки схемы XML. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
      <summary>Компилирует объектную модель схемы XML (Schema Object Model, SOM) в сведения о схеме для проверки.Используется для проверки синтаксической и семантической структуры программно реализованной модели SOM.Семантическая проверка действительности выполняется во время компиляции.</summary>
      <param name="validationEventHandler">Обработчик событий проверки, получающий сведения об ошибках проверки схемы XML. </param>
      <param name="resolver">XmlResolver используется для разрешения пространств имен, на которые ссылаются элементы include и import. </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
      <summary>Возвращает или задает форму для элементов, объявленных в целевом пространстве имен схемы.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaForm" />, указывающее, требуется ли уточнение имен элементов из целевого пространства имен путем указания префикса пространства имен.Значение по умолчанию — <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Elements">
      <summary>Получает значение после компиляции схемы всех элементов схемы.</summary>
      <returns>Коллекция <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, содержащая все элементы схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.FinalDefault">
      <summary>Возвращает или задает атрибут finalDefault, устанавливающий значение по умолчанию атрибута final для типов элементов и сложных типов в целевом пространстве имен схемы.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />, представляющее различные способы предотвращения создания производных типов.Значение по умолчанию — XmlSchemaDerivationMethod.None.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Groups">
      <summary>Получает значение всех групп схемы после компиляции схемы.</summary>
      <returns>Коллекция <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, содержащая все группы схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Id">
      <summary>Возвращает или задает идентификатор строки.</summary>
      <returns>Идентификатор строки.Значение по умолчанию — String.Empty.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Includes">
      <summary>Получает коллекцию включаемых и импортируемых схем.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />, содержащая включаемые и импортируемые схемы.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
      <summary>Пространство имен экземпляра схемы XML.Это поле является константой.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.IsCompiled">
      <summary>Указывает, была ли скомпилирована схема.</summary>
      <returns>true, если схема была скомпилирована, иначе false.Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Items">
      <summary>Получает коллекцию элементов схемы из схемы, а также используется для добавления новых типов элементов на уровне элементов schema.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />, содержащая элементы схемы из схемы.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.Namespace">
      <summary>Пространство имен схемы XML.Это поле является константой.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Notations">
      <summary>Получает значение после компиляции схемы всех представлений схемы.</summary>
      <returns>Коллекция <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, содержащая все представления схемы.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary>Читает схему XML из предоставленного потока.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, представляющий схему XML.</returns>
      <param name="stream">Предоставленный поток данных. </param>
      <param name="validationEventHandler">Обработчик событий проверки, получающий сведения о синтаксических ошибках схемы XML. </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Исключение <see cref="T:System.Xml.Schema.XmlSchemaException" /> порождается, если не задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Reads an XML Schema from the supplied <see cref="T:System.IO.TextReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, представляющий схему XML.</returns>
      <param name="reader">The TextReader containing the XML Schema to read. </param>
      <param name="validationEventHandler">Обработчик событий проверки, получающий сведения о синтаксических ошибках схемы XML. </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Исключение <see cref="T:System.Xml.Schema.XmlSchemaException" /> порождается, если не задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Reads an XML Schema from the supplied <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, представляющий схему XML.</returns>
      <param name="reader">The XmlReader containing the XML Schema to read. </param>
      <param name="validationEventHandler">Обработчик событий проверки, получающий сведения о синтаксических ошибках схемы XML. </param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Исключение <see cref="T:System.Xml.Schema.XmlSchemaException" /> порождается, если не задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
      <summary>Получает значение всех типов схемы после компиляции схемы.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />, содержащая все типы схемы из схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.TargetNamespace">
      <summary>Возвращает или задает идентификатор URI целевого пространства имен схемы.</summary>
      <returns>Целевое пространство имен схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
      <summary>Возвращает или задает уточненные атрибуты, не принадлежащие целевому пространству имен схемы.</summary>
      <returns>Массив уточненных объектов <see cref="T:System.Xml.XmlAttribute" />, не принадлежащих к целевому пространству имен схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Version">
      <summary>Возвращает или задает версию схемы.</summary>
      <returns>Версия схемы.Значение по умолчанию — String.Empty.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
      <summary>Записывает схему XML в предоставленный поток данных.</summary>
      <param name="stream">Предоставленный поток данных. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
      <summary>Выводит схему XML в предоставленный поток <see cref="T:System.IO.Stream" /> с помощью указанного <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <param name="stream">Предоставленный поток данных. </param>
      <param name="namespaceManager">
        <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
      <summary>Writes the XML Schema to the supplied <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to write to.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
      <summary>Writes the XML Schema to the supplied <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to write to.</param>
      <param name="namespaceManager">The <see cref="T:System.Xml.XmlNamespaceManager" />. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
      <summary>Writes the XML Schema to the supplied <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> parameter is null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
      <summary>Writes the XML Schema to the supplied <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />, в который выполняется запись.</param>
      <param name="namespaceManager">The <see cref="T:System.Xml.XmlNamespaceManager" />. </param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAll">
      <summary>Представляет элемент all консорциума W3C (объединитель).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAll.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaAll" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAll.Items">
      <summary>Получает коллекцию элементов XmlSchemaElement, содержащихся в объединителе all.</summary>
      <returns>Коллекция элементов, содержащихся в XmlSchemaAll.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotated">
      <summary>Базовый класс для любого элемента, который может содержать элементы примечаний.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotated.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaAnnotated" /> class.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Annotation">
      <summary>Gets or sets the annotation property.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, представляющая свойство annotation.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Id">
      <summary>Получает или задает идентификатор строки.</summary>
      <returns>The string id.The default is String.Empty.Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes">
      <summary>Получает или задает уточненные атрибуты, не принадлежащие целевому пространству имен текущей схемы.</summary>
      <returns>Массив уточненных объектов <see cref="T:System.Xml.XmlAttribute" />, не принадлежащих к целевому пространству имен текущей схемы.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotation">
      <summary>Представляет элемент annotation консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" /> class.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Id">
      <summary>Получает или задает идентификатор строки.</summary>
      <returns>The string id.The default is String.Empty.Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Items">
      <summary>Получает коллекцию Items, используемую для хранения дочерних элементов appinfo и documentation.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />, содержащая дочерние элементы appinfo и documentation.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.UnhandledAttributes">
      <summary>Получает или задает уточненные атрибуты, не принадлежащие целевому пространству имен схемы.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.XmlAttribute" />, не принадлежащих целевому пространству имен схемы.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAny">
      <summary>Представляет элемент any консорциума World Wide Web (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAny.#ctor">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.Namespace">
      <summary>Получает или задает пространства имен, содержащие элементы, которые можно использовать.</summary>
      <returns>Пространства имен для элементов, которые доступны для использования.Значение по умолчанию ##any.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.ProcessContents">
      <summary>Получает или задает сведения о том, как приложение или процессор XML должен выполнять проверку документа XML для элементов, заданных элементом any.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />.Если не задан атрибут processContents, значением по умолчанию является Strict.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnyAttribute">
      <summary>Представляет элемент anyAttribute консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace">
      <summary>Получает или задает пространство имен, содержащее атрибуты, которые могут использоваться.</summary>
      <returns>Пространства имен для атрибутов, которые можно использовать.Значение по умолчанию — ##any.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents">
      <summary>Получает или задает сведения, определяющие, каким образом приложению или процессору XML следует выполнять проверку документа XML на атрибуты, указанные в элементе anyAttribute.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />.Если атрибут processContents не указан, по умолчанию используется значение Strict.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAppInfo">
      <summary>Представляет элемент appinfo консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAppInfo.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaAppInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Markup">
      <summary>Получает или задает массив объектов <see cref="T:System.Xml.XmlNode" />, представляющих дочерние узлы appinfo.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.XmlNode" />, представляющих дочерние узлы appinfo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Source">
      <summary>Получает или задает источник информации приложения.</summary>
      <returns>Ссылка на идентификатор URI.Значение по умолчанию — String.Empty.Необязательный параметр.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttribute">
      <summary>Представление элемента attribute из XML-схемы, в соответствии с требованиями консорциума World Wide Web(W3C).Атрибуты предоставляют дополнительную информацию для прочих элементов документа.Тэг атрибута вложен между тэгами элемента документа для схемы.Документ XML отображает атрибуты как элементы с именем в открывающем тэге элемента.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttribute.#ctor">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType">
      <summary>Получение объекта <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющего тип атрибута на основе <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> или <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> атрибута.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> объект.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeType">
      <summary>Получение объекта CLR на основе <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> или <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> атрибута, который содержит значение после компиляции свойства AttributeType.</summary>
      <returns>Объект CLR, который содержит значение после компиляции свойства AttributeType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.DefaultValue">
      <summary>Получает или задает значение по умолчанию для атрибута.</summary>
      <returns>Значение по умолчанию для атрибута.Значением по умолчанию является пустая ссылка.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.FixedValue">
      <summary>Получает или задает фиксированное значение для атрибута.</summary>
      <returns>Фиксированное значение для атрибута.Пустое значение установлено по умолчанию.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Form">
      <summary>Получает или задает форму для атрибута.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaForm" />.По умолчанию устанавливается значение <see cref="P:System.Xml.Schema.XmlSchema.AttributeFormDefault" /> элемента схемы, включающего атрибут.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Name">
      <summary>Получает или задает имя атрибута.</summary>
      <returns>Имя атрибута.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.QualifiedName">
      <summary>Получение полного имени для атрибута.</summary>
      <returns>Значение после компиляции свойства QualifiedName.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.RefName">
      <summary>Получает или задает имя атрибута, объявленного в данной схеме (или иной схеме, оговоренной указанным пространством имен).</summary>
      <returns>Имя объявленного атрибута.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType">
      <summary>Получает или задает тип атрибута на простой тип.</summary>
      <returns>Простой тип, определенный в данной схеме.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName">
      <summary>Получает или задает простой тип, объявленный в данной схеме (или иной схеме, оговоренной указанным пространством имен).</summary>
      <returns>Имя простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Use">
      <summary>Получает или задает информацию по использованию атрибута.</summary>
      <returns>One of the following values: None, Prohibited, Optional, or Required.По умолчанию используется значение Optional.Необязательный параметр.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroup">
      <summary>Представляет элемент attributeGroup из схемы XML в соответствии со спецификациями консорциума W3C.AttributesGroups обеспечивает механизм группировки набора объявлений атрибутов, чтобы можно было их добавить как группу в определения сложного типа.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" /> class.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute">
      <summary>Получает или задает компонент <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> группы атрибутов.</summary>
      <returns>The <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Attributes">
      <summary>Получает коллекцию атрибутов для группы атрибутов.Содержит элементы XmlSchemaAttribute и XmlSchemaAttributeGroupRef.</summary>
      <returns>Коллекция атрибутов для группы атрибутов.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Name">
      <summary>Получает или задает имя группы атрибутов.</summary>
      <returns>Имя группы атрибутов.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.QualifiedName">
      <summary>Получает полное имя группы атрибутов.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlQualifiedName" />, представляющий полное имя группы атрибутов.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.RedefinedAttributeGroup">
      <summary>Получает переопределенное свойство группы атрибутов из схемы XML.</summary>
      <returns>Переопределенное свойство группы атрибутов.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroupRef">
      <summary>Представляет элемент attributeGroup с атрибутом ref из схемы XML согласно спецификации  консорциума W3C.AttributesGroupRef является ссылкой для attributeGroup, свойство имени содержит группу атрибута, на которую указывает ссылка.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroupRef.#ctor">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroupRef.RefName">
      <summary>Получает или задает имя элемента attributeGroup, на который указывает ссылка.</summary>
      <returns>The name of the referenced attribute group.Значение должно быть типа QName.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaChoice">
      <summary>Представляет элемент choice (композитор) из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Элемент choice позволяет присутствовать в экземпляре лишь одному из своих дочерних узлов.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaChoice.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaChoice" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaChoice.Items">
      <summary>Gets the collection of the elements contained with the compositor (choice): XmlSchemaElement, XmlSchemaGroupRef, XmlSchemaChoice, XmlSchemaSequence, or XmlSchemaAny.</summary>
      <returns>Коллекция элементов, содержащихся в XmlSchemaChoice.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollection">
      <summary>Содержит кэш языка определения схемы XML (XSD) и схем XDR.Класс <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> более не используется.Вместо этого следует использовать метод <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
      <summary>Инициализирует новый экземпляр  класса XmlSchemaCollection.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
      <summary>Инициализация нового экземпляра  класса XmlSchemaCollection с заданным <see cref="T:System.Xml.XmlNameTable" />.XmlNameTable используется при загрузке схем.</summary>
      <param name="nametable">XmlNameTable для использования. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
      <summary>Добавляет схему, размещенную по URL-адресу в коллекцию схем.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> добавлен в коллекцию схем; null, если добавляемая схема является XDR-схемой или в схеме присутствуют ошибки компиляции. </returns>
      <param name="ns">URI-пространство имен, связанное со схемой.Для XML-схем оно обычно представлено targetNamespace.</param>
      <param name="uri">URL-адрес, определяющий схему для загрузки. </param>
      <exception cref="T:System.Xml.XmlException">Эта схема не является допустимой схемой. </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
      <summary>Добавляет схему, содержащуюся в <see cref="T:System.Xml.XmlReader" /> в коллекцию схем.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> добавлена в коллекцию схем; null, если добавляемая схема является XDR-схемой или в схеме присутствуют ошибки компиляции.</returns>
      <param name="ns">URI-пространство имен, связанное со схемой.Для XML-схем оно обычно представлено targetNamespace.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />, содержащий схему для добавления. </param>
      <exception cref="T:System.Xml.XmlException">Эта схема не является допустимой схемой. </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Добавляет схему, содержащуюся в <see cref="T:System.Xml.XmlReader" /> в коллекцию схем.Заданный <see cref="T:System.Xml.XmlResolver" /> используется для опознания каких-либо внешних ресурсов.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> добавлена в коллекцию схем; null, если добавляемая схема является XDR-схемой или в схеме присутствуют ошибки компиляции.</returns>
      <param name="ns">URI-пространство имен, связанное со схемой.Для XML-схем оно обычно представлено targetNamespace.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />, содержащий схему для добавления. </param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> используется для опознания пространства имен, на которое присутствуют ссылки в элементах include и import или атрибуте x-schema (XDR-схемы).Если null, внешние ссылки не опознаются.</param>
      <exception cref="T:System.Xml.XmlException">Эта схема не является допустимой схемой. </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
      <summary>Добавляет <see cref="T:System.Xml.Schema.XmlSchema" /> в коллекцию.</summary>
      <returns>ОбъектXmlSchema.</returns>
      <param name="schema">XmlSchema для добавления в коллекцию. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
      <summary>Добавление <see cref="T:System.Xml.Schema.XmlSchema" /> в коллекцию.Заданный <see cref="T:System.Xml.XmlResolver" /> используется для опознания каких-либо внешних ссылок.</summary>
      <returns>XmlSchema добавлена в коллекцию схем.</returns>
      <param name="schema">XmlSchema для добавления в коллекцию. </param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> используется для опознания пространств имен, на которые существуют ссылки в элементах include и import.Если null, внешние ссылки не опознаются.</param>
      <exception cref="T:System.Xml.XmlException">Эта схема не является допустимой схемой. </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
      <summary>Добавление всех пространств имен, определенных в представленной коллекции (включая соответствующие схемы), в данную коллекцию.</summary>
      <param name="schema">XmlSchemaCollection, которую необходимо добавить в данную коллекцию. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
      <summary>Получает значение, которое показывает, находится ли схема с указанным пространством имен в коллекции.</summary>
      <returns>true, если схема с заданным пространством имен находится в коллекции; в противном случае false.</returns>
      <param name="ns">URI-пространство имен, связанное со схемой.Для XML-схем оно обычно представлено конечным пространством имен.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Получает значение, которое показывает, находится ли targetNamespace, заданной <see cref="T:System.Xml.Schema.XmlSchema" /> в коллекции.</summary>
      <returns>true, если в коллекции присутствует схема с аналогичным targetNamespace; в противном случае false.</returns>
      <param name="schema">ОбъектXmlSchema. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Копирует все объекты XmlSchema из данной коллекции в предложенный массив, начинающийся с предложенного индекса.</summary>
      <param name="array">Массив, в который копируются объекты. </param>
      <param name="index">Индекс в <paramref name="array" />, откуда начнется копирование. </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Count">
      <summary>Получает число пространств имен, определенных в данной коллекции.</summary>
      <returns>Число пространств имен, определенных в данной коллекции.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
      <summary>Оказывает поддержку для итерации стиля "для каждого" в отношении коллекции схем.</summary>
      <returns>Перечислитель для итерации по всем схемам в текущей коллекции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
      <summary>Получает <see cref="T:System.Xml.Schema.XmlSchema" />, связанную с указанным URI-пространством имен.</summary>
      <returns>XmlSchema, связанное с URI-пространством имен; null, если схема, связанная с указанным пространством имени, не загружена или если пространство имен, связано с XDR-схемой.</returns>
      <param name="ns">URI-пространство имен, связанное со схемой, которую необходимо вернуть.Оно обычно представлено targetNamespace схемы.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
      <summary>Получает значение по умолчанию XmlNameTable, используемой XmlSchemaCollection при загрузке новых схем.</summary>
      <returns>Объект XmlNameTable.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Описание данного элемента см. в разделе, посвященном <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />.</summary>
      <param name="array">Массив, в который копируются объекты. </param>
      <param name="index">Индекс в <paramref name="array" />, откуда начнется копирование. </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
      <summary>Описание данного члена см. в разделе <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />.</summary>
      <returns>Возвращает количество элементов в коллекции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Описание данного члена см. в разделе <see cref="P:System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Возвращает значение true, если коллекция синхронизирована; в противном случае возвращает значение false.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
      <summary>Описание данного члена см. в разделе <see cref="P:System.Xml.Schema.XmlSchemaCollection.System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Возвращает объект <see cref="T:System.Collections.ICollection.SyncRoot" />, который можно использовать для синхронизации доступа к коллекции.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Описание данного члена см. в разделе <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />.</summary>
      <returns>Возвращает перечислитель <see cref="T:System.Collections.IEnumerator" /> для коллекции.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
      <summary>Задает обработчика событий на получение информации об ошибках проверки XDR- и XML-схем. </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollectionEnumerator">
      <summary>Поддерживает простую итерацию коллекции.Невозможно наследовать данный класс.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current">
      <summary>Получает текущую <see cref="T:System.Xml.Schema.XmlSchema" /> в коллекции.</summary>
      <returns>Получает текущую XmlSchema в коллекции.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext">
      <summary>Продвигает перечислитель к следующей схеме в коллекции.</summary>
      <returns>true — если передвижение прошло успешно, false — если перечислитель достиг конца коллекции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>Описание данного члена см. в разделе <see cref="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current" />.</summary>
      <returns>Возвращает текущий узел.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Описание данного члена см. в разделе <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext" />.</summary>
      <returns>Возвращает следующий узел.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Описание этого элемента см. в разделе, посвященном <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System.Collections.IEnumerator.Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCompilationSettings">
      <summary>Предоставляет параметры компиляции схемы для класса <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Данный класс не наследуется.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCompilationSettings.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />. </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck">
      <summary>Получает или задает значение, указывающее, должен ли <see cref="T:System.Xml.Schema.XmlSchemaSet" /> выполнять проверку нарушения однозначного соответствия примитивов.</summary>
      <returns>true, если <see cref="T:System.Xml.Schema.XmlSchemaSet" /> должен проверять наличие нарушений однозначного соответствия примитивов; в противном случае — false.По умолчанию — true.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContent">
      <summary>Представляет элемент complexContent из XML-схемы, в соответствии с требованиями консорциума World Wide Web (W3C).Данный класс представляет сложную модель содержимого для сложных типов.Она содержит расширения и ограничения по сложному типу, который включает только элементы или смешанное содержимое.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContent.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.Content">
      <summary>Получает или задает содержимое.</summary>
      <returns>Один из классов <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" /> или <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.IsMixed">
      <summary>Получает или задает информацию, которая определяет, имеет ли тип модель смешанного содержимого.</summary>
      <returns>Если данное свойство является true, символьные данные могут появиться между дочерними элементами сложного типа (модель смешанного содержимого).По умолчанию false.Необязательный параметр.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentExtension">
      <summary>Представляет элемент extension из схемы XML, в соответствии со спецификациями консорциума W3C.Этот класс предназначен для сложных типов со сложной моделью содержимого, производных от расширения.Он расширяет сложный тип, добавляя атрибуты и элементы.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentExtension.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.AnyAttribute">
      <summary>Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> component of the complex content model.</summary>
      <returns>Компонент <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> сложной модели содержимого.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Attributes">
      <summary>Получает коллекцию атрибутов для сложного содержимого.Содержит элементы <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> и <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Коллекция атрибутов для сложного содержимого.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.BaseTypeName">
      <summary>Получает или задает имя сложного типа, из которого по расширению создан данный тип.</summary>
      <returns>Имя сложного типа, из которого по расширению создан данный тип.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Particle">
      <summary>Получает или задает один из классов <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Один из классов <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentRestriction">
      <summary>Представляет элемент restriction из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс предназначен для сложных типов в рамках модели сложного содержимого, определяемого путем ограничения.Он ограничивает содержимое сложного типа подмножеством унаследованного сложного типа.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentRestriction.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.AnyAttribute">
      <summary>Получает или задает компонент <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> модели сложного содержимого.</summary>
      <returns>Компонент <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> модели сложного содержимого.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Attributes">
      <summary>Получает коллекцию атрибутов для сложного типа.Содержит элементы <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> и <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Коллекция атрибутов для сложного типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.BaseTypeName">
      <summary>Получает или задает имя сложного типа, от которого этот тип создается, как производный, путем ограничения.</summary>
      <returns>Имя сложного типа, от которого данный тип создается, как производный, путем ограничения.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Particle">
      <summary>Получает или задает один из классов <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Один из классов <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexType">
      <summary>Представляет элемент complexType из схемы XML, в соответствии со спецификациями консорциума W3C.Данный класс определяет сложный тип, которые задает набор атрибутов и содержимое элемента.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
      <summary>Получает или задает значение для компонента <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> сложного типа.</summary>
      <returns>Компонент <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> сложного типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
      <summary>Получает коллекцию атрибутов для сложного типа.</summary>
      <returns>Содержит классы <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> и <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
      <summary>Получает коллекцию всех компилируемых атрибутов данного сложного типа и его базовых типов.</summary>
      <returns>Коллекция всех атрибутов из данного сложного типа и его базовых типов.Значение свойства AttributeUses после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
      <summary>Получает значение anyAttribute после компиляции для данного сложного типа и его базовых типов.</summary>
      <returns>Значение элемента anyAttribute после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Block">
      <summary>Получает или задает атрибут block.</summary>
      <returns>Атрибут block предотвращает использование сложного типа в заданном типе образования производных.Метод по умолчанию XmlSchemaDerivationMethod.None.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
      <summary>Получает значение после компиляции типа в набор сведений после проверки схемы.Данное значение указывает, как изменяется тип, когда в документе экземпляра используется xsi:type.</summary>
      <returns>Значение набора сведений после проверки схемы.По умолчанию — BlockDefault для элемента schema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
      <summary>Получает или задает <see cref="T:System.Xml.Schema.XmlSchemaContentModel" /> данного сложного типа после компиляции.</summary>
      <returns>Тип модели содержимого, который является одним из классов <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> или <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
      <summary>Получает модель содержимого сложного типа, которая содержит значение после компиляции.</summary>
      <returns>Значение модели содержимого для сложного типа после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
      <summary>Получает примитив, который содержит значение примитива <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /> после компиляции.</summary>
      <returns>Примитив для типа содержимого.Значение примитива <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /> после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
      <summary>Получает или задает сведения, определяющие, может ли использоваться элемент complexType в документе экземпляра.</summary>
      <returns>true — элемент не может использовать данный элемент complexType напрямую и должен использовать сложный тип, являющийся производным от элемента complexType.По умолчанию — false.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
      <summary>Получает или задает сведения, определяющие, имеет ли сложный тип модель смешанного содержимого (разметка в рамках содержимого).</summary>
      <returns>true, если между дочерними элементами данного сложного типа могут появиться символьные данные; в противном случае, false.По умолчанию — false.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
      <summary>Получает или задает один из классов, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /><see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />, в качестве типа объединителя.</summary>
      <returns>Тип объединителя.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContent">
      <summary>Абстрактный класс для содержимого схемы.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContent.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentModel">
      <summary>Указывает порядок и структуру дочерних элементов типа.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContentModel.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaContentModel" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaContentModel.Content">
      <summary>Получает или задает содержимое типа.</summary>
      <returns>Предоставляет содержимое типа.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentProcessing">
      <summary>Предоставляет сведения о режиме проверки замен элементов any и anyAttribute.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.None">
      <summary>Элементы документа не проверены.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Skip">
      <summary>Элементы документа должны состоять из кода XML правильного формата и не проверяются схемой.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Lax">
      <summary>В случае обнаружения связанной схемы элементы этого документа будут проверены.В противном случае ошибки не создаются.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Strict">
      <summary>Процессор схемы должен найти схему, связанную с указанным пространством имен, чтобы проверить элементы документа.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentType">
      <summary>Перечисления для модели содержимого сложного типа.Представляет содержимое в наборе сведений после проверки схемы (infoset).</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.TextOnly">
      <summary>Text-only content.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Empty">
      <summary>Пустое содержимое.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.ElementOnly">
      <summary>Element-only content.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Mixed">
      <summary>Смешанное содержимое.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatype">
      <summary>Класс <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> является абстрактным классом для сопоставления типов XSD-схем с типами CLR.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
      <summary>Преобразование заданного значения, тип которого является одним из допустимых представлений CLR типа XML-схемы, представленных<see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, в заданный тип CLR.</summary>
      <returns>Преобразованное входное значение.</returns>
      <param name="value">Входное значение, преобразовываемое в заданный тип.</param>
      <param name="targetType">Конечный тип, в который преобразовывается входное значение.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <see cref="T:System.Object" /> или <see cref="T:System.Type" /> является null.</exception>
      <exception cref="T:System.InvalidCastException">Тип, представленный <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, не поддерживает преобразование из типа заданного значения в заданный тип.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Преобразование заданного значения, тип которого является одним из допустимых представлений CLR типа XML-схемы, представленных <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> в тип CLR, заданный с помощью <see cref="T:System.Xml.IXmlNamespaceResolver" />, если<see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип xs:QName или тип, производный от него.</summary>
      <returns>Преобразованное входное значение.</returns>
      <param name="value">Входное значение, преобразовываемое в заданный тип.</param>
      <param name="targetType">Конечный тип, в который преобразовывается входное значение.</param>
      <param name="namespaceResolver">
        <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространства имен.Это единственный вариант использования, если <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип xs:QName или тип, производный от него.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <see cref="T:System.Object" /> или <see cref="T:System.Type" /> является null.</exception>
      <exception cref="T:System.InvalidCastException">Тип, представленный <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, не поддерживает преобразование из типа заданного значения в заданный тип.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
      <summary>Метод <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> всегда возвращает false.</summary>
      <returns>Всегда возвращает false.</returns>
      <param name="datatype">Объект <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary>При переопределении в производном классе выполняется проверка заданного string на соответствие со встроенным или пользовательским простым типом.</summary>
      <returns>
        <see cref="T:System.Object" />, который может быть безопасно приведен к типу, возвращаемому свойством <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
      <param name="s">string, чтобы проверить на соответствие простому типу.</param>
      <param name="nameTable">
        <see cref="T:System.Xml.XmlNameTable" />, чтобы использовать для атомизации при синтаксическом разборе string, если данный объект <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип xs:NCName. </param>
      <param name="nsmgr">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" /> для использования при синтаксическом разборе string, если данный объект <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> представляет тип  xs:QName.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Входное значение не является допустимым экземпляром типа W3C XML-схемы.</exception>
      <exception cref="T:System.ArgumentNullException">Значение для разбора не может являться null.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
      <summary>При переопределении в производном классе получение типа для string выполняется в соответствии со спецификацией консорциума World Wide Web (W3C) XML 1.0.</summary>
      <returns>Значение <see cref="T:System.Xml.XmlTokenizedType" /> для string.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
      <summary>Получает значение <see cref="T:System.Xml.Schema.XmlTypeCode" /> для простого типа.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlTypeCode" /> для простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
      <summary>При переопределении в производном классе выполняется получение типа CLR данного элемента.</summary>
      <returns>CLR-тип элемента.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
      <summary>Получение значения <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> для простого типа.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> для простого типа.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatypeVariety">
      <summary>Определяет разновидность типа данных схемы W3C XML для типа.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Atomic">
      <summary>Атомарный тип данных схемы W3C XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.List">
      <summary>Списковый тип схемы W3C XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Union">
      <summary>Тип объединения схемы W3C XML.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDerivationMethod">
      <summary>Представляет различные методы для предотвращения создания производных типов.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Empty">
      <summary>Переопределите метод создания производных по умолчанию, чтобы разрешить все способы создания производных.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution">
      <summary>Refers to derivations by Substitution.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Extension">
      <summary>Refers to derivations by Extension.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction">
      <summary>Refers to derivations by Restriction.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.List">
      <summary>Refers to derivations by List.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Union">
      <summary>Refers to derivations by Union.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.All">
      <summary>#all.Относится ко всем методам создания производных типов.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.None">
      <summary>Принимает метод создания производных по умолчанию.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDocumentation">
      <summary>Представляет элемент documentation из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс задает информацию для прочтения или использования пользователем в annotation.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDocumentation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaDocumentation" /> class.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Language">
      <summary>Получает или задает атрибут xml:lang.Он служит указателем языка, используемого в содержимом.</summary>
      <returns>Атрибут xml:lang.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Markup">
      <summary>Получает или задает массив XmlNodes, представляющий дочерние узлы документации.</summary>
      <returns>Массив, представляющий дочерние узлы документации.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Source">
      <summary>Получает или задает уникальный идентификатор ресурса (URI) для источника сведений.</summary>
      <returns>Ссылка URI.The default is String.Empty.Optional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaElement">
      <summary>Представляет элемент element из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс является базовым для всех примитивных типов и используется при описании элемента в документе XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaElement.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Block">
      <summary>Получает или задает формирование Block.</summary>
      <returns>Атрибут, используемый для блокировки создания производных типов.По умолчанию используется значение XmlSchemaDerivationMethod.None.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.BlockResolved">
      <summary>Получает значение свойства Block после компиляции.</summary>
      <returns>Значение свойства Block после компиляции.Значение по умолчанию BlockDefault для элемента schema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
      <summary>Получает коллекцию ограничений, применяемых для элемента.</summary>
      <returns>Коллекция ограничений.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.DefaultValue">
      <summary>Получает или задает значение по умолчанию элемента, если его содержимое является простым типом, или же содержимое элемента — textOnly.</summary>
      <returns>Значение по умолчанию для этого элемента.По умолчанию — пустая ссылка.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementSchemaType">
      <summary>Получает объект <see cref="T:System.Xml.Schema.XmlSchemaType" />, представляющий тип элемента, основанный на значениях <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaType" /> или <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName" /> элемента.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementType">
      <summary>Получает объект среды CLR, основанный на <see cref="T:System.Xml.Schema.XmlSchemaElement" /> или <see cref="T:System.Xml.Schema.XmlSchemaElement" /> элемента, содержащий значение свойства ElementType после компиляции.</summary>
      <returns>Объект общеязыковой среды выполнения.Значение свойства ElementType после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Final">
      <summary>Получает или задает свойство Final, определяющее, разрешены ли дальнейшие порождения типов.</summary>
      <returns>Свойство Final.Значение по умолчанию — XmlSchemaDerivationMethod.None.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FinalResolved">
      <summary>Получает значение свойства Final после компиляции.</summary>
      <returns>Значение свойства Final после компиляции.По умолчанию значение FinalDefault используется для элемента schema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FixedValue">
      <summary>Получает или задает фиксированное значение.</summary>
      <returns>Фиксированное значение является предопределенным и неизменным.Значение по умолчанию — пустая ссылка.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Form">
      <summary>Получает или задает форму для элемента.</summary>
      <returns>Форма для элемента.По умолчанию используется значение <see cref="P:System.Xml.Schema.XmlSchema.ElementFormDefault" />.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsAbstract">
      <summary>Получает или задает сведения, определяющие, может ли элемент использоваться в экземпляре документа.</summary>
      <returns>Если установлено значение true, то элемент не может встречаться в экземплярах документа.Значение по умолчанию — false.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsNillable">
      <summary>Получает или задает сведения, определяющие, может ли в экземпляре данных встречаться значение xsi:nil.Указывает, может ли элементу присваиваться явное значение nil.</summary>
      <returns>Если nillable имеет значение true, то у экземпляра элемента атрибут nil может принимать значение true.Атрибут nil определен как составляющая пространства имен схемы XML для экземпляров.Значение по умолчанию — false.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Name">
      <summary>Получает или задает имя элемента.</summary>
      <returns>Имя элемента.Значение по умолчанию — String.Empty.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.QualifiedName">
      <summary>Получает действительное полное имя для заданного элемента. </summary>
      <returns>Полное имя элемента.Значение свойства QualifiedName после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.RefName">
      <summary>Получает или задает имя ссылки для элемента, объявленного в этой схеме (или в другой схеме, на которую указывает заданное пространство имен).</summary>
      <returns>Имя ссылки для элемента.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaType">
      <summary>Получает или задает тип элемента.Это может быть либо сложный, либо простой тип.</summary>
      <returns>Тип элемента.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName">
      <summary>Получает или задает имя встроенного типа данных, определенного в этой схеме или в другой схеме, задаваемой указанным пространством имен.</summary>
      <returns>Имя встроенного типа данных.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SubstitutionGroup">
      <summary>Получает или задает имя элемента, заменяемого этим элементом.</summary>
      <returns>Полное имя элемента, заменяемого этим элементом.Необязательный параметр.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaEnumerationFacet">
      <summary>Представляет элемент enumeration из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс задает список допустимых значений для элемента simpleType.Объявление содержится в объявлении restriction.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaEnumerationFacet.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaException">
      <summary>Возвращает подробную информацию об исключении схемы.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaException" /> class.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new XmlSchemaException object with the given SerializationInfo and StreamingContext information that contains all the properties of the XmlSchemaException.</summary>
      <param name="info">SerializationInfo.</param>
      <param name="context">StreamingContext.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaException" /> class with the exception message specified.</summary>
      <param name="message">Описание string условий возникновения ошибки.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaException" /> class with the exception message and original <see cref="T:System.Exception" /> object that caused this exception specified.</summary>
      <param name="message">Описание string условий возникновения ошибки.</param>
      <param name="innerException">Исходный объект <see cref="T:System.Exception" />, вызвавший указанное исключение.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaException" /> с указанным сообщением исключения и исходным объектом <see cref="T:System.Exception" />, номером строки и размещением XML, вызвавшими указанное исключение.</summary>
      <param name="message">Описание string условий возникновения ошибки.</param>
      <param name="innerException">Исходный объект <see cref="T:System.Exception" />, вызвавший указанное исключение.</param>
      <param name="lineNumber">Номер строки XML, вызвавшей указанное исключение.</param>
      <param name="linePosition">Размещение строки XML, вызвавшей указанное исключение.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Streams all the XmlSchemaException properties into the SerializationInfo class for the given StreamingContext.</summary>
      <param name="info">The SerializationInfo. </param>
      <param name="context">Информация о StreamingContext. </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LineNumber">
      <summary>Получает номер строки, показывающий, где произошла ошибка.</summary>
      <returns>Номер строки, показывающий, где произошла ошибка.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LinePosition">
      <summary>Получает размещение строки, показывающее, где произошла ошибка.</summary>
      <returns>Размещение строки, показывающее, где произошла ошибка.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.Message">
      <summary>Получает описание условий возникновения ошибки для этого исключения.</summary>
      <returns>Описание условий возникновения ошибки для этого исключения.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceSchemaObject">
      <summary>Объект XmlSchemaObject, вызвавший XmlSchemaException.</summary>
      <returns>Допустимый экземпляр объекта, который отображает структурную ошибку проверки в объектной модели схемы (SOM) XML.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceUri">
      <summary>Получает размещение URI схемы, которая вызвала исключение.</summary>
      <returns>Размещение URI схемы, которая вызвала исключение.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaExternal">
      <summary>Абстрактный класс.Предоставляет сведения о включенной схеме.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaExternal.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaExternal" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Id">
      <summary>Получает или задает идентификатор строки.</summary>
      <returns>The string id.The default is String.Empty.Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Schema">
      <summary>Получает или задает XmlSchema для ссылочной схемы.</summary>
      <returns>XmlSchema для ссылочной схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.SchemaLocation">
      <summary>Получает или задает универсальный код ресурса (URI) для схемы, сообщающий процессору схемы физическое расположение схемы.</summary>
      <returns>URI-расположение для схемы.Необязательный параметр для импортированных схем.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.UnhandledAttributes">
      <summary>Получает и задает проверенные атрибуты, которые не принадлежат конечному пространству имен схемы.</summary>
      <returns>Проверенные атрибуты, принадлежащие другому целевому пространству имен.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFacet">
      <summary>Абстрактный класс для всех аспектов, которые используются при создании производных простых типов путем ограничения.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFacet.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaFacet" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.IsFixed">
      <summary>Получает или задает сведения, указывающие, что данный аспект зафиксирован.</summary>
      <returns>true — значение зафиксировано; в противном случае false.Значение по умолчанию false.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.Value">
      <summary>Получает или задает атрибут value для аспекта.</summary>
      <returns>Атрибут значения.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary>Указывает, требуется ли префикс пространства имен для атрибутов или элементов.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary>Форма элемента и атрибута не указана в схеме.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary>Для элементов и атрибутов необходим префикс пространства имен.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary>Префикс пространства имен для элементов и атрибутов не требуется.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet">
      <summary>Задает ограничение на количество цифр, которое может содержаться в дробной части элемента simpleType.Значение fractionDigits должно быть целым положительным числом.Представляет собой примитив fractionDigits консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFractionDigitsFacet.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroup">
      <summary>Представляет элемент group из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс определяет группы на уровне schema, на которые ссылаются сложные типы.Он группирует набор объявлений элементов, позволяя использовать их в качестве группы, в определении сложного типа.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaGroup" /> class.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Name">
      <summary>Получает или задает имя группы схем.</summary>
      <returns>Имя группы схем.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Particle">
      <summary>Получает или задает  один из классов <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Один из классов <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.QualifiedName">
      <summary>Возвращает полное имя группы схем.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlQualifiedName" />, представляющий полное имя группы схем.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupBase">
      <summary>Абстрактный класс для <see cref="T:System.Xml.Schema.XmlSchemaAll" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupBase.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaGroupBase" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
      <summary>Эта коллекция используется для добавления к композитору новых элементов.</summary>
      <returns>XmlSchemaObjectCollection.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupRef">
      <summary>Представляет элемент group с атрибутом ref из схемы XML в соответствии с определением консорциума World Wide Web (W3C).Данный класс используется в сложных типах, которые ссылаются на group, определенную на уровне schema.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupRef.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.Particle">
      <summary>Получает один из классов <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />, который содержит значение свойства Particle, полученное после компиляции.</summary>
      <returns>Полученное после компиляции значение свойства Particle, относящееся к одному из классов <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> или <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.RefName">
      <summary>Получает или задает имя группы, определенное в данной схеме (или в другой схеме с указанным пространством имен).</summary>
      <returns>Имя группы, определенное в данной схеме.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaIdentityConstraint">
      <summary>Class for the identity constraints: key, keyref, and unique elements.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaIdentityConstraint.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaIdentityConstraint" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Fields">
      <summary>Получает коллекцию полей, выполняющих роль дочерних полей для селектора выражений языка XML Path (XPath).</summary>
      <returns>Коллекция полей.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Name">
      <summary>Получает или задает имя ограничения идентификации.</summary>
      <returns>Имя ограничения идентификации.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.QualifiedName">
      <summary>Получает квалифицированное имя ограничения идентификации, которое содержит значение свойства QualifiedName, полученное после компиляции.</summary>
      <returns>Значение свойства QualifiedName, полученное после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Selector">
      <summary>Получает или задает выражение XPath элемента selector.</summary>
      <returns>Выражение XPath элемента selector.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaImport">
      <summary>Представляет элемент import из схемы XML в соответствии с определением консорциума World Wide Web (W3C).Этот класс используется для импортирования компонентов схемы из других схем.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaImport.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaImport" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Annotation">
      <summary>Gets or sets the annotation property.</summary>
      <returns>Примечание.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Namespace">
      <summary>Получает или задает конечное пространство имен для импортированных схем в качестве ссылки URI.</summary>
      <returns>Конечное пространство имен для импортированных схем в качестве ссылки URI.Необязательный параметр.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInclude">
      <summary>Представляет элемент include из схемы XML, в соответствии со спецификациями консорциума W3C.Этот класс используется для включения объявлений и определений из внешней схемы.Включенные объявления и определения затем становятся доступными для обработки в содержащей их схеме.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInclude.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaInclude" /> class.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInclude.Annotation">
      <summary>Получает или задает свойство annotation.</summary>
      <returns>Примечание.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference">
      <summary>Определяет схему языка объявления схем XML (XML Schema Definition Language, XSD) на основе документа XML.Класс <see cref="T:System.Xml.Schema.XmlSchemaInference" /> не поддерживает наследование.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)">
      <summary>Определяет схему языка определения схем XML (XSD) на основе документа XML, содержащегося в указанном объекте <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий определенные схемы.</returns>
      <param name="instanceDocument">Объект <see cref="T:System.Xml.XmlReader" />, содержащий документ XML, на основе которого будет определяться схема.</param>
      <exception cref="T:System.Xml.XmlException">Документ XML не является правильно сформированным.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на корневом узле или на элементе.Во время процесса выведения схемы происходит ошибка.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
      <summary>Определяет схему языка определения схем XML (XSD) на основе документа XML, содержащегося в заданном объекте <see cref="T:System.Xml.XmlReader" />, а также уточняет определенную схему, используя существующую схему из объекта <see cref="T:System.Xml.Schema.XmlSchemaSet" />, заданную для того же целевого пространства имен.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий определенные схемы.</returns>
      <param name="instanceDocument">Объект <see cref="T:System.Xml.XmlReader" />, содержащий документ XML, на основе которого будет определяться схема.</param>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий существующую схему, которая используется для уточнения определяемой схемы.</param>
      <exception cref="T:System.Xml.XmlException">Документ XML не является правильно сформированным.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Объект <see cref="T:System.Xml.XmlReader" /> не расположен на корневом узле или на элементе.Во время процесса выведения схемы происходит ошибка.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.Occurrence">
      <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />, влияющее на объявления вхождения схем, определяемые на основе документа XML.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.TypeInference">
      <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />, влияющее на способ определения типов на основе обрабатываемого документа XML.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference.InferenceOption">
      <summary>Влияет на вхождения и информацию о типе, определяемые классом <see cref="T:System.Xml.Schema.XmlSchemaInference" /> для элементов и атрибутов документа XML. </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted">
      <summary>Указывает, что для определенного элемента или атрибута следует определять более строгое объявление схемы.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed">
      <summary>Указывает, что для определенного элемента или атрибута следует определять менее строгое объявление схемы.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInferenceException">
      <summary>Возвращает сведения об ошибках, возникших во время определения классом <see cref="T:System.Xml.Schema.XmlSchemaInference" /> схемы для документа XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> с объектами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащими все свойства <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> с заданным сообщением об ошибке.</summary>
      <param name="message">Описание ошибки.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> с заданным сообщением об ошибке и с исходным <see cref="T:System.Exception" />, вызвавшим указанное <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
      <param name="message">Описание ошибки.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, содержащий исходное исключение, вызвавшее <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> с заданным сообщением об ошибке, исходным <see cref="T:System.Exception" />, вызвавшим указанное <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />, а также с указанным номером строки и указанной позицией в строке документа XML.</summary>
      <param name="message">Описание ошибки.</param>
      <param name="innerException">Объект <see cref="T:System.Exception" />, содержащий исходное исключение, вызвавшее <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="lineNumber">Номер строки в документе XML, вызвавшей <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="linePosition">Позиция в строке документа XML, вызвавшей <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Направляет все свойства объекта <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> в объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, заданный для указанного объекта <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInfo">
      <summary>Представляет инфо-набор проверенного XML-узла после проверки схемы.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
      <summary>Получает или задает <see cref="T:System.Xml.Schema.XmlSchemaContentType" /> объект, соответствующий типу содержимого этого проверенного XML-узла.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaContentType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
      <summary>Получает или задает значение, которое показывает, был ли этот проверенный XML-узел установлен в результате применения значения по умолчанию во время проверки схемы языка XSD.</summary>
      <returns>Значение bool.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
      <summary>Получает или задает значение, указывающее, является ли значение этого проверенного XML-узла пустым.</summary>
      <returns>Значение bool.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
      <summary>Получает или задает динамический тип схемы для этого проверенного XML-узла.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
      <summary>Получает или задает компилированный объект <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, соответствующий проверяемому XML-узлу.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
      <summary>Получает или задает компилированный объект <see cref="T:System.Xml.Schema.XmlSchemaElement" />, соответствующий проверяемому XML-узлу.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
      <summary>Получает или задает статический тип схемы языка XSD этого проверяемого XML-узла.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.Validity">
      <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> этого проверенного XML-узла.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaValidity" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKey">
      <summary>Этот класс представляет элемент key из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaKey" /> class.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKeyref">
      <summary>Данный класс представляет элемент keyref из XML-схемы в соответствии с требованиями консорциума World Wide Web(W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKeyref.#ctor">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Schema.XmlSchemaKeyref" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaKeyref.Refer">
      <summary>Получает или задает имя ключа, на который ссылается данное ограничение в другом простом или сложном типе.</summary>
      <returns>QName ключа, на которое ссылается данное ограничение.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaLengthFacet">
      <summary>Представляет аспект length из схемы XML в соответствии с определением  консорциума World Wide Web (W3C).Этот класс можно использовать для того, чтобы указать ограничение длины элемента simpleType в типе данных.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaLengthFacet.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet">
      <summary>Представляет элемент maxExclusive из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс может использоваться для определения ограничения на максимальное значение элемента simpleType.Значение элемента должно быть меньшим, чем значение элемента maxExclusive.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxExclusiveFacet.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet">
      <summary>Представляет элемент maxInclusive из схемы XML, в соответствии со спецификациями консорциума W3C.Этот класс можно использовать для задания ограничения по максимальному значению элемента simpleType.Значение элемента должно быть меньше или равно значению элемента maxInclusive.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxInclusiveFacet.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxLengthFacet">
      <summary>Представляет элемент maxLength из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс позволяет установить ограничение по максимальной длине для значения данных элемента simpleType.Длина должна быть меньше значения элемента maxLength.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxLengthFacet.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet">
      <summary>Представление элемента minExclusive из XML-схемы, в соответствии с требованиями консорциума World Wide Web(W3C).Данный класс можно использовать для определения ограничений по минимальному значению элемента simpleType.Значение элемента должно превышать значение элемента minExclusive.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinExclusiveFacet.#ctor">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet">
      <summary>Представляет элемент minInclusive из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс может использоваться для определения ограничения на минимальное значение simpleType.Значение элемента должно быть равно или больше значения элемента minInclusive.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinInclusiveFacet.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinLengthFacet">
      <summary>Представляет элемент minLength из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс позволяет установить ограничение на минимальную длину значения данных элемента simpleType.Длина должна быть больше значения элемента minLength.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinLengthFacet.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNotation">
      <summary>Представляет элемент notation из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Объявление схемы XML notation является реконструкцией объявлений XML 1.0 NOTATION.Нотация предназначена для описания формата данных, не являющихся данными XML, в документе XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNotation.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Name">
      <summary>Получает или задает имя представления.</summary>
      <returns>Имя представления.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Public">
      <summary>Получает или задает идентификатор public.</summary>
      <returns>The public identifier.Значение должно быть действительным идентификатором URI.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.System">
      <summary>Получает или задает идентификатор system.</summary>
      <returns>Идентификатор system.Значение должно быть действительным идентификатором URI.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNumericFacet">
      <summary>Абстрактный класс для определения аспектов numeric.Данный класс является базовым классом для таких классов числовых аспектов, как <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" /></summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNumericFacet.#ctor">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Schema.XmlSchemaNumericFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary>Представляет корневой класс для иерархии модели объектов схемы XML, а также выступает в качестве базового класса для таких классов, как <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LineNumber">
      <summary>Получает или задает номер строки в файле, на которую ссылается элемент schema.</summary>
      <returns>Номер строки.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LinePosition">
      <summary>Получает или задает позицию в строке файла, на которую ссылается элемент schema.</summary>
      <returns>Позиция в строке.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Namespaces">
      <summary>Получает или задает <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> для использования с данным объектом схемы.</summary>
      <returns>Свойство <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> для объекта схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Parent">
      <summary>Получает или задает родительский элемент данного <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <returns>Родительский элемент <see cref="T:System.Xml.Schema.XmlSchemaObject" /> данного <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.SourceUri">
      <summary>Получает или задает исходного расположение для файла, загрузившего данную схему.</summary>
      <returns>Исходное расположение (URI) для файла.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectCollection">
      <summary>Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
      <summary>Initializes a new instance of the XmlSchemaObjectCollection class.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
      <summary>Инициализация нового экземпляра класса XmlSchemaObjectCollection, принимающего <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <param name="parent">The <see cref="T:System.Xml.Schema.XmlSchemaObject" />. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
      <summary>Adds an <see cref="T:System.Xml.Schema.XmlSchemaObject" /> to the XmlSchemaObjectCollection.</summary>
      <returns>The index at which the item has been added.</returns>
      <param name="item">The <see cref="T:System.Xml.Schema.XmlSchemaObject" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля.— или — <paramref name="index" /> больше, чем Count. </exception>
      <exception cref="T:System.InvalidCastException">Заданный параметр <see cref="T:System.Xml.Schema.XmlSchemaObject" /> не относится к типу <see cref="T:System.Xml.Schema.XmlSchemaExternal" /> или его производным типам <see cref="T:System.Xml.Schema.XmlSchemaImport" />, <see cref="T:System.Xml.Schema.XmlSchemaInclude" /> и <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
      <summary>Сообщает, находится ли заданный <see cref="T:System.Xml.Schema.XmlSchemaObject" /> в XmlSchemaObjectCollection.</summary>
      <returns>true, если в коллекции существует указанное полное имя, иначе false.Если получен параметр null, возвращается результат false, так как для имени null не существует полного имени.</returns>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
      <summary>Копирует все объекты <see cref="T:System.Xml.Schema.XmlSchemaObject" /> из коллекции в заданный массив, начиная с заданного индекса.</summary>
      <param name="array">Одномерный массив, который является назначением для элементов, копируемых из XmlSchemaObjectCollection.Индексы массива должны начинаться с нуля.</param>
      <param name="index">Индекс массива (отсчитываемый от нуля), с которого начинается копирование. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> является пустой ссылкой (Nothing в Visual Basic). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> имеет несколько измерений.— или — <paramref name="index" /> is equal to or greater than the length of <paramref name="array" />.— или — Количество элементов в источнике <see cref="T:System.Xml.Schema.XmlSchemaObject" /> больше доступного пространства от заданного индекса до конца массива назначения. </exception>
      <exception cref="T:System.InvalidCastException">Тип источника <see cref="T:System.Xml.Schema.XmlSchemaObject" /> нельзя автоматически привести к типу массива назначения. </exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
      <summary>Возвращает перечислитель для итерации по объектам XmlSchemaObjects, содержащимся в XmlSchemaObjectCollection.</summary>
      <returns>Итератор возвращает <see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
      <summary>Возвращает индекс коллекции, соответствующий заданному <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <returns>Индекс коллекции, соответствующий заданному <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />, индекс которого необходимо возвратить. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
      <summary>Вставляет <see cref="T:System.Xml.Schema.XmlSchemaObject" /> в XmlSchemaObjectCollection.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому необходимо вставить элемент. </param>
      <param name="item">The <see cref="T:System.Xml.Schema.XmlSchemaObject" /> to insert. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля.— или — <paramref name="index" /> is greater than Count. </exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Xml.Schema.XmlSchemaObject" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Xml.Schema.XmlSchemaObject" /> at the specified index.</returns>
      <param name="index">Индекс <see cref="T:System.Xml.Schema.XmlSchemaObject" />. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
      <summary>OnClear is invoked before the standard Clear behavior.Дополнительные сведения см. в описании метода OnClear класса <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
      <summary>OnInsert is invoked before the standard Insert behavior.Дополнительные сведения см. в описании метода OnInsert класса <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Индекс <see cref="T:System.Xml.Schema.XmlSchemaObject" />. </param>
      <param name="item">Элемент. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
      <summary>OnRemove is invoked before the standard Remove behavior.Дополнительные методы см. в описании метода OnRemove класса <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Индекс <see cref="T:System.Xml.Schema.XmlSchemaObject" />. </param>
      <param name="item">Элемент. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>OnSet is invoked before the standard Set behavior.Дополнительные сведения см. в описании метода OnSet класса <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Индекс <see cref="T:System.Xml.Schema.XmlSchemaObject" />. </param>
      <param name="oldValue">Старое значение. </param>
      <param name="newValue">Новое значение. </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
      <summary>Removes an <see cref="T:System.Xml.Schema.XmlSchemaObject" /> from the XmlSchemaObjectCollection.</summary>
      <param name="item">The <see cref="T:System.Xml.Schema.XmlSchemaObject" /> to remove. </param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectEnumerator">
      <summary>Представляет перечислитель для <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
      <summary>Получает текущий объект <see cref="T:System.Xml.Schema.XmlSchemaObject" /> в коллекции.</summary>
      <returns>Текущий объект <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext">
      <summary>Переходит к следующему элементу в коллекции.</summary>
      <returns>false в конце коллекции.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset">
      <summary>Сбрасывает перечислитель, помещая его в начало коллекции.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>Описание данного члена см. в разделе <see cref="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current" />.</summary>
      <returns>Текущий объект <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Описание данного члена см. в разделе <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext" />.</summary>
      <returns>Следующий <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Описание этого элемента см. в разделе, посвященном <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectTable">
      <summary>Предоставляет коллекции для элементов, содержащихся в классе <see cref="T:System.Xml.Schema.XmlSchema" /> (например, для Attributes, AttributeGroups, Elements и т.д.).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
      <summary>Определяет, существует ли в коллекции указанное полное имя.</summary>
      <returns>true, если в коллекции существует указанное полное имя, иначе false.</returns>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Count">
      <summary>Возвращает количество элементов, содержащихся в <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Количество элементов, содержащихся в <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию всех элементов <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionaryEnumerator" />, который может выполнять итерацию всех элементов <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
      <summary>Возвращает элемент из <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> с указанным полным именем.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> элемента из <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> с указанным полным именем.</returns>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> элемента, который возвращается.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
      <summary>Возвращает коллекцию всех именованных элементов в <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Коллекция всех именованных элементов в <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
      <summary>Возвращает коллекцию всех значений для всех элементов <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Коллекция всех значений для всех элементов <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaParticle">
      <summary>Abstract class for that is the base class for all particle types (e.g.<see cref="T:System.Xml.Schema.XmlSchemaAny" />).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaParticle.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaParticle" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccurs">
      <summary>Получает или задает максимальное количество вхождений примитива.</summary>
      <returns>Максимальное возможное количество вхождений примитива.По умолчанию используется значение 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccursString">
      <summary>Получает или задает число как строковое значение.Максимальное возможное количество вхождений примитива.</summary>
      <returns>The number as a string value.String.Empty indicates that MaxOccurs is equal to the default value.Значение по умолчанию — пустая ссылка.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccurs">
      <summary>Получает или задает минимальное количество вхождений примитива.</summary>
      <returns>Минимальное возможное количество вхождений примитива.Значение по умолчанию равно 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccursString">
      <summary>Получает или задает число как строковое значение.Минимальное возможное количество вхождений примитива.</summary>
      <returns>The number as a string value.String.Empty indicates that MinOccurs is equal to the default value.Значение по умолчанию — пустая ссылка.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaPatternFacet">
      <summary>Представляет элемент pattern из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс может использоваться для определения ограничения на вводимые значения элемента simpleType.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaPatternFacet.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaRedefine">
      <summary>Представляет элемент redefine из схемы XML в соответствии с определением консорциума World Wide Web (W3C).Данный класс позволяет переопределить в текущей схеме простые и сложные типы, группы и группы атрибутов из внешних схем.Данный класс также может использоваться для обеспечения управления версиями элементов схемы.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaRedefine.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.AttributeGroups">
      <summary>Получает <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех атрибутов в схеме, содержащей значение свойства AttributeGroups, полученное после компиляции.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех атрибутов в схеме.Значение свойства AttributeGroups, полученное после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Groups">
      <summary>Получает <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех групп в схеме, содержащей значение свойства Groups, полученное после компиляции.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех групп в схеме.Значение свойства Groups, полученное после компиляции.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Items">
      <summary>Gets the collection of the following classes: <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, and <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
      <returns>Элементы, содержащиеся в переопределяемом элементе.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.SchemaTypes">
      <summary>Получает <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех простых и сложных типов в схеме, содержащей значение свойства SchemaTypes, полученное после компиляции.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> для всех типов схемы в схеме.Значение свойства SchemaTypes, полученное после компиляции.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSequence">
      <summary>Представляет элемент sequence (композитор) из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).sequence требует, чтобы элементы группы следовали в рамках содержащего их элемента в указанной последовательности.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSequence.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSequence.Items">
      <summary>Элементы, содержащиеся в композиторе.Коллекция <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> или <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
      <returns>Элементы, содержащиеся в композиторе.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary>Содержит кэш схем языка определения схем XML (XSD). </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaSet" /> с заданным <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nameTable">Объект <see cref="T:System.Xml.XmlNameTable" />, который следует использовать.</param>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XmlNameTable" />, передаваемый в качестве параметра, равен null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
      <summary>Добавляет схему языка определения схем XML (XSD), расположенную по указанному URL-адресу, в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, если схема успешно прошла проверку.Если схема не прошла проверку и задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />, тогда возвращается null и возникает соответствующее событие проверки.Иначе генерируется исключение <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <param name="targetNamespace">Свойство схемы targetNamespace или null, чтобы использовалось пространство имен targetNamespace, определенное в схеме.</param>
      <param name="schemaUri">URL-адрес, ссылающийся на схему, которую необходимо загрузить.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема не прошла проверку.</exception>
      <exception cref="T:System.ArgumentNullException">URL-адрес, переданный в качестве параметра, равен null или <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
      <summary>Добавляет схему языка определения схем XML (XSD), содержащуюся в <see cref="T:System.Xml.XmlReader" />, в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, если схема успешно прошла проверку.Если схема не прошла проверку и задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />, тогда возвращается null и возникает соответствующее событие проверки.Иначе генерируется исключение <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <param name="targetNamespace">Свойство схемы targetNamespace или null для использования пространства имен targetNamespace, определенного в схеме.</param>
      <param name="schemaDocument">Объект <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема не прошла проверку.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XmlReader" />, передаваемый в качестве параметра, равен null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
      <summary>Добавляет указанную <see cref="T:System.Xml.Schema.XmlSchema" /> в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, если схема успешно прошла проверку.Если схема не прошла проверку и задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />, тогда возвращается null и возникает соответствующее событие проверки.Иначе генерируется исключение <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, добавляемый в коллекцию <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема не прошла проверку.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, передаваемый в качестве параметра, равен null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
      <summary>Добавляет все схемы языка определения схем XML (XSD), содержащиеся в заданном <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема в <see cref="T:System.Xml.Schema.XmlSchemaSet" /> недействительна.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, передаваемый в качестве параметра, равен null.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
      <summary>Получает или задает <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> для <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> для <see cref="T:System.Xml.Schema.XmlSchemaSet" />.По умолчанию у экземпляра <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> свойство <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> принимает значение true.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Compile">
      <summary>Компилирует схемы языка определения схем XML (XSD) <see cref="T:System.Xml.Schema.XmlSchemaSet" /> в одну логическую схему.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Возникла ошибка при проверке и компиляции схем в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
      <summary>Определяет, находится ли схема языка определения схем XML (XSD) с указанным идентификатором URI целевого пространства имен в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Возвращает true, если схема с указанным идентификатором URI целевого пространства имен находится в <see cref="T:System.Xml.Schema.XmlSchemaSet" />, иначе возвращает false.</returns>
      <param name="targetNamespace">Свойство targetNamespace схемы.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Определяет, находится ли указанный объект языка определения схем XML (XSD) <see cref="T:System.Xml.Schema.XmlSchema" /> в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Возвращает true, если объект <see cref="T:System.Xml.Schema.XmlSchema" /> находится в <see cref="T:System.Xml.Schema.XmlSchemaSet" />, иначе возвращает false.</returns>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />, передаваемый в качестве параметра, равен null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Копирует все объекты <see cref="T:System.Xml.Schema.XmlSchema" /> из <see cref="T:System.Xml.Schema.XmlSchemaSet" /> в заданный массив, начиная с заданного индекса.</summary>
      <param name="schemas">Массив, в который будут копироваться объекты.</param>
      <param name="index">Индекс массива, начиная с которого будут копироваться объекты.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.Count">
      <summary>Получает количество логических схем языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Количество логических схем в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
      <summary>Получает все глобальные атрибуты всех схем языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
      <summary>Получает все глобальные элементы всех схем языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
      <summary>Получает все глобальные простые и сложные типы из всех схем языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
      <summary>Сообщает, были ли скомпилированы все схемы языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Возвращает true, если схемы из <see cref="T:System.Xml.Schema.XmlSchemaSet" /> были скомпилированы с момента последнего добавления схемы в <see cref="T:System.Xml.Schema.XmlSchemaSet" /> или удаления схемы из него; иначе возвращает false.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.NameTable">
      <summary>Получает имя <see cref="T:System.Xml.XmlNameTable" /> по умолчанию, используемое <see cref="T:System.Xml.Schema.XmlSchemaSet" /> при загрузке новых схем языка определения схем XML (XSD).</summary>
      <returns>
        <see cref="T:System.Xml.XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
      <summary>Удаляет заданную схему языка определения схем XML (XSD) из <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, удаленный из <see cref="T:System.Xml.Schema.XmlSchemaSet" />, или null, если схема не была найдена в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, который необходимо удалить из коллекции <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема не является действительной схемой.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Xml.Schema.XmlSchema" />, передаваемый в качестве параметра, равен null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
      <summary>Удаляет указанную схему языка определения схем XML (XSD) и все импортируемые ей схемы из <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Возвращает true, если объект <see cref="T:System.Xml.Schema.XmlSchema" /> и все импортируемые им объекты были успешно удалены, иначе возвращает false.</returns>
      <param name="schemaToRemove">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, который необходимо удалить из коллекции <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Xml.Schema.XmlSchema" />, передаваемый в качестве параметра, равен null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
      <summary>Выполняет повторную обработку схемы языка определения схем XML (XSD), которая уже находится в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchema" />, если схема успешно прошла проверку.Если схема не прошла проверку и задан <see cref="T:System.Xml.Schema.ValidationEventHandler" />, тогда возвращается null и порождается соответствующее событие проверки.Иначе генерируется исключение <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
      <param name="schema">Схема, которую необходимо обработать повторно.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Схема не прошла проверку.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, передаваемый в качестве параметра, равен null.</exception>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, передаваемый в качестве параметра, еще не существует в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas">
      <summary>Возвращает коллекцию всех схем языка определения схем XML (XSD), содержащихся в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий все схемы, добавленные в <see cref="T:System.Xml.Schema.XmlSchemaSet" />.Если в <see cref="T:System.Xml.Schema.XmlSchemaSet" /> не были добавлены схемы, возвращается пустой объект <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
      <summary>Возвращает коллекцию всех схем языка определения схем XML (XSD) в <see cref="T:System.Xml.Schema.XmlSchemaSet" />, принадлежащих заданному пространству имен.</summary>
      <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий все схемы, которые были добавлены к <see cref="T:System.Xml.Schema.XmlSchemaSet" />, принадлежащие заданному пространству имен.Если в <see cref="T:System.Xml.Schema.XmlSchemaSet" /> не были добавлены схемы, возвращается пустой объект <see cref="T:System.Collections.ICollection" />.</returns>
      <param name="targetNamespace">Свойство targetNamespace схемы.</param>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
      <summary>Задает обработчик событий, получающий сведения об ошибках проверки схем языка определения схем XML (XSD).</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
      <summary>Задает <see cref="T:System.Xml.XmlResolver" />, используемый при разрешении пространств имен и расположений, на которые ссылаются элементы включения и импорта схемы.</summary>
      <returns>
        <see cref="T:System.Xml.XmlResolver" />, используемый при разрешении пространств имен и расположений, на которые ссылаются элементы включения и импорта схемы.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContent">
      <summary>Представление элемента simpleContent из XML-схемы, в соответствии с требованиями консорциума World Wide Web(W3C).Данный класс подходит для простых и сложных типов с моделью простого содержимого.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContent.#ctor">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContent.Content">
      <summary>Получение одного из <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> или <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
      <returns>Содержимое, находящееся в рамках XmlSchemaSimpleContentRestriction или класса XmlSchemaSimpleContentExtension.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentExtension">
      <summary>Представляет элемент extension с простым содержимым из схемы XML в соответствии с определением  консорциума World Wide Web (W3C).Этот класс используется для получения простых типов при помощи расширения.Такие образования используются для расширения содержимого простого типа элемента посредством добавления атрибутов.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentExtension.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.AnyAttribute">
      <summary>Получает или задает XmlSchemaAnyAttribute, который используется для значения атрибута.</summary>
      <returns>XmlSchemaAnyAttribute.Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.Attributes">
      <summary>Получает коллекцию <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> и <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Коллекция атрибутов для элемента simpleType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.BaseTypeName">
      <summary>Получает или задает имя встроенного или простого типа, при помощи которого данный тип был расширен.</summary>
      <returns>Имя базового типа.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction">
      <summary>Представляет элемент restriction для простого содержимого из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс может использоваться для создания производных простых типов путем ограничения.Такое порождение позволяет ограничивать диапазон возможных значений элемента подмножеством значений, определенных для простого типа, который наследуется.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentRestriction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> class.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.AnyAttribute">
      <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />, используемое в качестве значения атрибута.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> для значения атрибута.Необязательный параметр.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Attributes">
      <summary>Gets the <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> and <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> collection of attributes for the simple type.</summary>
      <returns>Коллекция атрибутов для простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseType">
      <summary>Получает или задает базовое значение простого типа.</summary>
      <returns>Базовое значение простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseTypeName">
      <summary>Получает или задает имя встроенного типа данных или простого типа, от которого порожден данный производный тип.</summary>
      <returns>Имя базового типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Facets">
      <summary>Получает или задает аспект схемы Xml. </summary>
      <returns>Один из следующих классов аспектов:<see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleType">
      <summary>Представляет элемент simpleType для простого содержимого из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс определяет простой тип.Простые типы могут содержать сведения и ограничения для значений атрибутов или элементов, которые допускают только текстовое содержимое.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleType.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleType.Content">
      <summary>Получает или задает одно из значений <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" /> или <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
      <returns>Одно из значений XmlSchemaSimpleTypeUnion, XmlSchemaSimpleTypeList или XmlSchemaSimpleTypeRestriction.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeContent">
      <summary>Абстрактный класс для классов содержимого простого типа.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeContent.#ctor">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeList">
      <summary>Представляет элемент list из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс позволяет определить элемент simpleType как список значений указанного типа данных.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" /> class.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType">
      <summary>Получает или задает значение <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющее тип элемента simpleType, основываясь на значениях <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType" /> и <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName" /> простого типа.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> представляет тип элемента simpleType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType">
      <summary>Получает или задает элемент simpleType, производный от типа, определяемого базовым значением.</summary>
      <returns>Тип элемента для элемента простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName">
      <summary>Получает или задает имя встроенного типа данных или элемента simpleType, определенного в этой схеме (или в другой схеме, задаваемой указанным пространством имен).</summary>
      <returns>Имя типа списка простых типов.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction">
      <summary>Представляет элемент restriction для простых типов из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Этот класс может использоваться для ограничения элемента simpleType.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" /> class.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseType">
      <summary>Получает или задает информацию о базовом типе.</summary>
      <returns>Базовый тип для элемента simpleType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseTypeName">
      <summary>Получает или задает имя уточненного базового типа.</summary>
      <returns>Проверенное имя базового типа для ограничения простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Facets">
      <summary>Получает или задает аспект схемы Xml. </summary>
      <returns>Один из следующих классов аспектов:<see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion">
      <summary>Представляет элемент union для простых типов из схемы XML, определенной консорциумом World Wide Web Consortium (W3C).Тип данных union может использоваться для определения содержимого simpleType.Значение элемента simpleType должно иметь один из возможных типов данных, заданных в объединении.Типы-объединения всегда являются производными типами и должны состоять как минимум из двух различных типов данных.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeUnion.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseMemberTypes">
      <summary>Получает массив объектов <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющих тип элемента simpleType, основанный на значениях <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes" /> и <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes" /> простого типа.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющих тип элемента simpleType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes">
      <summary>Получает коллекцию базовых типов.</summary>
      <returns>Коллекция базовых значений простого типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes">
      <summary>Получает или задает массив уточненных имен членов встроенных типов данных или элементов simpleType, определенных в этой схеме (или в другой схеме, определяемой заданным пространством имен).</summary>
      <returns>Массив, состоящий из списка членов встроенных типов данных или простых типов.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet">
      <summary>Представляет аспект totalDigits из XML-схемы в соответствии с требованиями консорциума World Wide Web (W3C).Данный класс может быть использован для определения ограничения по числу цифр, которые можно ввести для значения элемента simpleType.Это значение totalDigits должно быть целым положительным числом.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaTotalDigitsFacet.#ctor">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaType">
      <summary>Базовый класс для всех простых и сложных типов.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
      <summary>Получает тип объекта после компиляции или встроенный тип данных XSD, элемент simpleType или элемент complexType.Свойство набора сведений после компиляции схемы.</summary>
      <returns>Встроенный тип данных XSD, элемент simpleType или элемент complexType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
      <summary>Получает значение после компиляции для базового типа данного типа схемы.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaType" />, представляющий базовый тип данного типа схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Datatype">
      <summary>Получает значение типа данных после компиляции для данного сложного типа.</summary>
      <returns>Значение <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> после компиляции схемы.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
      <summary>Получает сведения после компиляции о способе создания данного элемента из его базового типа.</summary>
      <returns>Одно из допустимых значений <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Final">
      <summary>Получает или задает финальный атрибут создания производной типа, указывающий, разрешены ли создание дальнейших производных.</summary>
      <returns>Одно из допустимых значений <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />.По умолчанию — <see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
      <summary>Получает значение свойства <see cref="P:System.Xml.Schema.XmlSchemaType.Final" /> после компиляции.</summary>
      <returns>Значение свойства <see cref="P:System.Xml.Schema.XmlSchemaType.Final" /> после компиляции.По умолчанию используется значение атрибута finalDefault элемента schema.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
      <summary>Возвращает <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, который представляет встроенный сложный тип указанного сложного типа.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, представляющий встроенный сложный тип.</returns>
      <param name="typeCode">Одно из значений <see cref="T:System.Xml.Schema.XmlTypeCode" />, представляющее сложный тип.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
      <summary>Возвращает <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, который представляет встроенный сложный тип, заданный полным именем.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, представляющий встроенный сложный тип.</returns>
      <param name="qualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> сложного типа.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="T:System.Xml.XmlQualifiedName" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
      <summary>Возвращает тип <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, который представляет встроенный простой тип указанного простого типа.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющий встроенный простой тип.</returns>
      <param name="typeCode">Одно из значений <see cref="T:System.Xml.Schema.XmlTypeCode" />, представляющее простой тип.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
      <summary>Возвращает <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, который представляет встроенный простой тип простого типа, заданного полным именем.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, представляющий встроенный простой тип.</returns>
      <param name="qualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> данного простого типа.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="T:System.Xml.XmlQualifiedName" /> — null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
      <summary>Возвращает значение, указывающее, является ли указанный тип схемы производным от указанного типа базовой схемы.</summary>
      <returns>true, если производный тип создан от базового типа; в противном случае — false.</returns>
      <param name="derivedType">Производный <see cref="T:System.Xml.Schema.XmlSchemaType" /> для тестирования.</param>
      <param name="baseType">Базовый <see cref="T:System.Xml.Schema.XmlSchemaType" /> для тестирования на соответствие производному <see cref="T:System.Xml.Schema.XmlSchemaType" />.</param>
      <param name="except">Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />, представляющее метод создания производного типа, который требуется исключить из тестирования.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.IsMixed">
      <summary>Получает или задает значение, указывающее, имеет ли данный тип смешанную модель содержимого.Это свойство доступно только в сложных типах.</summary>
      <returns>true, если тип имеет смешанную модель содержимого; в противном случае — false.По умолчанию — false.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Name">
      <summary>Получает или задает имя типа.</summary>
      <returns>Имя типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
      <summary>Получает полное имя для типа, построенного из атрибута Name данного типа.Свойство после компиляции схемы.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> для типа, построенного из атрибута Name данного типа.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.TypeCode">
      <summary>Получает <see cref="T:System.Xml.Schema.XmlTypeCode" /> данного типа.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlTypeCode" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUnique">
      <summary>Представляет элемент unique из схемы XML в соответствии с определением консорциума World Wide Web (W3C).Данный класс используется для идентификации уникального ограничения среди набора элементов.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaUnique.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaUnique" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUse">
      <summary>Индикатор способа использования атрибута.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.None">
      <summary>Использование атрибута не определено.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Optional">
      <summary>Атрибут необязателен.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Prohibited">
      <summary>Атрибут не может использоваться.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Required">
      <summary>Attribute must appear once.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationException">
      <summary>Представляет исключение, возникшее в проверяемом XML-документе в результате появления предупреждений и ошибок проверки языка XSD. </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> с указанными объектами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> с указанным сообщением исключения.</summary>
      <param name="message">Описание string условий возникновения ошибки.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> с сообщением исключения и исходным объектом <see cref="T:System.Exception" />, вызвавшим указанное исключение.</summary>
      <param name="message">Описание string условий возникновения ошибки.</param>
      <param name="innerException">Исходный объект <see cref="T:System.Exception" />, вызвавший указанное исключение.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> с указанным сообщением исключения и исходным объектом <see cref="T:System.Exception" />, номером строки и размещением XML, вызвавшими указанное исключение.</summary>
      <param name="message">Описание string условий возникновения ошибки.</param>
      <param name="innerException">Исходный объект <see cref="T:System.Exception" />, вызвавший указанное исключение.</param>
      <param name="lineNumber">Номер строки XML, вызвавшей указанное исключение.</param>
      <param name="linePosition">Размещение строки XML, вызвавшей указанное исключение.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Constructs a new <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> object with the given <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> information that contains all the properties of the <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />
      </param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.SetSourceObject(System.Object)">
      <summary>Устанавливает XML-узел, ставший причиной ошибки.</summary>
      <param name="sourceObject">Объект-источник.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidationException.SourceObject">
      <summary>Получает XML-узел, вызвавший данное <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <returns>XML-узел, вызвавший данное <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationFlags">
      <summary>Определяет параметры проверки схемы, используемые классами <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> и <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.None">
      <summary>Не обрабатывайте ограничения идентификации, внутренние схемы, указания по расположению схемы или не создавайте отчетов о предупреждениях при проверке схемы.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema">
      <summary>Обработайте внутренние схемы, найденные при проверке.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation">
      <summary>Обработайте указания по расположению схемы (xsi:schemaLocation, xsi:noNamespaceSchemaLocation), найденные при проверке.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings">
      <summary>Создайте отчет о предупреждениях при проверке схемы, найденных при проверке.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints">
      <summary>Обработайте ограничения идентификации (xs:ID, xs:IDREF, xs:key, xs:keyref, xs:unique), найденные при проверке.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
      <summary>Разрешите атрибуты xml:*, даже если они не определены в схеме.Атрибуты проверяются на основе их типа данных.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidator">
      <summary>Представляет обработчик проверки схемы языка XSD.Невозможно наследовать класс <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <param name="nameTable">Объект <see cref="T:System.Xml.XmlNameTable" />, содержащий имена элемента и атрибута в виде отдельных строк.</param>
      <param name="schemas">Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий схемы языка XSD, использующиеся для проверки.</param>
      <param name="namespaceResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, который используется для определения пространств имен, обнаруженных при проверке.</param>
      <param name="validationFlags">Значение <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />, указывающее параметры проверки схемы.</param>
      <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются null.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Ошибка при компиляции схем в параметре <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
      <summary>Добавляет схему языка XSD к набору схем, используемых для проверки.</summary>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" /> для добавления к набору схем, используемых для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Указанный параметр <see cref="T:System.Xml.Schema.XmlSchema" /> является null.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Конечное пространство имен параметра <see cref="T:System.Xml.Schema.XmlSchema" /> совпадает с пространством имен элемента или атрибута, уже обнаруженным объектом <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Параметр <see cref="T:System.Xml.Schema.XmlSchema" /> является недопустимым.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
      <summary>Завершает проверку и проверяет ограничения идентификации для всего документа XML.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">В документе XML обнаружена ошибка ограничения идентификации.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
      <summary>Возвращает указанные атрибуты для текущего контекста элемента.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> или пустой массив, если отсутствуют указанные атрибуты.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
      <summary>Возвращает указанные примитивы в текущий контекст элемента.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> или пустой массив, если отсутствуют указанные примитивы.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
      <summary>Проверяет ограничения идентификации в атрибутах по умолчанию и заполняет указанный список <see cref="T:System.Collections.ArrayList" /> объектами <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> для любых атрибутов со значениями по умолчанию, которые до этого не прошли проверку при помощи метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> в контексте элемента. </summary>
      <param name="defaultAttributes">
        <see cref="T:System.Collections.ArrayList" /> для заполнения объектами <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> для любых атрибутов, которые не были обнаружены во время проверки в контексте элемента.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
      <summary>Инициализирует состояние объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <exception cref="T:System.InvalidOperationException">Вызов метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> является допустимым только сразу после формирования объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> или после вызова <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
      <summary>Инициализирует состояние объекта <see cref="T:System.Xml.Schema.XmlSchemaObject" /> при помощи <see cref="T:System.Xml.Schema.XmlSchemaObject" />, указанного для частичной проверки.</summary>
      <param name="partialValidationType">Объекты <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> или <see cref="T:System.Xml.Schema.XmlSchemaType" />, используемые для инициализации контекста проверки объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> для частичной проверки.</param>
      <exception cref="T:System.InvalidOperationException">Вызов метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> является допустимым только сразу после формирования объекта <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> или после вызова <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <see cref="T:System.Xml.Schema.XmlSchemaObject" /> не является объектом <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> или <see cref="T:System.Xml.Schema.XmlSchemaType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <see cref="T:System.Xml.Schema.XmlSchemaObject" /> не может принимать значение null.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
      <summary>Получает или задает сведения о номерах строк для проверяемого XML-узла.</summary>
      <returns>Объект <see cref="T:System.Xml.IXmlLineInfo" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Позволяет пропустить проверку содержимого текущего элемента и подготовить объект <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> для проверки содержимого контекста родительского элемента.</summary>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, чьи свойства задаются при пропуске проверки содержимого текущего элемента.Данный параметр может принимать значение null.</param>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.Например, <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
      <summary>Получает или задает исходный URI для проверяемого XML-узла.</summary>
      <returns>Объект <see cref="T:System.Uri" />, предоставляющий исходный URI для проверяемого XML-узла. По умолчанию это null.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Проверяет имя атрибута, пространство имен URI и значение текущего контекста элемента.</summary>
      <returns>Проверенное значение атрибута.</returns>
      <param name="localName">Локальное имя атрибута, которое нужно проверить.</param>
      <param name="namespaceUri">Пространство имен URI атрибута, которое нужно проверить.</param>
      <param name="attributeValue">Значение атрибута, которое нужно проверить.</param>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке атрибута.Данный параметр может принимать значение null.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимый атрибут в текущем контексте элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Проверяет имя атрибута, пространство имен URI и значение текущего контекста элемента.</summary>
      <returns>Проверенное значение атрибута.</returns>
      <param name="localName">Локальное имя атрибута, которое нужно проверить.</param>
      <param name="namespaceUri">Пространство имен URI атрибута, которое нужно проверить.</param>
      <param name="attributeValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />delegate, используемый для передачи значения атрибута в качестве типа CLR, совместимого с типом языка XSD атрибута.</param>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке атрибута.Данный параметр может принимать значение null.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимый атрибут в текущем контексте элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Проверяет элемент в текущем контексте.</summary>
      <param name="localName">Локальное имя элемента, которое нужно проверить.</param>
      <param name="namespaceUri">Пространство имен URI элемента, которое нужно проверить.</param>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке имени элемента.Данный параметр может принимать значение null.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое имя элемента в текущем контексте.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />.Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
      <summary>Проверяет элемент в текущем контексте с указанными значениями xsi:Type, xsi:Nil, xsi:SchemaLocation и xsi:NoNamespaceSchemaLocation атрибута.</summary>
      <param name="localName">Локальное имя элемента, которое нужно проверить.</param>
      <param name="namespaceUri">Пространство имен URI элемента, которое нужно проверить.</param>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке имени элемента.Данный параметр может принимать значение null.</param>
      <param name="xsiType">Значение атрибута xsi:Type элемента.Данный параметр может принимать значение null.</param>
      <param name="xsiNil">Значение атрибута xsi:Nil элемента.Данный параметр может принимать значение null.</param>
      <param name="xsiSchemaLocation">Значение атрибута xsi:SchemaLocation элемента.Данный параметр может принимать значение null.</param>
      <param name="xsiNoNamespaceSchemaLocation">Значение атрибута xsi:NoNamespaceSchemaLocation элемента.Данный параметр может принимать значение null.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое имя элемента в текущем контексте.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />.Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Проверяет, является ли текстовое содержимое элемента допустимым относительно типа данных для элементов с простым содержимым, а также проверяет, является ли содержимое текущего элемента достаточным для элементов со сложным содержимым.</summary>
      <returns>Проанализированное типизированное текстовое значение элемента, если содержимое элемента является простым.</returns>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке элемента.Данный параметр может принимать значение null.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое содержимое элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" />.Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
      <summary>Проверяет, является ли текстовое содержимое указанного элемента допустимым для его типа данных.</summary>
      <returns>Проанализированное типизированное простое содержимое элемента.</returns>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке текстового содержимого элемента.Данный параметр может принимать значение null.</param>
      <param name="typedValue">Типизированное текстовое содержимое элемента.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое текстовое содержимое элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> не был вызван в правильной последовательности (например, если метод <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> вызывается после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), а вызов метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> уже производился раньше или элемент имеет сложное содержимое.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр типизированного текстового содержимого не может принимать значение null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Проверяет наличие всех необходимых атрибутов в элементе и подготавливает объект <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> для проверки дочернего содержимого элемента.</summary>
      <param name="schemaInfo">Объект <see cref="T:System.Xml.Schema.XmlSchemaInfo" />, значения свойств которого задаются при успешной проверке на наличие в элементе всех необходимых атрибутов.Данный параметр может принимать значение null.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">В текущем контексте элемента отсутствует один или несколько необходимых атрибутов.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.Например, <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> был вызван после <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Один или несколько из указанных параметров являются null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
      <summary>Проверяет, является ли указанная текстовая string допустимой для контекста текущего элемента, и собирает текст для проверки, если текущий элемент имеет простое содержимое.</summary>
      <param name="elementValue">Текстовая string, которую нужно проверить в контексте текущего элемента.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Указанная текстовая string является недопустимой для контекста текущего элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />.Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException">Текстовый параметр string не может принимать значение null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
      <summary>Проверяет, является ли текст, возвращенный при помощи указанного объекта <see cref="T:System.Xml.Schema.XmlValueGetter" />, допустимым в контексте текущего элемента, и собирает текст для проверки, если текущий элемент имеет простое содержимое.</summary>
      <param name="elementValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />delegate, используемый для передачи текстового значения в качестве типа CLR, совместимого с типом языка XSD атрибута.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Указанная текстовая string является недопустимой для контекста текущего элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />.Например, <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException">Текстовый параметр string не может принимать значение null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
      <summary>Проверяет, является ли пустое пространство в указанной string допустимым для контекста текущего элемента, и собирает пустое пространство для проверки, если текущий элемент имеет простое содержимое.</summary>
      <param name="elementValue">Пустое пространство string, которое нужно проверить в контексте текущего элемента.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое пустое пространство в текущем контексте элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />.Например, метод <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
      <summary>Проверяет, является ли пустое пространство, возвращенное при помощи указанного объекта <see cref="T:System.Xml.Schema.XmlValueGetter" />, допустимым для контекста текущего элемента, и собирает пустое пространство для проверки, если текущий элемент имеет простое содержимое.</summary>
      <param name="elementValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />delegate, используемый для передачи значения пустого пространства в качестве типа CLR, совместимого с типом языка XSD атрибута.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Недопустимое пустое пространство в текущем контексте элемента.</exception>
      <exception cref="T:System.InvalidOperationException">Была нарушена последовательность при вызове метода <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />.Например, метод <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> был вызван после <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
      <summary>
        <see cref="T:System.Xml.Schema.ValidationEventHandler" />, который получает предупреждения и ошибки, возникшие при проверке схемы.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
      <summary>Получает или задает объект, переданный в качестве отправителя объекта события проверки.</summary>
      <returns>
        <see cref="T:System.Object" />; по умолчанию это объект <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
      <summary>Устанавливает значение для объекта <see cref="T:System.Xml.XmlResolver" />, используемого для определения элементов xs:import и xs:include, а также атрибутов xsi:schemaLocation и xsi:noNamespaceSchemaLocation.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlResolver" />; по умолчанию это объект <see cref="T:System.Xml.XmlUrlResolver" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidity">
      <summary>Представляет статус действительности элемента XML, проверенного классом <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.NotKnown">
      <summary>Статус действительности элемента XML неизвестен.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Valid">
      <summary>Этот элемент XML действителен.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Invalid">
      <summary>Этот элемент XML недействителен.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet">
      <summary>Представляет аспект whiteSpace консорциума World Wide Web (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaWhiteSpaceFacet.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaXPath">
      <summary>Представляет элемент selector консорциума World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaXPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaXPath" /> class.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaXPath.XPath">
      <summary>Получает или задает атрибут для выражения XPath.</summary>
      <returns>Строковой атрибут значения для выражения XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary>Представляет собой уровень серьезности события проверки.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary>Указывает, что произошла ошибка проверки во время проверки документа экземпляра.Это относится к определениям типов документов (DTD) и схемам языка определения схем XML (XSD).Ограничения по проверке консорциума World Wide Web (W3C) считаются ошибками.Если обработчик событий проверки отсутствует, в связи с ошибками возникает исключение.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary>Указывает, что произошло событие проверки, не являющееся ошибкой.Обычно предупреждение происходит, когда отсутствует DTD или схема XML, по которой можно выполнить проверку определенного элемента или атрибута.В отличие от ошибок, при предупреждениях не происходит исключение для них также отсутствует обработчик событий проверки.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary>Представляет типы схем языка определения схем W3C XML (XSD).</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary>Сведения о типе отсутствуют.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary>Элемент в качестве узла или атомарного значения.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary>Любое атомарное значение объединения.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary>Нетипированное атомарное значение.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary>Тип схемы W3C XML xs:string.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary>Тип схемы W3C XML xs:boolean.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary>Тип схемы W3C XML xs:decimal.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary>Тип схемы W3C XML xs:float.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary>Тип схемы W3C XML xs:double.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary>Тип схемы W3C XML xs:Duration.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary>Тип схемы W3C XML xs:dateTime.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary>Тип схемы W3C XML xs:time.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary>Тип схемы W3C XML xs:date.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary>Тип схемы W3C XML xs:gYearMonth.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary>Тип схемы W3C XML xs:gYear.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary>Тип схемы W3C XML xs:gMonthDay.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary>Тип схемы W3C XML xs:gDay.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary>Тип схемы W3C XML xs:gMonth.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary>Тип схемы W3C XML xs:hexBinary.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary>Тип схемы W3C XML xs:base64Binary.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary>Тип схемы W3C XML xs:anyURI.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary>Тип схемы W3C XML xs:QName.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary>Тип схемы W3C XML xs:NOTATION.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary>Тип схемы W3C XML xs:normalizedString.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary>Тип схемы W3C XML xs:token.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary>Тип схемы W3C XML xs:language.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary>Тип схемы W3C XML xs:NMTOKEN.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary>Тип схемы W3C XML xs:Name.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary>Тип схемы W3C XML xs:NCName.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary>Тип схемы W3C XML xs:ID.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary>Тип схемы W3C XML xs:IDREF.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary>Тип схемы W3C XML xs:ENTITY.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary>Тип схемы W3C XML xs:integer.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary>Тип схемы W3C XML xs:nonPositiveInteger.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary>Тип схемы W3C XML xs:negativeInteger.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary>Тип схемы W3C XML xs:long.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary>Тип схемы W3C XML xs:int.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary>Тип схемы W3C XML xs:short.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary>Тип схемы W3C XML xs:byte.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary>Тип схемы W3C XML xs:nonNegativeInteger.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary>Тип схемы W3C XML xs:unsignedLong.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary>Тип схемы W3C XML xs:unsignedInt.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary>Тип схемы W3C XML xs:unsignedShort.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary>Тип схемы W3C XML xs:unsignedByte.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary>Тип схемы W3C XML xs:positiveInteger.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary>Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlValueGetter">
      <summary>Класс <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> использует delegate, чтобы передать атрибут, текст и значения пустого пространства в качестве типа CLR, совместимого с типом языка XSD атрибута, текста или пустого пространства.</summary>
      <returns>Объект, содержащий значение атрибута, текста или пустого пространства.Объект представляет собой тип CLR, соответствующий типу XSD атрибута, текста или пустого пространства.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeExporter">
      <summary>Представляет класс, генерирующий прокси-код из представления XML структуры данных.</summary>
    </member>
    <member name="P:System.Xml.Serialization.CodeExporter.IncludeMetadata">
      <summary>Получает коллекцию метаданных атрибута кода, включенную при экспортировании кода.</summary>
      <returns>Коллекция объектов <see cref="T:System.CodeDom.CodeAttributeDeclaration" />, представляющих метаданные, включенная при экспортировании кода.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary>Определение различных параметров использования при создании типов платформе .NET Framework для использования с помощью веб-службы XML.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary>Представление простых типов по полям и по типам пространств имен <see cref="N:System" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary>Представление простых типов по свойствам.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary>Создание событий для асинхронного вызова веб-методов.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary>Создание методов "Begin" и "End" для асинхронного вызова веб-методов.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary>Создание кода сериализации в явно заданном порядке в соответствии со свойством Order<see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> и атрибутами <see cref="T:System.Xml.Serialization.XmlElementAttribute" />. </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary>Включение привязки данных.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary>Предоставляет статические методы для преобразования входного текста в имена для сущностей кода.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.CodeIdentifier" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary>Создает из входных строк строку из слов с прописной буквы без пробелов. </summary>
      <returns>Версия строки параметра в стиле Camel.</returns>
      <param name="identifier">Имя сущности кода, например, параметра метода, которое обычно берется из XML-элемента или имени атрибута.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary>Создает из входной строки строку стиля Pascal. </summary>
      <returns>Версия строки параметра в стиле Pascal.</returns>
      <param name="identifier">Имя сущности кода, например, параметра метода, которое обычно берется из XML-элемента или имени атрибута.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary>Создает из входной строки допустимое имя сущности кода. </summary>
      <returns>Строка, которую можно использовать в качестве программного идентификатора, например, имя параметра метода.</returns>
      <param name="identifier">Имя сущности кода, например, параметра метода, которое обычно берется из XML-элемента или имени атрибута.</param>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary>Поддерживает группу имен для связанных сущностей кода или сопоставлений типов, сгенерированных инфраструктурой сериализации XML платформы .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> и определяет, чувствительны ли идентификаторы кода к регистру.</summary>
      <param name="caseSensitive">true, если идентификаторы чувствительны к регистру; в противном случае false. </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary>Добавляет именованную сущность кода или сопоставление типа к области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. </summary>
      <param name="identifier">Имя, используемое для индексации сущности кода.</param>
      <param name="value">Информация по сущности кода или сопоставлению типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary>Предотвращает использование указанного имени в рамках области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. </summary>
      <param name="identifier">A name that will not be available within the <see cref="T:System.Xml.Serialization.CodeIdentifiers" />instance's scope.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary>Добавляет именованную сущность кода или сопоставление типа к области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, обеспечивая уникальность имени в рамках области. </summary>
      <returns>Значение параметра идентификатора или измененная строка, если возникает коллизия имени.</returns>
      <param name="identifier">Допустимое имя, используемое для индексации сущности кода.</param>
      <param name="value">Информация по сущности кода или сопоставлению типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary>Удаляет все сущности кода и сопоставления типов, включая их имена, из области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary>Определяет, используется ли указанное имя в рамках области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. </summary>
      <returns>true, если имя уже используется; в противном случае false.</returns>
      <param name="identifier">Имя для проверки на предмет использования в области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary>Обеспечивает правильный регистр ввода путем изменения имени в соответствии со значением свойства <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />. </summary>
      <returns>Строка, аналогичная входящему идентификатору или с измененным регистром первой буквы.</returns>
      <param name="identifier">Имя для возможного изменения.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary>Определяет конфликтует ли входящее имя с другим именем в рамках области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> и, если конфликтует, выполняется генерирование измененной строки. </summary>
      <returns>Значение параметра идентификатора или измененная строка, если возникает коллизия имени.</returns>
      <param name="identifier">Имя для изменения, если оно не является уникальным.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary>Удаляет из области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> сущность кода или сопоставление типа, идентифицированное входящим именем. </summary>
      <param name="identifier">Информация имени сущности кода или сопоставления типа для удаления.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary>Удаляет входящую строку из зарезервированных имен экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. </summary>
      <param name="identifier">Имя, которое будет доступно в рамках области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary>Возвращает массив сущностей кода или сопоставлений типов в рамках области экземпляра <see cref="T:System.Xml.Serialization.CodeIdentifiers" />. </summary>
      <returns>Массив сущностей кода или сопоставлений типа, сохраненный объектом <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</returns>
      <param name="type">Тип всех сущностей кода или сопоставлений типа для экземпляра.</param>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary>Получает или задает значение, указывающее, использует ли экземпляр верхний регистр. </summary>
      <returns>true для обозначения использования экземпляром верхнего регистра, false для указания использования экземпляром регистра Pascal.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary>Описывает контекст, в котором набор схемы связан с кодовыми сущностями .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.ImportContext" /> для данных идентификаторов кода с данным параметром совместного использования типа.</summary>
      <param name="identifiers">Кодовые сущности, к которым применяется данный контекст.</param>
      <param name="shareTypes">Значение <see cref="T:System.Boolean" />, определяющее наличие в схеме общих пользовательских типов.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary>Получает значение, определяющее наличие общих пользовательских типов.</summary>
      <returns>true, если в схеме есть общие пользовательские типы, в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary>Получает набор кодовых сущностей, к которым применяется данный контекст.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, выявляющий кодовые сущности, к которым применяется данный контекст.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary>Получает коллекцию предупреждений, создаваемых при импортировании описаний кодовых сущностей.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" />, содержащие предупреждения, созданные при импортировании описаний кодовых сущностей.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary>Предоставляет пользовательский формат для сериализации и десериализации XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary>Этот метод является зарезервированным, и его не следует использовать.При реализации интерфейса IXmlSerializable этот метод должен возвращать значение null (Nothing в Visual Basic), а если необходимо указать пользовательскую схему, то вместо использования метода следует применить <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> к классу.</summary>
      <returns>Схема <see cref="T:System.Xml.Schema.XmlSchema" />, в которой описывается XML-представление объекта, который создается методом <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> и используется методом <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary>Создает объект из его XML-представления.</summary>
      <param name="reader">Поток <see cref="T:System.Xml.XmlReader" />, из которого выполняется десериализация объекта. </param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary>Преобразует объект в XML-представление.</summary>
      <param name="writer">Поток <see cref="T:System.Xml.XmlWriter" />, в который выполняется сериализация объекта. </param>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary>Задает свойство <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> для использования в инфраструктуре платформы .NET Framework.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary>Получает или задает значение, указывающее, будет ли использоваться нормализация пробельных символов и значений атрибутов.</summary>
      <returns>Значение true, если пробелы и значения атрибутов будут нормализоваться, в противном случае —false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary>Получает или задает способ обработки пробелов при анализе XML-кода.</summary>
      <returns>Член перечисления <see cref="T:System.Xml.WhitespaceHandling" />, описывающий способ обработки пробелов при анализе XML-кода.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary>Описывает импортера схемы.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SchemaImporter.Extensions">
      <summary>Получает коллекцию расширений импортера схемы.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection" />, содержащий коллекцию расширений импортера схемы.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary>Указывает, что класс <see cref="T:System.Xml.Serialization.XmlSerializer" /> должен сериализовать член класса как кодированный атрибут SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> с использованием заданного значения в качестве имени атрибута XML.</summary>
      <param name="attributeName">Имя атрибута XML. </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary>Получает или задает имя атрибута XML, созданного объектом <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Имя атрибута XML.По умолчанию используется идентификатор члена.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary>Получает или задает тип данных языка XSD для атрибута SOAP, созданного объектом <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Тип данных XML-схемы в соответствии с документом консорциума W3C (www.w3.org) "XML Schema Part 2: Datatypes".</returns>
      <exception cref="T:System.Exception">Указанный тип данных XML-схемы не может иметь соответствия в типах данных .NET. </exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary>Получает или задает пространство имен XML атрибута XML.</summary>
      <returns>Пространство имен XML атрибута XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary>Позволяет переопределять атрибуты, примененные к свойствам, полям и классам, при использовании <see cref="T:System.Xml.Serialization.XmlSerializer" /> для сериализации или десериализации объекта как кодированного элемента SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary>Добавляет <see cref="T:System.Xml.Serialization.SoapAttributes" /> к коллекции объектов <see cref="T:System.Xml.Serialization.SoapAttributes" />, содержащихся в <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.Параметр <paramref name="type" />, указывающий объект, подлежащий переопределению при помощи <see cref="T:System.Xml.Serialization.SoapAttributes" />.Параметр <paramref name="member" /> указывающий имя переопределенного члена.</summary>
      <param name="type">
        <see cref="T:System.Type" /> объекта, который необходимо переопределить. </param>
      <param name="member">Имя члена, который необходимо переопределить. </param>
      <param name="attributes">
        <see cref="T:System.Xml.Serialization.SoapAttributes" />, который представляет переопределяемые атрибуты. </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary>Добавляет <see cref="T:System.Xml.Serialization.SoapAttributes" /> к коллекции объектов <see cref="T:System.Xml.Serialization.SoapAttributes" />.Параметр <paramref name="type" />, указывающий объект, подлежащий переопределению при помощи <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> переопределенного объекта. </param>
      <param name="attributes">
        <see cref="T:System.Xml.Serialization.SoapAttributes" />, который представляет переопределяемые атрибуты. </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary>Получает объект, связанный с указанным типом (базового класса).</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributes" />, который представляет коллекцию переопределяемых атрибутов.</returns>
      <param name="type">Базовый класс <see cref="T:System.Type" />, связанный с коллекцией атрибутов, которые требуется извлечь. </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary>Получает объект, связанный с указанным типом (базового класса).Параметр <paramref name="member" /> указывающий переопределенный член базового класса.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributes" />, который представляет коллекцию переопределяемых атрибутов.</returns>
      <param name="type">Базовый класс <see cref="T:System.Type" />, связанный с коллекцией атрибутов, которые требуется переопределить. </param>
      <param name="member">Имя переопределяемого члена, указывающего <see cref="T:System.Xml.Serialization.SoapAttributes" />, который необходимо вернуть. </param>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary>Представляет коллекцию объектов атрибута, контролирующих, как <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует и десериализует методы SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapAttributes" /> при помощи указанного пользовательского типа.</summary>
      <param name="provider">Любой объект, реализующий интерфейс <see cref="T:System.Reflection.ICustomAttributeProvider" />, например класс <see cref="T:System.Type" />. </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary>Получает или задает <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> для переопределения.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />, переопределяющий поведение <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации члена.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary>Получает или задает значение по умолчанию XML-элемента или атрибута.</summary>
      <returns>Объект, представляющий значение по умолчанию XML-элемента или атрибута.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary>Получает или задает <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> для переопределения.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> для переопределения.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary>Получает или задает объект, указывающий, как <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует перечисление SOAP.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary>Получает или задает значение, определяющее, сериализует ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> общее поле или свойство как закодированное SOAP XML.</summary>
      <returns>true, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> не должен сериализовать поле или свойство; в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary>Получает или задает объект, указывающий <see cref="T:System.Xml.Serialization.XmlSerializer" />, как сериализовать тип объекта в закодированный SOAP XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />, который либо переопределяет <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />, применяемый к объявлению класса, либо сам применяется к объявлению класса.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapCodeExporter">
      <summary>Генерирует объявления типов и атрибутов из информации внутреннего сопоставления типа для частей SOAP-кодированного сообщения, заданного в документе WSDL. </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapCodeExporter" />, предполагая отсутствие элемента компилирования кода. </summary>
      <param name="codeNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" />, указывающий пространство имен типов для генерирования.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapCodeExporter" />, указывая параметр элемента компилирования кода дополнительно к параметру пространства имен.</summary>
      <param name="codeNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" />, указывающий пространство имен типов для генерирования.</param>
      <param name="codeCompileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" />, идентифицирующий программный графический контейнер, к которому автоматически добавляются ссылки сборки.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapCodeExporter" />, указывающий пространство имен кода, единицу компилирования кода, генератор кода, опции генерирования кода и сопоставления.</summary>
      <param name="codeNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" />, указывающий пространство имен типов для генерирования.</param>
      <param name="codeCompileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" />, идентифицирующий программный графический контейнер, к которому автоматически добавляются ссылки сборки.</param>
      <param name="codeProvider">
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, используемый для создания кода.</param>
      <param name="options">Перечисление <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />, указывающее опции, с которыми генерируется экспортированный код.</param>
      <param name="mappings">
        <see cref="T:System.Collections.Hashtable" />, содержащий объекты <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapCodeExporter" />, указывающий пространство имен кода, единицу компилирования кода и опции генерирования кода.</summary>
      <param name="codeNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" />, указывающий пространство имен типов для генерирования.</param>
      <param name="codeCompileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" />, идентифицирующий программный графический контейнер, к которому автоматически добавляются ссылки сборки.</param>
      <param name="options">Перечисление <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />, указывающее опции, с которыми генерируется экспортированный код.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapCodeExporter" />, указывающий пространство имен кода, единицу компилирования кода, опции генерирования кода и сопоставления.</summary>
      <param name="codeNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" />, указывающий пространство имен типов для генерирования.</param>
      <param name="codeCompileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" />, идентифицирующий программный графический контейнер, к которому автоматически добавляются ссылки сборки.</param>
      <param name="options">Перечисление <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />, указывающее опции, с которыми генерируется экспортированный код.</param>
      <param name="mappings">
        <see cref="T:System.Collections.Hashtable" />, содержащий объекты <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping)">
      <summary>Добавьте объявление <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> к параметру метода или возвращаемому значению, соответствующему элементу части определения сообщения SOAP в документе WSDL. </summary>
      <param name="metadata">Коллекция объектов <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> для сгенерированного типа, к которому метод добавляет объявление атрибута.</param>
      <param name="member">Внутреннее сопоставление типа платформы .NET Framework для отдельной части определения сообщения WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.Boolean)">
      <summary>Добавляет объявление <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> к параметру метода или возвращаемому значению, соответствующему элементу части определения сообщения SOAP в документе WSDL. </summary>
      <param name="metadata">Коллекция объектов <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> для сгенерированного типа, к которому метод добавляет объявление атрибута.</param>
      <param name="member">Сопоставление внутреннего типа платформы .NET Framework для отдельной части определения сообщения WSDL.</param>
      <param name="forceUseMemberName">true для добавления исходного аргумента, содержащего имя элемента XML для генерируемого объявления атрибута, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Генерирует тип .NET Framework, а также объявления атрибутов для каждой из частей, принадлежащих определению сообщения SOAP в документе WSDL. </summary>
      <param name="xmlMembersMapping">Сопоставления внутреннего типа платформы .NET Framework для частей элементов определения сообщения WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Генерирует тип .NET Framework, а также объявления атрибутов для заголовка SOAP. </summary>
      <param name="xmlTypeMapping">Информация сопоставления внутреннего типа платформы .NET Framework для элемента заголовка SOAP.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary>Указывает, что данный общий член будет сериализован посредством <see cref="T:System.Xml.Serialization.XmlSerializer" /> как кодированный XML-элемент SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> class and specifies the name of the XML element.</summary>
      <param name="elementName">Имя XML-элемента сериализованного члена. </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary>Получает или задает тип данных языка определения схемы XML (XSD) созданного XML-элемента.</summary>
      <returns>Один из типов данных XML-схемы.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary>Получает или задает имя созданного XML-элемента</summary>
      <returns>Имя созданного XML-элемента.По умолчанию используется идентификатор члена</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary>Получает или задает значение, указывающее, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнять сериализацию члена с заданным для атрибута xsi:null значением "1".</summary>
      <returns>true, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут xsi:null; в противном случае — false.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary>Управление сериализацией <see cref="T:System.Xml.Serialization.XmlSerializer" /> члена перечисления.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> с помощью заданного имени элемента.</summary>
      <param name="name">Имя элемента XML, созданное <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary>Получает или задает значения, созданного в документе XML, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует перечисление, или значения, распознаваемого при десериализации члена перечисления.</summary>
      <returns>Значение, созданное в документе XML, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует перечисление, или значение, распознаваемое при десериализации члена перечисления.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary>Инструктирует метод <see cref="T:System.Xml.Serialization.XmlSerializer" /> не сериализовывать значение открытого поля или открытого свойства чтения/записи.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary>Позволяет <see cref="T:System.Xml.Serialization.XmlSerializer" /> распознавать тип при сериализации или десериализации объекта согласно кодированию SOAP XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> с помощью указанного типа.</summary>
      <param name="type">Тип включаемого объекта. </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary>Получает или задает тип объекта для использования при сериализации или десериализации объекта.</summary>
      <returns>Тип включаемого объекта.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary>Генерирует сопоставления с SOAP-кодированными сообщениями из типов.NET Framework или информации метода веб-службы. </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, указывающий пространство имен XML по умолчанию для сопоставлений импортированного типа. </summary>
      <param name="defaultNamespace">Пространство имен XML по умолчанию для использования для сопоставлений импортированного типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, указывающий переопределения для сериализации XML. </summary>
      <param name="attributeOverrides">Объект <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />, переопределяющий способ сериализации классом <see cref="T:System.Xml.Serialization.XmlSerializer" /> сопоставленных типов с помощью кодирования SOAP.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, указывающий переопределение сериализации XML и пространства имен XML по умолчанию. </summary>
      <param name="attributeOverrides">Объект <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />, переопределяющий способ сериализации классом <see cref="T:System.Xml.Serialization.XmlSerializer" /> сопоставленных типов с помощью кодирования SOAP.</param>
      <param name="defaultNamespace">Пространство имен XML по умолчанию для использования для сопоставлений импортированного типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary>Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы. </summary>
      <returns>Сопоставления внутреннего типа.NET Framework с частями элементов определения сообщения WSDL.</returns>
      <param name="elementName">Имя элемента XML, произведенное из метода веб-службы.</param>
      <param name="ns">Пространство имен элемента XML, произведенное из метода веб-службы.</param>
      <param name="members">Массив сущностей кода .NET Framework, принадлежащий методу веб-службы.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы. </summary>
      <returns>Сопоставления внутреннего типа.NET Framework с частями элементов определения сообщения WSDL.</returns>
      <param name="elementName">Имя элемента XML, произведенное из метода веб-службы.</param>
      <param name="ns">Пространство имен элемента XML, произведенное из метода веб-службы.</param>
      <param name="members">Массив сущностей кода .NET Framework, принадлежащий методу веб-службы.</param>
      <param name="hasWrapperElement">true для указания того, что элементы, соответствующие частям сообщения WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP, в противном случае false.</param>
      <param name="writeAccessors">true для указания привязки веб-службы в стиле RPC-сервиса, false для указания документного стиля привязки веб-службы или заголовка SOAP.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы. </summary>
      <returns>Сопоставления внутреннего типа.NET Framework с частями элементов определения сообщения WSDL.</returns>
      <param name="elementName">Имя элемента XML, произведенное из метода веб-службы.</param>
      <param name="ns">Пространство имен элемента XML, произведенное из метода веб-службы.</param>
      <param name="members">Массив сущностей кода .NET Framework, принадлежащий методу веб-службы.</param>
      <param name="hasWrapperElement">true для указания того, что элементы, соответствующие частям сообщения WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP, в противном случае false.</param>
      <param name="writeAccessors">true для указания привязки веб-службы в стиле RPC-сервиса, false для указания документного стиля привязки веб-службы или заголовка SOAP.</param>
      <param name="validate">true для указания того, что сгенерированный десериализатор должен быть проверен на предмет ожидаемого полного имени элемента упаковки, в противном случае false.Данное значение параметра релевантно только тогда, когда параметр <paramref name="hasWrapperElement" /> принимает значение true.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы.</summary>
      <returns>Сопоставления внутреннего типа.NET Framework с частями элементов определения сообщения WSDL.</returns>
      <param name="elementName">Имя элемента XML, произведенное из метода веб-службы.</param>
      <param name="ns">Пространство имен элемента XML, произведенное из метода веб-службы.</param>
      <param name="members">Массив сущностей кода .NET Framework, принадлежащий методу веб-службы.</param>
      <param name="hasWrapperElement">true для указания того, что элементы, соответствующие частям сообщения WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP, в противном случае false.</param>
      <param name="writeAccessors">true для указания привязки веб-службы в стиле RPC-сервиса, false для указания документного стиля привязки веб-службы или заголовка SOAP.</param>
      <param name="validate">true для указания того, что сгенерированный десериализатор должен быть проверен на предмет ожидаемого полного имени элемента упаковки, в противном случае false.Данное значение параметра релевантно только тогда, когда параметр <paramref name="hasWrapperElement" /> принимает значение true.</param>
      <param name="access">Одно из значений <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>Генерирует сопоставление с элементом схемы XML для типа платформы .NET Framework.</summary>
      <returns>Внутреннее сопоставление .NET Framework типа с элементом схемы XML. </returns>
      <param name="type">Тип .NET Framework, для которого требуется выполнить генерирование сопоставления типа. </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>Генерирует сопоставление с элементом схемы XML для типа платформы .NET Framework.</summary>
      <returns>Внутреннее сопоставление .NET Framework типа с элементом схемы XML.</returns>
      <param name="type">Тип .NET Framework, для которого требуется выполнить генерирование сопоставления типа. </param>
      <param name="defaultNamespace">Пространство имен XML по умолчанию для использования.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary>Размещает сопоставления для типа в контексте экземпляра <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> для последующего использования при импорте вызванных методов. </summary>
      <param name="type">Тип .NET Framework, для которого требуется выполнить сохранение информации сопоставления типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Размещает сопоставления для производных типов в контексте экземпляра <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> для последующего использования при импорте вызванных методов. </summary>
      <param name="provider">Объект отражения <see cref="T:System.Reflection.ICustomAttributeProvider" />, содержащий пользовательские атрибуты, являющиеся производными от атрибута <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaExporter">
      <summary>Заполняет объекты <see cref="T:System.Xml.Schema.XmlSchema" /> определениями типов данных схемы XML для типов .NET Framework, сериализованных с использованием кодировки SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapSchemaExporter" />, предоставляющего коллекцию объектов <see cref="T:System.Xml.Schema.XmlSchema" />, к которым необходимо добавить объявления элементов схемы XML.</summary>
      <param name="schemas">Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchema" />, к которым необходимо добавить объявления элементов, полученных из сопоставлений типов.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Добавляет к применимому объекту <see cref="T:System.Xml.Schema.XmlSchema" /> определение типа данных для каждой части элемента определения сообщения с кодировкой SOAP.</summary>
      <param name="xmlMembersMapping">Тип внутренних сопоставлений .NET Framework для частей элементов определения сообщения WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>Добавляет к применимому объекту <see cref="T:System.Xml.Schema.XmlSchema" /> определение типа данных для каждой части элемента определения сообщения с кодировкой SOAP.</summary>
      <param name="xmlMembersMapping">Тип внутренних сопоставлений .NET Framework для частей элементов определения сообщения WSDL.</param>
      <param name="exportEnclosingType">true — для экспорта определения типа для родительского элемента частей WSDL; в противном случае — false.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Добавляет к применимому объекту <see cref="T:System.Xml.Schema.XmlSchema" /> определение типа данных для типа платформы .NET Framework.</summary>
      <param name="xmlTypeMapping">Внутреннее сопоставление между типом .NET Framework и элементом схемы XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaImporter">
      <summary>Используется в рамках платформы .NET Framework для генерирования внутренних сопоставлений с типами платформы .NET Framework для частей SOAP-кодированных сообщений в документе WSDL. </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> путем указания объектов <see cref="T:System.Xml.Schema.XmlSchema" />, представляющих схемы XML, используемые SOAP-кодированными сообщениями, заданными в документе WSDL. </summary>
      <param name="schemas">Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> для указания схем, параметров компилятора и имен связанных сущностей кода.</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Serialization.XmlSchemas" />, содержащий коллекцию объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <param name="options">Один из <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />, указывающих различные параметры для генерирования типа платформы .NET Framework.</param>
      <param name="codeProvider">
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> используется для генерирования кода сериализации.</param>
      <param name="context">
        <see cref="T:System.Xml.Serialization.ImportContext" />, описывающий контекст, в котором набор схемы может быть привязан к сущностям кода .NET Framework.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> для указания схем, параметров компилятора и контекста схем.</summary>
      <param name="schemas">Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <param name="options">Один из <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />, указывающих различные параметры для генерирования типа платформы .NET Framework.</param>
      <param name="context">
        <see cref="T:System.Xml.Serialization.ImportContext" />, описывающий контекст, в котором набор схемы может быть привязан к сущностям кода .NET Framework. </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapSchemaImporter" />, определяющий объекты <see cref="T:System.Xml.Schema.XmlSchema" />, представляющие схемы XML, используемые SOAP-кодированными сообщениями, а также классы, генерируемые для привязок, заданных в документе WSDL. </summary>
      <param name="schemas">Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <param name="typeIdentifiers">Объект <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, определяющий коллекцию классов, генерируемых для привязок, определенных в документе WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> для указания схем, параметров компилятора и имен связанных сущностей кода.</summary>
      <param name="schemas">Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <param name="typeIdentifiers">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, поддерживающий группу имен связанных сущностей кода или сопоставлений типа, генерируемых инфраструктурой сериализации XML платформы .NET Framework.</param>
      <param name="options">Один из <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />, указывающих различные параметры для генерирования типа платформы .NET Framework.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>Генерирует информацию внутреннего сопоставления типа для типа части SOAP-кодированного элемента, определенного в документе WSDL, где определен базовый тип. </summary>
      <returns>Информация сопоставления типа платформы .NET Framework для производного класса, соответствующего части сообщения WSDL.</returns>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" />, указывающий имя типа элемента, для которого генерируется тип .NET Framework.</param>
      <param name="baseType">Базовый тип для генерируемого типа платформы .NET Framework.</param>
      <param name="baseTypeCanBeIndirect">true для указания того, что генерируемый тип может косвенно наследоваться из базового типа, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember)">
      <summary>Генерирует информацию внутреннего сопоставления типа для отдельной части SOAP-кодированного элемента, определенной в документе WSDL. </summary>
      <returns>Сопоставления типа платформы .NET Framework для отдельной части элемента определения сообщения WSDL.</returns>
      <param name="name">Имя сообщения.</param>
      <param name="ns">Пространства имен сообщения.</param>
      <param name="member">Объект <see cref="T:System.Xml.Serialization.SoapSchemaMember" />, предоставляющий информацию по элементу части.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>Генерирует информацию внутреннего сопоставления типа для частей элемента SOAP-кодированного элемента, определенных в документе WSDL. </summary>
      <returns>Сопоставления внутреннего типа платформы .NET Framework для частей элементов определения сообщения WSDL.</returns>
      <param name="name">Имя сообщения.</param>
      <param name="ns">Пространства имен сообщения.</param>
      <param name="members">Массив типа <see cref="T:System.Xml.Serialization.SoapSchemaMember" />, предоставляющий информацию по элементам части.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean)">
      <summary>Генерирует информацию внутреннего сопоставления типа для частей элемента SOAP-кодированного элемента, определенных в документе WSDL. </summary>
      <returns>Сопоставления внутреннего типа платформы .NET Framework для частей элементов определения сообщения WSDL.</returns>
      <param name="name">Имя сообщения.</param>
      <param name="ns">Пространства имен сообщения.</param>
      <param name="members">Массив типа <see cref="T:System.Xml.Serialization.SoapSchemaMember" />, предоставляющий информацию по элементам части.</param>
      <param name="hasWrapperElement">true, чтобы элементы определялись частями, включенными в дополнительный элемент упаковщика в сообщении SOAP, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean,System.Type,System.Boolean)">
      <summary>Генерирует информацию внутреннего сопоставления типа для частей элемента SOAP-кодированного элемента, определенных в документе WSDL.</summary>
      <returns>Сопоставления внутреннего типа платформы .NET Framework для частей элементов определения сообщения WSDL.</returns>
      <param name="name">Имя сообщения.</param>
      <param name="ns">Пространства имен сообщения.</param>
      <param name="members">Массив типа <see cref="T:System.Xml.Serialization.SoapSchemaMember" />, предоставляющий информацию по элементам части.</param>
      <param name="hasWrapperElement">true, чтобы элементы определялись частями, включенными в дополнительный элемент упаковщика в сообщении SOAP, в противном случае false.</param>
      <param name="baseType">Базовый тип для всех типов .NET Framework, сгенерированных с целью соответствия частям сообщения.</param>
      <param name="baseTypeCanBeIndirect">true для указания того, что типы, соответствующие частям сообщения, могут косвенно наследоваться от базового типа, в противном случае false.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary>Представляет определенные атрибуты элемента XSD &lt;part&gt; в документе WSDL для создания классов из этого документа. </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.SoapSchemaMember" />. </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary>Возвращает или задает значение, соответствующее имени атрибута WSDL-элемента part. </summary>
      <returns>Имя элемента.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary>Возвращает или задает значение, соответствующее типу атрибута WSDL-элемента part.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" />, соответствующий данному типу XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary>Управляет схемой, сгенерированной <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации экземпляра класса в качестве SOAP-кодированного XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name of the XML type.</summary>
      <param name="typeName">Имя типа XML, генерируемое <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации экземпляра класса (и определении при десериализации экземпляра класса). </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> и указывает имя и пространство имен XML типа.</summary>
      <param name="typeName">Имя типа XML, генерируемое <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации экземпляра класса (и определении при десериализации экземпляра класса). </param>
      <param name="ns">Пространство имен XML типа. </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary>Получает или задает значение, указывающее, включается ли тип в SOAP-кодированные документы схемы XML.</summary>
      <returns>true для включения типа в SOAP-кодированный документ схемы XML, в противном случае false.По умолчанию true.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary>Получает или задает пространство имен типа XML.</summary>
      <returns>Пространство имен типа XML.По умолчанию используется пустая строка ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary>Получает или задает имя типа XML.</summary>
      <returns>Имя типа XML.По умолчанию имя класса.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary>Предоставляет данные для известного, но не неиспользованного объекта, обнаруженного в кодированном SOAP потоке XML во время десериализации.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />.</summary>
      <param name="o">Неиспользуемый объект. </param>
      <param name="id">Уникальная строка используется для идентификации неиспользуемого объекта. </param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary>Получает идентификатор объекта.</summary>
      <returns>Идентификатор объекта.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary>Получает десериализованный, но не использованный объект.</summary>
      <returns>Десериализованный, но не использованный объект.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary>Предоставляет метод, обрабатывающий событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />, принадлежащее <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">Источник события. </param>
      <param name="e">
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />, содержащий данные события. </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary>Указывает, что член (поле, возвращающее массив объектов <see cref="T:System.Xml.XmlAttribute" />) может содержать любые атрибуты XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary>Конструирует новый экземпляр класса <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>Указывает, что член (поле, возвращающее массив объектов <see cref="T:System.Xml.XmlElement" /> или <see cref="T:System.Xml.XmlNode" />) содержит объекты, представляющие любые элементы XML, не имеющие соответствующего члена в сериализуемом или десериализуемом объекте.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> и указывает имя элемента XML, сгенерированного в документе XML.</summary>
      <param name="name">Имя элемента XML, генерируемое <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> и указывает имя элемента XML, сгенерированного в документе XML, и его пространство имен XML.</summary>
      <param name="name">Имя элемента XML, генерируемое <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
      <param name="ns">Пространство имен XML элемента XML. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>Возвращает или задает имя элемента XML.</summary>
      <returns>Имя элемента XML.</returns>
      <exception cref="T:System.InvalidOperationException">Имя элемента члена массива не соответствует имени элемента, указанному свойством <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>Возвращает или задает пространство имен XML, сгенерированное в документе XML.</summary>
      <returns>Пространство имен XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary>Возвращает или задает явный порядок сериализации или десериализации элементов.</summary>
      <returns>Порядок генерирования кода.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>Представляет коллекцию объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Adds an <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to the collection.</summary>
      <returns>Индекс только что добавленного объекта <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
      <param name="attribute">Объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> для добавления. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Получает значение, которое указывает, содержится ли заданный объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> в коллекции.</summary>
      <returns>Значение true, если объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> содержится в коллекции; в противном случае — значение false.</returns>
      <param name="attribute">Нужный объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>Копирует коллекцию целиком в совместимый одномерный массив объектов <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, начиная с заданного индекса целевого массива. </summary>
      <param name="array">Одномерный массив объектов <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, который является конечным объектом копирования элементов коллекции.Индексация в массиве должна вестись с нуля.</param>
      <param name="index">Индекс в массиве (с нуля), с которого начнется копирование.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Gets the index of the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
      <returns>The index of the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
      <param name="attribute">Объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> с нужным индексом. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Inserts an <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> into the collection at the specified index.</summary>
      <param name="index">Индекс вставки элемента <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />. </param>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to insert. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> at the specified index.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Removes the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> from the collection.</summary>
      <param name="attribute">Объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> для удаления. </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>Указывает, что <see cref="T:System.Xml.Serialization.XmlSerializer" /> необходимо выполнить сериализацию конкретного члена класса в качестве массива XML-элементов.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> и указывает имя XML-элемента, созданного в экземпляре XML-документа.</summary>
      <param name="elementName">Имя XML-элемента, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>Получает или задает имя XML-элемента, присвоенное сериализованному массиву.</summary>
      <returns>Имя XML-элемента сериализованного массива.По умолчанию используется имя члена, которому назначается <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>Получает или задает значение, которое показывает, является ли имя XML-элемента, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />, квалифицированным или неквалифицированным.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaForm" />.По умолчанию это XmlSchemaForm.None.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>Получает или задает значение, которое показывает, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнить сериализацию члена как пустого тега XML с атрибутом xsi:nil, для которого установлено значение true.</summary>
      <returns>true, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут xsi:nil, в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>Получает или задает пространство имен XML-элемента.</summary>
      <returns>Пространство имен XML-элемента.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>Получает или задает порядок сериализации или десериализации элементов.</summary>
      <returns>Порядок генерирования кода.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>Определяет производные типы, которые могут быть размещены <see cref="T:System.Xml.Serialization.XmlSerializer" /> в сериализованном массиве.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и указывает имя элемента XML, сгенерированного в документе XML.</summary>
      <param name="elementName">Имя элемента XML. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и определяет имя элемента XML, сгенерированного в документе XML, и <see cref="T:System.Type" />, который может быть вставлен в сгенерированный документ XML.</summary>
      <param name="elementName">Имя элемента XML. </param>
      <param name="type">
        <see cref="T:System.Type" /> объекта для сериализации. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> и определяет <see cref="T:System.Type" />, который может быть вставлен в сериализованный массив.</summary>
      <param name="type">
        <see cref="T:System.Type" /> объекта для сериализации. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>Возвращает или задает тип данных XML сгенерированного элемента XML.</summary>
      <returns>Тип данных определения схемы XML (XSD) согласно документу "Схема XML, часть 2: типы данных" консорциума World Wide Web (www.w3.org).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>Возвращает или задает имя сгенерированного элемента XML.</summary>
      <returns>Имя сгенерированного элемента XML.По умолчанию используется идентификатор члена.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>Возвращает или задает значение, которое указывает, является ли имя сгенерированного элемента XML полным.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaForm" />.По умолчанию XmlSchemaForm.None.</returns>
      <exception cref="T:System.Exception">Свойство <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> имеет значение XmlSchemaForm.Unqualified, а свойство <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> задано. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>Возвращает или задает значение, указывающее на необходимость <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализации члена в качестве пустого тега XML с атрибутом xsi:nil со значением true.</summary>
      <returns>true, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> генерирует атрибут xsi:nil, в противном случае false, а экземпляр не генерируется.По умолчанию true.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>Возвращает или задает пространство имен сгенерированного элемента XML.</summary>
      <returns>Пространство имен сгенерированного элемента XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>Возвращает или задает уровень в иерархии элементов XML, на который воздействует <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <returns>Индекс, начинающийся с нуля, набора индексов в массиве массивов.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>Возвращает или задает тип, допустимый в массиве.</summary>
      <returns>
        <see cref="T:System.Type" />, допустимый в массиве.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>Представляет коллекцию объектов <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Adds an <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> to the collection.</summary>
      <returns>The index of the added item.</returns>
      <param name="attribute">Объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> для добавления в коллекцию. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Determines whether the collection contains the specified <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />. </summary>
      <returns>Значение true, если коллекция содержит заданный объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />; в противном случае — значение false.</returns>
      <param name="attribute">Объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> для проверки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>Копирует в коллекцию массив <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />, начиная с заданного индекса целевого объекта. </summary>
      <param name="array">Массив объектов <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> для копирования в коллекцию.</param>
      <param name="index">Индекс, по которому будут расположены скопированные атрибуты.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Возвращает индекс (с нуля) первого вхождения заданного объекта <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> в коллекции либо значение 1, если данный атрибут не обнаружен в коллекции. </summary>
      <returns>Первый индекс объекта <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> в коллекции или значение -1, если атрибут не обнаружен в коллекции.</returns>
      <param name="attribute">Объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> для поиска в коллекции.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Вставляет элемент <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> в коллекцию по заданному индексу. </summary>
      <param name="index">Индекс, по которому вставлен атрибут.</param>
      <param name="attribute">Объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> для вставки.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>Возвращает или задает элемент с указанным индексом.</summary>
      <returns>Объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> по заданному индексу.</returns>
      <param name="index">The zero-based index of the collection member to get or set. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Удаляет объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> из коллекции, если он содержится в ней. </summary>
      <param name="attribute">Объект <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> для удаления.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>Указывает, что <see cref="T:System.Xml.Serialization.XmlSerializer" /> необходимо выполнить сериализацию члена класса в качестве XML-атрибута.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />, а также указывает имя созданного XML-атрибута.</summary>
      <param name="attributeName">Имя XML-атрибута, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</summary>
      <param name="attributeName">Имя созданного XML-атрибута. </param>
      <param name="type">
        <see cref="T:System.Type" />, используемый для хранения атрибута. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" />, используемый для хранения атрибута. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>Возвращает или задает имя XML-атрибута.</summary>
      <returns>Имя XML-атрибута.По умолчанию это имя члена.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>Возвращает или задает тип данных XSD XML-атрибута, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Тип данных XSD (документ схемы XML), как определено документом консорциума W3C (www.w3.org) "XML-схема: Типы данных".</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>Возвращает или задает значение, которое показывает, является ли имя XML-атрибута, созданного при помощи <see cref="T:System.Xml.Serialization.XmlSerializer" />, квалифицированным.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Schema.XmlSchemaForm" />.По умолчанию это XmlForm.None.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>Возвращает или задает пространство имен XML для XML-атрибута.</summary>
      <returns>Пространство имен XML для XML-атрибута.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary>Возвращает или задает сложный тип XML-атрибута.</summary>
      <returns>Тип XML-атрибута.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary>Получает объект, представляющий неизвестный атрибут XML.</summary>
      <returns>
        <see cref="T:System.Xml.XmlAttribute" />, представляющий неизвестный атрибут XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary>Получает разделенный запятыми список имен атрибутов XML ожидаемых в экземпляре документа XML.</summary>
      <returns>Разделенный запятыми список имен атрибутов XML.Each name is in the following format: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary>Получает номер строки неизвестного атрибута XML.</summary>
      <returns>Номер строки неизвестного атрибута XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary>Получает положение в строке неизвестного атрибута XML.</summary>
      <returns>Номер позиции неизвестного атрибута XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary>Получает десериализуемый объект.</summary>
      <returns>Десериализуемый объект.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary>Представляет метод, обрабатывающий <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /></summary>
      <param name="sender">Источник события. </param>
      <param name="e">
        <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />, содержащий данные события. </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>Позволяет переопределять атрибуты свойства, поля и класса при использовании <see cref="T:System.Xml.Serialization.XmlSerializer" /> для сериализации или десериализации объекта.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>Добавляет объект <see cref="T:System.Xml.Serialization.XmlAttributes" /> к коллекции объектов <see cref="T:System.Xml.Serialization.XmlAttributes" />.Параметр <paramref name="type" /> указывает объект для переопределения.Параметр <paramref name="member" /> указывает имя переопределяемого члена.</summary>
      <param name="type">
        <see cref="T:System.Type" /> объекта для переопределения. </param>
      <param name="member">Имя члена для переопределения. </param>
      <param name="attributes">Объект <see cref="T:System.Xml.Serialization.XmlAttributes" />, представляющий атрибуты переопределения. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>Добавляет объект <see cref="T:System.Xml.Serialization.XmlAttributes" /> к коллекции объектов <see cref="T:System.Xml.Serialization.XmlAttributes" />.Параметр <paramref name="type" /> указывает объект для переопределения объектом <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> переопределяемого объекта. </param>
      <param name="attributes">Объект <see cref="T:System.Xml.Serialization.XmlAttributes" />, представляющий атрибуты переопределения. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>Получает объект, ассоциированный с указанным типом базового класса.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" />, представляющий коллекцию атрибутов переопределения.</returns>
      <param name="type">Базовый класс <see cref="T:System.Type" />, ассоциированный с коллекцией атрибутов для извлечения. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>Получает объект, ассоциированный с указанным типом (базового класса).Параметр члена указывает имя переопределяемого члена базового класса.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" />, представляющий коллекцию атрибутов переопределения.</returns>
      <param name="type">Базовый класс <see cref="T:System.Type" />, ассоциированный с требуемой коллекцией атрибутов. </param>
      <param name="member">Имя переопределенного члена, указывающего <see cref="T:System.Xml.Serialization.XmlAttributes" /> для возврата. </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>Представление коллекции объектов атрибутов, управляющих сериализацией и десериализацией объекта с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Serialization.XmlAttributes" /> и настройка сериализации и десериализации объекта с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" />. </summary>
      <param name="provider">Класс, представляющий альтернативный вариант реализации атрибутов, управляющих сериализацией XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary>Получает или задает <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> для переопределения.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> для переопределения.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>Получение коллекции объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> для переопределения.</summary>
      <returns>Объект <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />, представляющий коллекцию объектов <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи, которое возвращает массив.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи, которое возвращает массив.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>Получает или задает коллекцию объектов, определяющих сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для элементов, которые вставлены в массив, возвращенный открытым полем или свойством чтения/записи.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> object that contains a collection of <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> objects.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи как атрибута XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />, управляющий сериализацией открытого поля или свойства чтения/записи как атрибута XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>Получает или задает объект, позволяющий определиться с выбором.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />, который можно применить к члену класса, который сериализуется как элемент xsi:choice.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>Получает или задает значение по умолчанию элемента XML или атрибута.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the default value of an XML element or attribute.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>Получение коллекции объектов, задающих сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или свойства чтения/записи как элемента XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />, содержащий коллекцию объектов <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для члена перечисления.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для члена перечисления.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>Получает или задает значение, задающее то, будет ли выполнена сериализация с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для открытого поля или открытого свойства чтения/записи.</summary>
      <returns>true, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> не следует сериализовать поле или свойство, иначе false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>Возвращает и задает значение, определяющее, стоит ли сохранить все объявления пространств имен, если объект с членом, возвращающим объект <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, переопределен.</summary>
      <returns>true, если объявления пространств имен следует сохранить, иначе false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для класса как корневого элемента XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, переопределяющий класс с атрибутами корневого элемента XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>Получает или задает объект, указывающий <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализовать открытое поле или свойство чтения/записи как текст XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" />, переопределяющий сериализацию по умолчанию для открытого свойства или поля.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>Получает или задает объект, задающий сериализацию с помощью <see cref="T:System.Xml.Serialization.XmlSerializer" /> для класса, к которому был применен <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, который переопределяет <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, примененный к объявлению класса.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>Указывает, что член может быть обнаружен посредством перечисления.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> class.</summary>
      <param name="name">Имя члена, возвращающего перечисление, используемое для определения выбора. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>Получает или задает имя поля, возвращающего перечисление для использования при определении типов.</summary>
      <returns>Имя поля, возвращающего перечисление.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlCodeExporter">
      <summary>Создает типы и объявления атрибутов из информации сопоставления внутреннего типа для объявлений элементов схемы XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> при помощи указанного пространства имен. </summary>
      <param name="codeNamespace">Пространство имен типов, которые необходимо создать.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> при помощи указанного пространства имен и элемента компиляции кода.</summary>
      <param name="codeNamespace">Пространство имен типов, которые необходимо создать.</param>
      <param name="codeCompileUnit">Контейнер диаграммы CodeDOM, к которому автоматически добавляются ссылки на сборку.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> при помощи указанного пространства имен .NET Framework, элемента компиляции кода, содержащего диаграмму объектов, перечисления, указывающего опции кода, и коллекции объектов сопоставления.</summary>
      <param name="codeNamespace">Пространство имен типов, которые необходимо создать.</param>
      <param name="codeCompileUnit">Контейнер программной диаграммы <see cref="T:System.CodeDom.CodeCompileUnit" />, к которому автоматически добавляются ссылки на сборку.</param>
      <param name="codeProvider">Значение перечисления, предоставляющее параметры для создания типов платформе .NET Framework из типов пользовательских данных схемы XML.</param>
      <param name="options">
        <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />, содержащие специальные инструкции для создания кода.</param>
      <param name="mappings">
        <see cref="T:System.Collections.Hashtable" />, содержащие объекты <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> при помощи указанного пространства имен, элемента компиляции кода и параметров создания кода.</summary>
      <param name="codeNamespace">Пространство имен типов, которые необходимо создать.</param>
      <param name="codeCompileUnit">Контейнер программной диаграммы <see cref="T:System.CodeDom.CodeCompileUnit" />, к которому автоматически добавляются ссылки на сборку.</param>
      <param name="options">Значение перечисления, предоставляющее параметры для создания типов платформе .NET Framework из типов пользовательских данных схемы XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> при помощи указанного пространства имен .NET Framework, элемента компиляции кода, содержащего диаграмму объектов, коллекции объектов сопоставления и объекта, представляющего параметры создания кода.</summary>
      <param name="codeNamespace">Пространство имен типов, которые необходимо создать.</param>
      <param name="codeCompileUnit">Контейнер программной диаграммы <see cref="T:System.CodeDom.CodeCompileUnit" />, к которому автоматически добавляются ссылки на сборку.</param>
      <param name="options">Значение перечисления, предоставляющее параметры для создания типов платформе .NET Framework из типов пользовательских данных схемы XML.</param>
      <param name="mappings">A <see cref="T:System.Collections.Hashtable" /> that contains <see cref="T:System.Xml.Serialization.XmlMapping" /> objects.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String)">
      <summary>Добавляет объявления <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> к параметру метода или возвращенному значению, соответствующему элементу определения сообщения SOAP в документе языка описания веб-служб (WSDL) &lt;part&gt;. </summary>
      <param name="metadata">Коллекция объектов <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> для созданного типа, к которой при помощи данного метода добавляется объявление атрибута.</param>
      <param name="member">Внутреннее сопоставление типов платформе .NET Framework для одной части элемента определения сообщения WSDL.</param>
      <param name="ns">Пространство имен XML части сообщения SOAP, для которой в параметре члена создается информация сопоставления.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String,System.Boolean)">
      <summary>Добавляет объявления <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> к параметру метода или возвращенному значению, соответствующему элементу определения сообщения SOAP в документе языка описания веб-служб (WSDL) &lt;part&gt;. </summary>
      <param name="metadata">Коллекция объектов <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> для созданного типа, к которой при помощи данного метода добавляется объявление атрибута.</param>
      <param name="member">Внутреннее сопоставление типов платформе .NET Framework для одной части элемента определения сообщения WSDL.</param>
      <param name="ns">Пространство имен XML части сообщения SOAP, для которой в параметре члена создается информация сопоставления.</param>
      <param name="forceUseMemberName">Флаг, позволяющий определить, нужно ли добавлять исходный аргумент, содержащий имя элемента XML для созданного объявления атрибута.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlTypeMapping,System.String)">
      <summary>Добавляет объявления <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> к возвращенному значению метода, соответствующему элементу &lt;part&gt; определения сообщения, не относящегося к SOAP, в документе языка описания веб-служб (WSDL). </summary>
      <param name="metadata">Коллекция объектов <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> для созданного типа, к которой при помощи данного метода добавляется объявление атрибута.</param>
      <param name="mapping">Информация внутреннего сопоставления типов для элемента схемы XML.</param>
      <param name="ns">Пространство имен XML части сообщения SOAP, для которой в параметре члена создается информация сопоставления.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Создает тип платформы .NET Framework и объявления атрибутов для каждой части, принадлежащей определению сообщения SOAP в документе языка описания веб-служб (WSDL). </summary>
      <param name="xmlMembersMapping">Внутренние сопоставления типов платформе .NET Framework для частей элементов определения сообщения WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Создает тип платформы .NET Framework и объявления атрибутов для элементов схемы XML. </summary>
      <param name="xmlTypeMapping">Информация внутреннего сопоставления типов для элемента схемы XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary>Содержит поля, которые могут быть использованы для передачи делегатов событий в потокобезопасный метод <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> из <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute">
      <summary>Gets or sets an object that represents the method that handles the <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> event.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" />, указывающий на обработчик событий.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement">
      <summary>Gets or sets an object that represents the method that handles the <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> event.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementEventHandler" />, указывающий на обработчик событий.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode">
      <summary>Gets or sets an object that represents the method that handles the <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> event.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" />, указывающий на обработчик событий.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject">
      <summary>Gets or sets an object that represents the method that handles the <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> event.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />, указывающий на обработчик событий.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>Indicates that a public field or property represents an XML element when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes or deserializes the object that contains it.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies the name of the XML element.</summary>
      <param name="elementName">The XML element name of the serialized member. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> and specifies the name of the XML element and a derived type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.This member type is used when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes the object that contains it.</summary>
      <param name="elementName">The XML element name of the serialized member. </param>
      <param name="type">The <see cref="T:System.Type" /> of an object derived from the member's type. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies a type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.This type is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when serializing or deserializing object that contains it.</summary>
      <param name="type">The <see cref="T:System.Type" /> of an object derived from the member's type. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</returns>
      <exception cref="T:System.Exception">The XML Schema data type you have specified cannot be mapped to the.NET data type. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>Gets or sets the name of the generated XML element.</summary>
      <returns>The name of the generated XML element.The default is the member identifier.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>Gets or sets a value that indicates whether the element is qualified.</summary>
      <returns>One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.The default is <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to null as an empty tag with the xsi:nil attribute set to true.</summary>
      <returns>true if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the xsi:nil attribute; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>Gets or sets the namespace assigned to the XML element that results when the class is serialized.</summary>
      <returns>The namespace of the XML element.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary>Gets or sets the explicit order in which the elements are serialized or deserialized.</summary>
      <returns>The order of the code generation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>Gets or sets the object type used to represent the XML element.</summary>
      <returns>The <see cref="T:System.Type" /> of the member.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>Представляет коллекцию объектов <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, используемую <see cref="T:System.Xml.Serialization.XmlSerializer" /> для переопределения способа сериализации класса, используемого по умолчанию.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlElementAttributes" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Добавляет <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> в коллекцию.</summary>
      <returns>The zero-based index of the newly added item.</returns>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> to add. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Получает значение, определяющее, содержит ли коллекция указанный объект.</summary>
      <returns>true, если объект существует в коллекции; в противном случае — false.</returns>
      <param name="attribute">Рассматриваемый <see cref="T:System.Xml.Serialization.XmlElementAttribute" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>Полностью или частично копирует <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> в одномерный массив.</summary>
      <param name="array">Массив <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> для копирования. </param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Gets the index of the specified <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
      <returns>The zero-based index of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
      <param name="attribute">Рассматриваемый <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>Вставляет <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> в коллекцию.</summary>
      <param name="index">Начинающийся с нуля индекс добавляемого члена. </param>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> для вставки. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>Получает или задает <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> из коллекции.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> at the specified index.</returns>
      <param name="index">The zero-based index of the collection member to get or set. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Удаляет указанный объект из коллекции.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> для удаления из коллекции. </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary>Возвращает объект, представляющий неизвестный XML- элемент.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary>Получает разделенный запятыми список имен XML-элементов, ожидаемых в экземпляре XML-документа.</summary>
      <returns>Разделенный запятыми список имен XML-элементов.Each name is in the following format: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary>Если в качестве средства чтения XML используется <see cref="T:System.Xml.XmlTextReader" />, возвращает номер строки, в которой был обнаружен неизвестный элемент.</summary>
      <returns>Если для в качестве средства чтения XML используется <see cref="T:System.Xml.XmlTextReader" />, âîçâðàùàåò номер строки, в которой был обнаружен неизвестный элемент; в остальных случаях –1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary>Если в качестве средства чтения XML используется <see cref="T:System.Xml.XmlTextReader" />, возвращает позицию в строке, на которой был обнаружен неизвестный элемент.</summary>
      <returns>Если в качестве средства чтения XML используется <see cref="T:System.Xml.XmlTextReader" />, âîçâðàùàåò номер строки, в которой был обнаружен неизвестный элемент; в остальных случаях –1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary>Возвращает объект, десериализуемый <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Объект, десериализуемый <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> для <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">Источник события. </param>
      <param name="e">
        <see cref="T:System.Xml.Serialization.XmlElementEventArgs" /> с данными события. </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>Управляет тем, как <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует член перечисления.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> и определяет XML-значение, которое создает или распознает <see cref="T:System.Xml.Serialization.XmlSerializer" /> (при сериализации или десериализации перечисления, соответственно).</summary>
      <param name="name">Переопределяющее имя члена перечисления. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>Получает или задает значение, создаваемое в экземпляре XML-документа, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует перечисление, или значение, распознаваемое при десериализации члена перечисления.</summary>
      <returns>Значение, создаваемое в экземпляре XML-документа, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> сериализует перечисление, или значение, распознаваемое при десериализации члена перечисления.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>Инструктирует метод <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />, принадлежащий <see cref="T:System.Xml.Serialization.XmlSerializer" />, не сериализовывать значение открытого поля или открытого свойства чтения/записи.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>Позволяет <see cref="T:System.Xml.Serialization.XmlSerializer" /> распознавать тип в процессе сериализации или десериализации объекта.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> объекта, который необходимо включить. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>Получает или задает тип объекта, который необходимо включить.</summary>
      <returns>
        <see cref="T:System.Type" /> объекта, который необходимо включить.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>Поддерживает сопоставление типов платформе .NET Framework и типов данных схемы XML. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>Возвращает имя сопоставленного элемента.</summary>
      <returns>Имя сопоставленного элемента.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>Возвращает пространство имен сопоставленного элемента.</summary>
      <returns>Пространство имен сопоставленного элемента.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>Задает ключ для выполнения поиска в сопоставлении.</summary>
      <param name="key">Значение типа <see cref="T:System.String" />, которое указывает ключ поиска.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>Возвращает имя XSD-элемента сопоставления.</summary>
      <returns>The XSD element name.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>Указывает на чтение, запись или на оба процесса для сопоставления.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>Генерируются оба метода чтения и записи.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>Генерируются методы чтения.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>Генерируются методы записи.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary>Сопоставляет сущность кода в методе веб-службы .NET Framework с элементом в сообщении языка описания веб-служб (WSDL).</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>Получает или задает значение, указывающее соответствие типа платформы .NET Framework элементу XML или атрибуту любого типа. </summary>
      <returns>true, если тип соответствует любому элементу или атрибуту XML, в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary>Получает значение, которое указывает, определено ли значение для сопроводительного поля в типе платформы .NET Framework.</summary>
      <returns>true, если для сопроводительного поля значение задано, в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>Получает неполное имя объявления элемента XML, применяемое к данному сопоставлению. </summary>
      <returns>Неполное имя объявления элемента XML, применяемое к данному сопоставлению.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMemberMapping.GenerateTypeName(System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Возвращает имя типа, связанного с заданным <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</summary>
      <returns>Имя типа.</returns>
      <param name="codeProvider">
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, содержащий имя типа.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>Получает имя члена метода веб-службы, представленного данным сопоставлением. </summary>
      <returns>Имя члена метода веб-службы, представленного данным сопоставлением.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>Получает пространство имен XML, применяемое к данному сопоставлению. </summary>
      <returns>Пространство имен XML, применяемое к данному сопоставлению.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>Получает полное имя типа платформы .NET Framework для данного сопоставления. </summary>
      <returns>Полное имя типа платформы .NET Framework для данного сопоставления.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>Получает имя типа платформы .NET Framework для данного сопоставления. </summary>
      <returns>Имя типа платформы .NET Framework для данного сопоставления.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>Получает пространство имен типа платформы .NET Framework для данного сопоставления.</summary>
      <returns>Пространство имен типа платформы .NET Framework для данного сопоставления.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary>Получает имя элемента XML согласно его отображению в документе описания службы.</summary>
      <returns>Имя элемента XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary>Предоставляет сопоставления методов веб-служб .NET Framework и сообщений языка описания веб-служб (WSDL), заданных для веб-служб SOAP. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>Получает число сущностей кода .NET Framework, принадлежащего методу веб-службы, с которым сопоставляется сообщение SOAP. </summary>
      <returns>Число сопоставлений в коллекции.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>Получает элемент, содержащий информацию внутреннего сопоставления типа для сущности кода .NET Framework, принадлежащей методу веб-службы, который сопоставляется с сообщением SOAP.</summary>
      <returns>Запрашиваемый <see cref="T:System.Xml.Serialization.XmlMemberMapping" />.</returns>
      <param name="index">Индекс сопоставления для возврата.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary>Получает имя типа платформы .NET Framework, сопоставляемого с типом данных элемента схемы XML, представляющего сообщение SOAP.</summary>
      <returns>Имя типа платформы .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary>Получает пространство имен типа платформы .NET Framework, сопоставляемого с типом данных элемента схемы XML, представляющего сообщение SOAP.</summary>
      <returns>Пространство имен .NET Framework сопоставления.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary>Указывает, что целевое свойство, параметр, возвращаемое значение или член класса содержит префиксы, связанные с пространствами имен, используемыми в документе XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" /> class.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary>Получает номер строки неизвестного узла XML.</summary>
      <returns>Номер строки неизвестного узла XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary>Получает положение в строке неизвестного узла XML.</summary>
      <returns>Номер положения неизвестного узла XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary>Получает локальное имя XML десериализуемого узла XML.</summary>
      <returns>Локальное имя XML десериализуемого узла XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary>Получает имя десериализуемого узла XML.</summary>
      <returns>Имя десериализуемого узла.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary>Получает пространство имен URI, связанное с десериализуемым узлом XML.</summary>
      <returns>Пространство имен URI, связанное с десериализуемым узлом XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary>Получает тип десериализуемого узла XML.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNodeType" />, представляющий десериализуемый узел XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary>Получает десериализуемый объект.</summary>
      <returns>
        <see cref="T:System.Object" /> десериализуется.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary>Получает текст десериализуемого узла XML.</summary>
      <returns>Текст десериализуемого узла XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary>Предоставляет метод, обрабатывающий событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />, принадлежащее <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">Источник события. </param>
      <param name="e">
        <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />, содержащий данные события. </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>Генерирует сопоставления с объявлениями элемента схемы XML, включая литерал частей сообщения определения схемы XML (XSD) в документе языка описания веб-служб (WSDL), для типов платформе .NET Framework или информации метода веб-службы. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> с помощью указанного пространства имен XML по умолчанию. </summary>
      <param name="defaultNamespace">Пространство имен XML по умолчанию для использования для сопоставлений импортированного типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> с помощью указанных переопределений сериализаций XML. </summary>
      <param name="attributeOverrides">Объект, переопределяющий способ сериализации сопоставленных типов классом <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> с помощью указанных переопределений сериализаций XML и пространства имен XML по умолчанию. </summary>
      <param name="attributeOverrides">Объект, переопределяющий способ сериализации сопоставленных типов классом <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="defaultNamespace">Пространство имен XML по умолчанию для использования для сопоставлений импортированного типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы. </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> с сопоставлением с частями элемента определения сообщения WSDL.</returns>
      <param name="elementName">Имя элемента XML, произведенного из метода веб-службы.</param>
      <param name="ns">Пространства имен элемента XML, произведенного из метода веб-службы.</param>
      <param name="members">Массив объектов <see cref="T:System.Xml.Serialization.XmlReflectionMember" />, содержащий сущности кода .NET Framework, принадлежащие методу веб-службы.</param>
      <param name="hasWrapperElement">true, если элементы, которые соответствуют частям сообщения языка описания веб-служб WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Возвращает сопоставления внутреннего типа с помощью информации, собранной из метода веб-службы, а также позволяет указать имя элемента XML, пространство имен XML и другие параметры.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, содержащий сопоставления.</returns>
      <param name="elementName">Имя элемента XML, произведенного из метода веб-службы.</param>
      <param name="ns">Пространства имен элемента XML, произведенного из метода веб-службы.</param>
      <param name="members">Массив объектов <see cref="T:System.Xml.Serialization.XmlReflectionMember" />, содержащий сущности кода .NET Framework, принадлежащие методу веб-службы.</param>
      <param name="hasWrapperElement">true, если элементы, которые соответствуют частям сообщения языка описания веб-служб WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP, в противном случае false.</param>
      <param name="rpc">true, если метод является удаленным вызовом процедур, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Возвращает сопоставления внутреннего типа с помощью информации, собранной из метода веб-службы, а также позволяет указать имя элемента XML, пространство имен XML и другие параметры.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, содержащий сопоставления.</returns>
      <param name="elementName">Имя элемента XML, произведенного из метода веб-службы.</param>
      <param name="ns">Пространства имен элемента XML, произведенного из метода веб-службы.</param>
      <param name="members">Массив объектов <see cref="T:System.Xml.Serialization.XmlReflectionMember" />, содержащий сущности кода .NET Framework, принадлежащие методу веб-службы.</param>
      <param name="hasWrapperElement">true, если элементы, которые соответствуют частям сообщения языка описания веб-служб WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP, в противном случае false.</param>
      <param name="rpc">true, если метод является удаленным вызовом процедур, в противном случае false.</param>
      <param name="openModel">true для указания, что сгенерированный тип схемы будет помечен элементом  &lt;xs:anyAttribute&gt;, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Генерирует сопоставления внутреннего типа для информации, собранной из метода веб-службы.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, содержащий сопоставления.</returns>
      <param name="elementName">Имя элемента XML, произведенного из метода веб-службы.</param>
      <param name="ns">Пространства имен элемента XML, произведенного из метода веб-службы.</param>
      <param name="members">Массив объектов <see cref="T:System.Xml.Serialization.XmlReflectionMember" />, содержащий сущности кода .NET Framework, принадлежащие методу веб-службы.</param>
      <param name="hasWrapperElement">true, если элементы, которые соответствуют частям сообщения языка описания веб-служб WSDL, должны быть включены в дополнительный элемент упаковки в сообщении SOAP, в противном случае false.</param>
      <param name="rpc">true, если метод является удаленным вызовом процедур, в противном случае false.</param>
      <param name="openModel">true для указания, что сгенерированный тип схемы будет помечен элементом  &lt;xs:anyAttribute&gt;, в противном случае false.</param>
      <param name="access">Одно из значений <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.По умолчанию None.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>Генерирует сопоставление элемента схемы XML для указанного типа платформы .NET Framework. </summary>
      <returns>Внутреннее сопоставление .NET Framework типа с элементом схемы XML.</returns>
      <param name="type">Тип .NET Framework, для которого требуется выполнить генерирование сопоставления типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>Генерирует сопоставление элемента схемы XML для указанного типа платформы .NET Framework с помощью указанных типа и пространства имен. </summary>
      <returns>Внутреннее сопоставление .NET Framework типа с элементом схемы XML.</returns>
      <param name="type">Тип .NET Framework, для которого требуется выполнить генерирование сопоставления типа.</param>
      <param name="defaultNamespace">Пространство имен XML по умолчанию для использования.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Генерирует сопоставление элемента схемы XML для указанного типа платформы .NET Framework с помощью указанных типа и атрибута. </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, представляющий сопоставление типа платформы .NET Framework с элементом схемы XML.</returns>
      <param name="type">Тип .NET Framework, для которого требуется выполнить генерирование сопоставления типа.</param>
      <param name="root">Атрибут <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, который применяется к типу.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Генерирует сопоставление элемента схемы XML для указанного типа платформы .NET Framework с помощью указанных типа, атрибута и пространства имен. </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, содержащий внутреннее сопоставление .NET Framework типа с элементом схемы XML.</returns>
      <param name="type">Тип .NET Framework, для которого требуется выполнить генерирование сопоставления типа.</param>
      <param name="root">Атрибут <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, который применяется к типу.</param>
      <param name="defaultNamespace">Пространство имен XML по умолчанию для использования.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>Включает сопоставления для типа для последующего использования при вызове методов импортирования. </summary>
      <param name="type">Тип .NET Framework, для которого требуется выполнить сохранение информации сопоставления типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Включает сопоставления для производных типов для последующего использования при вызове методов импортирования. </summary>
      <param name="provider">Экземпляр класса <see cref="T:System.Reflection.ICustomAttributeProvider" />, содержащий пользовательские атрибуты, являющиеся производными от атрибута <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary>Обеспечивает сопоставление между объектами кода в методах веб-служб .NET Framework и содержимым сообщений WSDL, определенных для веб-служб SOAP. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlReflectionMember" />. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>Получает или задает значение, которое указывает, представляет ли объект <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> возвращаемое значение метода веб-службы, в противоположность выходному параметру. </summary>
      <returns>Значение true, если член представляет возвращаемое значение веб-службы; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>Получает или задает имя члена метода веб-службы для данного сопоставления. </summary>
      <returns>Имя метода веб-службы.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>Получает или задает объект кода члена метода веб-службы, представленного данным сопоставлением. </summary>
      <returns>Значение <see cref="T:System.Type" /> для объекта кода члена метода веб-службы, представленного данным сопоставлением.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary>Получает или задает значение, которое указывает, что атрибут isNullable соответствующего определения элемента XML имеет значение false.</summary>
      <returns>Значение True для переопределения свойства <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary>Получает или задает объект <see cref="T:System.Xml.Serialization.SoapAttributes" /> с коллекцией атрибутов SOAP, примененных к этому объекту кода члена. </summary>
      <returns>Объект <see cref="T:System.Xml.Serialization.SoapAttributes" />, содержащий объекты, которые представляют атрибуты SOAP, примененные к данному члену.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>Получает или задает объект <see cref="T:System.Xml.Serialization.XmlAttributes" /> с коллекцией атрибутов <see cref="T:System.Xml.Serialization.XmlSerializer" />, примененных к этому объекту кода члена. </summary>
      <returns>Объект <see cref="T:System.XML.Serialization.XmlAttributes" />, представляющий атрибуты XML, которые были применены к данному коду члена.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>Управляет XML-сериализацией конечного объекта атрибута как корневого XML-элемента.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlRootAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> и указывает имя корневого XML-элемента.</summary>
      <param name="elementName">Имя корневого XML-элемента. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>Возвращает или задает тип данных XSD корневого XML-элемента.</summary>
      <returns>Тип данных XSD (документ схемы XML), как определено документом консорциума W3C (www.w3.org) "XML-схема: Типы данных".</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>Возвращает или задает имя XML-элемента, создаваемого и опознаваемого методами <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> и <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> класса <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Имя корневого XML-элемента, который создается и распознается в экземпляре XML-документа.По умолчанию — это имя сериализуемого класса.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>Возвращает или задает значение, которое указывает, должен ли <see cref="T:System.Xml.Serialization.XmlSerializer" /> выполнять сериализацию члена со значением null в атрибут xsi:nil со значением true.</summary>
      <returns>true, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> создает атрибут xsi:nil; в противном случае, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>Возвращает или задает пространство имен для корневого XML-элемента.</summary>
      <returns>Пространство имен для XML-элемента.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary>Обеспечивает итерацию над коллекцией объектов <see cref="T:System.Xml.Schema.XmlSchema" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> class. </summary>
      <param name="list">Объект <see cref="T:System.Xml.Serialization.XmlSchemas" />, над которым требуется выполнить итерацию.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current <see cref="T:System.Xml.Schema.XmlSchema" /> object in the collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary>Переводит перечисление к следующему элементу в коллекции.</summary>
      <returns>true при успешном перемещении, в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current"></member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset"></member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary>Заполняет объекты <see cref="T:System.Xml.Schema.XmlSchema" /> объявлениями элементов схемы XML, обнаруженными в объектах сопоставления типов. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />. </summary>
      <param name="schemas">Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchema" />, к которой добавляются обнаруженные объявления элементов из сопоставления типов.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary>Экспортирует элемент &lt;any&gt; в объект <see cref="T:System.Xml.Schema.XmlSchema" />, идентифицированный указанным пространством имен.</summary>
      <returns>Произвольное имя, присвоенное объявлению элемента &lt;any&gt;.</returns>
      <param name="ns">Пространство имен документа схемы XML, к которому добавляется элемент &lt;any&gt;.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Добавляет объявление элемента для объекта или типа к сообщению SOAP или к объекту <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns>Строка "any" с добавленным целым числом. </returns>
      <param name="members">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, содержащий сопоставления для экспортирования.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Добавляет объявление элемента к применимой <see cref="T:System.Xml.Schema.XmlSchema" /> для каждой из частей элементов литерального определения сообщения SOAP. </summary>
      <param name="xmlMembersMapping">Сопоставления внутреннего типа платформы .NET Framework для частей элементов определения сообщения языка описания веб-служб (WSDL).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>Добавляет объявление элемента к применимой <see cref="T:System.Xml.Schema.XmlSchema" /> для каждой из частей элементов литерального определения сообщения SOAP, а также указывает необходимость включения заключенных элементов.</summary>
      <param name="xmlMembersMapping">Внутреннее сопоставление между типом .NET Framework и элементом схемы XML.</param>
      <param name="exportEnclosingType">true, если элементы схемы, которые заключаются в схеме, требуется включить; в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Добавляет объявление элемента к применимому объекту <see cref="T:System.Xml.Schema.XmlSchema" /> для одной части элементов литерального определения сообщения SOAP.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий полное имя XML, экспортированного объявления элемента.</returns>
      <param name="xmlMembersMapping">Сопоставления внутреннего типа платформы .NET Framework для частей элементов определения сообщения языка описания веб-служб (WSDL).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Добавляет объявление элемента для типа платформы .NET Framework к применимому объекту <see cref="T:System.Xml.Schema.XmlSchema" />. </summary>
      <param name="xmlTypeMapping">Внутреннее сопоставление между типом .NET Framework и элементом схемы XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary>Создает внутренние сопоставления типам .NET Framework для объявлений элементов XML-схемы, включая части литеральных XSD-сообщений в документе WSDL. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, принимая коллекцию объектов <see cref="T:System.Xml.Schema.XmlSchema" />, представляющих XML-схемы, используемые литеральными SOAP сообщениями, определенными в документе WSDL. </summary>
      <param name="schemas">Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> class. </summary>
      <param name="schemas">A collection of <see cref="T:System.Xml.Schema.XmlSchema" /> objects.</param>
      <param name="options">Побитовая комбинация значений <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />, определяющая параметры, используемые при создании типов платформе .NET Framework для веб-службы.</param>
      <param name="codeProvider">
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> используется для создания кода сериализации.</param>
      <param name="context">Экземпляр <see cref="T:System.Xml.Serialization.ImportContext" />, указывающий контекст импорта.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> для коллекции XML-схем, используя указанные параметры создания кода и контекст импорта.</summary>
      <param name="schemas">Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <param name="options">Перечисление <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />, указывающее параметры создания кода.</param>
      <param name="context">Экземпляр <see cref="T:System.Xml.Serialization.ImportContext" />, указывающий контекст импорта.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, принимая коллекцию объектов <see cref="T:System.Xml.Schema.XmlSchema" />, представляющих XML-схемы, используемые литеральными SOAP сообщениями, и классы, создаваемые для привязок, определенных в документе WSDL. </summary>
      <param name="schemas">Объект <see cref="T:System.Xml.Serialization.XmlSchemas" />.</param>
      <param name="typeIdentifiers">Объект <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, указывающий коллекцию классов, создаваемых для привязок, определенных в документе WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, принимая коллекцию объектов <see cref="T:System.Xml.Schema.XmlSchema" />, представляющих XML-схемы, используемые литеральными SOAP сообщениями, и классы, создаваемые для привязок, определенных в документе WSDL, а также значение перечисления <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />.</summary>
      <param name="schemas">Коллекция объектов <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <param name="typeIdentifiers">Объект <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, указывающий коллекцию классов, создаваемых для привязок, определенных в документе WSDL.</param>
      <param name="options">Побитовая комбинация значений <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />, определяющая параметры, используемые при создании типов платформе .NET Framework для веб-службы.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary>Создает сведения о внутреннем сопоставлении типа для одноэлементной литеральной (SOAP) части, определенной в документе WSDL.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> представляет сопоставление типа платформы .NET Framework для одноэлементной части определения сообщения WSDL.</returns>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает имя типа элемента, для которого создается тип .NET Framework.</param>
      <param name="elementName">Имя элемента части в документе WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Создает сведения о внутреннем сопоставлении типа для элемента, определенного в документе XML-схемы. </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> представляет сведения о сопоставлении типа платформы .NET Framework для элемента XML-схемы.</returns>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает имя элемента, определенного в документе XML-схемы.</param>
      <param name="baseType">Базовый тип для типа платформы .NET Framework, создаваемый для соответствия типу XSD-элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>Создает сведения о внутреннем сопоставлении типа для элемента, определенного в документе XML-схемы, или являющегося частью документа WSDL.</summary>
      <returns>Сведения о сопоставлении типа платформы .NET Framework для элемента XML-схемы.</returns>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает имя элемента, определенного в документе XML-схемы.</param>
      <param name="baseType">Базовый тип для типа платформы .NET Framework, создаваемый для соответствия типу XSD-элемента.</param>
      <param name="baseTypeCanBeIndirect">true, если тип, соответствующий XSD-элементу, может косвенно наследовать от базового типа; в противном случае, false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>Создает сведения о внутреннем сопоставлении типа для частей элементов литерального SOAP сообщения, определенного в документе WSDL.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> содержит сведения о сопоставлении типа.</returns>
      <param name="name">Имя элемента, для которого создается сопоставление.</param>
      <param name="ns">Пространство имен элемента, для которого создается сопоставление.</param>
      <param name="members">Массив экземпляров <see cref="T:System.Xml.Serialization.SoapSchemaMember" />, указывающий члены элемента, для которого создается сопоставление.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary>Создает сведения о внутреннем сопоставлении типа для одноэлементной части литерального SOAP сообщения, определенного в документе WSDL. </summary>
      <returns>Сопоставление типа платформы .NET Framework для определения сообщения WSDL, содержащего одноэлементную часть.</returns>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> определяет имя части сообщения.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary>Создает сведения о внутреннем сопоставлении типа для частей элементов литерального SOAP сообщения, определенного в документе WSDL. </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> представляет сопоставления типа платформы .NET Framework для частей элементов определения сообщения WSDL.</returns>
      <param name="names">Массив типа <see cref="T:System.Xml.XmlQualifiedName" />, указывающий имена частей сообщения.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary>Создает сведения о внутреннем сопоставлении типа для частей элементов литерального SOAP сообщения, определенного в документе WSDL.</summary>
      <returns>Сопоставления типа платформы .NET Framework для частей элементов определения сообщения WSDL.</returns>
      <param name="names">Массив типа <see cref="T:System.Xml.XmlQualifiedName" />, указывающий имена частей сообщения.</param>
      <param name="baseType">Базовый тип для всех типов .NET Framework, создаваемых для соответствия частям сообщения.</param>
      <param name="baseTypeCanBeIndirect">true, если тип, соответствующий части сообщения, может косвенно наследовать от базового типа; в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary>Создает сведения о внутреннем сопоставлении типа для элемента, определенного в документе XML-схемы. </summary>
      <returns>Объект <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, описывающий сопоставление типа.</returns>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает XML-элемент.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Создает сведения о внутреннем сопоставлении типа для элемента, определенного в документе XML-схемы. </summary>
      <returns>Объект <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, описывающий сопоставление типа.</returns>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает XML-элемент.</param>
      <param name="baseType">Объект <see cref="T:System.Type" />, указывающий базовый тип.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>Generates internal type mapping information for an element defined in an XML schema document. </summary>
      <returns>Объект <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, описывающий сопоставление типа.</returns>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает XML-элемент.</param>
      <param name="baseType">Объект <see cref="T:System.Type" />, указывающий базовый тип.</param>
      <param name="baseTypeCanBeIndirect">
        <see cref="T:System.Boolean" /> значение, указывающее, может ли создаваемый тип косвенно наследовать от <paramref name="baseType" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary>Создает сведения о внутреннем сопоставлении типа для элемента, определенного в документе XML-схемы. </summary>
      <returns>Сведения о сопоставлении типа платформы .NET Framework для элемента XML-схемы.</returns>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> указывает имя элемента, определенного в документе XML-схемы.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary>При применении к типу сохраняет имя статического метода типа, возвращающего схему XML и <see cref="T:System.Xml.XmlQualifiedName" /> (или <see cref="T:System.Xml.Schema.XmlSchemaType" /> для анонимных типов), управляющих сериализацией типа.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />, принимая имя статического метода, предоставляющего схему XML типа.</summary>
      <param name="methodName">Имя статического метода, который должен быть реализован.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary>Получает или задает значение, определяющее, является ли целевой класс подстановочным классом, или содержит ли схема для класса только элемент xs:any.</summary>
      <returns>true, если класс является подстановочным знаком, или схема содержит только элемент xs:any, в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary>Получает имя статического метода, предоставляющего схему XML типа, и имя его типа данных схемы XML.</summary>
      <returns>Имя метода, вызываемого инфраструктурой XML, для возврата схемы XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary>Представляет коллекцию XML-схем.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSchemas" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary>Добавляет объект в конец коллекции.</summary>
      <returns>Индекс, по которому добавляется <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, добавляемый в коллекцию объектов. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary>Adds an <see cref="T:System.Xml.Schema.XmlSchema" /> object that represents an assembly reference to the collection.</summary>
      <returns>Индекс, по которому добавляется <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
      <param name="schema">The <see cref="T:System.Xml.Schema.XmlSchema" /> to add.</param>
      <param name="baseUri">
        <see cref="T:System.Uri" /> объекта схемы.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary>Добавляет экземпляр класса <see cref="T:System.Xml.Serialization.XmlSchemas" /> в конец коллекции.</summary>
      <param name="schemas">Объект <see cref="T:System.Xml.Serialization.XmlSchemas" />, добавляемый в конец коллекции. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary>Adds an <see cref="T:System.Xml.Schema.XmlSchema" /> object that represents an assembly reference to the collection.</summary>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" /> для добавления.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>Обрабатывает имена атрибутов и элементов в XML-схемах и, при необходимости, проверяет XML-схемы. </summary>
      <param name="handler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" />, указывающий метод обратного вызова, который обрабатывает ошибки и предупреждения в процессе проверки XML-схемы, если строгий параметр имеет значение true.</param>
      <param name="fullCompile">true — проверять XML-схемы в коллекции при помощи метода <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> класса <see cref="T:System.Xml.Serialization.XmlSchemas" />; в противном случае — false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary>Возвращает значение, указывающее, содержит ли коллекция объект <see cref="T:System.Xml.Schema.XmlSchema" />, принадлежащий к определенному пространству имен.</summary>
      <returns>true, если элемент найден; в противном случае — false.</returns>
      <param name="targetNamespace">Пространство имен проверяемого элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Определяет, содержит ли <see cref="T:System.Xml.Serialization.XmlSchemas" /> определенную схему.</summary>
      <returns>true, если коллекция содержит указанный элемент; в противном случае — false.</returns>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, который требуется обнаружить. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Копирует <see cref="T:System.Xml.Serialization.XmlSchemas" /> целиком в совместимый одномерный <see cref="T:System.Array" />, который начинается с указанного индекса целевого массива.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Находит <see cref="T:System.Xml.Schema.XmlSchemaObject" /> определенного типа и с указанным именем в одной из XML-схем. </summary>
      <returns>Экземпляр <see cref="T:System.Xml.Schema.XmlSchemaObject" />, такой как <see cref="T:System.Xml.Schema.XmlSchemaElement" /> или <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" />, указывающий полное имя с использованием пространства имен для обнаружения объекта <see cref="T:System.Xml.Schema.XmlSchema" /> в коллекции.</param>
      <param name="type">
        <see cref="T:System.Type" /> искомого объекта.Возможные типы: <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> и <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary>Получает коллекцию схем, принадлежащих к тому же пространству имен.</summary>
      <returns>Реализация <see cref="T:System.Collections.IList" />, содержащая схемы.</returns>
      <param name="ns">Пространство имен извлекаемых схем.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary>Выполняет поиск указанной схемы и возвращает начинающийся с нуля индекс первого вхождения в пределах <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <returns>Начинающийся с нуля индекс первого вхождения значения в пределах <see cref="T:System.Xml.Serialization.XmlSchemas" />, если таковое обнаружено; в противном случае -1.</returns>
      <param name="schema">Искомая <see cref="T:System.Xml.Schema.XmlSchema" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary>Вставляет схему в <see cref="T:System.Xml.Serialization.XmlSchemas" /> по указанному индексу.</summary>
      <param name="index">Начинающийся с нуля индекс, по которому следует вставить <paramref name="schema" />. </param>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" />, который требуется вставить. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary>Получает значение, которое указывает, выполнялась ли компиляция схем.</summary>
      <returns>true, если схемы компилировались; в противном случае — false.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary>Статический метод, определяющий, содержит ли указанная XML-схема настраиваемый атрибут IsDataSet со значением true или его эквивалент. </summary>
      <returns>true, если указанная схема существует; в противном случае — false.</returns>
      <param name="schema">XML-схема для поиска атрибута IsDataSet со значением true.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary>Возвращает или задает объект <see cref="T:System.Xml.Schema.XmlSchema" /> по указанному индексу. </summary>
      <returns>Указанная <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
      <param name="index">Индекс элемента, который требуется извлечь.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary>Получает указанный объект <see cref="T:System.Xml.Schema.XmlSchema" />, который представляет XML-схему, связанную с указанным пространством имен.</summary>
      <returns>Указанный объект <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
      <param name="ns">Пространство имен указанного объекта.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary>Выполняет дополнительные настраиваемые процессы при очистке содержимого экземпляра <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary>Выполняет дополнительные настраиваемые процедуры перед добавлением нового элемента в экземпляр <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">Начинающийся с нуля индекс, по которому требуется вставить <paramref name="value" />. </param>
      <param name="value">Новое значение элемента в <paramref name="index" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary>Выполняет дополнительные настраиваемые процессы при удалении элемента из экземпляра <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">Начинающийся с нуля индекс, по которому может находиться <paramref name="value" />. </param>
      <param name="value">Значение удаляемого элемента в <paramref name="index" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Выполняет дополнительные настраиваемые процессы перед заданием значения в экземпляре <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found. </param>
      <param name="oldValue">Значение, которое требуется заменить на <paramref name="newValue" />. </param>
      <param name="newValue">Новое значение элемента в <paramref name="index" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary>Удаляет первое вхождение определенной схемы из <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema">Объект <see cref="T:System.Xml.Schema.XmlSchema" /> для удаления. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Возвращает перечислитель, который используется для итерации по коллекции схем XML.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary>Делегат, используемый классом <see cref="T:System.Xml.Serialization.XmlSerializer" /> для десериализации типов данных XML с кодированием SOAP, которые сопоставлены коллекциям перечислений. </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary>Делегат, используемый классом <see cref="T:System.Xml.Serialization.XmlSerializer" /> для десериализации XML-данных с кодировкой SOAP. </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary>Абстрактный класс, который является базовым классом для <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> и <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />, содержит методы, общие для обоих этих типов.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />. </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary>Делегат, используемый классом <see cref="T:System.Xml.Serialization.XmlSerializer" /> для десериализации типов из некорневых данных XML с кодировкой SOAP. </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary>Управляет десериализацией с помощью класса <see cref="T:System.Xml.Serialization.XmlSerializer" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary>Сохраняет объект, содержащий метод обратного вызова, который будет при необходимости вызван, с целью заполнения коллекций или перечислений .NET Framework, соответствующих SOAP-кодированным массивам или SOAP-кодированным элементам с несколькими ссылками. </summary>
      <param name="fixup">Входные данные методов делегата <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> и обратного вызова.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary>Сохраняет объект, содержащий экземпляр метода обратного вызова, который будет при необходимости вызван, с целью заполнения объектов в SOAP-кодированном массиве. </summary>
      <param name="fixup">Входные данные методов делегата <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> и обратного вызова.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary>Сохраняет реализацию делегата <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> и его входных данных для последующего вызова. </summary>
      <param name="name">Имя десериализуемого типа платформы .NET Framework.</param>
      <param name="ns">Пространство имен десериализуемого типа платформы .NET Framework.</param>
      <param name="type">Десериализуемый <see cref="T:System.Type" />.</param>
      <param name="read">Делегат <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary>Сохраняет объект, десериализуемый из SOAP-кодированного элемента multiRef, для последующего доступа посредством метода <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />. </summary>
      <param name="id">Значение атрибута id элемента multiRef, идентифицирующее элемент.</param>
      <param name="o">Объект, десериализуемый из элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary>Проверяет увеличен ли десериализатор.</summary>
      <param name="whileIterations">Текущий count в цикле "while".</param>
      <param name="readerCount">Текущий <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />. </param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> не увеличен. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary>Удаляет все вхождения знаков пустого пространства от начала и до конца заданной строки.</summary>
      <returns>Сокращенная строка.</returns>
      <param name="value">Строка с пустыми пространствами будет сокращена.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что десериализуемый объект должен быть абстрактным. </summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="name">Имя абстрактного типа.</param>
      <param name="ns">Пространство имен .NET Framework абстрактного типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Заполняет объект из его представления XML в текущем расположении <see cref="T:System.Xml.XmlReader" /> с параметром для чтения внутреннего элемента.</summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="xsdDerived">Локальное имя производного типа данных схемы XML.</param>
      <param name="nsDerived">Пространство имен производного типа данных схемы XML.</param>
      <param name="xsdBase">Локальное имя базового типа данных схемы XML.</param>
      <param name="nsBase">Пространство имен базового типа данных схемы XML.</param>
      <param name="clrDerived">Пространство имен производного типа платформы .NET Framework.</param>
      <param name="clrBase">Имя базового типа платформы .NET Framework.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что десериализуемый объект не может быть создан экземплярно, так как конструктор вызывает исключение безопасности.</summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="typeName">Имя типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что десериализуемый объект не может быть создан экземплярно, так как конструктор недоступен.</summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="typeName">Имя типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary>Создает <see cref="T:System.InvalidCastException" />, указывающий на сбой явного преобразования ссылки.</summary>
      <returns>Исключение <see cref="T:System.InvalidCastException" />.</returns>
      <param name="type">
        <see cref="T:System.Type" />, к которому объект не может быть приведен.Данный тип является частью сообщения исключения.</param>
      <param name="value">Объект, который не может быть приведен.Данный объект является частью сообщения исключения.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary>Создает <see cref="T:System.InvalidCastException" />, указывающий на сбой явного преобразования ссылки.</summary>
      <returns>Исключение <see cref="T:System.InvalidCastException" />.</returns>
      <param name="type">
        <see cref="T:System.Type" />, к которому объект не может быть приведен.Данный тип является частью сообщения исключения.</param>
      <param name="value">Объект, который не может быть приведен.Данный объект является частью сообщения исключения.</param>
      <param name="id">Идентификатор строки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что производный тип, сопоставленный типу данных схемы XML, не может быть обнаружен.</summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="name">Локальное имя типа данных схемы XML с сопоставлением недоступному производному типу.</param>
      <param name="ns">Пространство имен типа данных схемы XML с сопоставлением недоступному производному типу.</param>
      <param name="clrType">Полное имя базового типа платформы .NET Framework, для которого невозможно обнаружить производный тип.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что SOAP-кодированный тип коллекции не может быть изменен, а его значения не могут быть заполнены. </summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="name">Полное имя типа платформы .NET Framework, для которого имеется сопоставление.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что значение перечисления неверно. </summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="value">Неверное значение перечисления.</param>
      <param name="enumType">Перечисляемый тип.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что текущее положение <see cref="T:System.Xml.XmlReader" /> представляет неизвестный узел XML. </summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что тип неизвестен. </summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий имя неизвестного типа.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary>Возвращает или задает значение, определяющее транслируются ли строки XML в допустимые имена типов .NET Framework.</summary>
      <returns>true, если строки XML декодируются в допустимые имена типов .NET Framework, в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary>Получает объект документа XML, в который десериализуется документ XML. </summary>
      <returns>
        <see cref="T:System.Xml.XmlDocument" />, представляющий десериализованные данные <see cref="T:System.Xml.XmlDocument" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>Обеспечивает наличие достаточного объема заданного массива или копии для содержания определенного индекса. </summary>
      <returns>Существующий <see cref="T:System.Array" />, если уже объем достаточен, в противном случае новый больший массив, содержащий оригинальные элементы массива</returns>
      <param name="a">Проверяемый <see cref="T:System.Array" />.</param>
      <param name="index">Требуемый индекс.</param>
      <param name="elementType">
        <see cref="T:System.Type" /> элементов массива.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary>Заполняет значения SOAP-кодированного массива, тип данных которого сопоставлен со ссылочным типом .NET Framework. </summary>
      <param name="fixup">Объект, содержащий массив с заполненными значениями.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary>Получает длину SOAP-кодированного массива, в котором на текущий момент размещен <see cref="T:System.Xml.XmlReader" />. </summary>
      <returns>Длина массива SOAP.</returns>
      <param name="name">Локальное имя, которое должен иметь массив.</param>
      <param name="ns">Пространство имен, которое должен иметь массив.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>Определяет, имеет ли элемент XML, в котором на текущий момент расположен <see cref="T:System.Xml.XmlReader" />, нулевой атрибут с установленным значением true.</summary>
      <returns>true, если <see cref="T:System.Xml.XmlReader" /> расположен на текущий момент над нулевым атрибутом со значением true, в противном случае false.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary>Получает объект, десериализуемый из SOAP-кодированного элемента multiRef, который сохранен ранее посредством <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />.  </summary>
      <returns>Объект, десериализуемый из SOAP-кодированного элемента multiRef.</returns>
      <param name="id">Значение атрибута id элемента multiRef, идентифицирующее элемент.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>Получает значение атрибута xsi:type для элемента XML в текущем положении <see cref="T:System.Xml.XmlReader" />. </summary>
      <returns>Полное имя XML, указывающее тип данных элемента XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>Инициализирует методы обратных вызовов, заполняющие объекты, соответствующие SOAP-кодированным данным XML. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>Сохраняет имена элементов и атрибутов в объекте <see cref="T:System.Xml.NameTable" />. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary>Возвращает или задает значение, которое должно представлять значение true для возвращаемого значения SOAP 1.1.</summary>
      <returns>true, если значение является возвращаемым значением. </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>Определяет указывает ли имя атрибута XML пространство имен XML. </summary>
      <returns>true , если имя атрибута XML указывает пространство имен XML, в противном случае false.</returns>
      <param name="name">Имя атрибута XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary>Устанавливает значение атрибута XML, если он является типом arrayType из пространства имен языка описания веб-служб (WSDL). </summary>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" />, который может быть типом wsdl:array.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>Позволяет <see cref="T:System.Xml.XmlReader" /> считать полное имя элемента, в котором на текущий момент размещается. </summary>
      <returns>Полное имя текущего элемента XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>Позволяет <see cref="T:System.Xml.XmlReader" /> считывать закрывающий тег XML. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>Получает объект <see cref="T:System.Xml.XmlReader" />, используемый <see cref="T:System.Xml.Serialization.XmlSerializationReader" />. </summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" />, который используется <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary>Получает текущий подсчет <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Текущий подсчет <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения текущего элемента XML, если элемент имеет нулевой атрибут со значением "true". </summary>
      <returns>true, если считанный элемент имеет значение атрибута null="true", в противном случае false.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>Инструктирует <see cref="T:System.Xml.XmlReader" /> для считывания полного имени элемента, в котором на текущий момент размещается. </summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий полное имя текущего элемента XML, в противном случае null при наличии значения атрибута null="true".</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения простого текстового элемента XML, который может иметь значение null. </summary>
      <returns>Значение строки, в противном случае null.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary>Считывает значение атрибута href (ref атрибут для SOAP 1.2), используемого для ссылки на элемент XML в кодировании SOAP. </summary>
      <returns>true при успешном считывании значения, в противном случае false.</returns>
      <param name="fixupReference">Выходная строка, в которую считывается значение атрибута href.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary>Десериализует объект из SOAP-кодированного элемента XML multiRef. </summary>
      <returns>Значение ссылочного элемента в документе.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary>Десериализует объект из SOAP-кодированного элемента XML multiRef. </summary>
      <returns>Значение ссылочного элемента в документе.</returns>
      <param name="name">Локальное имя типа данных схемы XML элемента.</param>
      <param name="ns">Пространство имен типа данных схемы XML элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary>Десериализует объекты из SOAP-кодированных элементов XML multiRef в сообщении SOAP. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary>Десериализует объект из элемента XML в сообщении SOAP, которое содержит ссылку на элемент multiRef.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="name">Локальное имя типа данных схемы XML элемента.</param>
      <param name="ns">Пространство имен типа данных схемы XML элемента.</param>
      <param name="elementCanBeType">true, если имя элемента также является именем типа данных схемы XML, в противном случае false.</param>
      <param name="fixupReference">Выходная строка, в которую считывается значение атрибута href.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary>Десериализует объект из элемента XML в сообщении SOAP, которое содержит ссылку на элемент multiRef. </summary>
      <returns>Десериализованный объект.</returns>
      <param name="name">Локальное имя типа данных схемы XML элемента.</param>
      <param name="ns">Пространство имен типа данных схемы XML элемента.</param>
      <param name="fixupReference">Выходная строка, в которую считывается значение атрибута href.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary>Десериализует объект из элемента XML в сообщении SOAP, которое содержит ссылку на элемент multiRef. </summary>
      <returns>Десериализованный объект.</returns>
      <param name="fixupReference">Выходная строка, в которую считывается значение атрибута href.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>Заполняет объект из представления XML в текущем расположении <see cref="T:System.Xml.XmlReader" />. </summary>
      <returns>Объект, реализующий интерфейс <see cref="T:System.Xml.Serialization.IXmlSerializable" /> с заполнением его членов из положения <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="serializable">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" />, соответствующий текущей позиции в <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)"></member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>Производит результат вызова к методу <see cref="M:System.Xml.XmlReader.ReadString" />, добавленного к входному значению. </summary>
      <returns>Результат вызова к методу <see cref="M:System.Xml.XmlReader.ReadString" />, добавленного к входному значению.</returns>
      <param name="value">Строка для префикса к результату вызова к методу <see cref="M:System.Xml.XmlReader.ReadString" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary>Возвращает результат вызова к методу <see cref="M:System.Xml.XmlReader.ReadString" /> класса <see cref="T:System.Xml.XmlReader" />, который при необходимости сокращен путем удаления пустого пространства и добавлен к входному значению.</summary>
      <returns>Результат операции считывания, добавленный к входному значению.</returns>
      <param name="value">Строка, которая будет добавлена.</param>
      <param name="trim">true, если результат операции считывания должен быть сокращен, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary>Считывает элемент XML, допускающий нулевые значения (xsi:nil = 'true') и возвращающий универсальное значение <see cref="T:System.Nullable`1" />. </summary>
      <returns>Универсальный шаблон <see cref="T:System.Nullable`1" />, представляющий нулевое значение XML.</returns>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий простой тип данных для текущего расположения <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>Получает значение узла XML, в котором <see cref="T:System.Xml.XmlReader" /> расположен на текущий момент. </summary>
      <returns>Значение узла в качестве типа значения .NET Framework, если значение является простым типом данных схемы XML.</returns>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий простой тип данных для текущего расположения <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary>Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения корневого элемента документа XML в его текущей позиции.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDocument" />, содержащий корневой элемент, который был считан.</returns>
      <param name="wrapped">true, если метод должен считать контент только после считывания стартового элемента, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary>Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения узла XML в его текущей позиции. </summary>
      <returns>
        <see cref="T:System.Xml.XmlNode" />, представляющий узел XML, который был считан.</returns>
      <param name="wrapped">true, для считывания контента только после считывания стартового элемента, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary>Сохраняет объект, десериализуемый из SOAP-кодированного элемента multiRef.</summary>
      <param name="o">Десериализуемый объект.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary>Получает динамически сгенерированную сборку по имени.</summary>
      <returns>Динамически сгенерированная <see cref="T:System.Reflection.Assembly" />.</returns>
      <param name="assemblyFullName">Полное имя сборки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>Обеспечивает наличие для заданного массива или копии объема, не превышающего определенной длины. </summary>
      <returns>Существующий <see cref="T:System.Array" />, если уже достаточно небольшой, в противном случае новый меньший массив, содержащий оригинальные элементы массива до размера <paramref name=" length" />.</returns>
      <param name="a">Проверяемый массив.</param>
      <param name="length">Максимальная длина массива.</param>
      <param name="elementType">
        <see cref="T:System.Type" /> элементов массива.</param>
      <param name="isNullable">true, если null можно вернуть для массива при наличии для входного массива, в противном случае новый меньший массив.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary>Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения значения строки в текущей позиции и возвращения в качестве байтового массива 64.</summary>
      <returns>Байтовый массив 64, в противном случае null, если параметр <paramref name="isNull" /> имеет значение true.</returns>
      <param name="isNull">true для возврата null, false для возврата байтового массива 64.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>Производит байтовый массив 64 из входной строки. </summary>
      <returns>Байтовый массив 64.</returns>
      <param name="value">Строка для трансляции в байтовый массив 64.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary>Инструктирует <see cref="T:System.Xml.XmlReader" /> для чтения значения строки в текущей позиции и возвращения в качестве шестнадцатеричного байтового массива.</summary>
      <returns>Шестнадцатеричный байтовый массив, в противном случае null, если параметр <paramref name="isNull" /> имеет значение true. </returns>
      <param name="isNull">true для возврата null, false для возврата шестнадцатеричного байтового массива.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>Производит шестнадцатеричный байтовый массив из входной строки.</summary>
      <returns>Шестнадцатеричный байтовый массив.</returns>
      <param name="value">Строка для трансляции в шестнадцатеричный байтовый массив.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>Производит объект <see cref="T:System.Char" /> из входной строки. </summary>
      <returns>Объект <see cref="T:System.Char" /></returns>
      <param name="value">Строка для трансляции в объект <see cref="T:System.Char" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>Производит объект <see cref="T:System.DateTime" /> из входной строки. </summary>
      <returns>Объект <see cref="T:System.DateTime" />.</returns>
      <param name="value">Строка для трансляции в объект класса <see cref="T:System.DateTime" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>Производит объект <see cref="T:System.DateTime" /> из входной строки. </summary>
      <returns>Объект <see cref="T:System.DateTime" /></returns>
      <param name="value">Строка для трансляции в объект <see cref="T:System.DateTime" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary>Производит значение числового перечисления из строки, состоящей из идентификаторов-разделителей, представляющих константы из списка перечислителя. </summary>
      <returns>Длинное значение, состоящее из значения перечисления в качестве серий побайтовых операций OR.</returns>
      <param name="value">Строка, состоящая из идентификаторов-разделителей, где каждый представляет константу из установленного списка перечислителя.</param>
      <param name="h">
        <see cref="T:System.Collections.Hashtable" />, состоящий из идентификаторов в качестве ключей и констант как целых чисел.</param>
      <param name="typeName">Имя типа перечисления.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>Производит <see cref="T:System.DateTime" /> из строки, представляющей время. </summary>
      <returns>Объект <see cref="T:System.DateTime" /></returns>
      <param name="value">Строка для трансляции в объект <see cref="T:System.DateTime" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary>Декодирует имя XML.</summary>
      <returns>A decoded string.</returns>
      <param name="value">Декодируемое имя XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary>Декодирует имя XML.</summary>
      <returns>A decoded string.</returns>
      <param name="value">Декодируемое имя XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary>Декодирует имя XML.</summary>
      <returns>A decoded string.</returns>
      <param name="value">Декодируемое имя XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary>Декодирует имя XML.</summary>
      <returns>A decoded string.</returns>
      <param name="value">Декодируемое имя XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>Получает <see cref="T:System.Xml.XmlQualifiedName" /> из имени, которое может содержать префикс. </summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий имя полного пространства имен XML.</returns>
      <param name="value">Имя, которое может содержать префикс.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary>Вызывает событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> для текущей позиции <see cref="T:System.Xml.XmlReader" />. </summary>
      <param name="o">Объект, который <see cref="T:System.Xml.Serialization.XmlSerializer" /> пытается десериализовать, впоследствии доступный посредством свойства <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" />, представляющий интересующий атрибут.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary>Вызывает событие <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> для текущей позиции <see cref="T:System.Xml.XmlReader" />. </summary>
      <param name="o">An object that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is attempting to deserialize, subsequently accessible through the <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> property.</param>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" />, представляющий интересующий атрибут.</param>
      <param name="qnames">Список полных имен XML, разделенный запятыми.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary>Raises an <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> event for the current position of the <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Десериализуемый <see cref="T:System.Object" />.</param>
      <param name="elem">
        <see cref="T:System.Xml.XmlElement" />, для которого вызвано событие.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary>Raises an <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> event for the current position of the <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">An object that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is attempting to deserialize, subsequently accessible through the <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> property.</param>
      <param name="elem">
        <see cref="T:System.Xml.XmlElement" />, для которого вызвано событие.</param>
      <param name="qnames">Список полных имен XML, разделенный запятыми.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>Raises an <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> event for the current position of the <see cref="T:System.Xml.XmlReader" />. </summary>
      <param name="o">Десериализуемый объект.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary>Raises an <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> event for the current position of the <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Десериализуемый объект.</param>
      <param name="qnames">Список полных имен XML, разделенный запятыми.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary>Raises an <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> event for the current position of the <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="id">Уникальная строка, используемая для идентификации неиспользуемого объекта, впоследствии доступного посредством свойства <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />.</param>
      <param name="o">Объект, который <see cref="T:System.Xml.Serialization.XmlSerializer" /> пытается десериализовать, впоследствии доступный посредством свойства <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary>Содержит экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> и входные данные метода, а также предоставляет параметры метода </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> с параметрами для метода обратного вызова. </summary>
      <param name="collection">Коллекция, в которую метод обратного вызова копирует массив элементов коллекции.</param>
      <param name="callback">Метод, создающий экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</param>
      <param name="collectionItems">Массив, в который метод обратного вызова копирует коллекцию.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary>Возвращает метод обратного вызова, создающий экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />. </summary>
      <returns>Делегат <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />, указывающий на метод обратного вызова.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary>Возвращает коллекцию <paramref name="object collection" /> для метода обратного вызова. </summary>
      <returns>Коллекция, используемая для исправления.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary>Возвращает массив, в который метод обратного вызова копирует коллекцию. </summary>
      <returns>Массив, в который метод обратного вызова копирует коллекцию.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary>Вмещает <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> экземпляр делегата, а также входные данные метода; кроме того, служит параметром метода. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary>Получение размера строкового массива, подлежащего созданию. </summary>
      <param name="o">Объект, содержащий прочие объекты, значения которых заполняются посредством реализации обратного вызова.</param>
      <param name="callback">Метод, создающий экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="count">Размер строкового массива, полученный с помощью свойства <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary>Получение строкового массива. </summary>
      <param name="o">Объект, содержащий прочие объекты, значения которых заполняются посредством реализации обратного вызова.</param>
      <param name="callback">Метод, создающий экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="ids">Строковый массив, полученный с помощью свойства <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary>Получение метода обратного вызова, создающего экземпляра делегата <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />. </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />. </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary>Получает или задает массив ключей для объектов, принадлежащих свойству <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" />, значения которого заполняются посредством реализации обратного вызова. </summary>
      <returns>Массив ключей.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary>Получает или задает объект, содержащий прочие объекты, значения которых заполняются посредством реализации обратного вызова.</summary>
      <returns>Источник, который содержит объекты со значениями, подлежащими заполнению.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary>Делегат, используемый классом <see cref="T:System.Xml.Serialization.XmlSerializer" />, для сериализации типов из SOAP-кодированных некорневых данных XML. </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary>Абстрактный класс используется для управления сериализацией классом <see cref="T:System.Xml.Serialization.XmlSerializer" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary>Сохраняет реализацию делегата <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> и типа, к которым применяется, для последующего вызова. </summary>
      <param name="type">
        <see cref="T:System.Type" /> сериализуемых объектов.</param>
      <param name="typeName">Имя типа сериализуемых объектов.</param>
      <param name="typeNs">Пространства имен типа сериализуемых объектов.</param>
      <param name="callback">Экземпляр делегата <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий непредвиденное имя элемента, соответствующее объявлению элемента choice схемы XML.</summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="value">Недопустимое имя.</param>
      <param name="identifier">Объявление элемента choice, которому принадлежит имя.</param>
      <param name="name">Ожидаемое локальное имя элемента.</param>
      <param name="ns">Ожидаемое пространство имен элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> неверно применен к члену. Допустимы только члены типа <see cref="T:System.Xml.XmlNode" /> или члены, являющиеся производными от <see cref="T:System.Xml.XmlNode" />.</summary>
      <returns>An <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <param name="o">Объект, представляющий недопустимый член.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> неверно применен к члену. Допустимы только члены типа <see cref="T:System.Xml.XmlNode" /> или члены, являющиеся производными от <see cref="T:System.Xml.XmlNode" />.</summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="type">Недопустимый <see cref="T:System.Type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий на сбой при записи массива, где применяется объявление элемента choice схемы XML.</summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="type">Сериализуемый тип.</param>
      <param name="identifier">Имя для объявления декларации choice.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary>Создает <see cref="T:System.InvalidOperationException" /> для недопустимого значения перечисления.</summary>
      <returns>An <see cref="T:System.ComponentModel.InvalidEnumArgumentException" />.</returns>
      <param name="value">Объект, представляющий недопустимое перечисление.</param>
      <param name="typeName">The XML type name.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что значение для элемента XML не соответствует типу перечисления.</summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="value">Неверное значение.</param>
      <param name="elementName">Имя элемента XML с недопустимым значением.</param>
      <param name="enumValue">Верное значение.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что элемент XML, который должен соответствовать объявлению элемента any схемы XML, не может быть обработан.</summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="name">Элемент XML, который не может быть обработан.</param>
      <param name="ns">Пространство имен элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что сериализуемый тип не используется допустимым образом, или указывающий на обнаружение непредвиденного типа. </summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="o">Объект, тип которого не может быть сериализован.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>Создает <see cref="T:System.InvalidOperationException" />, указывающий, что сериализуемый тип не используется допустимым образом, или указывающий на обнаружение непредвиденного типа. </summary>
      <returns>Исключение <see cref="T:System.InvalidOperationException" />.</returns>
      <param name="type">Тип, который не может быть сериализован.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary>Получает или задает значение, указывающее, используется ли метод <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> для записи допустимого XML.</summary>
      <returns>true, если метод <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> возвращает кодированное имя, в противном случае false.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary>Обрабатывает байтовый массив 64.</summary>
      <returns>Тот же байтовый массив, который был передан в качестве аргумента.</returns>
      <param name="value">Массив 64 <see cref="T:System.Byte" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary>Производит строку из ввода шестнадцатеричного байтового массива.</summary>
      <returns>Значение байтового массива преобразуется в строку.</returns>
      <param name="value">Шестнадцатеричный байтовый массив для трансляции в строку.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary>Производит строку из ввода <see cref="T:System.Char" />.</summary>
      <returns>Значение <see cref="T:System.Char" /> преобразуется в строку.</returns>
      <param name="value">A <see cref="T:System.Char" /> to translate to a string.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary>Производит строку из объекта <see cref="T:System.DateTime" />.</summary>
      <returns>Представление строкой <see cref="T:System.DateTime" />, которая отображает дату, а не время.</returns>
      <param name="value">A <see cref="T:System.DateTime" /> to translate to a string.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary>Производит строку из ввода <see cref="T:System.DateTime" />.</summary>
      <returns>Представление строкой <see cref="T:System.DateTime" />, которая отображает дату и время.</returns>
      <param name="value">A <see cref="T:System.DateTime" /> to translate to a string.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary>Производит строку, состоящую из идентификаторов-разделителей, представляющих члены перечисления, которые были установлены.</summary>
      <returns>Строка, состоящая из идентификаторов-разделителей, в которых каждый представляет член из установленного списка перечислителя.</returns>
      <param name="value">Значение перечисления в качестве серии побитовых операций OR.</param>
      <param name="values">Значения имени перечисления.</param>
      <param name="ids">Значения констант перечисления.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary>Принимает числовое значение перечисления, а также имена и константы из списка перечислителя для перечисления и возвращает строку, состоящую из идентификаторов-разделителей, представляющих заданные члены перечисления.</summary>
      <returns>Строка, состоящая из идентификаторов-разделителей, где каждый элемент является одним из значений, заданным путем побитовой операции.</returns>
      <param name="value">Значение перечисления в качестве серии побитовых операций OR.</param>
      <param name="values">Значение перечисления.</param>
      <param name="ids">Константы перечисления.</param>
      <param name="typeName">Имя типа. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary>Производит строку из объекта <see cref="T:System.DateTime" />.</summary>
      <returns>Представление строкой <see cref="T:System.DateTime" />, которая отображает время, а не дату.</returns>
      <param name="value">
        <see cref="T:System.DateTime" />, транслируемый в строку.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary>Кодирует допустимое имя XML путем замены символов, которые недопустимы с escape-последовательностями.</summary>
      <returns>Кодируемая строка.</returns>
      <param name="name">Строка для использования в качестве имени XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary>Кодирует допустимое локальное имя XML путем замены символов, которые недопустимы с escape-последовательностями.</summary>
      <returns>Кодируемая строка.</returns>
      <param name="ncName">Строка для использования в качестве локального (полного) имени XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary>Кодирует имя XML.</summary>
      <returns>An encoded string.</returns>
      <param name="nmToken">Кодируемое имя XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary>Кодирует последовательности с разделениями пробелами имен XML в единое имя XML.</summary>
      <returns>Кодируемая строка.</returns>
      <param name="nmTokens">Кодируемая последовательность с разделениями пробелами имен XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>Возвращает полное имя XML с замененными на escape-последовательностями недопустимыми символами. </summary>
      <returns>Полное имя XML с замененными на escape-последовательностями недопустимыми символами.</returns>
      <param name="xmlQualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий записываемый XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary>Производит строку, которая может быть записана в качестве полного имени XML, где недопустимые символы заменяются escape-последовательностями. </summary>
      <returns>Полное имя XML с замененными на escape-последовательности недопустимыми символами.</returns>
      <param name="xmlQualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" />, представляющий записываемый XML.</param>
      <param name="ignoreEmpty">true для игнорирования пустых пробелов в строке, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>Инициализирует экземпляры делегата <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> для сериализации SOAP-кодированных данных XML. </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary>Получает или задает список объектов полных имен XML, содержащий пространства имен и префиксы, используемые для производства полных имен в документах XML. </summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" />, содержащий пары пространства имен и префикса.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary>Получает динамически сгенерированную сборку по имени.</summary>
      <returns>Динамически сгенерированная сборка.</returns>
      <param name="assemblyFullName">Полное имя сборки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary>Инициализирует ссылки объекта только при сериализации кодированного SOAP сообщения SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary>Инструктирует объект <see cref="T:System.Xml.XmlWriter" /> для записи атрибута XML без заданного для его имени пространства имен.</summary>
      <param name="localName">Локальное имя атрибута XML.</param>
      <param name="value">Значение атрибута XML в качестве байтового массива.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>Инструктирует <see cref="T:System.Xml.XmlWriter" /> для записи атрибута XML без заданного для его имени пространства имен. </summary>
      <param name="localName">Локальное имя атрибута XML.</param>
      <param name="value">Значение атрибута XML в качестве строки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary>Инструктирует объект <see cref="T:System.Xml.XmlWriter" /> для записи атрибута XML.</summary>
      <param name="localName">Локальное имя атрибута XML.</param>
      <param name="ns">Пространство имен атрибута XML.</param>
      <param name="value">Значение атрибута XML в качестве байтового массива.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>Записывает атрибут XML. </summary>
      <param name="localName">Локальное имя атрибута XML.</param>
      <param name="ns">Пространство имен атрибута XML.</param>
      <param name="value">Значение атрибута XML в качестве строки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>Записывает атрибут XML, где префикс пространства имен предоставляется вручную. </summary>
      <param name="prefix">Префикс пространства имен для записи.</param>
      <param name="localName">Локальное имя атрибута XML.</param>
      <param name="ns">Пространство имен, представленное префиксом.</param>
      <param name="value">Значение атрибута XML в качестве строки.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Записывает объект узла XML в основную часть названного элемента XML.</summary>
      <param name="node">узел XML для записи; возможно, дочерний элемент XML.</param>
      <param name="name">Локальное имя родительского элемента XML для записи.</param>
      <param name="ns">Пространства имен родительского элемента XML для записи.</param>
      <param name="isNullable">true для записи атрибута xsi:nil='true', если сериализуется объект null, в противном случае false.</param>
      <param name="any">true для указания того, что узел, являющийся элементом XML, соответствует объявлению элемента any схеме XML, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Инструктирует объект <see cref="T:System.Xml.XmlWriter" /> для записи объекта <see cref="T:System.Xml.XmlNode" /> в основную часть названного элемента XML.</summary>
      <param name="node">узел XML для записи; возможно, дочерний элемент XML.</param>
      <param name="name">Локальное имя родительского элемента XML для записи.</param>
      <param name="ns">Пространства имен родительского элемента XML для записи.</param>
      <param name="isNullable">true для записи атрибута xsi:nil='true', если сериализуется объект null, в противном случае false.</param>
      <param name="any">true для указания того, что узел, являющийся элементом XML, соответствует объявлению элемента any схеме XML, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Записывает элемент XML с заданным полным именем в его основную часть.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="ns">Пространство имен элемента XML.</param>
      <param name="value">Имя для записи с помощью его префикса при квалифицированном пространстве имен в тексте элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Записывает элемент XML с заданным полным именем в его основную часть.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="ns">Пространство имен элемента XML.</param>
      <param name="value">Имя для записи с помощью его префикса при квалифицированном пространстве имен в тексте элемента.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>Записывает элемент XML с заданным полным именем в его основную часть.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="value">Имя для записи с помощью его префикса при квалифицированном пространстве имен в тексте элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Записывает элемент XML с заданным полным именем в его основную часть.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="value">Имя для записи с помощью его префикса при квалифицированном пространстве имен в тексте элемента.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>Записывает элемент XML с заданным значением в его основную часть. </summary>
      <param name="localName">Локальное имя элемента XML для записи без квалификации пространства имен.</param>
      <param name="value">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Writes an XML element with a specified value in its body. </summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="ns">Пространство имен элемента XML.</param>
      <param name="value">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Записывает элемент XML с заданным значением в его основной части.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="ns">Пространство имен элемента XML.</param>
      <param name="value">Текстовое значение элемента XML.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Записывает элемент XML с заданным значением в его основной части.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="value">Текстовое значение элемента XML.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary>Записывает элемент XML с заданным значением в его основной части.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="value">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element with a specified value in its body.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="value">Текстовое значение элемента XML.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary>Записывает элемент XML с заданным значением в его основной части.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="value">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary>Записывает элемент XML с заданным значением в его основной части.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="ns">Пространство имен элемента XML.</param>
      <param name="value">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Записывает элемент XML с заданным значением в его основной части.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="ns">Пространство имен элемента XML.</param>
      <param name="value">Текстовое значение элемента XML.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary>Записывает элемент XML с заданным значением в его основной части.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="ns">Пространство имен элемента XML.</param>
      <param name="value">Текстовое значение элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Записывает элемент XML с заданным значением в его основной части.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="ns">Пространство имен элемента XML.</param>
      <param name="value">Текстовое значение элемента XML.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Записывает элемент XML с заданным значением в его основной части.</summary>
      <param name="localName">Локальное имя элемента XML.</param>
      <param name="value">Текстовое значение элемента XML.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>Записывает элемент XML с пустой основной частью. </summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary>Записывает элемент XML с пустой основной частью.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary>Записывает тег элемента &lt;closing&gt;.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary>Writes a closing element tag.</summary>
      <param name="o">Сериализуемый объект.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary>Записывает атрибут id, появляющийся в SOAP-кодированном элементе multiRef. </summary>
      <param name="o">Сериализуемый объект.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Записывает атрибуты объявления пространства имен.</summary>
      <param name="xmlns">Пространство имен XML для объявления.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element whose body contains a valid XML qualified name.<see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="value">Полное имя XML для записи в основную часть элемента XML.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element whose body contains a valid XML qualified name.<see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="value">Полное имя XML для записи в основную часть элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element that contains a string as the body.<see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="value">Строка для записи в основную часть элемента XML.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Writes a byte array as the body of an XML element.<see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="value">Байтовый массив для записи в основную часть элемента XML.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Writes an XML element that contains a string as the body.<see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="value">Строка для записи в основную часть элемента XML.</param>
      <param name="xsiType">Имя типа данных схемы XML для записи в атрибут xsi:type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary>Writes an XML element that contains a string as the body.<see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="value">Строка для записи в основную часть элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary>Writes a byte array as the body of an XML element.<see cref="T:System.Xml.XmlWriter" /> inserts an xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="value">Байтовый массив для записи в основную часть элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary>Writes an XML element that contains a string as the body.<see cref="T:System.Xml.XmlWriter" /> inserts a xsi:nil='true' attribute if the string's value is null.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="value">Строка для записи в основную часть элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary>Записывает элемент XML с атрибутом xsi:nil='true'.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary>Записывает элемент XML с атрибутом xsi:nil='true'.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary>Записывает элемент XML с атрибутом xsi:nil='true'.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>Записывает элемент XML с атрибутом xsi:nil='true'. </summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary>Записывает элемент XML сообщения SOAP, содержащий ссылку на элемент XML &lt;multiRef&gt; для заданного объекта. </summary>
      <param name="n">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="o">Объект, который сериализуется в текущем элементе XML, либо в элементе multiRef со ссылкой от текущего элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary>Записывает элемент XML сообщения SOAP, содержащий ссылку на элемент XML &lt;multiRef&gt; для заданного объекта. </summary>
      <param name="n">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="o">Объект, который сериализуется в текущем элементе XML, либо в элементе multiRef со ссылкой от текущего элемента.</param>
      <param name="ambientType">Тип, хранимый в сопоставлении типа объекта (в отличие от типа объекта, обнаруживаемого непосредственно с помощью операции typeof).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary>Записывает элемент XML сообщения SOAP, содержащий ссылку на элемент XML &lt;multiRef&gt; для заданного объекта.</summary>
      <param name="n">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="o">Объект, который сериализуется либо в текущем элементе XML, либо в элементе multiRef, со ссылкой от текущего элемента.</param>
      <param name="ambientType">Тип, хранимый в сопоставлении типа объекта (в отличие от типа объекта, обнаруживаемого непосредственно с помощью операции typeof).</param>
      <param name="suppressReference">true для сериализации объекта непосредственно в элемент XML вместо создания ссылки элемента на другой элемент, содержащий данные; в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary>Записывает элемент XML сообщения SOAP, содержащий ссылку на элемент XML multiRef для заданного объекта.</summary>
      <param name="n">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="o">Объект, который сериализуется в текущем элементе XML, либо в элементе multiRef со ссылкой от текущего элемента.</param>
      <param name="ambientType">Тип, хранимый в сопоставлении типа объекта (в отличие от типа объекта, обнаруживаемого непосредственно с помощью операции typeof).</param>
      <param name="suppressReference">true для сериализации объекта непосредственно в элемент XML вместо создания ссылки элемента на другой элемент, содержащий данные; в противном случае false.</param>
      <param name="isNullable">true для записи атрибута xsi:nil='true', если сериализуется объект null, в противном случае false.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>Получает <see cref="T:System.Xml.XmlWriter" />, используемый <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />. </summary>
      <returns>
        <see cref="T:System.Xml.XmlWriter" /> используется экземпляром класса.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary>Сериализует объекты в SOAP-кодированные элементы XML multiRef в сообщении SOAP. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary>Записывает элемент XML сообщения SOAP, содержащий ссылку на элемент multiRef  для заданного объекта. </summary>
      <param name="n">Локальное имя ссылающегося элемента для записи.</param>
      <param name="ns">Локальное пространство имен ссылающегося элемента для записи.</param>
      <param name="o">Сериализуемый объект.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>Записывает элемент XML сообщения SOAP, содержащий ссылку на элемент multiRef для заданного объекта.</summary>
      <param name="n">Локальное имя ссылающегося элемента для записи.</param>
      <param name="ns">Локальное пространство имен ссылающегося элемента для записи.</param>
      <param name="o">Сериализуемый объект.</param>
      <param name="isNullable">true для записи атрибута xsi:nil='true', если сериализуется объект null, в противном случае  false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary>Записывает результирующий элемент SOAP 1.2 RPC с заданным полным именем в его основной части.</summary>
      <param name="name">Локальное имя атрибута результирующей основной части.</param>
      <param name="ns">Пространство имен результирующей основной части.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>Записывает объект, использующий пользовательское форматирование XML в качестве элемента XML. </summary>
      <param name="serializable">Объект, реализующий интерфейс <see cref="T:System.Xml.Serialization.IXmlSerializable" />, использующий пользовательское форматирование XML.</param>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="isNullable">true для записи атрибута xsi:nil='true', если объект класса <see cref="T:System.Xml.Serialization.IXmlSerializable" /> имеет значение null, в противном случае  false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Инструктирует <see cref="T:System.Xml.XmlNode" /> для записи объекта, использующего пользовательское форматирование XML в качестве элемента XML. </summary>
      <param name="serializable">Объект, реализующий интерфейс <see cref="T:System.Xml.Serialization.IXmlSerializable" />, использующий пользовательское форматирование XML.</param>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="isNullable">true для записи атрибута xsi:nil='true', если объект <see cref="T:System.Xml.Serialization.IXmlSerializable" /> имеет значение null, в противном случае  false.</param>
      <param name="wrapped">true для игнорирования записи открывающего тега элемента, в противном случае false для записи открывающего тега элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>Записывает объявление XML, если записывающий элемент размещен в начале документа XML. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>Записывает открывающий тег элемента, включая все атрибуты. </summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>Записывает открывающий тег элемента, включая все атрибуты. </summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary>Записывает открывающий тег элемента, включая все атрибуты.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="writePrefixed">true для записи имени элемента с префиксом при его недоступности для заданного пространства имен, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary>Записывает открывающий тег элемента, включая все атрибуты.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="o">Объект, сериализуемый в качестве элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>Записывает открывающий тег элемента, включая все атрибуты.</summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="o">Объект, сериализуемый в качестве элемента XML.</param>
      <param name="writePrefixed">true для записи имени элемента с префиксом при его недоступности для заданного пространства имен, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Записывает открывающий тег элемента, включая все атрибуты. </summary>
      <param name="name">Локальное имя элемента XML для записи.</param>
      <param name="ns">Пространство имен элемента XML для записи.</param>
      <param name="o">Объект, сериализуемый в качестве элемента XML.</param>
      <param name="writePrefixed">true для записи имени элемента с префиксом при его недоступности для заданного пространства имен, в противном случае false.</param>
      <param name="xmlns">Экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, содержащий пары префикса и пространства имен для использования в сгенерированном XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>Записывает элемент XML, текстовая основная часть которого является значением простого типа данных схемы XML. </summary>
      <param name="name">Локальное имя элемента для записи.</param>
      <param name="ns">Пространство имен элемента для записи.</param>
      <param name="o">Объект для сериализации в основной части элемента</param>
      <param name="xsiType">true, если элемент XML явным образом задает тип текстового значения с помощью атрибута xsi:type, в противном случае false.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary>Записывает байтовый массив 64.</summary>
      <param name="value">Байтовый массив для записи.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary>Записывает заданную строку.</summary>
      <param name="value">Строка для записи</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary>Записывает заданный <see cref="T:System.Xml.XmlNode" /> в качестве атрибута XML.</summary>
      <param name="node">Объект <see cref="T:System.Xml.XmlAttribute" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary>Записывает заданный объект <see cref="T:System.Xml.XmlNode" /> в качестве атрибута XML.</summary>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> типа <see cref="T:System.Xml.XmlAttribute" />.</param>
      <param name="container">Объект <see cref="T:System.Xml.Schema.XmlSchemaObject" /> (или null) используется для генерирования значения полного имени для атрибута arrayType из пространства имен языка описания веб-служб (WSDL) ("http://schemas.xmlsoap.org/wsdl/").</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>Записывает атрибут xsi:type для элемента XML, сериализуемого в документ. </summary>
      <param name="name">Локальное имя типа данных схемы XML.</param>
      <param name="ns">Пространство имен типа данных схемы XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>Сериализует и десериализует объекты в документы XML и из них.<see cref="T:System.Xml.Serialization.XmlSerializer" /> позволяет контролировать способ кодирования объектов в XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</summary>
      <param name="type">Тип объекта, который может быть сериализован данным <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты заданного типа в документы XML, и может десериализовать документы XML в объекты заданного типа.Указывает пространство имен по умолчанию для всех элементов XML.</summary>
      <param name="type">Тип объекта, который может быть сериализован данным <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
      <param name="defaultNamespace">Пространство имен по умолчанию для всех элементов XML. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты заданного типа в документы XML, и может десериализовать документы XML в объект заданного типа.Если свойство или поле возвращает массив, параметр <paramref name="extraTypes" /> определяет объекты, которые могут быть вставлены в массив.</summary>
      <param name="type">Тип объекта, который может быть сериализован данным <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
      <param name="extraTypes">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты заданного типа в документы XML, а также десериализовать документы XML в объекты заданного типа.Каждый сериализуемый объект может сам содержать экземпляры классов, которые данная перегрузка позволяет переопределить с другими классами.</summary>
      <param name="type">Тип сериализуемого объекта. </param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты типа <see cref="T:System.Object" /> в экземпляры документа XML, а также десериализовать экземпляры документа XML в объекты типа <see cref="T:System.Object" />.Каждый сериализуемый объект может сам содержать экземпляры классов, которые данная перегрузка переопределяет с другими классами.Данная перегрузка также указывает пространство имен по умолчанию для всех элементов XML и класс для использования в качестве корневого элемента XML.</summary>
      <param name="type">Тип объекта, который может быть сериализован <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, расширяющий или переопределяющий поведение класса, заданного в параметре <paramref name="type" />. </param>
      <param name="extraTypes">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации. </param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, указывающий свойство корневого элемента XML. </param>
      <param name="defaultNamespace">Пространство имен всех элементов XML в документе XML по умолчанию. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)"></member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты заданного типа в экземпляры документов XML, а также десериализовать экземпляры документов XML в объекты заданного типа.Данная перегрузка позволяет предоставить другие типы, которые могут быть обнаружены во время операции сериализации или десериализации, а также пространства имен для всех элементов XML по умолчанию, класс для использования в качестве корневого элемента XML, его расположение и учетные данные, требуемые для доступа.</summary>
      <param name="type">Тип объекта, который может быть сериализован <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, расширяющий или переопределяющий поведение класса, задается в параметре <paramref name="type" />.</param>
      <param name="extraTypes">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, указывающий свойство корневого элемента XML.</param>
      <param name="defaultNamespace">Пространство имен всех элементов XML в документе XML по умолчанию.</param>
      <param name="location">Размещение типов.</param>
      <param name="evidence">Экземпляр класса <see cref="T:System.Security.Policy.Evidence" />, содержащий учетные данные, требуемые для доступа к типам.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты заданного типа в документы XML, а также десериализовать документ XML в объект заданного типа.Также указывает класс для использования в качестве корневого элемента XML.</summary>
      <param name="type">Тип объекта, который может быть сериализован <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, представляющий корневой элемент XML. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" /> с помощью объекта, сопоставляющего один тип с другим.</summary>
      <param name="xmlTypeMapping">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, сопоставляющий один тип с другим. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>Получает значение, указывающее возможность выполнения данным <see cref="T:System.Xml.Serialization.XmlSerializer" /> десериализации документа XML.</summary>
      <returns>true, если <see cref="T:System.Xml.Serialization.XmlSerializer" /> может выполнить десериализацию объекта, на который указывает <see cref="T:System.Xml.XmlReader" />, в противном случае false.</returns>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" />, указывающий на документ для десериализации. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary>Возвращает объект, используемый для считывания сериализуемого документа XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> используется для считывания документа XML.</returns>
      <exception cref="T:System.NotImplementedException">Предпринимаются любые попытки вызова данного метода, когда метод не переопределен в дочернем классе. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary>При переопределении в производном классе возвращает средство записи, использованное при сериализации объекта.</summary>
      <returns>Экземпляр, реализующий класс <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</returns>
      <exception cref="T:System.NotImplementedException">Any attempt is made to access the method when the method is not overridden in a descendant class. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>Десериализует документ XML, содержащийся указанным <see cref="T:System.IO.Stream" />.</summary>
      <returns>
        <see cref="T:System.Object" /> десериализуется.</returns>
      <param name="stream">
        <see cref="T:System.IO.Stream" />, содержащий документ XML для десериализации. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>Deserializes the XML document contained by the specified <see cref="T:System.IO.TextReader" />.</summary>
      <returns>
        <see cref="T:System.Object" /> десериализуется.</returns>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" />, содержащий документ XML для десериализации. </param>
      <exception cref="T:System.InvalidOperationException">Возникла ошибка при десериализации.Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary>Десериализует документ XML, содержащийся указанным <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="reader">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" />, содержащий документ XML для десериализации. </param>
      <exception cref="T:System.NotImplementedException">Предпринимаются любые попытки вызова данного метода, когда метод не переопределен в дочернем классе. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>Десериализует документ XML, содержащийся указанным <see cref="T:System.xml.XmlReader" />.</summary>
      <returns>
        <see cref="T:System.Object" /> десериализуется.</returns>
      <param name="xmlReader">
        <see cref="T:System.xml.XmlReader" />, содержащий документ XML для десериализации. </param>
      <exception cref="T:System.InvalidOperationException">Возникла ошибка при десериализации.Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary>Десериализует документ XML, содержащийся указанным <see cref="T:System.xml.XmlReader" />, и стиль кодирования.</summary>
      <returns>Десериализованный объект.</returns>
      <param name="xmlReader">
        <see cref="T:System.xml.XmlReader" />, содержащий документ XML для десериализации. </param>
      <param name="encodingStyle">Стиль кодирования сериализованного XML. </param>
      <exception cref="T:System.InvalidOperationException">Возникла ошибка при десериализации.Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>Десериализует объект с помощью данных, содержащихся в указанном <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Десериализуемый объект.</returns>
      <param name="xmlReader">Экземпляр класса <see cref="T:System.Xml.XmlReader" />, используемый для считывания документа.</param>
      <param name="encodingStyle">Используемая кодировка.</param>
      <param name="events">Экземпляр класса <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>Десериализует документ XML, содержащийся в указанном <see cref="T:System.Xml.XmlReader" />, и позволяет переопределять события, происходящие во время десериализации.</summary>
      <returns>
        <see cref="T:System.Object" /> десериализуется.</returns>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" />, содержащий документ для десериализации.</param>
      <param name="events">An instance of the <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> class. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>Возвращает массив объектов <see cref="T:System.Xml.Serialization.XmlSerializer" />, созданный из массива объектов <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
      <param name="mappings">Массив <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, сопоставляющий один тип с другим. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, созданный из сопоставлений одного типа XML с другим.</summary>
      <returns>Экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
      <param name="mappings">Массив объектов <see cref="T:System.Xml.Serialization.XmlMapping" /> для сопоставления одного типа с другим.</param>
      <param name="evidence">Экземпляр класса <see cref="T:System.Security.Policy.Evidence" />, содержащий данные хоста и сборки, представленные в системе политики общеязыковой среды выполнения.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Xml.Serialization.XmlSerializer" /> из указанных сопоставлений.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</returns>
      <param name="mappings">An array of <see cref="T:System.Xml.Serialization.XmlMapping" /> objects.</param>
      <param name="type">
        <see cref="T:System.Type" /> десериализованного объекта.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>Возвращает массив объектов <see cref="T:System.Xml.Serialization.XmlSerializer" />, созданный из массива типов.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
      <param name="types">Массив объектов <see cref="T:System.Type" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
      <summary>Возвращает сборку, содержащую клиентские сериализаторы, используемые для сериализации и десериализации заданных типов или типов с помощью указанных сопоставлений.</summary>
      <returns>Объект <see cref="T:System.Reflection.Assembly" />, содержащий сериализаторы для предоставленных типов и сопоставлений.</returns>
      <param name="types">Коллекция типов.</param>
      <param name="mappings">Коллекция объектов <see cref="T:System.Xml.Serialization.XmlMapping" /> для преобразования одного типа в другой.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
      <summary>Возвращает сборку, содержащую клиентские сериализаторы, используемые для сериализации и десериализации заданных типов или типов с помощью указанных сопоставлений и настроек и параметров компилятора. </summary>
      <returns>
        <see cref="T:System.Reflection.Assembly" />, содержащий специальные версии <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
      <param name="types">Массив типа <see cref="T:System.Type" />, содержащий объекты для сериализации и десериализации данных.</param>
      <param name="mappings">Массив типа <see cref="T:System.Xml.Serialization.XmlMapping" />, сопоставляющего данные XML с данными типа.</param>
      <param name="parameters">Экземпляр класса <see cref="T:System.CodeDom.Compiler.CompilerParameters" />, представляющий параметры, используемые для вызова компилятора.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary>Возвращает имя сборки, содержащей одну или более версий <see cref="T:System.Xml.Serialization.XmlSerializer" />, которая специально создана для сериализации или десериализации определенного типа.</summary>
      <returns>Имя сборки, содержащей <see cref="T:System.Xml.Serialization.XmlSerializer" /> для типа.</returns>
      <param name="type">Десериализуемый <see cref="T:System.Type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary>Возвращает имя сборки, содержащей сериализатор для заданного типа в определенном пространстве имен.</summary>
      <returns>Имя сборки, содержащей специально собранные сериализаторы.</returns>
      <param name="type">Интересуемый <see cref="T:System.Type" />.</param>
      <param name="defaultNamespace">Пространство имен типа.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>Сериализует указанный <see cref="T:System.Object" /> и записывает документ XML в файл с помощью заданного <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> используется для записи документа XML. </param>
      <param name="o">
        <see cref="T:System.Object" /> для сериализации. </param>
      <exception cref="T:System.InvalidOperationException">Возникла ошибка при сериализации.Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Сериализует указанный <see cref="T:System.Object" /> и записывает документ XML в файл с помощью заданного <see cref="T:System.IO.Stream" />, ссылающегося на заданные пространства имен.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> используется для записи документа XML. </param>
      <param name="o">
        <see cref="T:System.Object" /> для сериализации. </param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> со ссылкой объекта. </param>
      <exception cref="T:System.InvalidOperationException">Возникла ошибка при сериализации.Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>Сериализует указанный <see cref="T:System.Object" /> и записывает документ XML в файл с помощью заданного <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> используется для записи документа XML. </param>
      <param name="o">
        <see cref="T:System.Object" /> для сериализации. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.TextWriter" /> and references the specified namespaces.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> используется для записи документа XML. </param>
      <param name="o">
        <see cref="T:System.Object" /> для сериализации. </param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, содержащий пространства имен для сгенерированного документа XML. </param>
      <exception cref="T:System.InvalidOperationException">Возникла ошибка при сериализации.Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary>Сериализует указанный <see cref="T:System.Object" /> и записывает документ XML в файл с помощью заданного <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
      <param name="o">
        <see cref="T:System.Object" /> для сериализации. </param>
      <param name="writer">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> используется для записи документа XML. </param>
      <exception cref="T:System.NotImplementedException">Предпринимаются любые попытки вызова данного метода, когда метод не переопределен в дочернем классе. </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>Сериализует указанный <see cref="T:System.Object" /> и записывает документ XML в файл с помощью заданного <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter">
        <see cref="T:System.xml.XmlWriter" /> используется для записи документа XML. </param>
      <param name="o">
        <see cref="T:System.Object" /> для сериализации. </param>
      <exception cref="T:System.InvalidOperationException">Возникла ошибка при сериализации.Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" /> and references the specified namespaces.</summary>
      <param name="xmlWriter">
        <see cref="T:System.xml.XmlWriter" /> используется для записи документа XML. </param>
      <param name="o">
        <see cref="T:System.Object" /> для сериализации. </param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> со ссылкой объекта. </param>
      <exception cref="T:System.InvalidOperationException">Возникла ошибка при сериализации.Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary>Сериализует указанный объект, записывает документ XML в файл с помощью заданного <see cref="T:System.Xml.XmlWriter" /> и ссылается на заданные пространства имен и стиль кодирования.</summary>
      <param name="xmlWriter">
        <see cref="T:System.xml.XmlWriter" /> используется для записи документа XML. </param>
      <param name="o">Объект для сериализации. </param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> со ссылкой объекта. </param>
      <param name="encodingStyle">Стиль кодирования сериализованного XML. </param>
      <exception cref="T:System.InvalidOperationException">Возникла ошибка при сериализации.Исходное исключение доступно с помощью свойства <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary>Сериализует указанный <see cref="T:System.Object" /> и записывает документ XML в файл с помощью заданных <see cref="T:System.Xml.XmlWriter" />, пространства имен XML и кодирования. </summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> используется для записи документа XML.</param>
      <param name="o">Объект для сериализации.</param>
      <param name="namespaces">Экземпляр XmlSerializaerNamespaces, содержащий пространства имен и префиксы для использования.</param>
      <param name="encodingStyle">Кодировка, используемая в документе.</param>
      <param name="id">Для кодированных сообщений SOAP используется база для генерирования атрибутов идентификатора. </param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary>Происходит, когда во время десериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> встречает атрибут XML неизвестного типа.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary>Происходит, когда во время десериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> встречает элемент XML неизвестного типа.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary>Происходит, когда во время десериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> встречает узел XML неизвестного типа.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary>Происходит во время десериализации SOAP-кодированного потока XML, когда <see cref="T:System.Xml.Serialization.XmlSerializer" /> обнаруживает неиспользуемый тип или тип без ссылок.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary>При применении к клиентскому прокси веб-службы позволяет указать сборку, содержащую пользовательские сериализаторы. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> с указанным именем сборки.</summary>
      <param name="assemblyName">Простое и незашифрованное имя сборки. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> с указанным именем сборки и расположением сборки.</summary>
      <param name="assemblyName">Простое и незашифрованное имя сборки. </param>
      <param name="codeBase">Строка, являющаяся размещением URL для сборки.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary>Получает или задает имя сборки, содержащей сериализаторы для определенного набора типов.</summary>
      <returns>Простое и незашифрованное имя сборки. </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary>Получает или задает расположение сборки, содержащей сериализаторы.</summary>
      <returns>Расположение, например, путь или URI, указывающие на сборку.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary>Создает версии с определенными типами <see cref="T:System.Xml.Serialization.XmlSerializer" /> для более эффективной сериализации.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary>Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />, используемый для сериализации указанного типа.</summary>
      <returns>Источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, специально созданный для сериализации указанного типа.</returns>
      <param name="type">
        <see cref="T:System.Type" /> для сериализации.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary>Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />, используемый для сериализации указанного типа и пространства имен.</summary>
      <returns>Источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, специального созданный для сериализации указанного типа.</returns>
      <param name="type">
        <see cref="T:System.Type" /> для сериализации.</param>
      <param name="defaultNamespace">Пространство имен по умолчанию для всех элементов XML. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary>Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />, используемый для сериализации указанного типа.Если свойство или поле возвращает массив, параметр <paramref name="extraTypes" /> определяет объекты, которые могут быть вставлены в массив.</summary>
      <returns>Источник <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
      <param name="type">
        <see cref="T:System.Type" /> для сериализации.</param>
      <param name="extraTypes">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты указанного типа в документы XML и наоборот.Каждый сериализуемый объект может сам содержать экземпляры классов, которые данная перегрузка позволяет переопределить с другими классами.</summary>
      <returns>Источник <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
      <param name="type">
        <see cref="T:System.Type" /> для сериализации.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, содержащий поля, переопределяющие поведение сериализации по умолчанию.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты указанного типа в экземпляры документа XML и наоборот.Каждый сериализуемый объект может сам содержать экземпляры классов, которые данная перегрузка позволяет переопределить с другими классами.Данная перегрузка также указывает пространство имен по умолчанию для всех элементов XML и класс для использования в качестве корневого элемента XML.</summary>
      <returns>Источник <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
      <param name="type">
        <see cref="T:System.Type" /> для сериализации.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, содержащий поля, переопределяющие поведение сериализации по умолчанию.</param>
      <param name="extraTypes">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, представляющий свойство корневого элемента XML.</param>
      <param name="defaultNamespace">Пространство имен по умолчанию всех элементов XML в документе XML. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)"></member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
      <summary>Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты указанного типа в экземпляры документа XML и наоборот.Каждый сериализуемый объект может сам содержать экземпляры классов, которые данная перегрузка позволяет переопределить с другими классами.Данная перегрузка также указывает пространство имен по умолчанию для всех элементов XML и класс для использования в качестве корневого элемента XML.</summary>
      <returns>Источник <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
      <param name="type">
        <see cref="T:System.Type" /> объекта, который может быть сериализован <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, расширяющий или переопределяющий поведение класса, задается в параметре типе.</param>
      <param name="extraTypes">Массив <see cref="T:System.Type" /> дополнительных типов объектов для сериализации.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, указывающий свойство корневого элемента XML.</param>
      <param name="defaultNamespace">Пространство имен по умолчанию всех элементов XML в документе XML.</param>
      <param name="location">Путь, указывающий расположение типов.</param>
      <param name="evidence">Экземпляр класса <see cref="T:System.Security.Policy.Evidence" />, содержащий учетные данные, требуемые для доступа к типам.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, который может сериализовать объекты указанного типа в документы XML и наоборот.Указывает объект, представляющий корневой элемент XML.</summary>
      <returns>Источник <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
      <param name="type">
        <see cref="T:System.Type" /> для сериализации.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, представляющий свойство корневого элемента XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Возвращает источник класса <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> с помощью объекта, сопоставляющего один тип другому.</summary>
      <returns>Источник класса <see cref="T:System.Xml.Serialization.XmlSerializer" />, специально созданный для сериализации сопоставленного типа.</returns>
      <param name="xmlTypeMapping">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, сопоставляющий один тип другому.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary>Определяет считывающий, записывающий элемент и методы для предварительно сгенерированных сериализаторов с определенным типом.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary>Получает значение, определяющее возможность сериализации типа.</summary>
      <returns>true if the type can be serialized; otherwise, false.</returns>
      <param name="type">
        <see cref="T:System.Type" /> для сериализации.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary>Возвращает сериализатор для указанного типа.</summary>
      <returns>Экземпляр типа, являющийся производным от класса <see cref="T:System.Xml.Serialization.XmlSerializer" />. </returns>
      <param name="type">
        <see cref="T:System.Type" /> для сериализации.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary>Получает объект элемента чтения XML, используемый сериализатором.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" />, используемый для считывания документа XML или потока данных.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary>Получает коллекцию методов, используемую для считывания потока данных.</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" />, содержащий методы.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary>Получает коллекцию сериализаторов с определенным типом, обнаруженных в сборке.</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" />, содержащий сериализаторы с определенным типом.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary>Получает коллекцию методов, используемую для записи в поток данных.</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" />, содержащий методы.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary>Gets the XML writer object for the serializer.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />, используемый для записи в документ XML или поток данных.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>Содержит пространства имен XML и префиксы, используемые <see cref="T:System.Xml.Serialization.XmlSerializer" /> для генерирования полных имен в экземпляре документа XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> с помощью определенного экземпляра XmlSerializerNamespaces, содержащего коллекцию пар префикса и пространства имен.</summary>
      <param name="namespaces">Экземпляр <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, содержащий пары пространства имен и префикса. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="namespaces">Массив объектов <see cref="T:System.Xml.XmlQualifiedName" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>Добавляет пару префикса и пространства имен объекту <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="prefix">Префикс ассоциирован с пространством имен XML. </param>
      <param name="ns">Пространство имен XML. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>Получает число пар префикса и пространства имен в коллекции.</summary>
      <returns>Число пар префикса и пространства имен в коллекции.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>Получает массив пар префикса и пространства имен в объекте <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <returns>Массив объектов <see cref="T:System.Xml.XmlQualifiedName" />, используемых в качестве квалифицированных имен в документе XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary>Отмечает, что код был сгенерирован инфраструктурой сериализации, а также что код может быть повторно использован для повышения производительности при применении данного атрибута к сборке.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> для указанного типа.</summary>
      <param name="type">Сериализуемый тип.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary>Получает или задает пространство имен среды CLR сборки.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая пространство имен среды CLR сборки.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary>Получает или задает идентификацию родительской сборки.</summary>
      <returns>Версия родительской сборки.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary>Получает или задает тип, над которым оперирует сериализатор.</summary>
      <returns>
        <see cref="T:System.Type" /> для сериализации.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary>Получает или задает номер версии сборки.</summary>
      <returns>Версия сборки.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>Указывает на <see cref="T:System.Xml.Serialization.XmlSerializer" />, что член должен обрабатываться как текст XML, когда содержащий его класс сериализуется или десериализуется.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</summary>
      <param name="type">
        <see cref="T:System.Type" /> сериализуемого члена. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>Получает или задает тип данных языка определения схем XML (XSD) текста, сгенерированного <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Тип данных схемы XML (XSD) согласно документу "Схема XML, часть 2: типы данных" консорциума World Wide Web (www.w3.org).</returns>
      <exception cref="T:System.Exception">Указанный тип данных схемы XML не может быть сопоставлен с типом данных .NET. </exception>
      <exception cref="T:System.InvalidOperationException">Указанный тип данных схемы XML неверен для свойства и не может быть преобразован в тип члена. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>Получает или задает тип члена.</summary>
      <returns>
        <see cref="T:System.Type" /> члена.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>Управляет схемой XML, сгенерированной при сериализации <see cref="T:System.Xml.Serialization.XmlSerializer" /> цели атрибута.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class and specifies the name of the XML type.</summary>
      <param name="typeName">Имя типа XML, генерируемое <see cref="T:System.Xml.Serialization.XmlSerializer" /> при сериализации экземпляра класса (и определении при десериализации экземпляра класса). </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>Получает или задает значение, определяющее, является ли результирующий тип схемы анонимным типом XSD.</summary>
      <returns>true, если результирующий тип схемы является анонимным типом XSD, в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>Получает или задает значение, указывающее, включается ли тип в документы схемы XML.</summary>
      <returns>true для включения типа в документ схемы XML, в противном случае false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>Получает или задает пространство имен типа XML.</summary>
      <returns>Пространство имен типа XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>Получает или задает имя типа XML.</summary>
      <returns>Имя типа XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>Содержит сопоставление одного типа с другим.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>Полное имя типа, включающее пространство имен (или пространства имен) и типы.</summary>
      <returns>Полное имя типа.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>Получает имя типа сопоставляемого объекта.</summary>
      <returns>Имя типа сопоставляемого объекта.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>Получает имя XML-элемента сопоставляемого объекта.</summary>
      <returns>Имя XML-элемента сопоставляемого объекта.По умолчанию используется имя класса объекта.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>Получает пространство имен XML сопоставляемого объекта.</summary>
      <returns>Пространство имен XML сопоставляемого объекта.Значение по умолчанию — пустая строка ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullableSpecified"></member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullableSpecified"></member>
    <member name="T:System.Xml.Serialization.Advanced.SchemaImporterExtension">
      <summary>Позволяет настроить код, создаваемый из документа на языке WSDL (Web Services Description Language) при использовании автоматизированных средств создания запросов.</summary>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Обрабатывает импорт элементов &lt;xsd:any&gt;, содержащихся в схеме.</summary>
      <returns>Имя типа среды CLR, на который отображается элемент. </returns>
      <param name="any">
        <see cref="T:System.Xml.Schema.XmlSchemaAny" />, представляющий элемент xsd:any из документа схемы XML (XSD).</param>
      <param name="mixed">
        <see cref="T:System.Boolean" />, указывающий, имеет ли атрибут XSD complex значение "mixed".true, если атрибут имеет значение mixed, иначе false.</param>
      <param name="schemas">
        <see cref="T:System.Xml.Serialization.XmlSchemas" />, содержащий коллекцию схем, находящихся в XSD.</param>
      <param name="importer">
        <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, определяющий используемый импортер.</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" />, к которому можно добавлять структуры CodeDOM для создания альтернативного кода обработки XSD. </param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" />, представляющий текущее пространство имен для элемента.</param>
      <param name="options">
        <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> для установки параметров компилятора кода.</param>
      <param name="codeProvider">
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, используемый поставщиком CodeDOM для создания нового кода. </param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue(System.String,System.String)">
      <summary>Позволяет указывать значение по умолчанию для импортируемого типа XSD.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" />, задающее новое значение по умолчанию.</returns>
      <param name="value">Значение, обнаруженное в исходном XSD.</param>
      <param name="type">Имя типа XSD.</param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Позволяет управлять созданным кодом, проверяя импортируемую схему и указываемую тип среды CLR, на который выполняется отображение.</summary>
      <returns>Имя типа среды CLR, на который он отображается.</returns>
      <param name="name">Имя элемента.</param>
      <param name="ns">Пространство имен элемента.</param>
      <param name="context">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />, представляющий сведения о схеме, такие как номер строки, содержащей элемент XML.</param>
      <param name="schemas">
        <see cref="T:System.Xml.Serialization.XmlSchemas" />, содержащий коллекцию схем документа.</param>
      <param name="importer">
        <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, определяющий используемый импортер.</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" />, к которому можно добавлять структуры CodeDOM для создания альтернативного кода обработки XSD.</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" />, представляющий текущее пространство имен для элемента.</param>
      <param name="options">
        <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> для установки параметров компилятора кода.</param>
      <param name="codeProvider">
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, используемый для создания нового кода.</param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Позволяет управлять созданным кодом, проверяя импортируемую схему и указываемую тип среды CLR, на который выполняется отображение.</summary>
      <returns>Имя типа среды CLR, на который он отображается.</returns>
      <param name="type">
        <see cref="T:System.Xml.Schema.XmlSchemaType" />, представляющий тип XSD.</param>
      <param name="context">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />, представляющий сведения о схеме, такие как номер строки, содержащей элемент XML.</param>
      <param name="schemas">
        <see cref="T:System.Xml.Serialization.XmlSchemas" />, содержащий коллекцию схем документа.</param>
      <param name="importer">
        <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, определяющий используемый импортер.</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" />, к которому можно добавлять структуры CodeDOM для создания альтернативного кода обработки XSD.</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" />, представляющий текущее пространство имен для элемента.</param>
      <param name="options">
        <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> для установки параметров компилятора кода.</param>
      <param name="codeProvider">
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, используемый для создания нового кода.</param>
    </member>
    <member name="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection">
      <summary>Represents a collection of <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> objects.</summary>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> class. </summary>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Add(System.String,System.Type)">
      <summary>Добавляет указанное расширение импортера в коллекцию.Параметр name позволяет задавать пользовательское имя для расширения.</summary>
      <returns>The index of the newly added item.</returns>
      <param name="name">Пользовательское имя для расширения.</param>
      <param name="type">
        <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" />, которую следует добавить.</param>
      <exception cref="T:System.ArgumentException">Значение type не наследуется от <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Add(System.Xml.Serialization.Advanced.SchemaImporterExtension)">
      <summary>Добавляет указанное расширение импортера в коллекцию.</summary>
      <returns>Индекс добавляемого расширения.</returns>
      <param name="extension">The <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> to add.</param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Clear">
      <summary>Очищает коллекцию расширений импортеров.</summary>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Contains(System.Xml.Serialization.Advanced.SchemaImporterExtension)">
      <summary>Возвращает значение, указывающее, имеется ли в коллекции указанное расширение импортера.</summary>
      <returns>true, если расширение обнаружено, иначе false.</returns>
      <param name="extension">The <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> to search for.</param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.CopyTo(System.Xml.Serialization.Advanced.SchemaImporterExtension[],System.Int32)">
      <summary>Копирует все элементы текущей <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> в заданный массив объектов <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />, начиная с заданного индекса. </summary>
      <param name="array">
        <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />, куда следует скопировать текущую коллекцию.</param>
      <param name="index">Отсчитываемый от нуля индекс, по которому добавляется коллекция.</param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.IndexOf(System.Xml.Serialization.Advanced.SchemaImporterExtension)">
      <summary>Выполняет поиск указанного элемента и возвращает отсчитываемый с нуля индекс его первого вхождения в коллекцию.</summary>
      <returns>Индекс найденного элемента.</returns>
      <param name="extension">The <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> to search for.</param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Insert(System.Int32,System.Xml.Serialization.Advanced.SchemaImporterExtension)">
      <summary>Inserts the specified <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> into the collection at the specified index.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить расширение.</param>
      <param name="extension">The <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> to insert.</param>
    </member>
    <member name="P:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" /> at the specified index.</returns>
      <param name="index">Индекс элемента, который необходимо найти.</param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Remove(System.String)">
      <summary>Удаляет указанное <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />, задаваемое по имени, из коллекции.</summary>
      <param name="name">Имя <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />, которое следует удалить.Имя задается с помощью метода <see cref="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Add(System.String,System.Type)" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection.Remove(System.Xml.Serialization.Advanced.SchemaImporterExtension)">
      <summary>Removes the specified <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> from the collection.</summary>
      <param name="extension">The <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" /> to remove. </param>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.DateTimeSerializationSection">
      <summary>Обрабатывает параметры настройки XML-сериализации экземпляров <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.DateTimeSerializationSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.Configuration.DateTimeSerializationSection" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.DateTimeSerializationSection.Mode">
      <summary>Возвращает или задает значение, определяющее формат сериализации.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.Serialization.Configuration.DateTimeSerializationSection.DateTimeSerializationMode" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.DateTimeSerializationSection.DateTimeSerializationMode">
      <summary>Определяет формат XML-сериализации объектов <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.Configuration.DateTimeSerializationSection.DateTimeSerializationMode.Default">
      <summary>Эквивалентно Roundtrip.</summary>
    </member>
    <member name="F:System.Xml.Serialization.Configuration.DateTimeSerializationSection.DateTimeSerializationMode.Roundtrip">
      <summary>Сериализатор анализирует отдельные экземпляры <see cref="T:System.DateTime" /> для определения формата сериализации: UTC, локальный или не задан.</summary>
    </member>
    <member name="F:System.Xml.Serialization.Configuration.DateTimeSerializationSection.DateTimeSerializationMode.Local">
      <summary>Сериализатор форматирует все объекты <see cref="T:System.DateTime" /> как локальное время.Это делается для совместимости с версиями 1.0 и 1.1.</summary>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.RootedPathValidator">
      <summary>Проверяет правила, управляющие использованием ключа конфигурации tempFilesLocation. </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.RootedPathValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.Configuration.RootedPathValidator" />. </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип данного объекта.</summary>
      <returns>Значение true, если параметр <paramref name="type" /> соответствует допустимому XMLSerializer; в противном случае — значение false.</returns>
      <param name="type">Тип объекта.</param>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта действительным.</summary>
      <param name="value">Значение объекта.</param>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement">
      <summary>Обрабатывает конфигурацию для класса <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />.Этот класс не может быть унаследован.</summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> и задает имя и тип расширения.</summary>
      <param name="name">Имя нового расширения.Это имя должно быть уникальным.</param>
      <param name="type">Тип нового расширения, задаваемый в виде строки.</param>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> class using the specified name and type.</summary>
      <param name="name">Имя нового расширения.Это имя должно быть уникальным.</param>
      <param name="type">
        <see cref="T:System.Type" /> нового расширения.</param>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement.Name">
      <summary>Возвращает или задает имя расширения.</summary>
      <returns>Имя расширения.</returns>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement.Type">
      <summary>Возвращает или задает тип расширения.</summary>
      <returns>Тип расширения.</returns>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection">
      <summary>Обрабатывает элементы XML, используемые для настройки функционирования <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />.Этот класс не может быть унаследован.</summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Add(System.Xml.Serialization.Configuration.SchemaImporterExtensionElement)">
      <summary>Добавляет элемент в конец коллекции.</summary>
      <param name="element">The <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> to add to the collection.</param>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.IndexOf(System.Xml.Serialization.Configuration.SchemaImporterExtensionElement)">
      <summary>Индекс (с нуля) первого элемента в коллекции, имеющего заданное значение.</summary>
      <returns>Индекс найденного элемента.</returns>
      <param name="element">The <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> to find.</param>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Item(System.Int32)">
      <summary>Возвращает или задает объект, представляющий XML-элемент с заданным индексом.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> at the specified index.</returns>
      <param name="index">Индекс (с нуля) XML-элемента, который требуется вернуть или задать.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-или- <paramref name="index" /> is equal to or greater than Count.</exception>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Item(System.String)">
      <summary>Получает или задает элемент с заданным именем.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> with the specified name.</returns>
      <param name="name">Имя элемента, который требуется вернуть или задать.</param>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Remove(System.String)">
      <summary>Удаляет элемент с заданным именем из коллекции.</summary>
      <param name="name">Имя удаляемого элемента.</param>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.Remove(System.Xml.Serialization.Configuration.SchemaImporterExtensionElement)">
      <summary>Удаляет первое вхождение конкретного объекта из коллекции.</summary>
      <param name="element">The <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" /> to remove.</param>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection.RemoveAt(System.Int32)">
      <summary>Удаляет из коллекции элемент с заданным индексом.</summary>
      <param name="index">Индекс удаляемого объекта.</param>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection">
      <summary>Обрабатывает конфигурацию для класса <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />.Этот класс не может быть унаследован.</summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection" /> class.</summary>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection.SchemaImporterExtensions">
      <summary>Возвращает объект, представляющий коллекцию расширений.</summary>
      <returns>Коллекция <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection" />, содержащая объекты, которые представляют элементы конфигурации.</returns>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.SerializationSectionGroup">
      <summary>Обрабатывает элементы XML, используемые для настройки сериализации XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.SerializationSectionGroup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Serialization.Configuration.SerializationSectionGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SerializationSectionGroup.DateTimeSerialization">
      <summary>Возвращает объект <see cref="T:System.DateTime" />, представляющий элемент конфигурации.</summary>
      <returns>Возвращает объект <see cref="T:System.Xml.Serialization.Configuration.DateTimeSerializationSection" />, представляющий элемент конфигурации.</returns>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SerializationSectionGroup.SchemaImporterExtensions">
      <summary>Возвращает объект, представляющий раздел, в котором содержатся элементы конфигурации <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection" />, представляющий элемент schemaImporterExtenstion в файле конфигурации.</returns>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.SerializationSectionGroup.XmlSerializer">
      <summary>Возвращает объект, представляющий группу конфигурации для <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Объект <see cref="T:System.Xml.Serialization.Configuration.XmlSerializerSection" />, представляющий <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.Configuration.XmlSerializerSection">
      <summary>Обрабатывает элементы XML, используемые для настройки сериализации XML. </summary>
    </member>
    <member name="M:System.Xml.Serialization.Configuration.XmlSerializerSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.Configuration.XmlSerializerSection" /> class. </summary>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.XmlSerializerSection.CheckDeserializeAdvances">
      <summary>Возвращает или задает значение, указывающее, осуществляется ли дополнительный контроль хода выполнения <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>true, если контроль осуществляется; в противном случае — false.Значением по умолчанию является true.</returns>
    </member>
    <member name="P:System.Xml.Serialization.Configuration.XmlSerializerSection.TempFilesLocation"></member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary>Предоставляет метод доступа к классу <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary>Возвращает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" />. </summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary>Указывает порядок сортировки для строчных и прописных букв.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary>Игнорирование регистра.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary>Прописные буквы сортируются перед строчными буквами.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary>Строчные буквы сортируются перед прописными буквами.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary>Указывает тип данных для определения порядка сортировки.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary>Значения сортируются в алфавитном порядке.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary>Значения сортируются по числам.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary>Указывает порядок сортировки.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary>узлы сортируются в восходящем порядке.Например, если номера 1, 2, 3 и 4 сортируются в восходящем порядке, они отображаются в последовательности 1, 2, 3, 4.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary>узлы сортируются в нисходящем порядке.Например, если номера 1, 2, 3 и 4 сортируются в нисходящем порядке, они отображаются в последовательности 4, 3, 2, 1.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathDocument">
      <summary>Предоставляет быстрое, только для чтения, хранимое в памяти представление XML-документа с помощью модели данных XPath.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.IO.Stream)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.XPath.XPathDocument" /> из XML-данных в указанном объекте <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Объект <see cref="T:System.IO.Stream" />, содержащий XML-данные.</param>
      <exception cref="T:System.Xml.XmlException">В XML-данных возникла ошибка.<see cref="T:System.Xml.XPath.XPathDocument" /> остается пустым.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.IO.Stream" />, переданный в качестве параметра, является null.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.IO.TextReader)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.XPath.XPathDocument" /> из XML-данных, содержащихся в указанном объекте <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader">Объект <see cref="T:System.IO.TextReader" />, содержащий XML-данные.</param>
      <exception cref="T:System.Xml.XmlException">В XML-данных возникла ошибка.<see cref="T:System.Xml.XPath.XPathDocument" /> остается пустым.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.IO.TextReader" />, переданный в качестве параметра, является null.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.XPath.XPathDocument" /> из XML-данных в указанном файле.</summary>
      <param name="uri">Путь файла, содержащего XML-данные.</param>
      <exception cref="T:System.Xml.XmlException">В XML-данных возникла ошибка.<see cref="T:System.Xml.XPath.XPathDocument" /> остается пустым.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр пути файла null.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.String,System.Xml.XmlSpace)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.XPath.XPathDocument" /> из XML-данных в указанном файле с указанной обработкой пробелов.</summary>
      <param name="uri">Путь файла, содержащего XML-данные.</param>
      <param name="space">Объект <see cref="T:System.Xml.XmlSpace" />.</param>
      <exception cref="T:System.Xml.XmlException">В XML-данных возникла ошибка.<see cref="T:System.Xml.XPath.XPathDocument" /> остается пустым.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр пути файла или параметр объекта <see cref="T:System.Xml.XmlSpace" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.Xml.XmlReader)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.XPath.XPathDocument" /> из XML-данных, содержащихся в указанном объекте <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, содержащий XML-данные. </param>
      <exception cref="T:System.Xml.XmlException">В XML-данных возникла ошибка.<see cref="T:System.Xml.XPath.XPathDocument" /> остается пустым.</exception>
      <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Xml.XmlReader" />, передаваемый в качестве параметра, равен null.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.Xml.XmlReader,System.Xml.XmlSpace)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.XPath.XPathDocument" /> из XML-данных, содержащихся в указанном объекте <see cref="T:System.Xml.XmlReader" /> с указанной обработкой пробелов.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, содержащий XML-данные.</param>
      <param name="space">Объект <see cref="T:System.Xml.XmlSpace" />.</param>
      <exception cref="T:System.Xml.XmlException">В XML-данных возникла ошибка.<see cref="T:System.Xml.XPath.XPathDocument" /> остается пустым.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр объекта <see cref="T:System.Xml.XmlReader" /> или параметр объекта <see cref="T:System.Xml.XmlSpace" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.CreateNavigator">
      <summary>Инициализирует объект только для чтения <see cref="T:System.Xml.XPath.XPathNavigator" /> для перехода по узлам в данном <see cref="T:System.Xml.XPath.XPathDocument" />.</summary>
      <returns>Объект только для чтения <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathException">
      <summary>Предоставляет исключение, которое порождается при происхождении ошибки при обработке выражения XPath. </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.XPath.XPathException" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Использует информацию в объектах <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" /> для инициализации нового экземпляра класса <see cref="T:System.Xml.XPath.XPathException" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий все свойства <see cref="T:System.Xml.XPath.XPathException" />. </param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor(System.String)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.XPath.XPathException" /> с указанным сообщением об исключении.</summary>
      <param name="message">Описание состояния ошибки.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor(System.String,System.Exception)">
      <summary>Инициализация нового экземпляра  класса <see cref="T:System.Xml.XPath.XPathException" /> с указанным сообщением об исключении и объектом <see cref="T:System.Exception" />.</summary>
      <param name="message">Описание состояния ошибки. </param>
      <param name="innerException">
        <see cref="T:System.Exception" />, породивший <see cref="T:System.Xml.XPath.XPathException" /> (при наличии).Данное значение может быть null.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Направляет все свойства <see cref="T:System.Xml.XPath.XPathException" /> в класс <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заданного <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathException.Message">
      <summary>Получает описание состояния ошибки для данного исключения.</summary>
      <returns>Описание string состояния ошибки для данного исключения.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary>Предоставляет типизированный класс, представляющий скомпилированное выражение XPath.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary>При переопределении в производном классе выполняется сортировка узлов, выбранных выражением XPath, согласно заданному объекту <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="expr">Объект, представляющий ключ сортировки.Это может быть значение string узла или объект <see cref="T:System.Xml.XPath.XPathExpression" /> со скомпилированным выражением XPath.</param>
      <param name="comparer">Объект <see cref="T:System.Collections.IComparer" />, предоставляющий сравнения определенных типов данных для сравнения двух объектов на предмет эквивалентности. </param>
      <exception cref="T:System.Xml.XPath.XPathException">
        <see cref="T:System.Xml.XPath.XPathExpression" /> или ключ сортировки включает префикс и либо не предоставлен <see cref="T:System.Xml.XmlNamespaceManager" />, либо префикс не удается найти в указанном <see cref="T:System.Xml.XmlNamespaceManager" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary>При переопределении в производном классе выполняется сортировка узлов, выбранных выражением XPath, согласно указанным параметрам.</summary>
      <param name="expr">Объект, представляющий ключ сортировки.Это может быть значение string узла или объект <see cref="T:System.Xml.XPath.XPathExpression" /> со скомпилированным выражением XPath.</param>
      <param name="order">Значение <see cref="T:System.Xml.XPath.XmlSortOrder" />, указывающее порядок сортировки. </param>
      <param name="caseOrder">Значение <see cref="T:System.Xml.XPath.XmlCaseOrder" />, указывающее способ сортировки строчных и прописных букв.</param>
      <param name="lang">Язык, используемый для сравнения.Использует класс <see cref="T:System.Globalization.CultureInfo" />, который может передаваться в метод <see cref="Overload:System.String.Compare" /> для типов языков, например "us-en" для английского языка (США).Если указывается пустая строка, для определения <see cref="T:System.Globalization.CultureInfo" /> используется системное окружение.</param>
      <param name="dataType">Значение <see cref="T:System.Xml.XPath.XmlDataType" />, указывающее порядок сортировки для типа данных. </param>
      <exception cref="T:System.Xml.XPath.XPathException">
        <see cref="T:System.Xml.XPath.XPathExpression" /> или ключ сортировки включает префикс и либо не предоставлен <see cref="T:System.Xml.XmlNamespaceManager" />, либо префикс не удается найти в указанном <see cref="T:System.Xml.XmlNamespaceManager" />. </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary>При переопределении в производном классе возвращает клон <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Новый объект <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
      <summary>Компилирует заданное выражение XPath и возвращает объект <see cref="T:System.Xml.XPath.XPathExpression" />, представляющий выражение XPath.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
      <param name="xpath">Выражение XPath.</param>
      <exception cref="T:System.ArgumentException">Параметр выражения XPath не является допустимым выражением XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Компилирует заданное выражение XPath, при указанном для разрешения пространства имен объекте <see cref="T:System.Xml.IXmlNamespaceResolver" />, и возвращает объект <see cref="T:System.Xml.XPath.XPathExpression" />, представляющий выражение XPath.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
      <param name="xpath">Выражение XPath.</param>
      <param name="nsResolver">Объект, реализующий интерфейс <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения пространства имен.</param>
      <exception cref="T:System.ArgumentException">Параметр выражения XPath не является допустимым выражением XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary>При переопределении в производном классе получает представление string для <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Представление string для <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary>При переопределении в производном классе получает тип результата выражения XPath.</summary>
      <returns>Значение <see cref="T:System.Xml.XPath.XPathResultType" />, представляющее тип результата выражения XPath.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)">
      <summary>При переопределении в производном классе указывает объект <see cref="T:System.Xml.IXmlNamespaceResolver" /> для использования для разрешения пространства имен.</summary>
      <param name="nsResolver">Объект, реализующий интерфейс <see cref="T:System.Xml.IXmlNamespaceResolver" />, для использования для разрешения пространства имен.</param>
      <exception cref="T:System.Xml.XPath.XPathException">Параметр объекта <see cref="T:System.Xml.IXmlNamespaceResolver" /> не является производным от <see cref="T:System.Xml.IXmlNamespaceResolver" />. </exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary>При переопределении в производном классе указывает объект <see cref="T:System.Xml.XmlNamespaceManager" /> для использования для разрешения пространства имен.</summary>
      <param name="nsManager">Объект <see cref="T:System.Xml.XmlNamespaceManager" /> для использования для разрешения пространства имен. </param>
      <exception cref="T:System.Xml.XPath.XPathException">Параметр объекта <see cref="T:System.Xml.XmlNamespaceManager" />, не являющийся производным от класса <see cref="T:System.Xml.XmlNamespaceManager" />. </exception>
    </member>
    <member name="T:System.Xml.XPath.XPathItem">
      <summary>Представляет элемент в моделях данных XQuery 1.0 и XPath 2.0.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XPath.XPathItem" />.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.IsNode">
      <summary>При переопределении в производном классе возвращает значение, указывающее, представляет ли элемент узел XPath или атомарное значение.</summary>
      <returns>true, если элемент представляет узел XPath; false, если элемент представляет атомарное значение.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.TypedValue">
      <summary>При переопределении в производном классе возвращает текущий элемент как упакованный объект наиболее подходящего типа .NET Framework, версия 2.0, соответствующего типу схемы.</summary>
      <returns>Текущий элемент в виде упакованного объекта наиболее соответствующего типа .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.Value">
      <summary>Переопределяемый в производных классах возвращает значение string для элемента.</summary>
      <returns>Значение string для элемента.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)">
      <summary>Возвращает значение элемента с заданным типом.</summary>
      <returns>Значение элемента в заданном типе.</returns>
      <param name="returnType">Тип, в котором необходимо возвратить значение элемента.</param>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для целевого типа.</exception>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Переопределяемый в производных классах возвращает значение элемента с типом, задаваемым с помощью объекта <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения префиксов пространств имен.</summary>
      <returns>Значение элемента в заданном типе.</returns>
      <param name="returnType">Тип, в котором необходимо возвратить значение элемента.</param>
      <param name="nsResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространств имен.</param>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для целевого типа.</exception>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsBoolean">
      <summary>Переопределяемый в производных классах возвращает значение <see cref="T:System.Boolean" /> элемента.</summary>
      <returns>Значение элемента как <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для типа <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Boolean" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDateTime">
      <summary>Переопределяемый в производных классах возвращает значение <see cref="T:System.DateTime" /> элемента.</summary>
      <returns>Значение элемента как <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для типа <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.DateTime" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDouble">
      <summary>Переопределяемый в производных классах возвращает значение <see cref="T:System.Double" /> элемента.</summary>
      <returns>Значение элемента как <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для типа <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Double" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsInt">
      <summary>Переопределяемый в производных классах возвращает значение <see cref="T:System.Int32" /> элемента.</summary>
      <returns>Значение элемента как <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для типа <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Int32" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsLong">
      <summary>Переопределяемый в производных классах возвращает значение <see cref="T:System.Int64" /> элемента.</summary>
      <returns>Значение элемента как <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">Значение элемента имеет неверный формат для типа <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Int64" /> недопустима.</exception>
      <exception cref="T:System.OverflowException">Попытка приведения типов вызвала переполнение.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueType">
      <summary>Переопределяемый в производных классах возвращает тип .NET Framework, версия 2.0 элемента.</summary>
      <returns>Тип .NET Framework для элемента.Значение по умолчанию — <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.XmlType">
      <summary>Переопределяемый в производных классах возвращает значение <see cref="T:System.Xml.Schema.XmlSchemaType" /> для элемента.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> для элемента.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary>Определяет область пространства имен.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary>Возвращает все пространства имен, заданные в области текущего узла.Это включает пространство имен xmlns:xml, которое всегда объявляется неявно.Порядок возвращения пространств имен не задан.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary>Возвращает все пространства имен, заданные в области текущего узла, исключая пространство имен xmlns:xml.Пространство имен xmlns:xml всегда объявлено неявно.Порядок возвращения пространств имен не задан.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary>Возвращает все пространства имен, которые заданы локально в текущем узле. </summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary>Представляет модель курсора для навигации по данным XML и их редактирования.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания одного и более дочерних узлов в конце списка дочерних узлов текущего узла. </summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания новых дочерних узлов в конце списка дочерних узлов текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Текущий узел, на котором расположен <see cref="T:System.Xml.XPath.XPathNavigator" />, не является корневым узлом или узлом элемента.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
      <summary>Создает новый дочерний узел в конце списка дочерних узлов текущего узла, используя заданную строку данных XML.</summary>
      <param name="newChild">Строка данных XML для нового дочернего узла.</param>
      <exception cref="T:System.ArgumentNullException">Параметр строки XML равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, на котором расположен <see cref="T:System.Xml.XPath.XPathNavigator" />, не является корневым узлом или узлом элемента.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр строки данных XML неправильно сформирован.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
      <summary>Создает новый дочерний узел в конце списка дочерних узлов текущего узла, используя содержимое XML заданного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="newChild">Объект <see cref="T:System.Xml.XmlReader" />, расположенный на данных XML для нового дочернего узла.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.XmlReader" /> находится в состоянии ошибки или закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр объекта <see cref="T:System.Xml.XmlReader" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, на котором расположен <see cref="T:System.Xml.XPath.XPathNavigator" />, не является корневым узлом или узлом элемента.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Содержимое XML параметра объекта <see cref="T:System.Xml.XmlReader" /> не является правильно сформированным.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
      <summary>Создает новый дочерний узел в конце списка дочерних узлов текущего узла, используя узлы из заданного <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="newChild">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный на узле, который следует добавить как новый дочерний узел.</param>
      <exception cref="T:System.ArgumentNullException">Параметр объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, на котором расположен <see cref="T:System.Xml.XPath.XPathNavigator" />, не является корневым узлом или узлом элемента.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
      <summary>Создает новый элемент дочернего узла в конце списка дочерних узлов текущего узла, используя префикс пространства имен, локальное имя и URI пространства имен, указанные в заданном значении.</summary>
      <param name="prefix">Префикс пространства имен нового элемента дочернего узла (если он имеется).</param>
      <param name="localName">Локальное имя нового элемента дочернего узла (если оно имеется).</param>
      <param name="namespaceURI">URI пространства имен для нового узла дочернего элемента (если он имеется).Поля <see cref="F:System.String.Empty" /> и null эквивалентны.</param>
      <param name="value">Значение нового элемента дочернего узла.Если передается значение <see cref="F:System.String.Empty" /> или null, то создается пустой элемент.</param>
      <exception cref="T:System.InvalidOperationException">Текущий узел, на котором расположен <see cref="T:System.Xml.XPath.XPathNavigator" />, не является корневым узлом или узлом элемента.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary>При переопределении в производных классах он возвращает базовый URI для текущего узла.</summary>
      <returns>Расположение, из которого был загружен узел, или <see cref="F:System.String.Empty" />, если значение отсутствует.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.CanEdit">
      <summary>Получает значение, указывающее, может ли <see cref="T:System.Xml.XPath.XPathNavigator" /> редактировать нижележащие данные XML.</summary>
      <returns>true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> может редактировать нижележащие данные XML, иначе false.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Проверяет соответствие данных XML в <see cref="T:System.Xml.XPath.XPathNavigator" /> указанной схеме языка определения схем XML (XSD).</summary>
      <returns>true, если произошли ошибки при проверке схемы, иначе false.</returns>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />, содержащий схемы, используемые для проверки данных XML в <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <param name="validationEventHandler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" />, получающий сведения об ошибках и предупреждениях при проверке схемы.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Возникла ошибка при проверке схемы, и не задан <see cref="T:System.Xml.Schema.ValidationEventHandler" /> для обработки ошибок проверки.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> расположен на узле, который не является элементом, атрибутом или корневым узлом, или же отсутствует информация о типе для выполнения проверки.</exception>
      <exception cref="T:System.ArgumentException">Метод <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> был вызван с параметром <see cref="T:System.Xml.Schema.XmlSchemaSet" />, в то время, когда <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на корневом узле данных XML.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary>При переопределении в производных классах порождает новый <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный на том же узле, что и этот <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Новый <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный на том же узле, что и этот <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary>Сравнивает положение текущего <see cref="T:System.Xml.XPath.XPathNavigator" /> с положением заданного <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Значение <see cref="T:System.Xml.XmlNodeOrder" />, представляющее сравнительное положение двух объектов <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
      <param name="nav">
        <see cref="T:System.Xml.XPath.XPathNavigator" />, с которым выполняется сравнение.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary>Компилирует строчное представление выражения XPath и возвращает объект <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathExpression" />, представляющий выражение XPath.</returns>
      <param name="xpath">Строчное представление выражения XPath.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="xpath" /> содержит недействительное выражение XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
      <summary>Создает узел атрибута в текущем узле элемента, используя префикс пространства имен, локальное имя и URI пространства имен, указанные в заданном значении.</summary>
      <param name="prefix">Префикс пространства имен нового узла атрибута (если он имеется).</param>
      <param name="localName">Локальное имя нового узла атрибута, которое не может быть <see cref="F:System.String.Empty" /> или null.</param>
      <param name="namespaceURI">Префикс URI пространства имен нового узла атрибута (если он имеется).</param>
      <param name="value">Значение нового узла атрибута.Если передается значение <see cref="F:System.String.Empty" /> или null, то создается пустой узел атрибута.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttributes">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания новых атрибутов текущего элемента.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания новых атрибутов текущего элемента.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
      <summary>Возвращает копию <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Копия <see cref="T:System.Xml.XPath.XPathNavigator" /> этого <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
      <summary>Удаляет диапазон узлов-братьев, от текущего узла до заданного узла.</summary>
      <param name="lastSiblingToDelete">
        <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный на последнем узле-брате в удаляемом диапазоне.</param>
      <exception cref="T:System.ArgumentNullException">Заданный <see cref="T:System.Xml.XPath.XPathNavigator" /> равен null.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.InvalidOperationException">Заданный последний удаляемый узел не является действительным узлом-братом текущего узла.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteSelf">
      <summary>Удаляет текущий узел и его дочерние узлы.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> расположен на узле, который нельзя удалить, например на корневом узле или на узле пространства имен.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary>Вычисляет заданное выражение XPath и возвращает типизированный результат.</summary>
      <returns>Результат выражения (логическое значение, число, строка или набор узлов).Он отображается на объекты <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> или <see cref="T:System.Xml.XPath.XPathNodeIterator" /> соответственно.</returns>
      <param name="xpath">Строка, представляющая выражение XPath, которое следует вычислить.</param>
      <exception cref="T:System.ArgumentException">Тип, возвращаемый выражением XPath — набор узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Вычисляет значение заданного выражения XPath и возвращает типизированный результат с помощью указанного объекта <see cref="T:System.Xml.IXmlNamespaceResolver" />, который разрешает префиксы пространства имен в выражении XPath.</summary>
      <returns>Результат выражения (логическое значение, число, строка или набор узлов).Он отображается на объекты <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> или <see cref="T:System.Xml.XPath.XPathNodeIterator" /> соответственно.</returns>
      <param name="xpath">Строка, представляющая выражение XPath, которое следует вычислить.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространства имен в выражении XPath.</param>
      <exception cref="T:System.ArgumentException">Тип, возвращаемый выражением XPath — набор узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary>Вычисляет значение <see cref="T:System.Xml.XPath.XPathExpression" /> и возвращает типизированный результат.</summary>
      <returns>Результат выражения (логическое значение, число, строка или набор узлов).Он отображается на объекты <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> или <see cref="T:System.Xml.XPath.XPathNodeIterator" /> соответственно.</returns>
      <param name="expr">
        <see cref="T:System.Xml.XPath.XPathExpression" />, которое можно вычислить.</param>
      <exception cref="T:System.ArgumentException">Тип, возвращаемый выражением XPath — набор узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary>Использует предоставленный контекст для вычисления значения <see cref="T:System.Xml.XPath.XPathExpression" /> и возвращает типизированный результат.</summary>
      <returns>Результат выражения (логическое значение, число, строка или набор узлов).Он отображается на объекты <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> или <see cref="T:System.Xml.XPath.XPathNodeIterator" /> соответственно.</returns>
      <param name="expr">
        <see cref="T:System.Xml.XPath.XPathExpression" />, которое можно вычислить.</param>
      <param name="context">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" />, указывающий на выбранный узел, вычисление значения которого следует выполнить.</param>
      <exception cref="T:System.ArgumentException">Тип, возвращаемый выражением XPath — набор узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary>Получает значение атрибута с заданным локальным именем и URI пространства имен.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая значение указанного атрибута; <see cref="F:System.String.Empty" />, если совпадающий атрибут не найден, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента.</returns>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">URI пространства имен атрибута.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary>Возвращает значение узла пространства имен, соответствующее указанному локальному имени.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая значение узла пространства имен; <see cref="F:System.String.Empty" /> если не найден совпадающий узел пространства имен, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента.</returns>
      <param name="name">Локальное имя узла пространства имен.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Возвращает находящиеся в области пространства имен текущего узла.</summary>
      <returns>Коллекция <see cref="T:System.Collections.Generic.IDictionary`2" /> имен пространств имен, ключами которой являются префиксы.</returns>
      <param name="scope">Значение <see cref="T:System.Xml.XmlNamespaceScope" />, определяющее пространства имен, которые следует возвратить.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary>Получает значение, указывающее, имеются ли у текущего узла какие-либо атрибуты.</summary>
      <returns>Возвращает true, если у текущего узла есть атрибуты; возвращает false, если у текущего узла нет атрибутов, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary>Получает значение, указывающее, имеются ли у текущего узла какие-либо дочерние узлы.</summary>
      <returns>Возвращает true, если у текущего узла имеются дочерние узлы, иначе возвращает false.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.InnerXml">
      <summary>Возвращает или задает разметку, представляющую дочерние узлы текущего узла.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая разметку дочерних узлов текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Нельзя задать свойство <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового узла-брата после текущего выбранного узла.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового узла-брата после текущего выбранного узла.</returns>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не позволяет вставлять новый узел того же уровня после текущего узла.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
      <summary>Создает новый узел-брат после текущего выбранного узла, используя заданную строку XML.</summary>
      <param name="newSibling">Строка данных XML для нового узла-брата.</param>
      <exception cref="T:System.ArgumentNullException">Параметр строки XML равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не позволяет вставлять новый узел того же уровня после текущего узла.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр строки данных XML неправильно сформирован.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
      <summary>Создает новый узел-брат после выбранного в данный момент узла, используя содержимое XML указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="newSibling">Объект <see cref="T:System.Xml.XmlReader" />, расположенный на данных XML для нового узла-брата.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.XmlReader" /> находится в состоянии ошибки или закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр объекта <see cref="T:System.Xml.XmlReader" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не позволяет вставлять новый узел того же уровня после текущего узла.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Содержимое XML параметра объекта <see cref="T:System.Xml.XmlReader" /> не является правильно сформированным.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
      <summary>Создает новый узел-брат после выбранного в данный момент узла, используя узлы, содержащиеся в указанном объекте <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="newSibling">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный на узле, который следует добавить как новый узел-брат.</param>
      <exception cref="T:System.ArgumentNullException">Параметр объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не позволяет вставлять новый узел того же уровня после текущего узла.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового узла-брата перед текущим выбранным узлом.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового узла-брата перед текущим выбранным узлом.</returns>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не позволяет вставлять новый узел того же уровня перед текущим узлом.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
      <summary>Создает новый узел-брат перед текущим выбранным узлом, используя заданную строку XML.</summary>
      <param name="newSibling">Строка данных XML для нового узла-брата.</param>
      <exception cref="T:System.ArgumentNullException">Параметр строки XML равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не позволяет вставлять новый узел того же уровня перед текущим узлом.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр строки данных XML неправильно сформирован.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
      <summary>Создает новый узел-брат перед выбранным в данный момент узлом, используя содержимое XML указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="newSibling">Объект <see cref="T:System.Xml.XmlReader" />, расположенный на данных XML для нового узла-брата.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.XmlReader" /> находится в состоянии ошибки или закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр объекта <see cref="T:System.Xml.XmlReader" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не позволяет вставлять новый узел того же уровня перед текущим узлом.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Содержимое XML параметра объекта <see cref="T:System.Xml.XmlReader" /> не является правильно сформированным.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
      <summary>Создает новый узел-брат перед выбранным в данный момент узлом, используя узлы, содержащиеся в указанном объекте <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="newSibling">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный на узле, который следует добавить как новый узел-брат.</param>
      <exception cref="T:System.ArgumentNullException">Параметр объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не позволяет вставлять новый узел того же уровня перед текущим узлом.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
      <summary>Создает новый элемент-брат после текущего узла, используя префикс пространства имен, локальное имя и URI пространства имен, указанные в заданном значении.</summary>
      <param name="prefix">Префикс пространства имен нового дочернего элемента (если имеется).</param>
      <param name="localName">Локальное имя нового дочернего элемента (если имеется).</param>
      <param name="namespaceURI">URI пространства имен для нового дочернего элемента (если существует).Поля <see cref="F:System.String.Empty" /> и null эквивалентны.</param>
      <param name="value">Значение нового дочернего элемента.Если передается значение <see cref="F:System.String.Empty" /> или null, то создается пустой элемент.</param>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не позволяет вставлять новый узел того же уровня после текущего узла.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
      <summary>Создает новый элемент-брат перед текущим узлом, используя префикс пространства имен, локальное имя и URI пространства имен, указанные в заданном значении.</summary>
      <param name="prefix">Префикс пространства имен нового дочернего элемента (если имеется).</param>
      <param name="localName">Локальное имя нового дочернего элемента (если имеется).</param>
      <param name="namespaceURI">URI пространства имен для нового дочернего элемента (если существует).Поля <see cref="F:System.String.Empty" /> и null эквивалентны.</param>
      <param name="value">Значение нового дочернего элемента.Если передается значение <see cref="F:System.String.Empty" /> или null, то создается пустой элемент.</param>
      <exception cref="T:System.InvalidOperationException">Положение <see cref="T:System.Xml.XPath.XPathNavigator" /> не позволяет вставлять новый узел того же уровня перед текущим узлом.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary>Определяет, является ли заданный <see cref="T:System.Xml.XPath.XPathNavigator" /> наследником текущего <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Возвращает true, если указанный <see cref="T:System.Xml.XPath.XPathNavigator" /> является наследником текущего <see cref="T:System.Xml.XPath.XPathNavigator" />, иначе возвращает false.</returns>
      <param name="nav">Структура <see cref="T:System.Xml.XPath.XPathNavigator" /> для сравнения с данной структурой <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary>При переопределении в производном классе возвращает значение, указывающее, является ли текущий узел пустым элементом без тэга конечного элемента.</summary>
      <returns>Возвращает true, если текущий узел является пустым элементом, иначе возвращает false.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsNode">
      <summary>Получает значение, указывающее, представляет ли собой текущий узел XPath.</summary>
      <returns>Всегда возвращает true.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary>При переопределении в производном классе определяет, находится ли текущий <see cref="T:System.Xml.XPath.XPathNavigator" /> в той же позиции, что и указанный <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Возвращает true, если расположение двух объектов <see cref="T:System.Xml.XPath.XPathNavigator" /> совпадает, иначе возвращает false.</returns>
      <param name="other">Структура <see cref="T:System.Xml.XPath.XPathNavigator" /> для сравнения с данной структурой <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary>При переопределении в производных классах возвращает <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> текущего узла без какого-либо префикса пространства имен.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая локальное имя текущего узла, или <see cref="F:System.String.Empty" />, если у текущего узла нет имени (например у текстового узла или узла комментария).</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
      <summary>Получает URI пространства имен для указанного префикса.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая URI пространства имен, назначенный указанному префиксу пространства; null, если указанному префиксу пространства имен не назначен URI пространства имен.Возвращаемая <see cref="T:System.String" /> атомизирована.</returns>
      <param name="prefix">Префикс, URI пространства имен которого необходимо разрешить.Для сопоставления с пространством имен по умолчанию следует передать значение <see cref="F:System.String.Empty" />.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
      <summary>Получает префикс, объявленный для указанного URI пространства имен.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая префикс пространства имен, назначенный указанному URI пространства имен; в противном случае — значение <see cref="F:System.String.Empty" />, если указанному URI пространства имен не назначен префикс.Возвращаемая <see cref="T:System.String" /> атомизирована.</returns>
      <param name="namespaceURI">URI пространства имен, который необходимо разрешить для получения префикса.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary>Определяет, соответствует ли текущий узел указанному выражению XPath.</summary>
      <returns>Возвращает true, если текущий узел соответствует указанному выражению XPath, иначе возвращает false.</returns>
      <param name="xpath">Выражение XPath.</param>
      <exception cref="T:System.ArgumentException">Невозможно вычислить значение выражения XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary>Определяет, соответствует ли текущий узел указанному выражению <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Возвращает true, если текущий узел соответствует <see cref="T:System.Xml.XPath.XPathExpression" />, иначе возвращает false.</returns>
      <param name="expr">Объект <see cref="T:System.Xml.XPath.XPathExpression" />, представляющий скомпилированное выражение XPath.</param>
      <exception cref="T:System.ArgumentException">Невозможно вычислить значение выражения XPath.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> в то же положение, в котором находится указанный <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Возвращает true, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к положению указанного <see cref="T:System.Xml.XPath.XPathNavigator" />, иначе возвращает false.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
      <param name="other">
        <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный на узле, к которому необходимо переместиться. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к атрибуту с совпадающим локальным именем и URI пространства имен.</summary>
      <returns>Возвращает true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к атрибуту, иначе возвращает false.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
      <param name="localName">Локальное имя атрибута.</param>
      <param name="namespaceURI">URI пространства имен атрибута; null обозначает пустое пространство имен.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к дочернему узлу с заданным локальным именем и URI пространства имен.</summary>
      <returns>Возвращает true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к дочернему узлу, иначе возвращает false.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
      <param name="localName">Локальное имя дочернего узла, к которому следует перейти.</param>
      <param name="namespaceURI">URI пространства имен дочернего узла, к которому следует перейти.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> на дочерний узел указанного <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <returns>Возвращает true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к дочернему узлу, иначе возвращает false.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> дочернего узла, к которому следует перейти.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к первому узлу-брату текущего узла.</summary>
      <returns>Возвращает true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к первому узлу-брату текущего узла; возвращает false, если первый узел-брат отсутствует, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент находится на узле атрибута.Если <see cref="T:System.Xml.XPath.XPathNavigator" /> уже расположен на первом узле-брате, то <see cref="T:System.Xml.XPath.XPathNavigator" /> возвращает true, а его положение не изменяется.Если <see cref="T:System.Xml.XPath.XPathNavigator.MoveToFirst" /> возвращает false, так как первый узел-брат отсутствует, или так как <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент расположен на атрибуте, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к первому атрибуту текущего узла.</summary>
      <returns>Возвращает true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к первому атрибуту текущего узла, иначе возвращает false.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к первому дочернему узлу текущего узла.</summary>
      <returns>Возвращает true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к первому дочернему узлу текущего узла, иначе возвращает false.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к первому узлу пространства имен текущего узла.</summary>
      <returns>Возвращает true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к первому узлу пространства имен, иначе возвращает false.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к первому узлу пространства имен, соответствующему указанному <see cref="T:System.Xml.XPath.XPathNamespaceScope" />.</summary>
      <returns>Возвращает true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к первому узлу пространства имен, иначе возвращает false.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
      <param name="namespaceScope">Значение <see cref="T:System.Xml.XPath.XPathNamespaceScope" />, описывающее область пространства имен. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к элементу с указанным локальным именем и URI пространства имен в порядке документа.</summary>
      <returns>true, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> был перемещен успешно, иначе false.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к элементу с указанным локальным именем и URI пространства имен, до достижения заданной границы в порядке документа.</summary>
      <returns>true, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> был перемещен успешно, иначе false.</returns>
      <param name="localName">Локальное имя элемента.</param>
      <param name="namespaceURI">URI пространства имен элемента.</param>
      <param name="end">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, размещенный на границе элемента, которая не пересекается текущим <see cref="T:System.Xml.XPath.XPathNavigator" /> при поиске следующего элемента.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему элементу типа <see cref="T:System.Xml.XPath.XPathNodeType" />, указанному в порядке документа.</summary>
      <returns>true, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> был перемещен успешно, иначе false.</returns>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> элемента.<see cref="T:System.Xml.XPath.XPathNodeType" /> не может быть <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> или <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему элементу указанного <see cref="T:System.Xml.XPath.XPathNodeType" /> до указанной границы в порядке документа.</summary>
      <returns>true, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> был перемещен успешно, иначе false.</returns>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> элемента.<see cref="T:System.Xml.XPath.XPathNodeType" /> не может быть <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> или <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <param name="end">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, размещенный на границе элемента, которая не пересекается текущим <see cref="T:System.Xml.XPath.XPathNavigator" /> при поиске следующего элемента.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary>При переопределении в производном классе переходит к узлу, имеющему атрибут типа ID, значение которого соответствует указанной <see cref="T:System.String" />.</summary>
      <returns>true, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> перемещается успешно, иначе false.Если возвращается значение false, то положение навигатора остается неизменным.</returns>
      <param name="id">
        <see cref="T:System.String" />, представляющая значение ID узла, к которому следует перейти.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> на узел пространства имен с указанным префиксом пространства имен.</summary>
      <returns>true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к указанному пространству имен; false, если соответствующее пространство имен не найдено, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
      <param name="name">Префикс пространства имен узла пространства имен.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему узлу-брату текущего узла.</summary>
      <returns>Значение true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к следующему узлу-брату текущего узла, иначе значение false, если больше нет узлов-братьев, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент находится на узле атрибута.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему узлу-брату с заданным локальным именем и URI пространства имен.</summary>
      <returns>Возвращает true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к следующему узлу-брату текущего узла; возвращает false, если больше нет узлов-братьев, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент находится на узле атрибута.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
      <param name="localName">Локальное имя следующего узла-брата, к которому следует перейти.</param>
      <param name="namespaceURI">URI пространства имен следующего узла-брата, к которому следует перейти.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему узлу-брату текущего узла, соответствующему заданному <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <returns>Значение true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к следующему узлу-брату текущего узла, иначе значение false, если больше нет узлов-братьев, или если <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент находится на узле атрибута.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> узла-брата, к которому следует перейти.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> на следующий атрибут.</summary>
      <returns>Возвращает true если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается на следующий; возвращает false, если атрибутов больше нет.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> на следующий узел пространства имен.</summary>
      <returns>Возвращает true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к следующему узлу пространства имен, иначе возвращает false.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к следующему пространству имен, соответствующему указанному <see cref="T:System.Xml.XPath.XPathNamespaceScope" />.</summary>
      <returns>Возвращает true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к следующему узлу пространства имен, иначе возвращает false.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
      <param name="namespaceScope">Значение <see cref="T:System.Xml.XPath.XPathNamespaceScope" />, описывающее область пространства имен. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к родительскому узлу текущего узла.</summary>
      <returns>Возвращает значение true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к родительскому узлу текущего узла, иначе значение false.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary>При переопределении в производном классе перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к предыдущему одноуровневому узлу текущего узла.</summary>
      <returns>Возвращает значение true, если <see cref="T:System.Xml.XPath.XPathNavigator" /> успешно перемещается к предыдущему одноуровневому узлу текущего узла; возвращает false, если больше нет предыдущих одноуровневых узлов или если <see cref="T:System.Xml.XPath.XPathNavigator" /> в данный момент находится на узле атрибута.Если возвращается значение false, то положение <see cref="T:System.Xml.XPath.XPathNavigator" /> остается неизменным.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary>Перемещает <see cref="T:System.Xml.XPath.XPathNavigator" /> к корневому узлу, к которому относится текущий узел.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary>При переопределении в производных классах возвращает полное имя текущего узла.</summary>
      <returns>
        <see cref="T:System.String" /> содержащая полное <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> текущего узла, или <see cref="F:System.String.Empty" />, если у текущего узла нет имени (например у текстового узла или у узла комментария).</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary>При переопределении в производных классах возвращает URI пространства имен текущего узла.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая URI пространства имен текущего узла или <see cref="F:System.String.Empty" />, если у текущего узла нет URI пространства имен.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary>Переопределяемый в производных классах, возвращает <see cref="T:System.Xml.XmlNameTable" />, принадлежащую <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlNameTable" />, обеспечивающий доступ к атомизированной версии <see cref="T:System.String" /> в документе XML.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
      <summary>Получает <see cref="T:System.Collections.IEqualityComparer" />, используемый для определения равенства объектов <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEqualityComparer" />, используемый для определения равенства объектов <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary>Переопределяемый в производных классах, возвращает <see cref="T:System.Xml.XPath.XPathNodeType" />, текущего узла.</summary>
      <returns>Одно из значений <see cref="T:System.Xml.XPath.XPathNodeType" />, представляющих текущий узел.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.OuterXml">
      <summary>Возвращает или задает разметку, представляющую открывающие и закрывающие теги текущего узла и его дочерних узлов.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая разметку, которая представляет открывающие и закрывающие теги текущего узла и его дочерних узлов.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary>При переопределении в производных классах возвращает префикс пространства имен, связанный с текущим узлом.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая префикс пространства имен, связанный с текущим узлом.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового дочернего узла в начале списка дочерних узлов текущего узла.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для создания нового дочернего узла в начале списка дочерних узлов текущего узла.</returns>
      <exception cref="T:System.InvalidOperationException">Текущий узел, на котором расположен <see cref="T:System.Xml.XPath.XPathNavigator" />, не допускает добавление нового дочернего узла в начало списка дочерних узлов.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
      <summary>Создает новый дочерний узел в начале списка дочерних узлов текущего узла, используя заданную строку XML.</summary>
      <param name="newChild">Строка данных XML для нового дочернего узла.</param>
      <exception cref="T:System.ArgumentNullException">Параметр строки XML равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, на котором расположен <see cref="T:System.Xml.XPath.XPathNavigator" />, не допускает добавление нового дочернего узла в начало списка дочерних узлов.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр строки данных XML неправильно сформирован.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
      <summary>Создает новый дочерний узел в начале списка дочерних узлов текущего узла, используя содержимое XML заданного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="newChild">Объект <see cref="T:System.Xml.XmlReader" />, расположенный на данных XML для нового дочернего узла.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.XmlReader" /> находится в состоянии ошибки или закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр объекта <see cref="T:System.Xml.XmlReader" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, на котором расположен <see cref="T:System.Xml.XPath.XPathNavigator" />, не допускает добавление нового дочернего узла в начало списка дочерних узлов.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Содержимое XML параметра объекта <see cref="T:System.Xml.XmlReader" /> не является правильно сформированным.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
      <summary>Создает новый дочерний узел в начале списка дочерних узлов текущего узла, используя узлы из указанного объекта <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="newChild">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный на узле, который следует добавить как новый дочерний узел.</param>
      <exception cref="T:System.ArgumentNullException">Параметр объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий узел, на котором расположен <see cref="T:System.Xml.XPath.XPathNavigator" />, не допускает добавление нового дочернего узла в начало списка дочерних узлов.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
      <summary>Создает новый элемент дочернего узла в начале списка дочерних узлов текущего узла, используя префикс пространства имен, локальное имя и URI пространства имен, указанные в заданном значении.</summary>
      <param name="prefix">Префикс пространства имен нового дочернего элемента (если имеется).</param>
      <param name="localName">Локальное имя нового дочернего элемента (если имеется).</param>
      <param name="namespaceURI">URI пространства имен для нового дочернего элемента (если существует).Поля <see cref="F:System.String.Empty" /> и null эквивалентны.</param>
      <param name="value">Значение нового дочернего элемента.Если передается значение <see cref="F:System.String.Empty" /> или null, то создается пустой элемент.</param>
      <exception cref="T:System.InvalidOperationException">Текущий узел, на котором расположен <see cref="T:System.Xml.XPath.XPathNavigator" />, не допускает добавление нового дочернего узла в начало списка дочерних узлов.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlReader" />, содержащий текущий узел и его дочерние узлы.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий текущий узел и его дочерние узлы.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента или на корневом узле.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
      <summary>Замена диапазона одноуровневых узлов от текущего узла до заданного узла.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlWriter" />, используемый для определения диапазона замены.</returns>
      <param name="lastSiblingToReplace">
        <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный на последнем одноуровневом узле в диапазоне замены.</param>
      <exception cref="T:System.ArgumentNullException">Заданный <see cref="T:System.Xml.XPath.XPathNavigator" /> равен null.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.InvalidOperationException">Заданный последний заменяемый узел не является действительным узлом-братом текущего узла.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
      <summary>Заменяет текущий узел содержимым указанной строки.</summary>
      <param name="newNode">Строка данных XML для нового узла.</param>
      <exception cref="T:System.ArgumentNullException">Параметр строки XML равен null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента, текста, инструкции обработки или комментария.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Параметр строки данных XML неправильно сформирован.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
      <summary>Заменяет текущий узел содержимым указанного объекта <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="newNode">Объект <see cref="T:System.Xml.XmlReader" />, расположенный на данных XML для нового узла.</param>
      <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Xml.XmlReader" /> находится в состоянии ошибки или закрыт.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр объекта <see cref="T:System.Xml.XmlReader" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента, текста, инструкции обработки или комментария.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Содержимое XML параметра объекта <see cref="T:System.Xml.XmlReader" /> не является правильно сформированным.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
      <summary>Заменяет текущий узел содержимым указанного объекта <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="newNode">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, расположенный на новом узле.</param>
      <exception cref="T:System.ArgumentNullException">Параметр объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> равен null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента, текста, инструкции обработки или комментария.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
      <exception cref="T:System.Xml.XmlException">Содержимое XML параметра объекта <see cref="T:System.Xml.XPath.XPathNavigator" /> не является правильно сформированным.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.SchemaInfo">
      <summary>Получает сведения о схеме, присвоенные текущему узлу в результате проверки схемы.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />, содержащий сведения о схеме для текущего узла.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary>Выбирает набор узлов с помощью заданного выражения XPath.</summary>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" />, указывающий на выбранный набор узлов.</returns>
      <param name="xpath">
        <see cref="T:System.String" />, представляющая выражение XPath.</param>
      <exception cref="T:System.ArgumentException">Выражение XPath содержит ошибку, или возвращаемый им тип не является набором узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Выбирает набор узлов, используя указанное выражение XPath совместно с объектом <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения префиксов пространств имен.</summary>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" />, указывающий на набор выбранных узлов.</returns>
      <param name="xpath">
        <see cref="T:System.String" />, представляющая выражение XPath.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространств имен.</param>
      <exception cref="T:System.ArgumentException">Выражение XPath содержит ошибку, или возвращаемый им тип не является набором узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary>Выбирает набор узлов с помощью заданного <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" />, указывающий на набор выбранных узлов.</returns>
      <param name="expr">Объект <see cref="T:System.Xml.XPath.XPathExpression" />, содержащий скомпилированный запрос XPath.</param>
      <exception cref="T:System.ArgumentException">Выражение XPath содержит ошибку, или возвращаемый им тип не является набором узлов.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Недопустимое выражение XPath.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary>Выбирает все узлы-предки текущего узла с заданным локальным именем и URI пространства имен.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы.Возвращаемые узлы располагаются в обратном порядке документа.</returns>
      <param name="name">Локальное имя узлов-предков.</param>
      <param name="namespaceURI">URI пространства имен узлов-предков.</param>
      <param name="matchSelf">true для включения в выбираемые узла контекста, иначе false. </param>
      <exception cref="T:System.ArgumentNullException">null нельзя передавать в качестве параметра.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Выбирает все узлы-предки текущего узла с совпадающим <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы.Возвращаемые узлы располагаются в обратном порядке документа.</returns>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> узлов-предков.</param>
      <param name="matchSelf">true для включения в выбираемые узла контекста, иначе false.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary>Выбирает все дочерние узлы текущего узла с заданным локальным именем и URI пространства имен.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы.</returns>
      <param name="name">Локальное имя дочерних узлов. </param>
      <param name="namespaceURI">URI пространства имен дочерних узлов. </param>
      <exception cref="T:System.ArgumentNullException">null нельзя передавать в качестве параметра.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary>Выбирает все дочерние узлы текущего узла с совпадающим <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы.</returns>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> дочерних узлов.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary>Выбирает все узлы-потомки текущего узла с заданным локальным именем и URI пространства имен.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы.</returns>
      <param name="name">Локальное имя узлов-потомков. </param>
      <param name="namespaceURI">URI пространства имен узлов-потомков. </param>
      <param name="matchSelf">true для включения в выбираемые узлы узла контекста, иначе false.</param>
      <exception cref="T:System.ArgumentNullException">null нельзя передавать в качестве параметра.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Выбирает все узлы-потомки текущего узла с совпадающим <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNodeIterator" />, содержащий выбранные узлы.</returns>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> узлов-потомков.</param>
      <param name="matchSelf">true для включения в выбираемые узлы узла контекста, иначе false.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
      <summary>Выбирает один узел в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанный запрос XPath.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий первый узел, соответствующий указанному запросу XPath, или null, если результаты запроса отсутствуют.</returns>
      <param name="xpath">
        <see cref="T:System.String" />, представляющая выражение XPath.</param>
      <exception cref="T:System.ArgumentException">В запросе XPath обнаружена ошибка, или же тип, возвращаемый выражением XPath, не является узлом.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Запрос XPath неверен.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Выбирает один узел в объекте <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанный запрос XPath совместно с указанным объектом <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения префиксов пространства имен.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий первый узел, соответствующий указанному запросу XPath, или null, если результаты запроса отсутствуют.</returns>
      <param name="xpath">
        <see cref="T:System.String" />, представляющая выражение XPath.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространств имен в запросе XPath.</param>
      <exception cref="T:System.ArgumentException">В запросе XPath обнаружена ошибка, или же тип, возвращаемый выражением XPath, не является узлом.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Запрос XPath неверен.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
      <summary>Выбирает один узел в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанный объект <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий первый узел, соответствующий указанному запросу XPath, или null, если результаты запроса отсутствуют.</returns>
      <param name="expression">Объект <see cref="T:System.Xml.XPath.XPathExpression" />, содержащий скомпилированный запрос XPath.</param>
      <exception cref="T:System.ArgumentException">В запросе XPath обнаружена ошибка, или же тип, возвращаемый выражением XPath, не является узлом.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Запрос XPath неверен.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)">
      <summary>Устанавливает типизированное значение текущего узла.</summary>
      <param name="typedValue">Новое типизированное значение текущего узла.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает тип указанного объекта.</exception>
      <exception cref="T:System.ArgumentNullException">Указанное значение не может быть равно null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не расположен на узле элемента или атрибута.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
      <summary>Устанавливает значение текущего узла.</summary>
      <param name="value">Новое значение узла.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра равно null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> расположен на корневом узле, на узле пространства имен, или же указанное значение неверно.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> не поддерживает редактирование.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone">
      <summary>Описание этого члена см. в <see cref="M:System.Xml.XPath.XPathNavigator.Clone" />.</summary>
      <returns>
        <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary>Получает текстовое значение текущего узла.</summary>
      <returns>string, содержащая текстовое значение текущего узла.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.TypedValue">
      <summary>Получает текущий узел в виде упакованного объекта наиболее подходящего типа платформы .NET Framework.</summary>
      <returns>Текущий узел в виде упакованного объекта наиболее подходящего типа платформы .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
      <summary>Используется реализациями <see cref="T:System.Xml.XPath.XPathNavigator" />, предоставляющими "виртуализированное" представление XML для хранилища, для обеспечения доступа к нижележащим объектам.</summary>
      <returns>Значением по умолчанию является null.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Получает значение текущего узла, приведенное к заданному <see cref="T:System.Type" />, используя заданный объект <see cref="T:System.Xml.IXmlNamespaceResolver" /> для разрешения префиксов пространства имен.</summary>
      <returns>Значение текущего узла в запрошенном <see cref="T:System.Type" />.</returns>
      <param name="returnType">
        <see cref="T:System.Type" />, в котором следует возвратить значение текущего узла.</param>
      <param name="nsResolver">Объект <see cref="T:System.Xml.IXmlNamespaceResolver" />, используемый для разрешения префиксов пространств имен.</param>
      <exception cref="T:System.FormatException">Значение текущего узла имеет неверный формат для целевого типа.</exception>
      <exception cref="T:System.InvalidCastException">Попытка приведения типов недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean">
      <summary>Получает значение текущего элемента как <see cref="T:System.Boolean" />.</summary>
      <returns>Значение текущего элемента как <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">Строковое значение текущего узла нельзя преобразовать в <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Boolean" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime">
      <summary>Получает значение текущего элемента как <see cref="T:System.DateTime" />.</summary>
      <returns>Значение текущего элемента как <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">Строковое значение текущего узла нельзя преобразовать в <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.DateTime" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDouble">
      <summary>Получает значение текущего элемента как <see cref="T:System.Double" />.</summary>
      <returns>Значение текущего элемента как <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">Строковое значение текущего узла нельзя преобразовать в <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Double" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsInt">
      <summary>Получает значение текущего узла как <see cref="T:System.Int32" />.</summary>
      <returns>Значение текущего узла как <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">Строковое значение текущего узла нельзя преобразовать в <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Int32" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsLong">
      <summary>Получает значение текущего узла как <see cref="T:System.Int64" />.</summary>
      <returns>Значение текущего узла как <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">Строковое значение текущего узла нельзя преобразовать в <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">Попытка преобразования к типу <see cref="T:System.Int64" /> недопустима.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueType">
      <summary>Получает <see cref="T:System.Type" /> платформы .NET Framework текущего узла.</summary>
      <returns>
        <see cref="T:System.Type" /> платформы .NET Framework текущего узла.Значение по умолчанию — <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
      <summary>Передает данные текущего узла и его дочерних узлов указанному объекту <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, которому следует передать данные.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary>Получает область xml:lang для текущего узла.</summary>
      <returns>
        <see cref="T:System.String" />, содержащая значение области xml:lang или <see cref="F:System.String.Empty" />, если у текущего узла нет значения области xml:lang, которое можно возвратить.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlType">
      <summary>Получает сведения <see cref="T:System.Xml.Schema.XmlSchemaType" /> для текущего узла.</summary>
      <returns>Объект <see cref="T:System.Xml.Schema.XmlSchemaType" />; значение по умолчанию — null.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary>Обеспечивает итератор над выбранным набором узлов.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary>При переопределении в производном классе возвращает клон объекта <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
      <returns>Новый клон <see cref="T:System.Xml.XPath.XPathNodeIterator" /> объекта <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary>Получает индекс последнего узла в выбранном наборе узлов.</summary>
      <returns>Индекс последнего узла в выбранном наборе узлов имеет значение int или значение "0" при отсутствии выбранных узлов.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary>При переопределении в производном классе возвращает объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для данного <see cref="T:System.Xml.XPath.XPathNodeIterator" />, который размещается в текущем контекстном узле.</summary>
      <returns>Объект <see cref="T:System.Xml.XPath.XPathNavigator" /> размещается в контекстном узле, из которого был выбран набор узлов.Необходимо вызвать метод <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> для перемещения <see cref="T:System.Xml.XPath.XPathNodeIterator" /> в первый узел в выбранном наборе.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary>При переопределении в производном классе получает индекс текущей позиции в выбранном наборе узлов.</summary>
      <returns>Индекс текущей позиции int.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" /> для итерации по выбранному набору узлов.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> для итерации по выбранному набору узлов.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary>При переопределении в производном классе объект <see cref="T:System.Xml.XPath.XPathNavigator" />, возвращенный свойством <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" />, перемещается в следующий узел выбранного набора узлов.</summary>
      <returns>true, если объект <see cref="T:System.Xml.XPath.XPathNavigator" /> перемещен в следующий узел; false, если отсутствуют другие выбранные узлы.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
      <summary>Описание данного элемента см. в разделе, посвященном <see cref="M:System.Xml.XPath.XPathNodeIterator.Clone" />.</summary>
      <returns>Объект <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary>Определяет типы узлов XPath, которые могут быть возвращены из класса <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary>Корневой узел XML-документа или дерева узлов.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary>Элемент, например &lt;element&gt;.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary>Атрибут, например id='123'.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary>Пространство имен, например xmlns="namespace".</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary>Текстовое содержимое узла.Эквивалентно тексту объектной модели документов (DOM) и типам узлов CDATA.Содержит, по крайней мере, один символ.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary>узел с символами пробелов и xml:space с установленным значением preserve.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary>узел, содержащий только символы пробела без значащих пробелов.Символы пробелов — #x20, #x9, #xD или #xA.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary>Инструкция по обработке, например &lt;?pi test?&gt;.При этом не включаются объявления XML, невидимые для класса <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary>Комментарий, например &lt;!-- my comment --&gt;</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary>Любые из типов узлов <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary>Указывает тип возвращаемого значения выражения XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary>Числовое значение.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary>A <see cref="T:System.String" /> value.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary>A <see cref="T:System.Boolean" />true or false value.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary>Коллекция узлов.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary>Фрагмент дерева.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary>Любые из типов узлов XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary>Выражение не вычисляется как правильный тип XPath.</summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary>Представляет интерфейс доступа к заданной функции, определенной в таблице стилей, на этапе выполнения.</summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary>Возвращает типы XPath для списка аргументов функции.Эти данные могут использоваться для определения подписи функции, которая позволяет различать перегруженные функции.</summary>
      <returns>Массив объектов типа <see cref="T:System.Xml.XPath.XPathResultType" />, представляющий типы аргументов функции.</returns>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary>Предоставляет метод для вызова функции с заданными аргументами в заданном контексте.</summary>
      <returns>Объект <see cref="T:System.Object" />, предоставляющий возвращаемое значение функции.</returns>
      <param name="xsltContext">Контекст XSLT для вызова функции. </param>
      <param name="args">Аргументы вызова функции.Каждый аргумент является элементом массива.</param>
      <param name="docContext">Контекстный узел для вызова функции. </param>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary>Возвращает максимальное количество аргументов функции.Это позволяет пользователю различать перегруженные функции.</summary>
      <returns>Максимальное количество аргументов функции.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary>Возвращает минимальное количество аргументов функции.Это позволяет пользователю различать перегруженные функции.</summary>
      <returns>Минимальное количество аргументов функции.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary>Возвращает объект типа <see cref="T:System.Xml.XPath.XPathResultType" />, представляющий тип XPath, возвращаемый данной функцией.</summary>
      <returns>Объект типа <see cref="T:System.Xml.XPath.XPathResultType" />, представляющий тип XPath, возвращаемый данной функцией. </returns>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary>Предоставляет интерфейс доступа к заданной переменной, определенной в таблице стилей, на этапе выполнения.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary>Вычисляет значение переменной во время исполнения программы и возвращает объект, предоставляющий значение переменной.</summary>
      <returns>Объект <see cref="T:System.Object" />, предоставляющий значение переменной.Возможные типы возвращаемых значений включают числовой, строковый, логический, фрагмент документа или набор узлов.</returns>
      <param name="xsltContext">Объект типа <see cref="T:System.Xml.Xsl.XsltContext" />, представляющий контекст переменной на этапе выполнения. </param>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary>Возвращает значение, определяющее, является ли переменная локальной.</summary>
      <returns>true, если переменная является локальной в текущем контексте; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary>Возвращает значение, определяющее, является ли переменная параметром XSLT.Это может быть параметр таблицы стилей или шаблона.</summary>
      <returns>true, если переменная является параметром XSLT; в противном случае — false.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary>Возвращает объект <see cref="T:System.Xml.XPath.XPathResultType" />, представляющий тип переменной XPath.</summary>
      <returns>Объект типа <see cref="T:System.Xml.XPath.XPathResultType" />, предоставляющий тип переменной XPath.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XslCompiledTransform">
      <summary>Преобразует данные XML с помощью таблицы стилей XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XslCompiledTransform" />. </summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> с указанными параметрами отладки. </summary>
      <param name="enableDebug">true, если следует создавать сведения об отладке; в противном случае false.С помощью значения true можно включить таблицу стилей отладки в отладчике Microsoft Visual Studio.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)">
      <summary>Компилирует таблицу стилей XSLT в указанный тип.</summary>
      <returns>Объект <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />, содержащий ошибки и предупреждения компиляции, которые указывают на результат компиляции.</returns>
      <param name="stylesheet">Средство чтения <see cref="T:System.Xml.XmlReader" /> позиционируется в начале таблице стилей, которую необходимо скомпилировать.</param>
      <param name="settings">Объект <see cref="T:System.Xml.Xsl.XsltSettings" />, который следует применить к таблице стилей.Если значение равно null, будет применен <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver">
        <see cref="T:System.Xml.XmlResolver" /> используется для разрешения модулей таблицы стилей, на которые есть ссылки в элементах xsl:import и xsl:include.Если значение равно null, внешние ресурсы не будут разрешены.</param>
      <param name="debug">Значение true позволяет анализировать таблицу стилей с помощью отладчика.</param>
      <param name="typeBuilder">
        <see cref="T:System.Reflection.Emit.TypeBuilder" />, используемый для компиляции таблицы стилей.Предоставленный TypeBuilder используется для создания результирующего типа.</param>
      <param name="scriptAssemblyPath">Основной путь к сборкам, созданным для элементов msxsl:script.Если создана только одна сборка скриптов, в этом параметре указывается путь к этой сборке.При наличии нескольких сборок скриптов, к имени файла будет добавляться специальный суффикс, обеспечивающий уникальность имен сборок.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])">
      <summary>Загружает метод из таблицы стилей, скомпилированной с помощью средства XSLTC.exe.</summary>
      <param name="executeMethod">Объект <see cref="T:System.Reflection.MethodInfo" />, представляющий метод <paramref name="execute" /> скомпилированной таблицы стилей, который был создан компилятором.</param>
      <param name="queryData">Массив байтов сериализованных структур данных в поле <paramref name="staticData" /> скомпилированной таблицы стилей, создаваемый методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />.</param>
      <param name="earlyBoundTypes">Массив типов, хранящихся в созданном компилятором поле <paramref name="ebTypes" /> в скомпилированной таблице стилей.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)">
      <summary>Загружает и компилирует таблицу стилей, расположенную по указанному URI.</summary>
      <param name="stylesheetUri">URI таблицы стилей.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheetUri" /> равно null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти таблицу стилей.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="stylesheetUri" /> включает имя файла или каталог, который невозможно найти.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить значение <paramref name="stylesheetUri" />.— или —Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">Параметр <paramref name="stylesheetUri" /> представляет недопустимый URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке таблицы стилей.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Загружает и компилирует таблицу стилей XSLT. указанную в URI.Метод <see cref="T:System.Xml.XmlResolver" /> разрешает любой элемент XSLT import или include, а параметры XSLT определяют разрешения для таблицы стилей.</summary>
      <param name="stylesheetUri">URI таблицы стилей.</param>
      <param name="settings">Объект <see cref="T:System.Xml.Xsl.XsltSettings" />, который следует применить к таблице стилей.Если значение равно null, применяется параметр <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver">
        <see cref="T:System.Xml.XmlResolver" /> используется для разрешения URI таблицы стилей и любых таблиц стилей, на которые имеются ссылки в элементах XSLT import и include. </param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="stylesheetUri" /> или <paramref name="stylesheetResolver" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти таблицу стилей.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="stylesheetUri" /> включает имя файла или каталог, который невозможно найти.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить значение <paramref name="stylesheetUri" />.— или —Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">Параметр <paramref name="stylesheetUri" /> представляет недопустимый URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке таблицы стилей.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)">
      <summary>Загружает и компилирует таблицу стилей, которая была создана с помощью XSLT-компилятор (xsltc.exe).</summary>
      <param name="compiledStylesheet">Имя класса, содержащего скомпилированную таблицу стилей. Как правило, это имя таблицы стилей.Если не указано обратное, средство xsltc.exe использует имя таблицы стилей для имен класса и сборки.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)">
      <summary>Компилирует таблицу стилей, содержащуюся в объекте <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">
        <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Компилирует таблицу стилей XSLT, содержащуюся в объекте <see cref="T:System.Xml.XmlReader" />.Метод <see cref="T:System.Xml.XmlResolver" /> разрешает любой элемент XSLT import или include, а параметры XSLT определяют разрешения для таблицы стилей.</summary>
      <param name="stylesheet">
        <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей.</param>
      <param name="settings">Объект <see cref="T:System.Xml.Xsl.XsltSettings" />, который следует применить к таблице стилей.Если значение равно null, применяется параметр <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver">
        <see cref="T:System.Xml.XmlResolver" /> используется для разрешения любых таблиц стилей, на которые имеются ссылки в элементах XSLT import и include.Если его значение равно null, внешние ресурсы не определяются.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Компилирует таблицу стилей, содержащуюся в таблице <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Компилирует таблицу стилей XSLT, содержащуюся в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />.Метод <see cref="T:System.Xml.XmlResolver" /> разрешает любой элемент XSLT import или include, а параметры XSLT определяют разрешения для таблицы стилей.</summary>
      <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей.</param>
      <param name="settings">Объект <see cref="T:System.Xml.Xsl.XsltSettings" />, который следует применить к таблице стилей.Если значение равно null, применяется параметр <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver">
        <see cref="T:System.Xml.XmlResolver" /> используется для разрешения любых таблиц стилей, на которые имеются ссылки в элементах XSLT import и include.Если его значение равно null, внешние ресурсы не определяются.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings">
      <summary>Возвращает объект <see cref="T:System.Xml.XmlWriterSettings" />, содержащий выходные данные, полученные из элемента xsl:output таблицы стилей.</summary>
      <returns>Доступный только для чтения объект <see cref="T:System.Xml.XmlWriterSettings" />, содержащий выходные данные, полученные из элемента xsl:output таблицы стилей.Это значение может быть равно null.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.TemporaryFiles">
      <summary>Возвращает коллекцию <see cref="T:System.CodeDom.Compiler.TempFileCollection" />, которая содержит временные файлы, созданные на диске после успешного вызова метода <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />. </summary>
      <returns>Коллекция <see cref="T:System.CodeDom.Compiler.TempFileCollection" />, содержащая временные файлы, созданные на диске.Это значение равно null, если вызов метода <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> завершился успешно или не была включена отладка.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в файл.</summary>
      <param name="inputUri">URI входного документа.</param>
      <param name="resultsFile">URI выходного файла.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="inputUri" /> или <paramref name="resultsFile" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удается найти входной документ документа.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> или <paramref name="resultsFile" /> включает имя файла или каталог, который не удается найти.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить значение <paramref name="inputUri" /> или <paramref name="resultsFile" />.— или —Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">Параметр <paramref name="inputUri" /> или <paramref name="resultsFile" /> не является допустимым именем URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="inputUri">URI входного документа.</param>
      <param name="results">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод.Если таблица стилей содержит элемент xsl:output, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="inputUri" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> включает имя файла или каталог, который не удается найти.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить значение <paramref name="inputUri" />.— или —Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">Параметр <paramref name="inputUri" /> представляет недопустимый URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в поток.<see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="inputUri">URI входного документа.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.Это значение может быть равно null.</param>
      <param name="results">Поток, в который требуется направить вывод.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="inputUri" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> включает имя файла или каталог, который не удается найти.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить значение <paramref name="inputUri" />.— или —Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">Параметр <paramref name="inputUri" /> представляет недопустимый URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="inputUri">URI входного документа.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.Это значение может быть равно null.</param>
      <param name="results">Объект <see cref="T:System.IO.TextWriter" />, в который требуется направить вывод.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="inputUri" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> включает имя файла или каталог, который не удается найти.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить значение <paramref name="inputUri" />.— или —Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">Параметр <paramref name="inputUri" /> представляет недопустимый URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в <see cref="T:System.Xml.XmlWriter" />.<see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="inputUri">URI входного документа.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.Это значение может быть равно null.</param>
      <param name="results">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод.Если таблица стилей содержит элемент xsl:output, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="inputUri" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputtUri" /> включает имя файла или каталог, который не удается найти.</exception>
      <exception cref="T:System.Net.WebException">Не удается разрешить значение <paramref name="inputUri" />.— или —Произошла ошибка при обработке запроса.</exception>
      <exception cref="T:System.UriFormatException">Параметр <paramref name="inputUri" /> представляет недопустимый URI.</exception>
      <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
      <param name="results">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод.Если таблица стилей содержит элемент xsl:output, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в поток.<see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.Это значение может быть равно null.</param>
      <param name="results">Поток, в который требуется направить вывод.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.IO.TextWriter" />.<see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.Это значение может быть равно null.</param>
      <param name="results">Объект <see cref="T:System.IO.TextWriter" />, в который требуется направить вывод.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />.<see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.Это значение может быть равно null.</param>
      <param name="results">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод.Если таблица стилей содержит элемент xsl:output, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />.Список <see cref="T:System.Xml.Xsl.XsltArgumentList" /> содержит дополнительные аргументы для работы в реальном времени, а XmlResolver разрешает функцию XSLT document().</summary>
      <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.Это значение может быть равно null.</param>
      <param name="results">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод.Если таблица стилей содержит элемент xsl:output, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="documentResolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT document().Если значение равно null, функция document() не разрешается.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="results">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод.Если таблица стилей содержит элемент xsl:output, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в поток.<see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.Это значение может быть равно null.</param>
      <param name="results">Поток, в который требуется направить вывод.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в средство записи <see cref="T:System.IO.TextWriter" />.<see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.Это значение может быть равно null.</param>
      <param name="results">Объект <see cref="T:System.IO.TextWriter" />, в который требуется направить вывод.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />.<see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.Это значение может быть равно null.</param>
      <param name="results">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод.Если таблица стилей содержит элемент xsl:output, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="results" /> — null.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />.Список <see cref="T:System.Xml.Xsl.XsltArgumentList" /> содержит дополнительные аргументы времени выполнения, а объект <see cref="T:System.Xml.XmlResolver" /> разрешает функцию XSLT document().</summary>
      <param name="input">Документ для преобразования, заданный в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />.</param>
      <param name="arguments">Список аргументов в виде <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</param>
      <param name="results">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод.Если таблица стилей содержит элемент xsl:output, необходимо создать объект <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />.Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="documentResolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT document().Если значение равно null, функция document() не разрешается.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltArgumentList">
      <summary>Содержит переменное число аргументов, являющихся либо параметрами XSLT, либо объектами расширения.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
      <summary>Добавляет новый объект в <see cref="T:System.Xml.Xsl.XsltArgumentList" /> и связывает его с URI пространства имен.</summary>
      <param name="namespaceUri">URI пространства имен для связи с объектом.Чтобы использовать пространство имен по умолчанию, укажите пустую строку.</param>
      <param name="extension">Объект, который требуется добавить в список. </param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="namespaceUri" /> — null или http://www.w3.org/1999/XSL/Transform Параметр <paramref name="namespaceUri" /> уже имеет связанный с ним объект. </exception>
      <exception cref="T:System.Security.SecurityException">Вызывающий оператор не имеет достаточных полномочий для вызова этого метода. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
      <summary>Добавляет параметр в <see cref="T:System.Xml.Xsl.XsltArgumentList" /> и связывает его с проверенным именем пространства имен.</summary>
      <param name="name">Имя для связи с параметром. </param>
      <param name="namespaceUri">URI пространства имен для связи с параметром.Чтобы использовать пространство имен по умолчанию, укажите пустую строку.</param>
      <param name="parameter">Значение параметра или объект, который требуется добавить в список. </param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="namespaceUri" /> — null или http://www.w3.org/1999/XSL/Transform.<paramref name="name" /> не является допустимым именем в соответствии со спецификацией W3C XML.<paramref name="namespaceUri" /> уже имеет ассоциированный с ним параметр. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.Clear">
      <summary>Удаляет все параметры и объекты расширения из <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
      <summary>Возвращает объект, связанный с заданным пространством имен.</summary>
      <returns>Объект URI пространства имен или null, если он не был найден.</returns>
      <param name="namespaceUri">URI пространства имен объекта. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
      <summary>Возвращает параметр, связанный с проверенным именем пространства имен.</summary>
      <returns>Объект параметра или null, если он не был найден.</returns>
      <param name="name">Имя параметра.<see cref="T:System.Xml.Xsl.XsltArgumentList" /> не проверяет, является ли передаваемое имя допустимым локальным именем; тем не менее это имя не может принимать значение null.</param>
      <param name="namespaceUri">URI пространства имен, связанный с параметром. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
      <summary>Удаляет объект с URI пространства имен из <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <returns>Объект с URI пространства имен или null, если он не был найден.</returns>
      <param name="namespaceUri">URI пространства имен, связанный с удаляемым объектом. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
      <summary>Удаляет параметр из <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <returns>Объект параметра или null, если он не был найден.</returns>
      <param name="name">Имя удаляемого параметра.<see cref="T:System.Xml.Xsl.XsltArgumentList" /> не проверяет, является ли передаваемое имя допустимым локальным именем; тем не менее это имя не может принимать значение null.</param>
      <param name="namespaceUri">URI пространства имен удаляемого параметра. </param>
    </member>
    <member name="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered">
      <summary>Происходит, если сообщение указывается в таблице стилей с помощью элемента xsl:message. </summary>
    </member>
    <member name="T:System.Xml.Xsl.XsltCompileException">
      <summary>Исключение вызывается методом Load, если в таблице стилей XSLT обнаружена ошибка.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltCompileException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса XsltCompileException.</summary>
      <param name="inner">Объект <see cref="T:System.Exception" />, вызвавший исключение XsltCompileException. </param>
      <param name="sourceUri">Путь к таблице стилей. </param>
      <param name="lineNumber">Номер строки в таблице стилей, указывающий место возникновения ошибки. </param>
      <param name="linePosition">Позиция в строке, указывающая место возникновения ошибки в таблице стилей. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса XsltCompileException, используя сведения в объектах <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект SerializationInfo, содержащий все свойства класса XsltCompileException. </param>
      <param name="context">Объект StreamingContext, содержащий сведения о контексте. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltCompileException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Xml.Xsl.XsltCompileException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или значение null, если внутреннее исключение не задано. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Переносит все свойства XsltCompileException в класс <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заданного <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект SerializationInfo. </param>
      <param name="context">Объект StreamingContext. </param>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary>Инкапсулирует текущий контекст периода выполнения процессора XSLT, позволяя XPath разрешать функции, параметры и пространства имен в выражениях XPath.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltContext" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltContext" /> class with the specified <see cref="T:System.Xml.NameTable" />.</summary>
      <param name="table">The <see cref="T:System.Xml.NameTable" /> to use. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary>При переопределении в производном классе сравнивает базовые URI двух документов, основываясь на порядке загрузки документов процессором XSLT (который является объектом класса <see cref="T:System.Xml.Xsl.XslTransform" />).</summary>
      <returns>Целое число, описывающее относительный порядок двух основных URI: -1, если <paramref name="baseUri" /> предшествует <paramref name="nextbaseUri" />; 0, если два основных URI идентичны; и 1, если <paramref name="baseUri" /> следует за <paramref name="nextbaseUri" />.</returns>
      <param name="baseUri">Базовый URI первого документа. </param>
      <param name="nextbaseUri">Базовый URI второго документа. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>При переопределении в производном классе вычисляет, будут ли узлы пустых пространств сохранены или срезаны в данном контексте.</summary>
      <returns>Возвращает true, если пустое пространство будет сохранено, или false, если пустое пространство будет срезано.</returns>
      <param name="node">узел пустого пространства, который должен быть сохранен или отброшен в текущем контексте. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary>При переопределении в производном классе разрешает ссылку на функцию и возвращает объект <see cref="T:System.Xml.Xsl.IXsltContextFunction" />, представляющий эту функцию.Объект <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> используется во время выполнения для получения значения функции.</summary>
      <returns>Объект <see cref="T:System.Xml.Xsl.IXsltContextFunction" />, представляющий функцию.</returns>
      <param name="prefix">Префикс функции для использования в выражениях XPath. </param>
      <param name="name">Имя функции. </param>
      <param name="ArgTypes">Массив типов аргументов разрешаемой функции.Это позволяет выбрать нужный метод из нескольких, имеющих одно и то же имя (например, перегруженных методов).</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary>При переопределении в производном классе разрешает ссылку на переменную и возвращает объект <see cref="T:System.Xml.Xsl.IXsltContextVariable" />, представляющий эту переменную.</summary>
      <returns>Объект <see cref="T:System.Xml.Xsl.IXsltContextVariable" />, представляющий переменную во время выполнения программы.</returns>
      <param name="prefix">Префикс переменной для использования в выражениях XPath. </param>
      <param name="name">Имя переменной. </param>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary>При переопределении в производном классе возвращает значение, показывающее, следует ли включать узлы пустых пространств в выходной поток данных.</summary>
      <returns>Значение true, если узлы пустых пространств в исходном документе включаются в выходной поток данных; значение false, если обработка узлов пустых пространств в исходном документе запрещена.Значение по умолчанию – true.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltException">
      <summary>Исключение, создаваемое, если во время обработки преобразования XSLT произошла ошибка.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltException" /> class.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса XsltException, используя сведения в объектах <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">The SerializationInfo object containing all the properties of an XsltException. </param>
      <param name="context">Объект StreamingContext. </param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltException" /> class with a specified error message. </summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the XsltException class.</summary>
      <param name="message">The description of the error condition. </param>
      <param name="innerException">Исключение <see cref="T:System.Exception" />, выбросившее XsltException, если таковое имеется.Это значение может быть равно null.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Streams all the XsltException properties into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class for the given <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Объект SerializationInfo. </param>
      <param name="context">Объект StreamingContext. </param>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LineNumber">
      <summary>Возвращает номер строки в таблице стилей, указывающий место возникновения ошибки.</summary>
      <returns>Номер строки в таблице стилей, указывающий место возникновения ошибки.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LinePosition">
      <summary>Возвращает позицию в строке, указывающую место возникновения ошибки в таблице стилей.</summary>
      <returns>Позиция в строке, указывающая место возникновения ошибки в таблице стилей.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.Message">
      <summary>Возвращает отформатированное сообщение об ошибке, описывающее текущее исключение.</summary>
      <returns>Отформатированное сообщение об ошибке, описывающее текущее исключение.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.SourceUri">
      <summary>Возвращает путь к таблице стилей.</summary>
      <returns>Путь к таблице стилей.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />.</summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message">
      <summary>Возвращает содержимое элемента xsl:message.</summary>
      <returns>Содержимое элемента xsl:message.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventHandler">
      <summary>Представляет метод обработки события <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Класс <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Xml.Xsl.XslTransform">
      <summary>Преобразует данные XML с помощью таблицы стилей XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XslTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
      <summary>Загружает таблицу стилей XSLT с указанного URL.</summary>
      <param name="url">Адрес URL, задающий таблицу стилей XSLT для загрузки. </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей. </exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения UnmanagedCode. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
      <summary>Загружает таблицу стилей XSLT с указанного URL.</summary>
      <param name="url">Адрес URL, задающий таблицу стилей XSLT для загрузки. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для загрузки любых таблиц стилей, на которые имеются ссылки в элементах xsl:import и xsl:include.Если он равен null, то для открытия таблицы стилей используется объект <see cref="T:System.Xml.XmlUrlResolver" /> по умолчанию без указания учетных данных пользователя.Объект <see cref="T:System.Xml.XmlUrlResolver" /> по умолчанию не используется для определения внешних таблиц стилей, таким образом, элементы xsl:import и xsl:include не определяются.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />. </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей. </exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения UnmanagedCode. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">Объект <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей XSLT. </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей. </exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения UnmanagedCode. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">Объект <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей XSLT. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для загрузки любых таблиц стилей, на которые имеются ссылки в элементах xsl:import и xsl:include.Если его значение равно null, внешние ресурсы не определяются.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />. </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей. </exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения UnmanagedCode. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XmlReader" />.Этот метод позволяет ограничивать разрешения для таблиц стилей путем указания свидетельства.</summary>
      <param name="stylesheet">Объект <see cref="T:System.Xml.XmlReader" />, содержащий загружаемую таблицу стилей. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для загрузки любых таблиц стилей, на которые имеются ссылки в элементах xsl:import и xsl:include.Если его значение равно null, внешние ресурсы не определяются.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />. </param>
      <param name="evidence">Свидетельство <see cref="T:System.Security.Policy.Evidence" />, устанавливаемое для сборки, созданной для блока скриптов таблицы стилей XSLT.Если значение этого параметра равно null, то блоки скриптов не обрабатываются, XSLT-функция document() не поддерживается и использование привилегированных объектов расширения запрещено.Чтобы передать свидетельство сборке скриптов, вызывающий оператор должен иметь разрешение ControlEvidence.Вызывающие объекты, не имеющие полного доверия, могут установить для этого параметра значение null.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей. </exception>
      <exception cref="T:System.Security.SecurityException">Указанной таблице стилей требуется произвести действия, не позволенные в рамках предоставленного свидетельства.Вызывающий оператор пытается передать свидетельство, не имея разрешения ControlEvidence. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей. </exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения UnmanagedCode. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей XSLT.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для загрузки любых таблиц стилей, на которые имеются ссылки в элементах xsl:import и xsl:include.Если его значение равно null, внешние ресурсы не определяются.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />. </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей. </exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения UnmanagedCode. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.IXPathNavigable" />.Этот метод позволяет ограничивать разрешения для таблиц стилей путем указания свидетельства.</summary>
      <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей XSLT.</param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для загрузки любых таблиц стилей, на которые имеются ссылки в элементах xsl:import и xsl:include.Если его значение равно null, внешние ресурсы не определяются.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />. </param>
      <param name="evidence">Свидетельство <see cref="T:System.Security.Policy.Evidence" />, устанавливаемое для сборки, созданной для блока скриптов таблицы стилей XSLT.Если значение этого параметра равно null, то блоки скриптов не обрабатываются, XSLT-функция document() не поддерживается и использование привилегированных объектов расширения запрещено.Чтобы передать свидетельство сборке скриптов, вызывающий оператор должен иметь разрешение ControlEvidence.Вызывающие объекты, не имеющие полного доверия, могут установить для этого параметра значение null.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей. </exception>
      <exception cref="T:System.Security.SecurityException">Указанной таблице стилей требуется произвести действия, не позволенные в рамках предоставленного свидетельства.Вызывающий оператор пытается передать свидетельство, не имея разрешения ControlEvidence. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий таблицу стилей XSLT. </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей. </exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения UnmanagedCode. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий таблицу стилей XSLT. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для загрузки любых таблиц стилей, на которые имеются ссылки в элементах xsl:import и xsl:include.Если его значение равно null, внешние ресурсы не определяются.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />. </param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей. </exception>
      <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения UnmanagedCode. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)">
      <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.XPathNavigator" />.Этот метод позволяет ограничивать разрешения для таблиц стилей путем указания свидетельства.</summary>
      <param name="stylesheet">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий загружаемую таблицу стилей. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для загрузки любых таблиц стилей, на которые имеются ссылки в элементах xsl:import и xsl:include.Если его значение равно null, внешние ресурсы не определяются.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />. </param>
      <param name="evidence">Свидетельство <see cref="T:System.Security.Policy.Evidence" />, устанавливаемое для сборки, созданной для блока скриптов таблицы стилей XSLT.Если значение этого параметра равно null, то блоки скриптов не обрабатываются, XSLT-функция document() не поддерживается и использование привилегированных объектов расширения запрещено.Чтобы передать свидетельство сборке скриптов, вызывающий оператор должен иметь разрешение ControlEvidence.Вызывающие объекты, не имеющие полного доверия, могут установить для этого параметра значение null.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей. </exception>
      <exception cref="T:System.Security.SecurityException">Указанной таблице стилей требуется произвести действия, не позволенные в рамках предоставленного свидетельства.Вызывающий оператор пытается передать свидетельство, не имея разрешения ControlEvidence. </exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
      <summary>Преобразует данные XML во входном файле и выводит результат в выходной файл.</summary>
      <param name="inputfile">URL-адрес исходного документа для преобразования. </param>
      <param name="outputfile">URL-адрес выходного файла. </param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML во входном файле и выводит результат в выходной файл.</summary>
      <param name="inputfile">URL-адрес исходного документа для преобразования. </param>
      <param name="outputfile">URL выходного файла. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT document().Если значение равно null, функция document() не разрешается.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />. </param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В платформе .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В платформе .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Поток, в который требуется направить вывод. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В платформе .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Поток, в который требуется направить вывод. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT document().Если значение равно null, функция document() не разрешается.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В платформе .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Объект <see cref="T:System.IO.TextWriter" />, в который требуется направить вывод. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В платформе .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Объект <see cref="T:System.IO.TextWriter" />, в который требуется направить вывод. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT document().Если значение равно null, функция document() не разрешается.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В платформе .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT document().Если значение равно null, функция document() не разрешается.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />. </param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В платформе .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />.В платформе .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT document().Если значение равно null, функция document() не разрешается.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные. </param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные. </param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Поток, в который требуется направить вывод. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные. </param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Поток, в который требуется направить вывод. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT document().Если значение равно null, функция document() не разрешается.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные. </param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Объект <see cref="T:System.IO.TextWriter" />, в который требуется направить вывод. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные. </param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Объект <see cref="T:System.IO.TextWriter" />, в который требуется направить вывод. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT document().Если значение равно null, функция document() не разрешается.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные. </param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT document().Если значение равно null, функция document() не разрешается.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT произошла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы, и результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные. </param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы, и результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные. </param>
      <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. </param>
      <param name="output">Объект <see cref="T:System.Xml.XmlWriter" />, в который требуется направить вывод. </param>
      <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT document().Если значение равно null, функция document() не разрешается.<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />. </param>
      <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка. Примечание. Это поведение было изменено по сравнению с предыдущими версиями .Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslTransform.XmlResolver">
      <summary>Устанавливает значение свойства <see cref="T:System.Xml.XmlResolver" />, используемого для обработки внешних ресурсов при вызове метода<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlResolver" /> для использования во время преобразования.Если задано значение null, XSLT-функция document() не разрешатся.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltSettings">
      <summary>Указывает функциональные возможности XSLT, которые будут поддерживаться во время выполнения таблицы стилей XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Xml.Xsl.XsltSettings" />, используя значения параметров по умолчанию.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XsltSettings" /> с указанными параметрами.</summary>
      <param name="enableDocumentFunction">Значение true для включения поддержки функции XSLT document(); в противном случае — false.</param>
      <param name="enableScript">Значение true для включения поддержки встроенных блоков скриптов; в противном случае — false.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.Default">
      <summary>Возвращает объект <see cref="T:System.Xml.Xsl.XsltSettings" /> с параметрами по умолчанию.Поддержка функции XSLT document() и встроенных блоков скриптов отключена.</summary>
      <returns>Объект <see cref="T:System.Xml.Xsl.XsltSettings" /> со свойствами <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> и <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" />, равными false.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction">
      <summary>Возвращает или задает значение, указывающее, следует ли включить поддержку функции XSLT document().</summary>
      <returns>Значение true для включения поддержки функции XSLT document(); в противном случае — false.По умолчанию установлено значение false.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableScript">
      <summary>Возвращает или задает значение, указывающее, следует ли включить поддержку встроенных блоков скриптов.</summary>
      <returns>Значение true для поддержки блоков скриптов в таблице стилей XSLT; в противном случае — false.По умолчанию установлено значение false.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.TrustedXslt">
      <summary>Возвращает объект <see cref="T:System.Xml.Xsl.XsltSettings" />, с помощью которого включается поддержка функции XSLT document() и встроенных блоков скриптов.</summary>
      <returns>Объект <see cref="T:System.Xml.Xsl.XsltSettings" /> со свойствами <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> и <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" />, равными true.</returns>
    </member>
  </members>
</doc>