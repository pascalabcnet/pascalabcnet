Topic1=Программирование, 1 ступень. Классная работа
Topic2=Занятие 1. Введение в PascalABC.NET
Author=Воскресная компьютерная школа мехмата ЮФУ (sunschool.mmcs.sfedu.ru), 2016
[=PascalABC]
[1]
// Это комментарий. Компилятор его не видит.
// Запустите программу, нажав F9.
// writeln - это оператор вывода. Он выводит любые данные.
begin
  writeln(3.14);
  writeln(123);
  writeln('Строка текста в апострофах');
end.
[2]
// Запустите программу.
// Затем замените все write на writeln. Что произошло?
begin
  write(1);
  write(2);
  write(3);
end.
[3]
// С помощью writeln можно рисовать символами.
// Измените программу так, чтобы она нарисовала рожицу.
// Добавьте глаза, нос, рот.
begin
  writeln(' ********* ');
  writeln('*         *');
  writeln('*         *');
  writeln('*         *');
  writeln('*         *');
  writeln('*         *');
  writeln('*         *');
  writeln('*         *');
  writeln(' ********* ');
end.
[4]
// Выведите с помощью writeln значения выражений
// 25*25    1024*1024    7777*8888
begin
  writeln(2*3);
end.
[5]
// Разделите данные вывода пробелами как в первом операторе,
// чтобы они не сливались.
begin
  writeln(1,' ',2,' ',3);
  writeln(4,5,6,7,8,9);
end.
[6]
// Вместо write можно использовать Print.
// В чем их разница? Запишите в тетрадь.
begin
  writeln(11,22,33,44,55);
  Println(11,22,33,44,55);
  Print(666);
  Print(777);
  Print(888);
  Print(999);
end.
[7]
// Переменные - это ячейки памяти, хранящие значения.
// Они используются в программе для вычислений.
// Перед использованием переменную надо описать и присвоить ей значение.
begin
  var a := 6;
  var b := 4;
  Print(a,b);
  Print(a+b,a-b,a*b,a/b);
end.
[8]
// Перед выводом данных можно выводить пояснения в апострофах.
// Аналогично сумме выведите разность, произведение и частное с пояснением.
begin
  var a := 64;
  var b := 48;
  writeln('Сумма = ',a+b);
end.
[9]
// При наборе программы программист допускает ошибки.
// Если программа содержит ошибку, компилятор выдаст ее
// в специальном окне "Список ошибок".
// Исправьте ошибку и добейтесь, чтобы
// программа откомпилировалась и запустилась.
bgin
  var a := 64;
  var b := 48;
  writeln(a+b);
end.
[10]
// Исправьте ошибку и запустите программу.
begin
  var a := 64;
  var b := 48;
  writeln('Хорошо!');
end
[11]
// Исправьте ошибку и запустите программу.
begin
  var a := 64;
  var b := 48;
  writeln(a + bbb);
  writeln('Отлично!');
end.
[12]
// Исправьте ошибку и запустите программу.
begin
  var a := 64
  var b := 48
  writeln(a + bbb)
  writeln('Великолепно! Не забывайте ; между операторами');
end.
[13]
// Исправьте ошибку и запустите программу.
begin
  var a := 64;
  var b := 48;
  wrteln(a + bbb);
  wriel('Потрясающе!');
end.
[14]
[#]
// Исполнитель Робот имеет систему команд
// Left  Right  Up  Down  Paint
// В начале программы ОБЯЗАТЕЛЬНО должна быть вызвана
// команда Task с именем задания в апострофах.
// Решите задачу для Робота, используя его команды.

uses Robot;

begin
  Task('a1');
end.
[15]
// Решите задачу a2 для Робота, нажав кнопку
// с буквой L на панели инструментов и набрав имя RBa2.
// Программа-заготовка RBa2.pas создастся в текущем каталоге.

// Аналогично решите задания a3 и a4 для Робота

